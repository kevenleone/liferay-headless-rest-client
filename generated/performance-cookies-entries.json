{
    "openapi": "3.0.1",
    "info": {
        "title": "Object",
        "version": "v1.0",
        "description": "#### TypeScript SDK Code Sample\n\n```typescript\nimport { createClient } from 'liferay-headless-rest-client';\nimport { getPerformanceCookieEntriesPage } from 'liferay-headless-rest-client/performance-cookies-entries';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getPerformanceCookieEntriesPage({\n        client,\n        \n    });\n\n    console.log(data);\n}\n```"
    },
    "servers": [
        {
            "url": "http://localhost:8080"
        }
    ],
    "paths": {
        "/o/performance-cookies-entries/": {
            "get": {
                "tags": [
                    "PerformanceCookieEntry"
                ],
                "operationId": "getPerformanceCookieEntriesPage",
                "parameters": [
                    {
                        "name": "aggregationTerms",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "flatten",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePerformanceCookieEntry"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePerformanceCookieEntry"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getPerformanceCookieEntriesPage } from 'liferay-headless-rest-client/performance-cookies-entries';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getPerformanceCookieEntriesPage({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/performance-cookies-entries/', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "post": {
                "tags": [
                    "PerformanceCookieEntry"
                ],
                "operationId": "postPerformanceCookieEntry",
                "parameters": [],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PerformanceCookieEntry"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/PerformanceCookieEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PerformanceCookieEntry"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PerformanceCookieEntry"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postPerformanceCookieEntry } from 'liferay-headless-rest-client/performance-cookies-entries';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postPerformanceCookieEntry({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/performance-cookies-entries/', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/performance-cookies-entries/batch": {
            "put": {
                "tags": [
                    "PerformanceCookieEntry"
                ],
                "operationId": "putPerformanceCookieEntryBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putPerformanceCookieEntryBatch } from 'liferay-headless-rest-client/performance-cookies-entries';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putPerformanceCookieEntryBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/performance-cookies-entries/batch', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "post": {
                "tags": [
                    "PerformanceCookieEntry"
                ],
                "operationId": "postPerformanceCookieEntryBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postPerformanceCookieEntryBatch } from 'liferay-headless-rest-client/performance-cookies-entries';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postPerformanceCookieEntryBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/performance-cookies-entries/batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "PerformanceCookieEntry"
                ],
                "operationId": "deletePerformanceCookieEntryBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deletePerformanceCookieEntryBatch } from 'liferay-headless-rest-client/performance-cookies-entries';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deletePerformanceCookieEntryBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/performance-cookies-entries/batch', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/performance-cookies-entries/by-external-reference-code/{externalReferenceCode}": {
            "get": {
                "tags": [
                    "PerformanceCookieEntry"
                ],
                "operationId": "getByExternalReferenceCode",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PerformanceCookieEntry"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PerformanceCookieEntry"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getByExternalReferenceCode } from 'liferay-headless-rest-client/performance-cookies-entries';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getByExternalReferenceCode({\n        client,\n        path: {\n           externalReferenceCode: \"4435\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/performance-cookies-entries/by-external-reference-code/{externalReferenceCode}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "put": {
                "tags": [
                    "PerformanceCookieEntry"
                ],
                "operationId": "putByExternalReferenceCode",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PerformanceCookieEntry"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/PerformanceCookieEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PerformanceCookieEntry"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PerformanceCookieEntry"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putByExternalReferenceCode } from 'liferay-headless-rest-client/performance-cookies-entries';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putByExternalReferenceCode({\n        client,\n        path: {\n           externalReferenceCode: \"2206\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/performance-cookies-entries/by-external-reference-code/{externalReferenceCode}', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "PerformanceCookieEntry"
                ],
                "operationId": "deleteByExternalReferenceCode",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteByExternalReferenceCode } from 'liferay-headless-rest-client/performance-cookies-entries';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteByExternalReferenceCode({\n        client,\n        path: {\n           externalReferenceCode: \"3834\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/performance-cookies-entries/by-external-reference-code/{externalReferenceCode}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "PerformanceCookieEntry"
                ],
                "operationId": "patchByExternalReferenceCode",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PerformanceCookieEntry"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/PerformanceCookieEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PerformanceCookieEntry"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PerformanceCookieEntry"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchByExternalReferenceCode } from 'liferay-headless-rest-client/performance-cookies-entries';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchByExternalReferenceCode({\n        client,\n        path: {\n           externalReferenceCode: \"7830\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/performance-cookies-entries/by-external-reference-code/{externalReferenceCode}', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/performance-cookies-entries/export-batch": {
            "post": {
                "tags": [
                    "PerformanceCookieEntry"
                ],
                "operationId": "postPerformanceCookieEntriesPageExportBatch",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contentType",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fieldNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postPerformanceCookieEntriesPageExportBatch } from 'liferay-headless-rest-client/performance-cookies-entries';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postPerformanceCookieEntriesPageExportBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/performance-cookies-entries/export-batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/performance-cookies-entries/openapi.{type}": {
            "get": {
                "operationId": "getOpenAPI",
                "parameters": [
                    {
                        "name": "type",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/yaml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getOpenAPI } from 'liferay-headless-rest-client/performance-cookies-entries';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getOpenAPI({\n        client,\n        path: {\n           type: \"120\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/performance-cookies-entries/openapi.{type}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/performance-cookies-entries/{performanceCookieEntryId}": {
            "get": {
                "tags": [
                    "PerformanceCookieEntry"
                ],
                "operationId": "getPerformanceCookieEntry",
                "parameters": [
                    {
                        "name": "performanceCookieEntryId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PerformanceCookieEntry"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PerformanceCookieEntry"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getPerformanceCookieEntry } from 'liferay-headless-rest-client/performance-cookies-entries';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getPerformanceCookieEntry({\n        client,\n        path: {\n           performanceCookieEntryId: \"4294\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/performance-cookies-entries/{performanceCookieEntryId}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "put": {
                "tags": [
                    "PerformanceCookieEntry"
                ],
                "operationId": "putPerformanceCookieEntry",
                "parameters": [
                    {
                        "name": "performanceCookieEntryId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PerformanceCookieEntry"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/PerformanceCookieEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PerformanceCookieEntry"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PerformanceCookieEntry"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putPerformanceCookieEntry } from 'liferay-headless-rest-client/performance-cookies-entries';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putPerformanceCookieEntry({\n        client,\n        path: {\n           performanceCookieEntryId: \"5410\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/performance-cookies-entries/{performanceCookieEntryId}', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "PerformanceCookieEntry"
                ],
                "operationId": "deletePerformanceCookieEntry",
                "parameters": [
                    {
                        "name": "performanceCookieEntryId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deletePerformanceCookieEntry } from 'liferay-headless-rest-client/performance-cookies-entries';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deletePerformanceCookieEntry({\n        client,\n        path: {\n           performanceCookieEntryId: \"7665\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/performance-cookies-entries/{performanceCookieEntryId}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "PerformanceCookieEntry"
                ],
                "operationId": "patchPerformanceCookieEntry",
                "parameters": [
                    {
                        "name": "performanceCookieEntryId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PerformanceCookieEntry"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/PerformanceCookieEntry"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PerformanceCookieEntry"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PerformanceCookieEntry"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchPerformanceCookieEntry } from 'liferay-headless-rest-client/performance-cookies-entries';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchPerformanceCookieEntry({\n        client,\n        path: {\n           performanceCookieEntryId: \"7635\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/performance-cookies-entries/{performanceCookieEntryId}', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/performance-cookies-entries/{performanceCookieEntryId}/permissions": {
            "get": {
                "tags": [
                    "PerformanceCookieEntry"
                ],
                "operationId": "getPerformanceCookieEntryPermissionsPage",
                "parameters": [
                    {
                        "name": "performanceCookieEntryId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "roleNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getPerformanceCookieEntryPermissionsPage } from 'liferay-headless-rest-client/performance-cookies-entries';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getPerformanceCookieEntryPermissionsPage({\n        client,\n        path: {\n           performanceCookieEntryId: \"2129\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/performance-cookies-entries/{performanceCookieEntryId}/permissions', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "put": {
                "tags": [
                    "PerformanceCookieEntry"
                ],
                "operationId": "putPerformanceCookieEntryPermissionsPage",
                "parameters": [
                    {
                        "name": "performanceCookieEntryId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Permission"
                                }
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Permission"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putPerformanceCookieEntryPermissionsPage } from 'liferay-headless-rest-client/performance-cookies-entries';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putPerformanceCookieEntryPermissionsPage({\n        client,\n        path: {\n           performanceCookieEntryId: \"5601\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/performance-cookies-entries/{performanceCookieEntryId}/permissions', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Facet": {
                "type": "object",
                "properties": {
                    "facetCriteria": {
                        "type": "string"
                    },
                    "facetValues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FacetValue"
                        }
                    }
                }
            },
            "FacetValue": {
                "type": "object",
                "properties": {
                    "numberOfOccurrences": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "term": {
                        "type": "string"
                    }
                }
            },
            "AuditEvent": {
                "type": "object",
                "properties": {
                    "auditFieldChanges": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                            "$ref": "#/components/schemas/AuditFieldChange"
                        }
                    },
                    "creator": {
                        "$ref": "#/components/schemas/Creator"
                    },
                    "dateCreated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "eventType": {
                        "type": "string",
                        "readOnly": true
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.object.rest.dto.v1_0.AuditEvent"
                    }
                },
                "description": "Optional field with the audit events associated with this object entry, can be embedded with nestedFields",
                "xml": {
                    "name": "AuditEvent"
                }
            },
            "AuditFieldChange": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "oldValue": {
                        "type": "object"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.object.rest.dto.v1_0.AuditFieldChange"
                    }
                },
                "xml": {
                    "name": "AuditFieldChange"
                }
            },
            "Creator": {
                "type": "object",
                "properties": {
                    "additionalName": {
                        "type": "string",
                        "description": "The author's additional name (e.g., middle name).",
                        "readOnly": true
                    },
                    "contentType": {
                        "type": "string",
                        "description": "The type of the content.",
                        "readOnly": true
                    },
                    "externalReferenceCode": {
                        "type": "string",
                        "description": "The external reference code of the author.",
                        "readOnly": true
                    },
                    "familyName": {
                        "type": "string",
                        "description": "The author's surname.",
                        "readOnly": true
                    },
                    "givenName": {
                        "type": "string",
                        "description": "The author's first name.",
                        "readOnly": true
                    },
                    "id": {
                        "type": "integer",
                        "description": "The author's ID.",
                        "format": "int64",
                        "readOnly": true
                    },
                    "image": {
                        "type": "string",
                        "description": "A relative URL to the author's profile image.",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The author's full name.",
                        "readOnly": true
                    },
                    "profileURL": {
                        "type": "string",
                        "description": "A relative URL to the author's user profile. Optional field, can be embedded with nestedFields.",
                        "readOnly": true
                    },
                    "userGroupBriefs": {
                        "type": "array",
                        "description": "A list of userGroups information.",
                        "items": {
                            "$ref": "#/components/schemas/UserGroupBrief"
                        }
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.delivery.dto.v1_0.Creator"
                    }
                },
                "xml": {
                    "name": "Creator"
                }
            },
            "Permission": {
                "type": "object",
                "properties": {
                    "actionIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "roleName": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "Permission"
                }
            },
            "Status": {
                "required": [
                    "code"
                ],
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "label": {
                        "type": "string"
                    },
                    "label_i18n": {
                        "type": "string"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.object.rest.dto.v1_0.Status"
                    }
                },
                "xml": {
                    "name": "Status"
                }
            },
            "TaxonomyCategoryBrief": {
                "type": "object",
                "properties": {
                    "embeddedTaxonomyCategory": {
                        "type": "object",
                        "description": "Optional field with the embedded taxonomy category, can be embedded with nestedFields",
                        "readOnly": true
                    },
                    "taxonomyCategoryId": {
                        "type": "integer",
                        "description": "The category's ID. This can be used to retrieve more information in the `TaxonomyCategory` API.",
                        "format": "int64",
                        "readOnly": true
                    },
                    "taxonomyCategoryName": {
                        "type": "string",
                        "description": "The category's name.",
                        "readOnly": true
                    },
                    "taxonomyCategoryName_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "The localized category's names."
                        },
                        "description": "The localized category's names.",
                        "readOnly": true
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.object.rest.dto.v1_0.TaxonomyCategoryBrief"
                    }
                },
                "description": "The categories associated with this object entry.",
                "xml": {
                    "name": "TaxonomyCategoryBrief"
                }
            },
            "UserGroupBrief": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The ID of the user group.",
                        "format": "int64",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the user group.",
                        "readOnly": true
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.delivery.dto.v1_0.UserGroupBrief"
                    }
                },
                "description": "A list of userGroups information.",
                "xml": {
                    "name": "UserGroupBrief"
                }
            },
            "PagePermission": {
                "type": "object",
                "properties": {
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Permission"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    }
                }
            },
            "PagePerformanceCookieEntry": {
                "type": "object",
                "properties": {
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PerformanceCookieEntry"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "x-schema-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "PagePerformanceCookieEntry"
                    }
                }
            },
            "PerformanceCookieEntry": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "readOnly": true,
                        "x-batch-unsupported-formats": "CSV"
                    },
                    "auditEvents": {
                        "type": "array",
                        "description": "Optional field with the audit events associated with this object entry, can be embedded with nestedFields",
                        "readOnly": true,
                        "items": {
                            "$ref": "#/components/schemas/AuditEvent"
                        },
                        "x-batch-unsupported-formats": "CSV"
                    },
                    "creator": {
                        "type": "string",
                        "readOnly": true,
                        "x-batch-unsupported-formats": "CSV",
                        "x-parent-map": "properties"
                    },
                    "dateCreated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "dateModified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "externalReferenceCode": {
                        "type": "string",
                        "readOnly": false,
                        "x-parent-map": "properties"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "x-parent-map": "properties"
                    },
                    "keywords": {
                        "type": "array",
                        "description": "A list of keywords describing the object entry.",
                        "items": {
                            "type": "string",
                            "description": "A list of keywords describing the object entry."
                        },
                        "x-batch-unsupported-formats": "CSV"
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Permission"
                        }
                    },
                    "scopeKey": {
                        "type": "string",
                        "readOnly": true
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true,
                        "x-batch-unsupported-formats": "CSV",
                        "x-parent-map": "properties"
                    },
                    "taxonomyCategoryBriefs": {
                        "type": "array",
                        "description": "The categories associated with this object entry.",
                        "readOnly": true,
                        "items": {
                            "$ref": "#/components/schemas/TaxonomyCategoryBrief"
                        },
                        "x-batch-unsupported-formats": "CSV"
                    },
                    "taxonomyCategoryIds": {
                        "type": "array",
                        "writeOnly": true,
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "x-batch-unsupported-formats": "CSV"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.object.rest.dto.v1_0.ObjectEntry"
                    },
                    "x-schema-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "PerformanceCookieEntry"
                    },
                    "collectedData": {
                        "type": "string",
                        "readOnly": false,
                        "x-parent-map": "properties"
                    },
                    "expiration": {
                        "type": "string",
                        "readOnly": false,
                        "x-parent-map": "properties"
                    },
                    "host": {
                        "type": "string",
                        "readOnly": false,
                        "x-parent-map": "properties"
                    },
                    "name": {
                        "type": "string",
                        "readOnly": false,
                        "x-parent-map": "properties"
                    },
                    "purpose": {
                        "type": "string",
                        "readOnly": false,
                        "x-parent-map": "properties"
                    },
                    "type": {
                        "type": "string",
                        "readOnly": false,
                        "x-parent-map": "properties"
                    }
                },
                "xml": {
                    "name": "ObjectEntry"
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "description": "JWT Bearer token authentication"
            },
            "basicAuth": {
                "type": "http",
                "scheme": "basic",
                "description": "Basic HTTP authentication"
            },
            "apiKeyHeader": {
                "type": "apiKey",
                "in": "header",
                "name": "X-API-Key",
                "description": "API key request header"
            },
            "apiKeyQuery": {
                "type": "apiKey",
                "in": "query",
                "name": "api_key",
                "description": "API key query parameter"
            },
            "apiKeyCookie": {
                "type": "apiKey",
                "in": "cookie",
                "name": "api_key",
                "description": "API key browser cookie"
            },
            "oAuth2": {
                "type": "oauth2",
                "description": "OAuth 2.0 authentication",
                "flows": {
                    "authorizationCode": {
                        "authorizationUrl": "https://galaxy.scalar.com/oauth/authorize",
                        "tokenUrl": "https://galaxy.scalar.com/oauth/token",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    },
                    "clientCredentials": {
                        "tokenUrl": "https://galaxy.scalar.com/oauth/token",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    },
                    "implicit": {
                        "authorizationUrl": "https://galaxy.scalar.com/oauth/authorize",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    },
                    "password": {
                        "tokenUrl": "https://galaxy.scalar.com/oauth/token",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    }
                }
            },
            "openIdConnect": {
                "type": "openIdConnect",
                "openIdConnectUrl": "https://galaxy.scalar.com/.well-known/openid-configuration",
                "description": "OpenID Connect Authentication"
            }
        }
    }
}