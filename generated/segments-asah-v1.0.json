{
    "openapi": "3.0.1",
    "info": {
        "title": "Segments Asah",
        "description": "A Java client JAR is available for use with the group ID 'com.liferay', artifact ID 'com.liferay.segments.asah.rest.client', and version '3.0.32'.",
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "v1.0"
    },
    "servers": [
        {
            "url": "http://localhost:8080"
        }
    ],
    "paths": {
        "/o/segments-asah/v1.0/experiments/{experimentId}": {
            "get": {
                "tags": [
                    "Experiment"
                ],
                "operationId": "getExperiment",
                "parameters": [
                    {
                        "name": "experimentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Experiment"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Experiment"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getExperiment } from 'liferay-headless-rest-client/segments-asah-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getExperiment({\n        client,\n        path: {\n           experimentId: \"1728\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/segments-asah/v1.0/experiments/{experimentId}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Experiment"
                ],
                "operationId": "deleteExperiment",
                "parameters": [
                    {
                        "name": "experimentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteExperiment } from 'liferay-headless-rest-client/segments-asah-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteExperiment({\n        client,\n        path: {\n           experimentId: \"6606\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/segments-asah/v1.0/experiments/{experimentId}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/segments-asah/v1.0/experiments/batch": {
            "delete": {
                "tags": [
                    "Experiment"
                ],
                "operationId": "deleteExperimentBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteExperimentBatch } from 'liferay-headless-rest-client/segments-asah-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteExperimentBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/segments-asah/v1.0/experiments/batch', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/segments-asah/v1.0/experiments/{experimentId}/run": {
            "post": {
                "tags": [
                    "ExperimentRun"
                ],
                "operationId": "postExperimentRun",
                "parameters": [
                    {
                        "name": "experimentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ExperimentRun"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/ExperimentRun"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExperimentRun"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExperimentRun"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postExperimentRun } from 'liferay-headless-rest-client/segments-asah-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postExperimentRun({\n        client,\n        path: {\n           experimentId: \"4026\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/segments-asah/v1.0/experiments/{experimentId}/run', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/segments-asah/v1.0/experiments/{experimentId}/status": {
            "post": {
                "tags": [
                    "Status"
                ],
                "operationId": "postExperimentStatus",
                "parameters": [
                    {
                        "name": "experimentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Status"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/Status"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Experiment"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Experiment"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postExperimentStatus } from 'liferay-headless-rest-client/segments-asah-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postExperimentStatus({\n        client,\n        path: {\n           experimentId: \"8842\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/segments-asah/v1.0/experiments/{experimentId}/status', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/segments-asah/v1.0/experiments/{experimentId}/status/batch": {
            "post": {
                "tags": [
                    "Status"
                ],
                "operationId": "postExperimentStatusBatch",
                "parameters": [
                    {
                        "name": "experimentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postExperimentStatusBatch } from 'liferay-headless-rest-client/segments-asah-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postExperimentStatusBatch({\n        client,\n        path: {\n           experimentId: \"779\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/segments-asah/v1.0/experiments/{experimentId}/status/batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Experiment": {
                "type": "object",
                "properties": {
                    "dateCreated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "dateModified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "readOnly": true
                    },
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "siteId": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "status": {
                        "type": "string"
                    },
                    "winnerVariantId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.segments.asah.rest.dto.v1_0.Experiment"
                    }
                },
                "xml": {
                    "name": "Experiment"
                },
                "x-filterable": []
            },
            "ExperimentRun": {
                "required": [
                    "confidenceLevel",
                    "experimentVariants"
                ],
                "type": "object",
                "properties": {
                    "confidenceLevel": {
                        "maximum": 99,
                        "exclusiveMaximum": false,
                        "minimum": 80,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "format": "double"
                    },
                    "experimentVariants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExperimentVariant"
                        }
                    },
                    "status": {
                        "type": "string",
                        "readOnly": true
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.segments.asah.rest.dto.v1_0.ExperimentRun"
                    }
                },
                "xml": {
                    "name": "ExperimentRun"
                },
                "x-filterable": []
            },
            "ExperimentVariant": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "trafficSplit": {
                        "maximum": 99,
                        "exclusiveMaximum": false,
                        "minimum": 1,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "format": "double"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.segments.asah.rest.dto.v1_0.ExperimentVariant"
                    }
                },
                "xml": {
                    "name": "ExperimentVariant"
                },
                "x-filterable": []
            },
            "Status": {
                "required": [
                    "status"
                ],
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "winnerVariantId": {
                        "type": "string"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.segments.asah.rest.dto.v1_0.Status"
                    }
                },
                "xml": {
                    "name": "Status"
                },
                "x-filterable": []
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "description": "JWT Bearer token authentication"
            },
            "basicAuth": {
                "type": "http",
                "scheme": "basic",
                "description": "Basic HTTP authentication"
            },
            "apiKeyHeader": {
                "type": "apiKey",
                "in": "header",
                "name": "X-API-Key",
                "description": "API key request header"
            },
            "apiKeyQuery": {
                "type": "apiKey",
                "in": "query",
                "name": "api_key",
                "description": "API key query parameter"
            },
            "apiKeyCookie": {
                "type": "apiKey",
                "in": "cookie",
                "name": "api_key",
                "description": "API key browser cookie"
            },
            "oAuth2": {
                "type": "oauth2",
                "description": "OAuth 2.0 authentication",
                "flows": {
                    "authorizationCode": {
                        "authorizationUrl": "https://galaxy.scalar.com/oauth/authorize",
                        "tokenUrl": "https://galaxy.scalar.com/oauth/token",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    },
                    "clientCredentials": {
                        "tokenUrl": "https://galaxy.scalar.com/oauth/token",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    },
                    "implicit": {
                        "authorizationUrl": "https://galaxy.scalar.com/oauth/authorize",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    },
                    "password": {
                        "tokenUrl": "https://galaxy.scalar.com/oauth/token",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    }
                }
            },
            "openIdConnect": {
                "type": "openIdConnect",
                "openIdConnectUrl": "https://galaxy.scalar.com/.well-known/openid-configuration",
                "description": "OpenID Connect Authentication"
            }
        }
    }
}