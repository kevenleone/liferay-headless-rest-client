{
    "openapi": "3.0.1",
    "info": {
        "title": "Liferay Admin Sites Headless API",
        "description": "#### TypeScript SDK Code Sample\n\n```typescript\nimport { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodeDisplayPageTemplateFolder } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodeDisplayPageTemplateFolder({\n        client,\n        path: {\n           siteExternalReferenceCode: \"9087\",\n           displayPageTemplateFolderExternalReferenceCode: \"7845\",\n        },\n    });\n\n    console.log(data);\n}\n```\n#### Java installation:\n\nA Java client JAR is available for use with the group ID 'com.liferay', artifact ID 'com.liferay.headless.admin.site.client', and version '1.0.5'.\n\n```gradle\nimplementation group: \"com.liferay\", name: \"com.liferay.headless.admin.site.client\", version: \"latest\"\n```\n\nReference: https://mvnrepository.com/artifact/com.liferay/com.liferay.headless.admin.site.client/latest",
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "v1.0"
    },
    "servers": [
        {
            "url": "http://localhost:8080"
        }
    ],
    "paths": {
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-template-folders/{displayPageTemplateFolderExternalReferenceCode}": {
            "get": {
                "tags": [
                    "DisplayPageTemplateFolder"
                ],
                "description": "Retrieves a specific display page template folder of a site.",
                "operationId": "getSiteSiteByExternalReferenceCodeDisplayPageTemplateFolder",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "displayPageTemplateFolderExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DisplayPageTemplateFolder"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/DisplayPageTemplateFolder"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodeDisplayPageTemplateFolder } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodeDisplayPageTemplateFolder({\n        client,\n        path: {\n           siteExternalReferenceCode: \"6798\",\n           displayPageTemplateFolderExternalReferenceCode: \"7480\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-template-folders/{displayPageTemplateFolderExternalReferenceCode}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "put": {
                "tags": [
                    "DisplayPageTemplateFolder"
                ],
                "description": "Updates the display page template folder with the given external reference code, or creates it if it does not exist.",
                "operationId": "putSiteSiteByExternalReferenceCodeDisplayPageTemplateFolder",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "displayPageTemplateFolderExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DisplayPageTemplateFolder"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/DisplayPageTemplateFolder"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DisplayPageTemplateFolder"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/DisplayPageTemplateFolder"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putSiteSiteByExternalReferenceCodeDisplayPageTemplateFolder } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putSiteSiteByExternalReferenceCodeDisplayPageTemplateFolder({\n        client,\n        path: {\n           siteExternalReferenceCode: \"9595\",\n           displayPageTemplateFolderExternalReferenceCode: \"2909\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-template-folders/{displayPageTemplateFolderExternalReferenceCode}', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "DisplayPageTemplateFolder"
                ],
                "description": "Deletes a specific display page template folder of a site.",
                "operationId": "deleteSiteSiteByExternalReferenceCodeDisplayPageTemplateFolder",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "displayPageTemplateFolderExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteSiteSiteByExternalReferenceCodeDisplayPageTemplateFolder } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteSiteSiteByExternalReferenceCodeDisplayPageTemplateFolder({\n        client,\n        path: {\n           siteExternalReferenceCode: \"1239\",\n           displayPageTemplateFolderExternalReferenceCode: \"143\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-template-folders/{displayPageTemplateFolderExternalReferenceCode}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "DisplayPageTemplateFolder"
                ],
                "description": "Updates only the fields received in the request body, leaving any other fields untouched.",
                "operationId": "patchSiteSiteByExternalReferenceCodeDisplayPageTemplateFolder",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "displayPageTemplateFolderExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DisplayPageTemplateFolder"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/DisplayPageTemplateFolder"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DisplayPageTemplateFolder"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/DisplayPageTemplateFolder"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchSiteSiteByExternalReferenceCodeDisplayPageTemplateFolder } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchSiteSiteByExternalReferenceCodeDisplayPageTemplateFolder({\n        client,\n        path: {\n           siteExternalReferenceCode: \"1956\",\n           displayPageTemplateFolderExternalReferenceCode: \"2525\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-template-folders/{displayPageTemplateFolderExternalReferenceCode}', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-template-folders": {
            "get": {
                "tags": [
                    "DisplayPageTemplateFolder"
                ],
                "description": "Retrieves the display page template folders of the site.",
                "operationId": "getSiteSiteByExternalReferenceCodeDisplayPageTemplateFoldersPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "aggregationTerms",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageDisplayPageTemplateFolder"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageDisplayPageTemplateFolder"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodeDisplayPageTemplateFoldersPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodeDisplayPageTemplateFoldersPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"9142\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-template-folders', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "post": {
                "tags": [
                    "DisplayPageTemplateFolder"
                ],
                "description": "Adds a new display page template folder.",
                "operationId": "postSiteSiteByExternalReferenceCodeDisplayPageTemplateFolder",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DisplayPageTemplateFolder"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/DisplayPageTemplateFolder"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DisplayPageTemplateFolder"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/DisplayPageTemplateFolder"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postSiteSiteByExternalReferenceCodeDisplayPageTemplateFolder } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postSiteSiteByExternalReferenceCodeDisplayPageTemplateFolder({\n        client,\n        path: {\n           siteExternalReferenceCode: \"3243\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-template-folders', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-template-folders/permissions": {
            "get": {
                "tags": [
                    "DisplayPageTemplateFolder"
                ],
                "operationId": "getSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderPermissionsPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "roleNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderPermissionsPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderPermissionsPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"3355\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-template-folders/permissions', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "put": {
                "tags": [
                    "DisplayPageTemplateFolder"
                ],
                "operationId": "putSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderPermissionsPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Permission"
                                }
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Permission"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderPermissionsPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderPermissionsPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"9901\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-template-folders/permissions', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-template-folders/{displayPageTemplateFolderExternalReferenceCode}/permissions": {
            "get": {
                "tags": [
                    "DisplayPageTemplateFolder"
                ],
                "operationId": "getSiteSiteExternalReferenceCodeDisplayPageTemplateFolderPermissionsPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "displayPageTemplateFolderExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "roleNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteExternalReferenceCodeDisplayPageTemplateFolderPermissionsPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteExternalReferenceCodeDisplayPageTemplateFolderPermissionsPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"7769\",\n           displayPageTemplateFolderExternalReferenceCode: \"1732\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-template-folders/{displayPageTemplateFolderExternalReferenceCode}/permissions', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "put": {
                "tags": [
                    "DisplayPageTemplateFolder"
                ],
                "operationId": "putSiteSiteExternalReferenceCodeDisplayPageTemplateFolderPermissionsPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "displayPageTemplateFolderExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putSiteSiteExternalReferenceCodeDisplayPageTemplateFolderPermissionsPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putSiteSiteExternalReferenceCodeDisplayPageTemplateFolderPermissionsPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"7137\",\n           displayPageTemplateFolderExternalReferenceCode: \"2531\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-template-folders/{displayPageTemplateFolderExternalReferenceCode}/permissions', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-templates/{displayPageTemplateExternalReferenceCode}": {
            "get": {
                "tags": [
                    "DisplayPageTemplate"
                ],
                "description": "Retrieves a specific display page template of a site.",
                "operationId": "getSiteSiteByExternalReferenceCodeDisplayPageTemplate",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "displayPageTemplateExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DisplayPageTemplate"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/DisplayPageTemplate"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodeDisplayPageTemplate } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodeDisplayPageTemplate({\n        client,\n        path: {\n           siteExternalReferenceCode: \"6657\",\n           displayPageTemplateExternalReferenceCode: \"3337\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-templates/{displayPageTemplateExternalReferenceCode}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "put": {
                "tags": [
                    "DisplayPageTemplate"
                ],
                "description": "Updates the display page template with the given external reference code, or creates it if it does not exist.",
                "operationId": "putSiteSiteByExternalReferenceCodeDisplayPageTemplate",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "displayPageTemplateExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DisplayPageTemplate"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/DisplayPageTemplate"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DisplayPageTemplate"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/DisplayPageTemplate"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putSiteSiteByExternalReferenceCodeDisplayPageTemplate } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putSiteSiteByExternalReferenceCodeDisplayPageTemplate({\n        client,\n        path: {\n           siteExternalReferenceCode: \"232\",\n           displayPageTemplateExternalReferenceCode: \"7999\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-templates/{displayPageTemplateExternalReferenceCode}', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "DisplayPageTemplate"
                ],
                "description": "Deletes a specific display page template of a site.",
                "operationId": "deleteSiteSiteByExternalReferenceCodeDisplayPageTemplate",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "displayPageTemplateExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteSiteSiteByExternalReferenceCodeDisplayPageTemplate } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteSiteSiteByExternalReferenceCodeDisplayPageTemplate({\n        client,\n        path: {\n           siteExternalReferenceCode: \"4832\",\n           displayPageTemplateExternalReferenceCode: \"3291\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-templates/{displayPageTemplateExternalReferenceCode}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "DisplayPageTemplate"
                ],
                "description": "Updates only the fields received in the request body, leaving any other fields untouched.",
                "operationId": "patchSiteSiteByExternalReferenceCodeDisplayPageTemplate",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "displayPageTemplateExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DisplayPageTemplate"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/DisplayPageTemplate"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DisplayPageTemplate"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/DisplayPageTemplate"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchSiteSiteByExternalReferenceCodeDisplayPageTemplate } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchSiteSiteByExternalReferenceCodeDisplayPageTemplate({\n        client,\n        path: {\n           siteExternalReferenceCode: \"9411\",\n           displayPageTemplateExternalReferenceCode: \"8759\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-templates/{displayPageTemplateExternalReferenceCode}', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-templates": {
            "get": {
                "tags": [
                    "DisplayPageTemplate"
                ],
                "description": "Retrieves the display page templates of the site",
                "operationId": "getSiteSiteByExternalReferenceCodeDisplayPageTemplatesPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "aggregationTerms",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageDisplayPageTemplate"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageDisplayPageTemplate"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodeDisplayPageTemplatesPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodeDisplayPageTemplatesPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"4398\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-templates', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "post": {
                "tags": [
                    "DisplayPageTemplate"
                ],
                "description": "Adds a new display page template",
                "operationId": "postSiteSiteByExternalReferenceCodeDisplayPageTemplate",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DisplayPageTemplate"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/DisplayPageTemplate"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DisplayPageTemplate"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/DisplayPageTemplate"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postSiteSiteByExternalReferenceCodeDisplayPageTemplate } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postSiteSiteByExternalReferenceCodeDisplayPageTemplate({\n        client,\n        path: {\n           siteExternalReferenceCode: \"9801\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-templates', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-templates/{displayPageTemplateExternalReferenceCode}/page-specifications": {
            "get": {
                "tags": [
                    "PageSpecification"
                ],
                "description": "Retrieves all the page specifications of a display page template.",
                "operationId": "getSiteSiteByExternalReferenceCodeDisplayPageTemplatePageSpecificationsPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "displayPageTemplateExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePageSpecification"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePageSpecification"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodeDisplayPageTemplatePageSpecificationsPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodeDisplayPageTemplatePageSpecificationsPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"3843\",\n           displayPageTemplateExternalReferenceCode: \"3259\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-templates/{displayPageTemplateExternalReferenceCode}/page-specifications', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "post": {
                "tags": [
                    "DisplayPageTemplate"
                ],
                "description": "Adds a new page specification in draft status to a display page template.",
                "operationId": "postSiteSiteByExternalReferenceCodeDisplayPageTemplatePageSpecification",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "displayPageTemplateExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContentPageSpecification"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/ContentPageSpecification"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContentPageSpecification"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContentPageSpecification"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postSiteSiteByExternalReferenceCodeDisplayPageTemplatePageSpecification } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postSiteSiteByExternalReferenceCodeDisplayPageTemplatePageSpecification({\n        client,\n        path: {\n           siteExternalReferenceCode: \"8953\",\n           displayPageTemplateExternalReferenceCode: \"4865\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-templates/{displayPageTemplateExternalReferenceCode}/page-specifications', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-template-folders/{displayPageTemplateFolderExternalReferenceCode}/display-page-templates": {
            "get": {
                "tags": [
                    "DisplayPageTemplate"
                ],
                "description": "Retrieves all the display page templates within a display page template folder of a site page.",
                "operationId": "getSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderDisplayPageTemplatesPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "displayPageTemplateFolderExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "flatten",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageDisplayPageTemplate"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageDisplayPageTemplate"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderDisplayPageTemplatesPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderDisplayPageTemplatesPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"9915\",\n           displayPageTemplateFolderExternalReferenceCode: \"3981\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-template-folders/{displayPageTemplateFolderExternalReferenceCode}/display-page-templates', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "post": {
                "tags": [
                    "DisplayPageTemplate"
                ],
                "description": "Adds a new display page template in draft status to a display page template folder.",
                "operationId": "postSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderDisplayPageTemplate",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "displayPageTemplateFolderExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DisplayPageTemplate"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/DisplayPageTemplate"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DisplayPageTemplate"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/DisplayPageTemplate"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderDisplayPageTemplate } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderDisplayPageTemplate({\n        client,\n        path: {\n           siteExternalReferenceCode: \"5094\",\n           displayPageTemplateFolderExternalReferenceCode: \"7851\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-template-folders/{displayPageTemplateFolderExternalReferenceCode}/display-page-templates', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-templates/permissions": {
            "get": {
                "tags": [
                    "DisplayPageTemplate"
                ],
                "operationId": "getSiteSiteByExternalReferenceCodeDisplayPageTemplatePermissionsPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "roleNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodeDisplayPageTemplatePermissionsPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodeDisplayPageTemplatePermissionsPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"6628\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-templates/permissions', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "put": {
                "tags": [
                    "DisplayPageTemplate"
                ],
                "operationId": "putSiteSiteByExternalReferenceCodeDisplayPageTemplatePermissionsPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Permission"
                                }
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Permission"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putSiteSiteByExternalReferenceCodeDisplayPageTemplatePermissionsPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putSiteSiteByExternalReferenceCodeDisplayPageTemplatePermissionsPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"5344\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-templates/permissions', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-templates/{displayPageTemplateExternalReferenceCode}/permissions": {
            "get": {
                "tags": [
                    "DisplayPageTemplate"
                ],
                "operationId": "getSiteSiteExternalReferenceCodeDisplayPageTemplatePermissionsPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "displayPageTemplateExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "roleNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteExternalReferenceCodeDisplayPageTemplatePermissionsPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteExternalReferenceCodeDisplayPageTemplatePermissionsPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"2186\",\n           displayPageTemplateExternalReferenceCode: \"52\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-templates/{displayPageTemplateExternalReferenceCode}/permissions', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "put": {
                "tags": [
                    "DisplayPageTemplate"
                ],
                "operationId": "putSiteSiteExternalReferenceCodeDisplayPageTemplatePermissionsPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "displayPageTemplateExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putSiteSiteExternalReferenceCodeDisplayPageTemplatePermissionsPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putSiteSiteExternalReferenceCodeDisplayPageTemplatePermissionsPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"3964\",\n           displayPageTemplateExternalReferenceCode: \"6646\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-templates/{displayPageTemplateExternalReferenceCode}/permissions', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/fragment-compositions": {
            "get": {
                "tags": [
                    "FragmentComposition"
                ],
                "description": "Retrieves the fragment compositions of the site.",
                "operationId": "getSiteSiteByExternalReferenceCodeFragmentCompositionsPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageFragmentComposition"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageFragmentComposition"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodeFragmentCompositionsPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodeFragmentCompositionsPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"4027\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/fragment-compositions', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "post": {
                "tags": [
                    "FragmentComposition"
                ],
                "description": "Adds a new fragment composition. If the page element of the fragment composition does not contain a definition property and contains an external reference code, the page element will be retrieved based on the externalReferenceCode and used for creating the fragment composition.",
                "operationId": "postSiteSiteByExternalReferenceCodeFragmentComposition",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "saveInlineContent",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "saveMapping",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FragmentComposition"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/FragmentComposition"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FragmentComposition"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/FragmentComposition"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postSiteSiteByExternalReferenceCodeFragmentComposition } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postSiteSiteByExternalReferenceCodeFragmentComposition({\n        client,\n        path: {\n           siteExternalReferenceCode: \"3820\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/fragment-compositions', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/fragment-compositions/{fragmentCompositionExternalReferenceCode}": {
            "get": {
                "tags": [
                    "FragmentComposition"
                ],
                "description": "Retrieves a specific fragment composition of a site.",
                "operationId": "getSiteSiteByExternalReferenceCodeFragmentComposition",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fragmentCompositionExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FragmentComposition"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/FragmentComposition"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodeFragmentComposition } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodeFragmentComposition({\n        client,\n        path: {\n           siteExternalReferenceCode: \"2668\",\n           fragmentCompositionExternalReferenceCode: \"8008\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/fragment-compositions/{fragmentCompositionExternalReferenceCode}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "put": {
                "tags": [
                    "FragmentComposition"
                ],
                "description": "Updates the fragment composition with the given external reference code, or creates it if it does not exist.",
                "operationId": "putSiteSiteByExternalReferenceCodeFragmentComposition",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fragmentCompositionExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FragmentComposition"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/FragmentComposition"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FragmentComposition"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/FragmentComposition"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putSiteSiteByExternalReferenceCodeFragmentComposition } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putSiteSiteByExternalReferenceCodeFragmentComposition({\n        client,\n        path: {\n           siteExternalReferenceCode: \"1907\",\n           fragmentCompositionExternalReferenceCode: \"9051\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/fragment-compositions/{fragmentCompositionExternalReferenceCode}', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "FragmentComposition"
                ],
                "description": "Deletes a specific fragment composition of a site.",
                "operationId": "deleteSiteSiteByExternalReferenceCodeFragmentComposition",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fragmentCompositionExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteSiteSiteByExternalReferenceCodeFragmentComposition } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteSiteSiteByExternalReferenceCodeFragmentComposition({\n        client,\n        path: {\n           siteExternalReferenceCode: \"7546\",\n           fragmentCompositionExternalReferenceCode: \"9034\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/fragment-compositions/{fragmentCompositionExternalReferenceCode}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "FragmentComposition"
                ],
                "description": "Updates only the fields received in the request body, leaving any other fields untouched.",
                "operationId": "patchSiteSiteByExternalReferenceCodeFragmentComposition",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fragmentCompositionExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FragmentComposition"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/FragmentComposition"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FragmentComposition"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/FragmentComposition"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchSiteSiteByExternalReferenceCodeFragmentComposition } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchSiteSiteByExternalReferenceCodeFragmentComposition({\n        client,\n        path: {\n           siteExternalReferenceCode: \"5468\",\n           fragmentCompositionExternalReferenceCode: \"9592\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/fragment-compositions/{fragmentCompositionExternalReferenceCode}', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}/friendly-url-history": {
            "get": {
                "tags": [
                    "FriendlyUrlHistory"
                ],
                "description": "Retrieves the history of previously used URLs for a page.",
                "operationId": "getSiteSiteByExternalReferenceCodeSitePageFriendlyUrlHistory",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sitePageExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FriendlyUrlHistory"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/FriendlyUrlHistory"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodeSitePageFriendlyUrlHistory } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodeSitePageFriendlyUrlHistory({\n        client,\n        path: {\n           siteExternalReferenceCode: \"88\",\n           sitePageExternalReferenceCode: \"6455\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}/friendly-url-history', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/utility-pages/{utilityPageExternalReferenceCode}/friendly-url-history": {
            "get": {
                "tags": [
                    "FriendlyUrlHistory"
                ],
                "description": "Retrieves the history of previously used URLs for a utility page.",
                "operationId": "getSiteSiteByExternalReferenceCodeUtilityPageFriendlyUrlHistory",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "utilityPageExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FriendlyUrlHistory"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/FriendlyUrlHistory"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodeUtilityPageFriendlyUrlHistory } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodeUtilityPageFriendlyUrlHistory({\n        client,\n        path: {\n           siteExternalReferenceCode: \"176\",\n           utilityPageExternalReferenceCode: \"32\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/utility-pages/{utilityPageExternalReferenceCode}/friendly-url-history', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-templates/{displayPageTemplateExternalReferenceCode}/friendly-url-history": {
            "get": {
                "tags": [
                    "FriendlyUrlHistory"
                ],
                "description": "Retrieves the history of previously used URLs for a display page template.",
                "operationId": "getSiteSiteByExternalReferenceCodeDisplayPageTemplateFriendlyUrlHistory",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "displayPageTemplateExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FriendlyUrlHistory"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/FriendlyUrlHistory"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodeDisplayPageTemplateFriendlyUrlHistory } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodeDisplayPageTemplateFriendlyUrlHistory({\n        client,\n        path: {\n           siteExternalReferenceCode: \"4479\",\n           displayPageTemplateExternalReferenceCode: \"8292\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-templates/{displayPageTemplateExternalReferenceCode}/friendly-url-history', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/master-pages/{masterPageExternalReferenceCode}/page-specifications": {
            "get": {
                "tags": [
                    "PageSpecification"
                ],
                "description": "Retrieves all the page specifications of a master page.",
                "operationId": "getSiteSiteByExternalReferenceCodeMasterPagePageSpecificationsPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "masterPageExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePageSpecification"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePageSpecification"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodeMasterPagePageSpecificationsPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodeMasterPagePageSpecificationsPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"5675\",\n           masterPageExternalReferenceCode: \"5206\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/master-pages/{masterPageExternalReferenceCode}/page-specifications', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "post": {
                "tags": [
                    "MasterPage"
                ],
                "description": "Adds a new page specification in draft status to a master page.",
                "operationId": "postSiteSiteByExternalReferenceCodeMasterPagePageSpecification",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "masterPageExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContentPageSpecification"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/ContentPageSpecification"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContentPageSpecification"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContentPageSpecification"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postSiteSiteByExternalReferenceCodeMasterPagePageSpecification } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postSiteSiteByExternalReferenceCodeMasterPagePageSpecification({\n        client,\n        path: {\n           siteExternalReferenceCode: \"3007\",\n           masterPageExternalReferenceCode: \"3154\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/master-pages/{masterPageExternalReferenceCode}/page-specifications', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/master-pages/{masterPageExternalReferenceCode}": {
            "get": {
                "tags": [
                    "MasterPage"
                ],
                "description": "Retrieves a specific master page of a site.",
                "operationId": "getSiteSiteByExternalReferenceCodeMasterPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "masterPageExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MasterPage"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/MasterPage"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodeMasterPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodeMasterPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"4161\",\n           masterPageExternalReferenceCode: \"2327\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/master-pages/{masterPageExternalReferenceCode}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "put": {
                "tags": [
                    "MasterPage"
                ],
                "description": "Updates the master page with the given external reference code, or creates it if it does not exist.",
                "operationId": "putSiteSiteByExternalReferenceCodeMasterPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "masterPageExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MasterPage"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/MasterPage"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MasterPage"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/MasterPage"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putSiteSiteByExternalReferenceCodeMasterPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putSiteSiteByExternalReferenceCodeMasterPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"5287\",\n           masterPageExternalReferenceCode: \"8858\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/master-pages/{masterPageExternalReferenceCode}', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "MasterPage"
                ],
                "description": "Deletes a specific master page of a site.",
                "operationId": "deleteSiteSiteByExternalReferenceCodeMasterPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "masterPageExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteSiteSiteByExternalReferenceCodeMasterPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteSiteSiteByExternalReferenceCodeMasterPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"8920\",\n           masterPageExternalReferenceCode: \"8030\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/master-pages/{masterPageExternalReferenceCode}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "MasterPage"
                ],
                "description": "Updates only the fields received in the request body, leaving any other fields untouched.",
                "operationId": "patchSiteSiteByExternalReferenceCodeMasterPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "masterPageExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MasterPage"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/MasterPage"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MasterPage"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/MasterPage"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchSiteSiteByExternalReferenceCodeMasterPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchSiteSiteByExternalReferenceCodeMasterPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"3798\",\n           masterPageExternalReferenceCode: \"8020\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/master-pages/{masterPageExternalReferenceCode}', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/master-pages": {
            "get": {
                "tags": [
                    "MasterPage"
                ],
                "description": "Retrieves the master pages of the site.",
                "operationId": "getSiteSiteByExternalReferenceCodeMasterPagesPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "aggregationTerms",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageMasterPage"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageMasterPage"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodeMasterPagesPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodeMasterPagesPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"2147\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/master-pages', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "post": {
                "tags": [
                    "MasterPage"
                ],
                "description": "Adds a new master page.",
                "operationId": "postSiteSiteByExternalReferenceCodeMasterPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MasterPage"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/MasterPage"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MasterPage"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/MasterPage"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postSiteSiteByExternalReferenceCodeMasterPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postSiteSiteByExternalReferenceCodeMasterPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"8939\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/master-pages', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/master-pages/permissions": {
            "get": {
                "tags": [
                    "MasterPage"
                ],
                "operationId": "getSiteSiteByExternalReferenceCodeMasterPagePermissionsPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "roleNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodeMasterPagePermissionsPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodeMasterPagePermissionsPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"6547\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/master-pages/permissions', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "put": {
                "tags": [
                    "MasterPage"
                ],
                "operationId": "putSiteSiteByExternalReferenceCodeMasterPagePermissionsPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Permission"
                                }
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Permission"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putSiteSiteByExternalReferenceCodeMasterPagePermissionsPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putSiteSiteByExternalReferenceCodeMasterPagePermissionsPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"5703\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/master-pages/permissions', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/master-pages/{masterPageExternalReferenceCode}/permissions": {
            "get": {
                "tags": [
                    "MasterPage"
                ],
                "operationId": "getSiteSiteExternalReferenceCodeMasterPagePermissionsPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "masterPageExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "roleNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteExternalReferenceCodeMasterPagePermissionsPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteExternalReferenceCodeMasterPagePermissionsPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"60\",\n           masterPageExternalReferenceCode: \"2878\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/master-pages/{masterPageExternalReferenceCode}/permissions', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "put": {
                "tags": [
                    "MasterPage"
                ],
                "operationId": "putSiteSiteExternalReferenceCodeMasterPagePermissionsPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "masterPageExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putSiteSiteExternalReferenceCodeMasterPagePermissionsPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putSiteSiteExternalReferenceCodeMasterPagePermissionsPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"121\",\n           masterPageExternalReferenceCode: \"946\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/master-pages/{masterPageExternalReferenceCode}/permissions', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}/page-elements/{pageElementExternalReferenceCode}/page-elements": {
            "get": {
                "tags": [
                    "PageElement"
                ],
                "description": "Retrieves all the descendant page elements of a page element within an experience in a page specification of a site page.",
                "operationId": "getSiteSiteByExternalReferenceCodePageElementPageElementsPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSpecificationExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageExperienceExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageElementExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "flatten",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePageElement"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePageElement"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodePageElementPageElementsPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodePageElementPageElementsPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"3062\",\n           pageSpecificationExternalReferenceCode: \"9943\",\n           pageExperienceExternalReferenceCode: \"9954\",\n           pageElementExternalReferenceCode: \"6437\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}/page-elements/{pageElementExternalReferenceCode}/page-elements', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}/page-elements": {
            "get": {
                "tags": [
                    "PageElement"
                ],
                "description": "Retrieves all the page elements within an experience in a page specification of a site page.",
                "operationId": "getSiteSiteByExternalReferenceCodePageExperiencePageElementsPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSpecificationExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageExperienceExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "flatten",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePageElement"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePageElement"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodePageExperiencePageElementsPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodePageExperiencePageElementsPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"647\",\n           pageSpecificationExternalReferenceCode: \"5682\",\n           pageExperienceExternalReferenceCode: \"5250\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}/page-elements', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "post": {
                "tags": [
                    "PageElement"
                ],
                "description": "Adds a new page element to an experience in a page specification in draft status of a site page.",
                "operationId": "postSiteSiteByExternalReferenceCodePageExperiencePageElement",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSpecificationExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageExperienceExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PageElement"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/PageElement"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageElement"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageElement"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postSiteSiteByExternalReferenceCodePageExperiencePageElement } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postSiteSiteByExternalReferenceCodePageExperiencePageElement({\n        client,\n        path: {\n           siteExternalReferenceCode: \"1834\",\n           pageSpecificationExternalReferenceCode: \"292\",\n           pageExperienceExternalReferenceCode: \"4816\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}/page-elements', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}/page-elements/{pageElementExternalReferenceCode}": {
            "get": {
                "tags": [
                    "PageElement"
                ],
                "description": "Retrieves a page element within an experience of a specific page specification of a site page within a site.",
                "operationId": "getSiteSiteByExternalReferenceCodePageElement",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSpecificationExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageExperienceExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageElementExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageElement"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageElement"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodePageElement } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodePageElement({\n        client,\n        path: {\n           siteExternalReferenceCode: \"8263\",\n           pageSpecificationExternalReferenceCode: \"324\",\n           pageExperienceExternalReferenceCode: \"2855\",\n           pageElementExternalReferenceCode: \"2420\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}/page-elements/{pageElementExternalReferenceCode}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "put": {
                "tags": [
                    "PageElement"
                ],
                "description": "Updates a page element within an experience of a specific page specification of a site page within a site.",
                "operationId": "putSiteSiteByExternalReferenceCodePageElement",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSpecificationExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageExperienceExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageElementExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PageElement"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/PageElement"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageElement"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageElement"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putSiteSiteByExternalReferenceCodePageElement } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putSiteSiteByExternalReferenceCodePageElement({\n        client,\n        path: {\n           siteExternalReferenceCode: \"9906\",\n           pageSpecificationExternalReferenceCode: \"894\",\n           pageExperienceExternalReferenceCode: \"767\",\n           pageElementExternalReferenceCode: \"2748\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}/page-elements/{pageElementExternalReferenceCode}', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "PageElement"
                ],
                "description": "Deletes a page element within an experience of a specific page specification of a site page within a site.",
                "operationId": "deleteSiteSiteByExternalReferenceCodePageElement",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSpecificationExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageExperienceExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageElementExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteSiteSiteByExternalReferenceCodePageElement } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteSiteSiteByExternalReferenceCodePageElement({\n        client,\n        path: {\n           siteExternalReferenceCode: \"1920\",\n           pageSpecificationExternalReferenceCode: \"5437\",\n           pageExperienceExternalReferenceCode: \"6426\",\n           pageElementExternalReferenceCode: \"1730\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}/page-elements/{pageElementExternalReferenceCode}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "PageElement"
                ],
                "description": "Updates a page element within an experience of a specific page specification of a site page within a site. Updates only the fields received in the request body, leaving any other fields untouched.",
                "operationId": "patchSiteSiteByExternalReferenceCodePageElement",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSpecificationExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageExperienceExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageElementExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PageElement"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/PageElement"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageElement"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageElement"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchSiteSiteByExternalReferenceCodePageElement } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchSiteSiteByExternalReferenceCodePageElement({\n        client,\n        path: {\n           siteExternalReferenceCode: \"213\",\n           pageSpecificationExternalReferenceCode: \"7721\",\n           pageExperienceExternalReferenceCode: \"5866\",\n           pageElementExternalReferenceCode: \"1369\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}/page-elements/{pageElementExternalReferenceCode}', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}/page-elements/{pageElementExternalReferenceCode}/fragment-compositions": {
            "post": {
                "tags": [
                    "PageElement"
                ],
                "description": "Adds a new fragment composition under a page element of an experience in a page specification of a site page. If successful, the response will contain the page element in which the fragment composition is converted.",
                "operationId": "postSiteSiteByExternalReferenceCodePageElementFragmentComposition",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSpecificationExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageExperienceExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageElementExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "position",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FragmentComposition"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/FragmentComposition"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageElement"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageElement"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postSiteSiteByExternalReferenceCodePageElementFragmentComposition } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postSiteSiteByExternalReferenceCodePageElementFragmentComposition({\n        client,\n        path: {\n           siteExternalReferenceCode: \"9184\",\n           pageSpecificationExternalReferenceCode: \"7008\",\n           pageExperienceExternalReferenceCode: \"2086\",\n           pageElementExternalReferenceCode: \"8913\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}/page-elements/{pageElementExternalReferenceCode}/fragment-compositions', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}": {
            "get": {
                "tags": [
                    "PageExperience"
                ],
                "description": "Retrieves an experience of a specific page specification of a site page within a site.",
                "operationId": "getSiteSiteByExternalReferenceCodePageExperience",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageExperienceExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageExperience"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageExperience"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodePageExperience } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodePageExperience({\n        client,\n        path: {\n           siteExternalReferenceCode: \"2418\",\n           pageExperienceExternalReferenceCode: \"5085\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "put": {
                "tags": [
                    "PageExperience"
                ],
                "description": "Updates an experience of a specific page specification of a site page within a site.",
                "operationId": "putSiteSiteByExternalReferenceCodePageExperience",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageExperienceExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PageExperience"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/PageExperience"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageExperience"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageExperience"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putSiteSiteByExternalReferenceCodePageExperience } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putSiteSiteByExternalReferenceCodePageExperience({\n        client,\n        path: {\n           siteExternalReferenceCode: \"7008\",\n           pageExperienceExternalReferenceCode: \"4880\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "PageExperience"
                ],
                "description": "Deletes an experience of a specific page specification of a site page within a site. The default experience cannot be deleted.",
                "operationId": "deleteSiteSiteByExternalReferenceCodePageExperience",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageExperienceExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteSiteSiteByExternalReferenceCodePageExperience } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteSiteSiteByExternalReferenceCodePageExperience({\n        client,\n        path: {\n           siteExternalReferenceCode: \"6271\",\n           pageExperienceExternalReferenceCode: \"6179\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "PageExperience"
                ],
                "description": "Updates an experience of a specific page specification of a site page within a site. Updates only the fields received in the request body, leaving any other fields untouched.",
                "operationId": "patchSiteSiteByExternalReferenceCodePageExperience",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageExperienceExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PageExperience"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/PageExperience"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageExperience"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageExperience"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchSiteSiteByExternalReferenceCodePageExperience } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchSiteSiteByExternalReferenceCodePageExperience({\n        client,\n        path: {\n           siteExternalReferenceCode: \"4258\",\n           pageExperienceExternalReferenceCode: \"5865\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}/page-experiences": {
            "get": {
                "tags": [
                    "PageExperience"
                ],
                "description": "Retrieves all the experiences of a page specification.",
                "operationId": "getSiteSiteByExternalReferenceCodePageSpecificationPageExperiencesPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSpecificationExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePageExperience"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePageExperience"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodePageSpecificationPageExperiencesPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodePageSpecificationPageExperiencesPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"6394\",\n           pageSpecificationExternalReferenceCode: \"4929\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}/page-experiences', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "post": {
                "tags": [
                    "PageExperience"
                ],
                "description": "Adds a new experience to a page specification of a site page.",
                "operationId": "postSiteSiteByExternalReferenceCodePageSpecificationPageExperience",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSpecificationExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PageExperience"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/PageExperience"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageExperience"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageExperience"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postSiteSiteByExternalReferenceCodePageSpecificationPageExperience } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postSiteSiteByExternalReferenceCodePageSpecificationPageExperience({\n        client,\n        path: {\n           siteExternalReferenceCode: \"7125\",\n           pageSpecificationExternalReferenceCode: \"8512\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}/page-experiences', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rules/{pageRuleExternalReferenceCode}/page-rule-actions": {
            "get": {
                "tags": [
                    "PageRuleAction"
                ],
                "description": "Retrieves all the page rule action actions within an experience in a page specification of a site page.",
                "operationId": "getSiteSiteByExternalReferenceCodePageRulePageRuleActionsPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageRuleExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "flatten",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePageRuleAction"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePageRuleAction"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodePageRulePageRuleActionsPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodePageRulePageRuleActionsPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"5562\",\n           pageRuleExternalReferenceCode: \"2301\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rules/{pageRuleExternalReferenceCode}/page-rule-actions', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "post": {
                "tags": [
                    "PageRuleAction"
                ],
                "description": "Adds a new page rule action to a page rule in an experience in a page specification in draft status of a site page.",
                "operationId": "postSiteSiteByExternalReferenceCodePageRulePageRuleAction",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageRuleExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PageRuleAction"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/PageRuleAction"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageRuleAction"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageRuleAction"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postSiteSiteByExternalReferenceCodePageRulePageRuleAction } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postSiteSiteByExternalReferenceCodePageRulePageRuleAction({\n        client,\n        path: {\n           siteExternalReferenceCode: \"3467\",\n           pageRuleExternalReferenceCode: \"3580\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rules/{pageRuleExternalReferenceCode}/page-rule-actions', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rule-actions/{pageRuleActionExternalReferenceCode}": {
            "get": {
                "tags": [
                    "PageRuleAction"
                ],
                "description": "Retrieves a page rule action within a page rule of an experience of a specific page specification of a site page within a site.",
                "operationId": "getSiteSiteByExternalReferenceCodePageRuleAction",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageRuleActionExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageRuleAction"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageRuleAction"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodePageRuleAction } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodePageRuleAction({\n        client,\n        path: {\n           siteExternalReferenceCode: \"2868\",\n           pageRuleActionExternalReferenceCode: \"3854\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rule-actions/{pageRuleActionExternalReferenceCode}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "put": {
                "tags": [
                    "PageRuleAction"
                ],
                "description": "Updates a page rule action within a page rule of an experience of a specific page specification of a site page within a site.",
                "operationId": "putSiteSiteByExternalReferenceCodePageRuleAction",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageRuleActionExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PageRuleAction"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/PageRuleAction"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageRuleAction"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageRuleAction"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putSiteSiteByExternalReferenceCodePageRuleAction } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putSiteSiteByExternalReferenceCodePageRuleAction({\n        client,\n        path: {\n           siteExternalReferenceCode: \"7849\",\n           pageRuleActionExternalReferenceCode: \"1445\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rule-actions/{pageRuleActionExternalReferenceCode}', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "PageRuleAction"
                ],
                "description": "Deletes a page rule action within a page rule of an experience of a specific page specification of a site page within a site.",
                "operationId": "deleteSiteSiteByExternalReferenceCodePageRuleAction",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageRuleActionExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteSiteSiteByExternalReferenceCodePageRuleAction } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteSiteSiteByExternalReferenceCodePageRuleAction({\n        client,\n        path: {\n           siteExternalReferenceCode: \"7842\",\n           pageRuleActionExternalReferenceCode: \"4636\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rule-actions/{pageRuleActionExternalReferenceCode}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "PageRuleAction"
                ],
                "description": "Updates a page rule action within a page rule of an experience of a specific page specification of a site page within a site. Updates only the fields received in the request body, leaving any other fields untouched.",
                "operationId": "patchSiteSiteByExternalReferenceCodePageRuleAction",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageRuleActionExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PageRuleAction"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/PageRuleAction"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageRuleAction"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageRuleAction"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchSiteSiteByExternalReferenceCodePageRuleAction } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchSiteSiteByExternalReferenceCodePageRuleAction({\n        client,\n        path: {\n           siteExternalReferenceCode: \"4324\",\n           pageRuleActionExternalReferenceCode: \"9116\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rule-actions/{pageRuleActionExternalReferenceCode}', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rules/{pageRuleExternalReferenceCode}/page-rule-conditions": {
            "get": {
                "tags": [
                    "PageRuleCondition"
                ],
                "description": "Retrieves all the page rule condition conditions within an experience in a page specification of a site page.",
                "operationId": "getSiteSiteByExternalReferenceCodePageRulePageRuleConditionsPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageRuleExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "flatten",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePageRuleCondition"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePageRuleCondition"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodePageRulePageRuleConditionsPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodePageRulePageRuleConditionsPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"7563\",\n           pageRuleExternalReferenceCode: \"9287\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rules/{pageRuleExternalReferenceCode}/page-rule-conditions', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "post": {
                "tags": [
                    "PageRuleCondition"
                ],
                "description": "Adds a new page rule condition to a page rule in an experience in a page specification in draft status of a site page.",
                "operationId": "postSiteSiteByExternalReferenceCodePageRulePageRuleCondition",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageRuleExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PageRuleCondition"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/PageRuleCondition"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageRuleCondition"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageRuleCondition"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postSiteSiteByExternalReferenceCodePageRulePageRuleCondition } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postSiteSiteByExternalReferenceCodePageRulePageRuleCondition({\n        client,\n        path: {\n           siteExternalReferenceCode: \"8194\",\n           pageRuleExternalReferenceCode: \"7296\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rules/{pageRuleExternalReferenceCode}/page-rule-conditions', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rule-conditions/{pageRuleConditionExternalReferenceCode}": {
            "get": {
                "tags": [
                    "PageRuleCondition"
                ],
                "description": "Retrieves a page rule condition within a page rule of an experience of a specific page specification of a site page within a site.",
                "operationId": "getSiteSiteByExternalReferenceCodePageRuleCondition",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageRuleConditionExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageRuleCondition"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageRuleCondition"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodePageRuleCondition } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodePageRuleCondition({\n        client,\n        path: {\n           siteExternalReferenceCode: \"2076\",\n           pageRuleConditionExternalReferenceCode: \"3349\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rule-conditions/{pageRuleConditionExternalReferenceCode}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "put": {
                "tags": [
                    "PageRuleCondition"
                ],
                "description": "Updates a page rule condition within a page rule of an experience of a specific page specification of a site page within a site.",
                "operationId": "putSiteSiteByExternalReferenceCodePageRuleCondition",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageRuleConditionExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PageRuleCondition"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/PageRuleCondition"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageRuleCondition"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageRuleCondition"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putSiteSiteByExternalReferenceCodePageRuleCondition } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putSiteSiteByExternalReferenceCodePageRuleCondition({\n        client,\n        path: {\n           siteExternalReferenceCode: \"9541\",\n           pageRuleConditionExternalReferenceCode: \"4952\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rule-conditions/{pageRuleConditionExternalReferenceCode}', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "PageRuleCondition"
                ],
                "description": "Deletes a page rule condition within a page rule of an experience of a specific page specification of a site page within a site.",
                "operationId": "deleteSiteSiteByExternalReferenceCodePageRuleCondition",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageRuleConditionExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteSiteSiteByExternalReferenceCodePageRuleCondition } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteSiteSiteByExternalReferenceCodePageRuleCondition({\n        client,\n        path: {\n           siteExternalReferenceCode: \"5537\",\n           pageRuleConditionExternalReferenceCode: \"4613\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rule-conditions/{pageRuleConditionExternalReferenceCode}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "PageRuleCondition"
                ],
                "description": "Updates a page rule condition within a page rule of an experience of a specific page specification of a site page within a site. Updates only the fields received in the request body, leaving any other fields untouched.",
                "operationId": "patchSiteSiteByExternalReferenceCodePageRuleCondition",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageRuleConditionExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PageRuleCondition"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/PageRuleCondition"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageRuleCondition"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageRuleCondition"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchSiteSiteByExternalReferenceCodePageRuleCondition } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchSiteSiteByExternalReferenceCodePageRuleCondition({\n        client,\n        path: {\n           siteExternalReferenceCode: \"609\",\n           pageRuleConditionExternalReferenceCode: \"1341\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rule-conditions/{pageRuleConditionExternalReferenceCode}', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}/page-rules": {
            "get": {
                "tags": [
                    "PageRule"
                ],
                "description": "Retrieves all the page rules within an experience in a page specification of a site page.",
                "operationId": "getSiteSiteByExternalReferenceCodePageExperiencePageRulesPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageExperienceExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "flatten",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePageRule"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePageRule"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodePageExperiencePageRulesPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodePageExperiencePageRulesPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"830\",\n           pageExperienceExternalReferenceCode: \"9241\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}/page-rules', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "post": {
                "tags": [
                    "PageRule"
                ],
                "description": "Adds a new page rule to an experience in a page specification in draft status of a site page.",
                "operationId": "postSiteSiteByExternalReferenceCodePageExperiencePageRule",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageExperienceExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PageRule"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/PageRule"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageRule"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageRule"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postSiteSiteByExternalReferenceCodePageExperiencePageRule } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postSiteSiteByExternalReferenceCodePageExperiencePageRule({\n        client,\n        path: {\n           siteExternalReferenceCode: \"5573\",\n           pageExperienceExternalReferenceCode: \"9446\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}/page-rules', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rules/{pageRuleExternalReferenceCode}": {
            "get": {
                "tags": [
                    "PageRule"
                ],
                "description": "Retrieves page rule within an experience of a specific page specification of a site page within a site.",
                "operationId": "getSiteSiteByExternalReferenceCodePageRule",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageRuleExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageRule"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageRule"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodePageRule } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodePageRule({\n        client,\n        path: {\n           siteExternalReferenceCode: \"9467\",\n           pageRuleExternalReferenceCode: \"5484\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rules/{pageRuleExternalReferenceCode}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "put": {
                "tags": [
                    "PageRule"
                ],
                "description": "Updates a page rule within an experience of a specific page specification of a site page within a site.",
                "operationId": "putSiteSiteByExternalReferenceCodePageRule",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageRuleExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PageRule"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/PageRule"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageRule"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageRule"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putSiteSiteByExternalReferenceCodePageRule } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putSiteSiteByExternalReferenceCodePageRule({\n        client,\n        path: {\n           siteExternalReferenceCode: \"6348\",\n           pageRuleExternalReferenceCode: \"6432\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rules/{pageRuleExternalReferenceCode}', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "PageRule"
                ],
                "description": "Deletes a page rule within an experience of a specific page specification of a site page within a site.",
                "operationId": "deleteSiteSiteByExternalReferenceCodePageRule",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageRuleExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteSiteSiteByExternalReferenceCodePageRule } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteSiteSiteByExternalReferenceCodePageRule({\n        client,\n        path: {\n           siteExternalReferenceCode: \"8624\",\n           pageRuleExternalReferenceCode: \"2388\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rules/{pageRuleExternalReferenceCode}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "PageRule"
                ],
                "description": "Updates a page rule within an experience of a specific page specification of a site page within a site. Updates only the fields received in the request body, leaving any other fields untouched.",
                "operationId": "patchSiteSiteByExternalReferenceCodePageRule",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageRuleExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PageRule"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/PageRule"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageRule"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageRule"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchSiteSiteByExternalReferenceCodePageRule } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchSiteSiteByExternalReferenceCodePageRule({\n        client,\n        path: {\n           siteExternalReferenceCode: \"655\",\n           pageRuleExternalReferenceCode: \"7034\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rules/{pageRuleExternalReferenceCode}', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}": {
            "get": {
                "tags": [
                    "PageSpecification"
                ],
                "description": "Retrieves a page specification of a site page.",
                "operationId": "getSiteSiteByExternalReferenceCodePageSpecification",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSpecificationExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageSpecification"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageSpecification"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodePageSpecification } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodePageSpecification({\n        client,\n        path: {\n           siteExternalReferenceCode: \"9997\",\n           pageSpecificationExternalReferenceCode: \"3123\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "put": {
                "tags": [
                    "PageSpecification"
                ],
                "description": "Updates a page specification of a site page.",
                "operationId": "putSiteSiteByExternalReferenceCodePageSpecification",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSpecificationExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PageSpecification"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/PageSpecification"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageSpecification"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageSpecification"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putSiteSiteByExternalReferenceCodePageSpecification } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putSiteSiteByExternalReferenceCodePageSpecification({\n        client,\n        path: {\n           siteExternalReferenceCode: \"1113\",\n           pageSpecificationExternalReferenceCode: \"5373\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "PageSpecification"
                ],
                "description": "Deletes a page specification of a site page.",
                "operationId": "deleteSiteSiteByExternalReferenceCodePageSpecification",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSpecificationExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteSiteSiteByExternalReferenceCodePageSpecification } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteSiteSiteByExternalReferenceCodePageSpecification({\n        client,\n        path: {\n           siteExternalReferenceCode: \"3846\",\n           pageSpecificationExternalReferenceCode: \"7586\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "PageSpecification"
                ],
                "description": "Updates a page specification of a site page. Updates only the fields received in the request body, leaving any other fields untouched.",
                "operationId": "patchSiteSiteByExternalReferenceCodePageSpecification",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSpecificationExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PageSpecification"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/PageSpecification"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageSpecification"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageSpecification"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchSiteSiteByExternalReferenceCodePageSpecification } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchSiteSiteByExternalReferenceCodePageSpecification({\n        client,\n        path: {\n           siteExternalReferenceCode: \"6222\",\n           pageSpecificationExternalReferenceCode: \"7495\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}/page-specifications": {
            "get": {
                "tags": [
                    "PageSpecification"
                ],
                "description": "Retrieves all the page specifications of a site page.",
                "operationId": "getSiteSiteByExternalReferenceCodeSitePagePageSpecificationsPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sitePageExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePageSpecification"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePageSpecification"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodeSitePagePageSpecificationsPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodeSitePagePageSpecificationsPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"6573\",\n           sitePageExternalReferenceCode: \"5605\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}/page-specifications', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "post": {
                "tags": [
                    "SitePage"
                ],
                "description": "Adds a new page specification to a site page.",
                "operationId": "postSiteSiteByExternalReferenceCodeSitePagePageSpecification",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sitePageExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContentPageSpecification"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/ContentPageSpecification"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContentPageSpecification"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContentPageSpecification"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postSiteSiteByExternalReferenceCodeSitePagePageSpecification } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postSiteSiteByExternalReferenceCodeSitePagePageSpecification({\n        client,\n        path: {\n           siteExternalReferenceCode: \"5955\",\n           sitePageExternalReferenceCode: \"8525\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}/page-specifications', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/utility-pages/{utilityPageExternalReferenceCode}/page-specifications": {
            "get": {
                "tags": [
                    "PageSpecification"
                ],
                "description": "Retrieves all the page specifications of a utility page.",
                "operationId": "getSiteSiteByExternalReferenceCodeUtilityPagePageSpecificationsPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "utilityPageExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePageSpecification"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePageSpecification"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodeUtilityPagePageSpecificationsPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodeUtilityPagePageSpecificationsPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"4081\",\n           utilityPageExternalReferenceCode: \"7692\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/utility-pages/{utilityPageExternalReferenceCode}/page-specifications', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "post": {
                "tags": [
                    "UtilityPage"
                ],
                "description": "Adds a new page specification to a utility page.",
                "operationId": "postSiteSiteByExternalReferenceCodeUtilityPagePageSpecification",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "utilityPageExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContentPageSpecification"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/ContentPageSpecification"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContentPageSpecification"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContentPageSpecification"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postSiteSiteByExternalReferenceCodeUtilityPagePageSpecification } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postSiteSiteByExternalReferenceCodeUtilityPagePageSpecification({\n        client,\n        path: {\n           siteExternalReferenceCode: \"6101\",\n           utilityPageExternalReferenceCode: \"1957\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/utility-pages/{utilityPageExternalReferenceCode}/page-specifications', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-templates/{pageTemplateExternalReferenceCode}/page-specifications": {
            "get": {
                "tags": [
                    "PageSpecification"
                ],
                "description": "Retrieves all the page specifications of a page template.",
                "operationId": "getSiteSiteByExternalReferenceCodePageTemplatePageSpecificationsPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageTemplateExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePageSpecification"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePageSpecification"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodePageTemplatePageSpecificationsPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodePageTemplatePageSpecificationsPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"5597\",\n           pageTemplateExternalReferenceCode: \"2296\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-templates/{pageTemplateExternalReferenceCode}/page-specifications', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "post": {
                "tags": [
                    "PageTemplate"
                ],
                "description": "Adds a new page specification in draft status to a page template.",
                "operationId": "postSiteSiteByExternalReferenceCodePageTemplatePageSpecification",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageTemplateExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ContentPageSpecification"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/ContentPageSpecification"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContentPageSpecification"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ContentPageSpecification"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postSiteSiteByExternalReferenceCodePageTemplatePageSpecification } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postSiteSiteByExternalReferenceCodePageTemplatePageSpecification({\n        client,\n        path: {\n           siteExternalReferenceCode: \"8393\",\n           pageTemplateExternalReferenceCode: \"8264\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-templates/{pageTemplateExternalReferenceCode}/page-specifications', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}/publish": {
            "post": {
                "tags": [
                    "PageSpecification"
                ],
                "description": "Publishes a page specification in draft status of a site page.",
                "operationId": "postSiteSiteByExternalReferenceCodePageSpecificationPublish",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSpecificationExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageSpecification"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageSpecification"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postSiteSiteByExternalReferenceCodePageSpecificationPublish } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postSiteSiteByExternalReferenceCodePageSpecificationPublish({\n        client,\n        path: {\n           siteExternalReferenceCode: \"1793\",\n           pageSpecificationExternalReferenceCode: \"5919\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}/publish', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-template-sets/{pageTemplateSetExternalReferenceCode}/page-templates": {
            "get": {
                "tags": [
                    "PageTemplate"
                ],
                "description": "Retrieves all the page templates within a page template set of a site page.",
                "operationId": "getSiteSiteByExternalReferenceCodePageTemplateSetPageTemplatesPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageTemplateSetExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "flatten",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePageTemplate"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePageTemplate"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodePageTemplateSetPageTemplatesPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodePageTemplateSetPageTemplatesPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"8464\",\n           pageTemplateSetExternalReferenceCode: \"2177\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-template-sets/{pageTemplateSetExternalReferenceCode}/page-templates', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "post": {
                "tags": [
                    "PageTemplate"
                ],
                "description": "Adds a new page template in draft status to a page template set.",
                "operationId": "postSiteSiteByExternalReferenceCodePageTemplateSetPageTemplate",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageTemplateSetExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PageTemplate"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/PageTemplate"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageTemplate"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageTemplate"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postSiteSiteByExternalReferenceCodePageTemplateSetPageTemplate } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postSiteSiteByExternalReferenceCodePageTemplateSetPageTemplate({\n        client,\n        path: {\n           siteExternalReferenceCode: \"9851\",\n           pageTemplateSetExternalReferenceCode: \"4523\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-template-sets/{pageTemplateSetExternalReferenceCode}/page-templates', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-templates/{pageTemplateExternalReferenceCode}": {
            "get": {
                "tags": [
                    "PageTemplate"
                ],
                "description": "Retrieves a specific page template of a site.",
                "operationId": "getSiteSiteByExternalReferenceCodePageTemplate",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageTemplateExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageTemplate"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageTemplate"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodePageTemplate } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodePageTemplate({\n        client,\n        path: {\n           siteExternalReferenceCode: \"3758\",\n           pageTemplateExternalReferenceCode: \"6343\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-templates/{pageTemplateExternalReferenceCode}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "put": {
                "tags": [
                    "PageTemplate"
                ],
                "description": "Updates the page template with the given external reference code, or creates it if it does not exist.",
                "operationId": "putSiteSiteByExternalReferenceCodePageTemplate",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageTemplateExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PageTemplate"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/PageTemplate"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageTemplate"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageTemplate"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putSiteSiteByExternalReferenceCodePageTemplate } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putSiteSiteByExternalReferenceCodePageTemplate({\n        client,\n        path: {\n           siteExternalReferenceCode: \"787\",\n           pageTemplateExternalReferenceCode: \"6185\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-templates/{pageTemplateExternalReferenceCode}', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "PageTemplate"
                ],
                "description": "Deletes a specific page template of a site.",
                "operationId": "deleteSiteSiteByExternalReferenceCodePageTemplate",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageTemplateExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteSiteSiteByExternalReferenceCodePageTemplate } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteSiteSiteByExternalReferenceCodePageTemplate({\n        client,\n        path: {\n           siteExternalReferenceCode: \"6876\",\n           pageTemplateExternalReferenceCode: \"3135\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-templates/{pageTemplateExternalReferenceCode}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "PageTemplate"
                ],
                "description": "Updates only the fields received in the request body, leaving any other fields untouched.",
                "operationId": "patchSiteSiteByExternalReferenceCodePageTemplate",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageTemplateExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PageTemplate"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/PageTemplate"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageTemplate"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageTemplate"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchSiteSiteByExternalReferenceCodePageTemplate } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchSiteSiteByExternalReferenceCodePageTemplate({\n        client,\n        path: {\n           siteExternalReferenceCode: \"7040\",\n           pageTemplateExternalReferenceCode: \"1138\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-templates/{pageTemplateExternalReferenceCode}', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-templates": {
            "get": {
                "tags": [
                    "PageTemplate"
                ],
                "description": "Retrieves the page templates of the site",
                "operationId": "getSiteSiteByExternalReferenceCodePageTemplatesPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "aggregationTerms",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePageTemplate"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePageTemplate"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodePageTemplatesPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodePageTemplatesPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"4985\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-templates', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "post": {
                "tags": [
                    "PageTemplate"
                ],
                "description": "Adds a new page template",
                "operationId": "postSiteSiteByExternalReferenceCodePageTemplate",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PageTemplate"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/PageTemplate"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageTemplate"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageTemplate"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postSiteSiteByExternalReferenceCodePageTemplate } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postSiteSiteByExternalReferenceCodePageTemplate({\n        client,\n        path: {\n           siteExternalReferenceCode: \"6529\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-templates', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-templates/permissions": {
            "get": {
                "tags": [
                    "PageTemplate"
                ],
                "operationId": "getSiteSiteByExternalReferenceCodePageTemplatePermissionsPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "roleNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodePageTemplatePermissionsPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodePageTemplatePermissionsPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"5293\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-templates/permissions', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "put": {
                "tags": [
                    "PageTemplate"
                ],
                "operationId": "putSiteSiteByExternalReferenceCodePageTemplatePermissionsPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Permission"
                                }
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Permission"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putSiteSiteByExternalReferenceCodePageTemplatePermissionsPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putSiteSiteByExternalReferenceCodePageTemplatePermissionsPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"6097\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-templates/permissions', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-templates/{pageTemplateExternalReferenceCode}/permissions": {
            "get": {
                "tags": [
                    "PageTemplate"
                ],
                "operationId": "getSiteSiteExternalReferenceCodePageTemplatePermissionsPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageTemplateExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "roleNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteExternalReferenceCodePageTemplatePermissionsPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteExternalReferenceCodePageTemplatePermissionsPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"6038\",\n           pageTemplateExternalReferenceCode: \"7849\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-templates/{pageTemplateExternalReferenceCode}/permissions', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "put": {
                "tags": [
                    "PageTemplate"
                ],
                "operationId": "putSiteSiteExternalReferenceCodePageTemplatePermissionsPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageTemplateExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putSiteSiteExternalReferenceCodePageTemplatePermissionsPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putSiteSiteExternalReferenceCodePageTemplatePermissionsPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"5010\",\n           pageTemplateExternalReferenceCode: \"7681\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-templates/{pageTemplateExternalReferenceCode}/permissions', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-template-sets/{pageTemplateSetExternalReferenceCode}": {
            "get": {
                "tags": [
                    "PageTemplateSet"
                ],
                "description": "Retrieves a specific page template set of a site.",
                "operationId": "getSiteSiteByExternalReferenceCodePageTemplateSet",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageTemplateSetExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageTemplateSet"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageTemplateSet"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodePageTemplateSet } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodePageTemplateSet({\n        client,\n        path: {\n           siteExternalReferenceCode: \"4002\",\n           pageTemplateSetExternalReferenceCode: \"6312\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-template-sets/{pageTemplateSetExternalReferenceCode}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "put": {
                "tags": [
                    "PageTemplateSet"
                ],
                "description": "Updates the page template set with the given external reference code, or creates it if it does not exist.",
                "operationId": "putSiteSiteByExternalReferenceCodePageTemplateSet",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageTemplateSetExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PageTemplateSet"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/PageTemplateSet"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageTemplateSet"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageTemplateSet"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putSiteSiteByExternalReferenceCodePageTemplateSet } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putSiteSiteByExternalReferenceCodePageTemplateSet({\n        client,\n        path: {\n           siteExternalReferenceCode: \"2341\",\n           pageTemplateSetExternalReferenceCode: \"4527\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-template-sets/{pageTemplateSetExternalReferenceCode}', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "PageTemplateSet"
                ],
                "description": "Deletes a specific page template set of a site.",
                "operationId": "deleteSiteSiteByExternalReferenceCodePageTemplateSet",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageTemplateSetExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteSiteSiteByExternalReferenceCodePageTemplateSet } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteSiteSiteByExternalReferenceCodePageTemplateSet({\n        client,\n        path: {\n           siteExternalReferenceCode: \"8552\",\n           pageTemplateSetExternalReferenceCode: \"3801\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-template-sets/{pageTemplateSetExternalReferenceCode}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "PageTemplateSet"
                ],
                "description": "Updates only the fields received in the request body, leaving any other fields untouched.",
                "operationId": "patchSiteSiteByExternalReferenceCodePageTemplateSet",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageTemplateSetExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PageTemplateSet"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/PageTemplateSet"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageTemplateSet"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageTemplateSet"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchSiteSiteByExternalReferenceCodePageTemplateSet } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchSiteSiteByExternalReferenceCodePageTemplateSet({\n        client,\n        path: {\n           siteExternalReferenceCode: \"1369\",\n           pageTemplateSetExternalReferenceCode: \"3336\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-template-sets/{pageTemplateSetExternalReferenceCode}', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-template-sets": {
            "get": {
                "tags": [
                    "PageTemplateSet"
                ],
                "description": "Retrieves the page template sets of the site",
                "operationId": "getSiteSiteByExternalReferenceCodePageTemplateSetsPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "aggregationTerms",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePageTemplateSet"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePageTemplateSet"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodePageTemplateSetsPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodePageTemplateSetsPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"3370\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-template-sets', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "post": {
                "tags": [
                    "PageTemplateSet"
                ],
                "description": "Adds a new page template set",
                "operationId": "postSiteSiteByExternalReferenceCodePageTemplateSet",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PageTemplateSet"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/PageTemplateSet"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageTemplateSet"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageTemplateSet"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postSiteSiteByExternalReferenceCodePageTemplateSet } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postSiteSiteByExternalReferenceCodePageTemplateSet({\n        client,\n        path: {\n           siteExternalReferenceCode: \"9807\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-template-sets', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-template-sets/{pageTemplateSetExternalReferenceCode}/permissions": {
            "get": {
                "tags": [
                    "PageTemplateSet"
                ],
                "operationId": "getSiteSiteExternalReferenceCodePageTemplateSetPermissionsPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageTemplateSetExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "roleNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteExternalReferenceCodePageTemplateSetPermissionsPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteExternalReferenceCodePageTemplateSetPermissionsPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"7605\",\n           pageTemplateSetExternalReferenceCode: \"8859\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-template-sets/{pageTemplateSetExternalReferenceCode}/permissions', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "put": {
                "tags": [
                    "PageTemplateSet"
                ],
                "operationId": "putSiteSiteExternalReferenceCodePageTemplateSetPermissionsPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageTemplateSetExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putSiteSiteExternalReferenceCodePageTemplateSetPermissionsPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putSiteSiteExternalReferenceCodePageTemplateSetPermissionsPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"2891\",\n           pageTemplateSetExternalReferenceCode: \"527\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-template-sets/{pageTemplateSetExternalReferenceCode}/permissions', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-template-sets/permissions": {
            "get": {
                "tags": [
                    "PageTemplateSet"
                ],
                "operationId": "getSiteSiteByExternalReferenceCodePageTemplateSetPermissionsPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "roleNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodePageTemplateSetPermissionsPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodePageTemplateSetPermissionsPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"626\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-template-sets/permissions', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "put": {
                "tags": [
                    "PageTemplateSet"
                ],
                "operationId": "putSiteSiteByExternalReferenceCodePageTemplateSetPermissionsPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Permission"
                                }
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Permission"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putSiteSiteByExternalReferenceCodePageTemplateSetPermissionsPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putSiteSiteByExternalReferenceCodePageTemplateSetPermissionsPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"7479\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-template-sets/permissions', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages": {
            "get": {
                "tags": [
                    "SitePage"
                ],
                "description": "Retrieves the public pages of the site",
                "operationId": "getSiteSiteByExternalReferenceCodeSitePagesPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "aggregationTerms",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageSitePage"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageSitePage"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodeSitePagesPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodeSitePagesPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"833\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "post": {
                "tags": [
                    "SitePage"
                ],
                "description": "Adds a new site page",
                "operationId": "postByExternalReferenceCodeSitePage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SitePage"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/SitePage"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SitePage"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/SitePage"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postByExternalReferenceCodeSitePage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postByExternalReferenceCodeSitePage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"2623\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}": {
            "get": {
                "tags": [
                    "SitePage"
                ],
                "description": "Retrieves a specific public page of a site.",
                "operationId": "getSiteSiteByExternalReferenceCodeSitePage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sitePageExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SitePage"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/SitePage"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodeSitePage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodeSitePage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"139\",\n           sitePageExternalReferenceCode: \"3469\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "put": {
                "tags": [
                    "SitePage"
                ],
                "description": "Updates the site page with the given external reference code, or creates it if it does not exist.",
                "operationId": "putSiteSiteByExternalReferenceCodeSitePage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sitePageExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SitePage"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/SitePage"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SitePage"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/SitePage"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putSiteSiteByExternalReferenceCodeSitePage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putSiteSiteByExternalReferenceCodeSitePage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"4523\",\n           sitePageExternalReferenceCode: \"2522\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "SitePage"
                ],
                "description": "Deletes a specific public page of a site.",
                "operationId": "deleteSiteSiteByExternalReferenceCodeSitePage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sitePageExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteSiteSiteByExternalReferenceCodeSitePage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteSiteSiteByExternalReferenceCodeSitePage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"1742\",\n           sitePageExternalReferenceCode: \"2613\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "SitePage"
                ],
                "description": "Updates only the fields received in the request body, leaving any other fields untouched.",
                "operationId": "patchSiteSiteByExternalReferenceCodeSitePage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sitePageExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SitePage"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/SitePage"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SitePage"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/SitePage"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchSiteSiteByExternalReferenceCodeSitePage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchSiteSiteByExternalReferenceCodeSitePage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"6884\",\n           sitePageExternalReferenceCode: \"8563\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/permissions": {
            "get": {
                "tags": [
                    "SitePage"
                ],
                "operationId": "getSiteSiteByExternalReferenceCodeSitePagePermissionsPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "roleNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodeSitePagePermissionsPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodeSitePagePermissionsPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"8731\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/permissions', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "put": {
                "tags": [
                    "SitePage"
                ],
                "operationId": "putSiteSiteByExternalReferenceCodeSitePagePermissionsPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Permission"
                                }
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Permission"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putSiteSiteByExternalReferenceCodeSitePagePermissionsPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putSiteSiteByExternalReferenceCodeSitePagePermissionsPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"7833\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/permissions', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}/permissions": {
            "get": {
                "tags": [
                    "SitePage"
                ],
                "operationId": "getSiteSiteExternalReferenceCodeSitePagePermissionsPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sitePageExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "roleNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteExternalReferenceCodeSitePagePermissionsPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteExternalReferenceCodeSitePagePermissionsPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"9506\",\n           sitePageExternalReferenceCode: \"6220\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}/permissions', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "put": {
                "tags": [
                    "SitePage"
                ],
                "operationId": "putSiteSiteExternalReferenceCodeSitePagePermissionsPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sitePageExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putSiteSiteExternalReferenceCodeSitePagePermissionsPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putSiteSiteExternalReferenceCodeSitePagePermissionsPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"7003\",\n           sitePageExternalReferenceCode: \"4616\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}/permissions', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/utility-pages/{utilityPageExternalReferenceCode}": {
            "get": {
                "tags": [
                    "UtilityPage"
                ],
                "description": "Retrieves a specific utility page of a site.",
                "operationId": "getSiteSiteByExternalReferenceCodeUtilityPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "utilityPageExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UtilityPage"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/UtilityPage"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodeUtilityPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodeUtilityPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"344\",\n           utilityPageExternalReferenceCode: \"2074\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/utility-pages/{utilityPageExternalReferenceCode}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "put": {
                "tags": [
                    "UtilityPage"
                ],
                "description": "Updates the utility page with the given external reference code, or creates it if it does not exist.",
                "operationId": "putSiteSiteByExternalReferenceCodeUtilityPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "utilityPageExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UtilityPage"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/UtilityPage"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UtilityPage"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/UtilityPage"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putSiteSiteByExternalReferenceCodeUtilityPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putSiteSiteByExternalReferenceCodeUtilityPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"1644\",\n           utilityPageExternalReferenceCode: \"6695\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/utility-pages/{utilityPageExternalReferenceCode}', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "UtilityPage"
                ],
                "description": "Deletes a specific utility page of a site.",
                "operationId": "deleteSiteSiteByExternalReferenceCodeUtilityPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "utilityPageExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteSiteSiteByExternalReferenceCodeUtilityPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteSiteSiteByExternalReferenceCodeUtilityPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"7980\",\n           utilityPageExternalReferenceCode: \"9114\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/utility-pages/{utilityPageExternalReferenceCode}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "UtilityPage"
                ],
                "description": "Updates only the fields received in the request body, leaving any other fields untouched.",
                "operationId": "patchSiteSiteByExternalReferenceCodeUtilityPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "utilityPageExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UtilityPage"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/UtilityPage"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UtilityPage"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/UtilityPage"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchSiteSiteByExternalReferenceCodeUtilityPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchSiteSiteByExternalReferenceCodeUtilityPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"9632\",\n           utilityPageExternalReferenceCode: \"1192\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/utility-pages/{utilityPageExternalReferenceCode}', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/utility-pages": {
            "get": {
                "tags": [
                    "UtilityPage"
                ],
                "description": "Retrieves the utility pages of the site.",
                "operationId": "getSiteSiteByExternalReferenceCodeUtilityPagesPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "aggregationTerms",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageUtilityPage"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageUtilityPage"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodeUtilityPagesPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodeUtilityPagesPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"2609\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/utility-pages', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "post": {
                "tags": [
                    "UtilityPage"
                ],
                "description": "Adds a new utility page",
                "operationId": "postSiteSiteByExternalReferenceCodeUtilityPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UtilityPage"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/UtilityPage"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UtilityPage"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/UtilityPage"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postSiteSiteByExternalReferenceCodeUtilityPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postSiteSiteByExternalReferenceCodeUtilityPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"8274\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/utility-pages', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/utility-pages/permissions": {
            "get": {
                "tags": [
                    "UtilityPage"
                ],
                "operationId": "getSiteSiteByExternalReferenceCodeUtilityPagePermissionsPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "roleNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodeUtilityPagePermissionsPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodeUtilityPagePermissionsPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"3143\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/utility-pages/permissions', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "put": {
                "tags": [
                    "UtilityPage"
                ],
                "operationId": "putSiteSiteByExternalReferenceCodeUtilityPagePermissionsPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Permission"
                                }
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Permission"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putSiteSiteByExternalReferenceCodeUtilityPagePermissionsPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putSiteSiteByExternalReferenceCodeUtilityPagePermissionsPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"9505\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/utility-pages/permissions', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/utility-pages/{utilityPageExternalReferenceCode}/permissions": {
            "get": {
                "tags": [
                    "UtilityPage"
                ],
                "operationId": "getSiteSiteExternalReferenceCodeUtilityPagePermissionsPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "utilityPageExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "roleNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteExternalReferenceCodeUtilityPagePermissionsPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteExternalReferenceCodeUtilityPagePermissionsPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"6754\",\n           utilityPageExternalReferenceCode: \"5062\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/utility-pages/{utilityPageExternalReferenceCode}/permissions', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "put": {
                "tags": [
                    "UtilityPage"
                ],
                "operationId": "putSiteSiteExternalReferenceCodeUtilityPagePermissionsPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "utilityPageExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePermission"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putSiteSiteExternalReferenceCodeUtilityPagePermissionsPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putSiteSiteExternalReferenceCodeUtilityPagePermissionsPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"9580\",\n           utilityPageExternalReferenceCode: \"9289\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/utility-pages/{utilityPageExternalReferenceCode}/permissions', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}/widget-instances": {
            "get": {
                "tags": [
                    "WidgetPageWidgetInstance"
                ],
                "description": "Retrieves all the widget instances of a widget page.",
                "operationId": "getSiteSiteByExternalReferenceCodeSitePageWidgetInstancesPage",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sitePageExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageWidgetPageWidgetInstance"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageWidgetPageWidgetInstance"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodeSitePageWidgetInstancesPage } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodeSitePageWidgetInstancesPage({\n        client,\n        path: {\n           siteExternalReferenceCode: \"9370\",\n           sitePageExternalReferenceCode: \"9394\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}/widget-instances', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "post": {
                "tags": [
                    "WidgetPageWidgetInstance"
                ],
                "description": "Adds a new widget instance to a widget page.",
                "operationId": "postSiteSiteByExternalReferenceCodeSitePageWidgetInstance",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sitePageExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WidgetPageWidgetInstance"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/WidgetPageWidgetInstance"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WidgetPageWidgetInstance"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/WidgetPageWidgetInstance"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postSiteSiteByExternalReferenceCodeSitePageWidgetInstance } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postSiteSiteByExternalReferenceCodeSitePageWidgetInstance({\n        client,\n        path: {\n           siteExternalReferenceCode: \"2997\",\n           sitePageExternalReferenceCode: \"2431\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}/widget-instances', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}/widget-instances/{widgetInstanceExternalReferenceCode}": {
            "get": {
                "tags": [
                    "WidgetPageWidgetInstance"
                ],
                "description": "Retrieves a widget instance of a widget page or widget page template within a site.",
                "operationId": "getSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCode",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sitePageExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "widgetInstanceExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WidgetPageWidgetInstance"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/WidgetPageWidgetInstance"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCode } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCode({\n        client,\n        path: {\n           siteExternalReferenceCode: \"309\",\n           sitePageExternalReferenceCode: \"5660\",\n           widgetInstanceExternalReferenceCode: \"6301\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}/widget-instances/{widgetInstanceExternalReferenceCode}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "put": {
                "tags": [
                    "WidgetPageWidgetInstance"
                ],
                "description": "Updates a widget instance of a widget page or widget page template within a site.",
                "operationId": "putSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCode",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sitePageExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "widgetInstanceExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WidgetPageWidgetInstance"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/WidgetPageWidgetInstance"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WidgetPageWidgetInstance"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/WidgetPageWidgetInstance"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCode } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCode({\n        client,\n        path: {\n           siteExternalReferenceCode: \"8934\",\n           sitePageExternalReferenceCode: \"9930\",\n           widgetInstanceExternalReferenceCode: \"7296\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}/widget-instances/{widgetInstanceExternalReferenceCode}', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "WidgetPageWidgetInstance"
                ],
                "description": "Deletes a widget instance of a specific widget page or widget page template within a site.",
                "operationId": "deleteSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCode",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sitePageExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "widgetInstanceExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCode } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCode({\n        client,\n        path: {\n           siteExternalReferenceCode: \"6403\",\n           sitePageExternalReferenceCode: \"8454\",\n           widgetInstanceExternalReferenceCode: \"547\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}/widget-instances/{widgetInstanceExternalReferenceCode}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "WidgetPageWidgetInstance"
                ],
                "description": "Updates a widget instance of a widget page or widget page template within a site. Updates only the fields received in the request body, leaving any other fields untouched.",
                "operationId": "patchSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCode",
                "parameters": [
                    {
                        "name": "siteExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sitePageExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "widgetInstanceExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "restrictFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WidgetPageWidgetInstance"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/WidgetPageWidgetInstance"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WidgetPageWidgetInstance"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/WidgetPageWidgetInstance"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCode } from 'liferay-headless-rest-client/headless-admin-site-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCode({\n        client,\n        path: {\n           siteExternalReferenceCode: \"6468\",\n           sitePageExternalReferenceCode: \"8371\",\n           widgetInstanceExternalReferenceCode: \"8066\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}/widget-instances/{widgetInstanceExternalReferenceCode}', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Creator": {
                "type": "object",
                "properties": {
                    "additionalName": {
                        "type": "string",
                        "description": "The user's additional name, which can be used as a middle name.",
                        "readOnly": true
                    },
                    "contentType": {
                        "type": "string",
                        "description": "The type of the content.",
                        "readOnly": true
                    },
                    "familyName": {
                        "type": "string",
                        "description": "The user's surname (last name).",
                        "readOnly": true
                    },
                    "givenName": {
                        "type": "string",
                        "description": "The user's first name.",
                        "readOnly": true
                    },
                    "id": {
                        "type": "integer",
                        "description": "The user's ID.",
                        "format": "int64",
                        "readOnly": true
                    },
                    "image": {
                        "type": "string",
                        "description": "A relative URL to the user's profile image.",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The user's full name.",
                        "readOnly": true
                    },
                    "profileURL": {
                        "type": "string",
                        "description": "A relative URL to the user's profile.",
                        "readOnly": true
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.user.dto.v1_0.Creator"
                    }
                },
                "description": "The utility page's creator. It is not returned by default. It can be embedded via nestedFields.",
                "xml": {
                    "name": "Creator"
                }
            },
            "DisplayPageTemplateFolder": {
                "type": "object",
                "properties": {
                    "creator": {
                        "$ref": "#/components/schemas/Creator"
                    },
                    "creatorExternalReferenceCode": {
                        "type": "string",
                        "description": "The display page template folder's creator external reference code."
                    },
                    "dateCreated": {
                        "type": "string",
                        "description": "The display page template folder's creation date.",
                        "format": "date-time"
                    },
                    "dateModified": {
                        "type": "string",
                        "description": "The last time any field of the display page template folder was changed.",
                        "format": "date-time"
                    },
                    "description": {
                        "type": "string",
                        "description": "The display page template folder's description."
                    },
                    "externalReferenceCode": {
                        "type": "string",
                        "description": "The display page template folder's external reference code."
                    },
                    "key": {
                        "type": "string",
                        "description": "The display page template folder's key."
                    },
                    "name": {
                        "type": "string",
                        "description": "The display page template folder's name."
                    },
                    "parentDisplayPageTemplateFolderExternalReferenceCode": {
                        "type": "string",
                        "description": "The parent display page template folder's external reference code."
                    },
                    "uuid": {
                        "type": "string",
                        "description": "A valid external identifier to reference this page template folder."
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.site.dto.v1_0.DisplayPageTemplateFolder"
                    }
                },
                "description": "The display page template's parent folder.",
                "xml": {
                    "name": "DisplayPageTemplateFolder"
                }
            },
            "Facet": {
                "type": "object",
                "properties": {
                    "facetCriteria": {
                        "type": "string"
                    },
                    "facetValues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FacetValue"
                        }
                    }
                }
            },
            "FacetValue": {
                "type": "object",
                "properties": {
                    "numberOfOccurrences": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "term": {
                        "type": "string"
                    }
                }
            },
            "PageDisplayPageTemplateFolder": {
                "type": "object",
                "properties": {
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DisplayPageTemplateFolder"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    }
                }
            },
            "PagePermission": {
                "type": "object",
                "properties": {
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Permission"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    }
                }
            },
            "Permission": {
                "type": "object",
                "properties": {
                    "actionIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "roleName": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "Permission"
                }
            },
            "ClassSubtypeReference": {
                "required": [
                    "className"
                ],
                "type": "object",
                "properties": {
                    "className": {
                        "type": "string"
                    },
                    "subTypeExternalReference": {
                        "$ref": "#/components/schemas/ItemExternalReference"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.site.dto.v1_0.ClassSubtypeReference"
                    }
                },
                "description": "A reference specifying the class name and an optional subtype.",
                "xml": {
                    "name": "ClassSubtypeReference"
                },
                "enum": [
                    "className"
                ]
            },
            "ClientExtension": {
                "type": "object",
                "properties": {
                    "clientExtensionConfig": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "The configuration keys and values of the client extension."
                        },
                        "description": "The configuration keys and values of the client extension."
                    },
                    "externalReferenceCode": {
                        "type": "string",
                        "description": "The client extension's external reference code."
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.site.dto.v1_0.ClientExtension"
                    }
                },
                "description": "The client extension for the theme spritemap of a page specification.",
                "xml": {
                    "name": "ClientExtension"
                }
            },
            "ContentPageSpecification": {
                "type": "object",
                "properties": {
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.site.dto.v1_0.ContentPageSpecification"
                    },
                    "pageExperiences": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PageExperience"
                        }
                    }
                },
                "xml": {
                    "name": "ContentPageSpecification"
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PageSpecification"
                    }
                ]
            },
            "DisplayPageTemplate": {
                "type": "object",
                "properties": {
                    "contentTypeReference": {
                        "$ref": "#/components/schemas/ClassSubtypeReference"
                    },
                    "creator": {
                        "$ref": "#/components/schemas/Creator"
                    },
                    "creatorExternalReferenceCode": {
                        "type": "string",
                        "description": "The display page template's creator external reference code."
                    },
                    "dateCreated": {
                        "type": "string",
                        "description": "The display page template's creation date.",
                        "format": "date-time"
                    },
                    "dateModified": {
                        "type": "string",
                        "description": "The last time any field of the display page template was changed.",
                        "format": "date-time"
                    },
                    "datePublished": {
                        "type": "string",
                        "description": "The display page template's most recent publication date.",
                        "format": "date-time"
                    },
                    "displayPageTemplateSettings": {
                        "$ref": "#/components/schemas/DisplayPageTemplateSettings"
                    },
                    "externalReferenceCode": {
                        "type": "string",
                        "description": "The display page template's external reference code."
                    },
                    "friendlyUrlHistory": {
                        "$ref": "#/components/schemas/FriendlyUrlHistory"
                    },
                    "friendlyUrlPath_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "The localized relative URLs to the display page template's rendered content."
                        },
                        "description": "The localized relative URLs to the display page template's rendered content."
                    },
                    "key": {
                        "type": "string",
                        "description": "The display page template's key."
                    },
                    "markedAsDefault": {
                        "type": "boolean",
                        "description": "Whether the display page template is the default one for the given content type/subtype."
                    },
                    "name": {
                        "type": "string",
                        "description": "The display page template's name."
                    },
                    "pageSpecifications": {
                        "type": "array",
                        "description": "The display page template's specifications. A display page template may contain 0 or 1 page specifications in draft status and 0 or 1 page specifications in published status. This field is not returned by default. It can be requested via nestedFields.",
                        "items": {
                            "$ref": "#/components/schemas/PageSpecification"
                        }
                    },
                    "parentFolder": {
                        "$ref": "#/components/schemas/DisplayPageTemplateFolder"
                    },
                    "thumbnail": {
                        "$ref": "#/components/schemas/ItemExternalReference"
                    },
                    "uuid": {
                        "type": "string",
                        "description": "A valid external identifier to reference this display page template."
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.site.dto.v1_0.DisplayPageTemplate"
                    }
                },
                "xml": {
                    "name": "DisplayPageTemplate"
                }
            },
            "DisplayPageTemplateSettings": {
                "type": "object",
                "properties": {
                    "openGraphSettings": {
                        "$ref": "#/components/schemas/OpenGraphSettings"
                    },
                    "seoSettings": {
                        "$ref": "#/components/schemas/SEOSettings"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.site.dto.v1_0.DisplayPageTemplateSettings"
                    }
                },
                "description": "Settings of the display page template, such as SEO or OpenGraph.",
                "xml": {
                    "name": "DisplayPageTemplateSettings"
                }
            },
            "FriendlyUrlHistory": {
                "type": "object",
                "properties": {
                    "friendlyUrlPath_i18n": {
                        "type": "object",
                        "description": "The old localized relative URLs to the page's rendered content."
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.site.dto.v1_0.FriendlyUrlHistory"
                    }
                },
                "description": "The history of previously used URLs to the utility page's rendered content. This field is not returned by default. It can be requested via nestedFields.",
                "xml": {
                    "name": "FriendlyUrlHistory"
                }
            },
            "ItemExternalReference": {
                "required": [
                    "externalReferenceCode"
                ],
                "type": "object",
                "properties": {
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.site.dto.v1_0.ItemExternalReference"
                    },
                    "className": {
                        "type": "string"
                    },
                    "externalReferenceCode": {
                        "type": "string"
                    },
                    "scope": {
                        "$ref": "#/components/schemas/Scope"
                    },
                    "collectionType": {
                        "type": "string",
                        "description": "The collection's type (Collection, CollectionProvider).",
                        "enum": [
                            "Collection",
                            "CollectionProvider"
                        ]
                    }
                },
                "description": "A unique reference to an entity which remains constant across environments.",
                "xml": {
                    "name": "ItemExternalReference"
                },
                "enum": [
                    "externalReferenceCode"
                ]
            },
            "OpenGraphSettings": {
                "type": "object",
                "properties": {
                    "description_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "The localized Open Graph's descriptions."
                        },
                        "description": "The localized Open Graph's descriptions."
                    },
                    "image": {
                        "$ref": "#/components/schemas/ItemExternalReference"
                    },
                    "imageAlt_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "The localized Open Graph's image alts."
                        },
                        "description": "The localized Open Graph's image alts."
                    },
                    "title_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "The localized Open Graph's titles."
                        },
                        "description": "The localized Open Graph's titles."
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.site.dto.v1_0.OpenGraphSettings"
                    }
                },
                "description": "The page's Open Graph settings.",
                "xml": {
                    "name": "OpenGraphSettings"
                }
            },
            "PageDisplayPageTemplate": {
                "type": "object",
                "properties": {
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DisplayPageTemplate"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    }
                }
            },
            "PageElement": {
                "type": "object",
                "properties": {
                    "definition": {
                        "type": "object",
                        "description": "The page element's definition."
                    },
                    "externalReferenceCode": {
                        "type": "string",
                        "description": "The page element's external reference code. Unique within the site."
                    },
                    "pageElements": {
                        "type": "array",
                        "description": "A list of the page elements this page element has.",
                        "items": {
                            "$ref": "#/components/schemas/PageElement"
                        }
                    },
                    "parentExternalReferenceCode": {
                        "type": "string",
                        "description": "The parent's page element's external reference code. Unique within the site."
                    },
                    "position": {
                        "type": "integer",
                        "description": "The 0-based position this page element occupies with respect to its siblings (0 for first child, 1 for second child, ...). If not specified when creating a page element the page element will be added at the last valid position.",
                        "format": "int32"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.site.dto.v1_0.PageElement"
                    },
                    "type": {
                        "type": "string",
                        "description": "The page element's type (collection, collection item, column, container, drop zone, form, form step, form step container, fragment, fragment composition, fragment drop zone, row, widget or widget section).",
                        "enum": [
                            "Collection",
                            "CollectionItem",
                            "Column",
                            "Container",
                            "DropZone",
                            "Form",
                            "FormStep",
                            "FormStepContainer",
                            "Fragment",
                            "FragmentComposition",
                            "FragmentDropZone",
                            "Row",
                            "Widget"
                        ]
                    }
                },
                "description": "The page elements in the experience.",
                "xml": {
                    "name": "PageElement"
                }
            },
            "PageExperience": {
                "type": "object",
                "properties": {
                    "externalReferenceCode": {
                        "type": "string",
                        "description": "The experience's external reference code, unique per site."
                    },
                    "key": {
                        "type": "string",
                        "description": "The experience's key."
                    },
                    "name_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "The localized experience's names."
                        },
                        "description": "The localized experience's names."
                    },
                    "pageElements": {
                        "type": "array",
                        "description": "The page elements in the experience.",
                        "items": {
                            "$ref": "#/components/schemas/PageElement"
                        }
                    },
                    "pageRules": {
                        "type": "array",
                        "description": "The page rules in the experience.",
                        "items": {
                            "$ref": "#/components/schemas/PageRule"
                        }
                    },
                    "priority": {
                        "type": "integer",
                        "description": "the experience's priority. It must be a unique value within the page specification. The default experience will always be assigned priority 0. A priority higher than 0 will result in an experience being active and a priority lower than 0 will result in an experience being inactive.",
                        "format": "int32"
                    },
                    "segmentExternalReferenceCode": {
                        "type": "string",
                        "description": "The segment's external reference code."
                    },
                    "sitePageExternalReferenceCode": {
                        "type": "string",
                        "description": "The segment's external reference code."
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.site.dto.v1_0.PageExperience"
                    }
                },
                "xml": {
                    "name": "PageExperience"
                }
            },
            "PageRule": {
                "type": "object",
                "properties": {
                    "externalReferenceCode": {
                        "type": "string",
                        "description": "The page rule external reference code."
                    },
                    "name": {
                        "type": "string",
                        "description": "The custom name of a page rule."
                    },
                    "pageRuleActions": {
                        "type": "array",
                        "description": "A list of actions of a page rule.",
                        "items": {
                            "$ref": "#/components/schemas/PageRuleAction"
                        }
                    },
                    "pageRuleConditions": {
                        "type": "array",
                        "description": "A list of conditions of a page rule.",
                        "items": {
                            "$ref": "#/components/schemas/PageRuleCondition"
                        }
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.site.dto.v1_0.PageRule"
                    },
                    "conditionType": {
                        "type": "string",
                        "description": "The custom name of a Page rule.",
                        "enum": [
                            "All",
                            "Any"
                        ]
                    }
                },
                "description": "The page rules in the experience.",
                "xml": {
                    "name": "PageRule"
                }
            },
            "PageRuleAction": {
                "type": "object",
                "properties": {
                    "action": {
                        "type": "string",
                        "description": "The page rule action's action."
                    },
                    "externalReferenceCode": {
                        "type": "string",
                        "description": "The page rule action's external reference code."
                    },
                    "itemId": {
                        "type": "string",
                        "description": "The page rule action's item ID."
                    },
                    "type": {
                        "type": "string",
                        "description": "The page rule action's type."
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.site.dto.v1_0.PageRuleAction"
                    }
                },
                "description": "A list of actions of a page rule.",
                "xml": {
                    "name": "PageRuleAction"
                }
            },
            "PageRuleCondition": {
                "type": "object",
                "properties": {
                    "condition": {
                        "type": "string",
                        "description": "The page rule condition's description."
                    },
                    "externalReferenceCode": {
                        "type": "string",
                        "description": "The page rule condition's external reference code."
                    },
                    "type": {
                        "type": "string",
                        "description": "The page rule condition's type."
                    },
                    "value": {
                        "type": "string",
                        "description": "The page rule condition's value."
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.site.dto.v1_0.PageRuleCondition"
                    }
                },
                "description": "A list of conditions of a page rule.",
                "xml": {
                    "name": "PageRuleCondition"
                }
            },
            "PageSpecification": {
                "type": "object",
                "properties": {
                    "externalReferenceCode": {
                        "type": "string",
                        "description": "The page specification's external reference code, unique per site."
                    },
                    "settings": {
                        "$ref": "#/components/schemas/Settings"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.site.dto.v1_0.PageSpecification"
                    },
                    "status": {
                        "type": "string",
                        "description": "The status of the page specification.",
                        "enum": [
                            "Approved",
                            "Draft"
                        ]
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the page specification.",
                        "enum": [
                            "ContentPageSpecification",
                            "WidgetPageSpecification"
                        ]
                    }
                },
                "description": "The utility page's specifications. A utility page may contain 0 or 1 page specifications in draft status and 0 or 1 page specifications in published status. This field is not returned by default. It can be requested via nestedFields.",
                "xml": {
                    "name": "PageSpecification"
                },
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "SEOSettings": {
                "type": "object",
                "properties": {
                    "customCanonicalURL_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "The localized canonical URL of the page, if it exists."
                        },
                        "description": "The localized canonical URL of the page, if it exists."
                    },
                    "description_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "The localized descriptions of the page to be used as summary for search engines."
                        },
                        "description": "The localized descriptions of the page to be used as summary for search engines."
                    },
                    "htmlTitle_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "The localized main titles of the page to be used by search engines."
                        },
                        "description": "The localized main titles of the page to be used by search engines."
                    },
                    "robots_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "A localized tag telling search engines if and how they should crawl the page."
                        },
                        "description": "A localized tag telling search engines if and how they should crawl the page."
                    },
                    "seoKeywords_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "A list of localized target keywords of the page to be used by search engines."
                        },
                        "description": "A list of localized target keywords of the page to be used by search engines."
                    },
                    "siteMapSettings": {
                        "$ref": "#/components/schemas/SiteMapSettings"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.site.dto.v1_0.SEOSettings"
                    }
                },
                "description": "The page's SEO settings.",
                "xml": {
                    "name": "SEOSettings"
                }
            },
            "Scope": {
                "required": [
                    "externalReferenceCode",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "externalReferenceCode": {
                        "type": "string"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.site.dto.v1_0.Scope"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "AssetLibrary",
                            "Site"
                        ]
                    }
                },
                "xml": {
                    "name": "Scope"
                }
            },
            "Settings": {
                "type": "object",
                "properties": {
                    "colorSchemeName": {
                        "type": "string",
                        "description": "The page specification's color scheme name."
                    },
                    "css": {
                        "type": "string",
                        "description": "The page specification's CSS."
                    },
                    "favIcon": {
                        "type": "object",
                        "description": "The FavIcon of the page specification."
                    },
                    "globalCSSClientExtensions": {
                        "type": "array",
                        "description": "The client extensions for global CSS associated to the page.",
                        "items": {
                            "$ref": "#/components/schemas/ClientExtension"
                        }
                    },
                    "globalJSClientExtensions": {
                        "type": "array",
                        "description": "The client extensions for global JS associated to the page.",
                        "items": {
                            "$ref": "#/components/schemas/ClientExtension"
                        }
                    },
                    "javascript": {
                        "type": "string",
                        "description": "The page specification's JavaScript."
                    },
                    "masterPageItemExternalReference": {
                        "$ref": "#/components/schemas/ItemExternalReference"
                    },
                    "styleBookItemExternalReference": {
                        "$ref": "#/components/schemas/ItemExternalReference"
                    },
                    "themeCSSClientExtension": {
                        "$ref": "#/components/schemas/ClientExtension"
                    },
                    "themeName": {
                        "type": "string",
                        "description": "The page specification's theme name."
                    },
                    "themeSettings": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "The page specification's theme settings."
                        },
                        "description": "The page specification's theme settings."
                    },
                    "themeSpritemapClientExtension": {
                        "$ref": "#/components/schemas/ClientExtension"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.site.dto.v1_0.Settings"
                    }
                },
                "xml": {
                    "name": "Settings"
                }
            },
            "SiteMapSettings": {
                "type": "object",
                "properties": {
                    "include": {
                        "type": "boolean",
                        "description": "Whether search engines should crawl and index the page."
                    },
                    "includeChildSitePages": {
                        "type": "boolean",
                        "description": "Whether search engines should crawl and index the child pages."
                    },
                    "pagePriority": {
                        "maximum": 1,
                        "exclusiveMaximum": false,
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "description": "How the page should be prioritized relative to other pages.",
                        "format": "double"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.site.dto.v1_0.SiteMapSettings"
                    },
                    "changeFrequency": {
                        "type": "string",
                        "description": "Indicates how often a page is updated.",
                        "enum": [
                            "Always",
                            "Hourly",
                            "Daily",
                            "Weekly",
                            "Monthly",
                            "Yearly",
                            "Never"
                        ]
                    }
                },
                "description": "Represents settings related with the site map.",
                "xml": {
                    "name": "SiteMapSettings"
                }
            },
            "WidgetLookAndFeelConfig": {
                "type": "object",
                "properties": {
                    "textStylesConfig": {
                        "type": "object"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.site.dto.v1_0.WidgetLookAndFeelConfig"
                    }
                },
                "description": "The widget instance's look and feel configuration.",
                "xml": {
                    "name": "WidgetLookAndFeelConfig"
                }
            },
            "WidgetPageSection": {
                "type": "object",
                "properties": {
                    "customizable": {
                        "type": "boolean",
                        "description": "A flag that indicates whether the widget page section is customizable or not."
                    },
                    "id": {
                        "type": "string",
                        "description": "The widget page section's id."
                    },
                    "widgetPageWidgetInstances": {
                        "type": "array",
                        "description": "A list of the widget instances within this page section.",
                        "items": {
                            "$ref": "#/components/schemas/WidgetPageWidgetInstance"
                        }
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.site.dto.v1_0.WidgetPageSection"
                    }
                },
                "description": "The sections of a widget page.",
                "xml": {
                    "name": "WidgetPageSection"
                }
            },
            "WidgetPageSpecification": {
                "type": "object",
                "properties": {
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.site.dto.v1_0.WidgetPageSpecification"
                    },
                    "widgetPageSections": {
                        "type": "array",
                        "description": "The sections of a widget page.",
                        "items": {
                            "$ref": "#/components/schemas/WidgetPageSection"
                        }
                    }
                },
                "xml": {
                    "name": "WidgetPageSpecification"
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PageSpecification"
                    }
                ]
            },
            "WidgetPageWidgetInstance": {
                "type": "object",
                "properties": {
                    "externalReferenceCode": {
                        "type": "string",
                        "description": "The external reference code of the widget instance."
                    },
                    "parentSectionId": {
                        "type": "string",
                        "description": "The section's ID of the widget page or the nested application widget instance this widget belongs to."
                    },
                    "parentWidgetInstanceExternalReferenceCode": {
                        "type": "string",
                        "description": "The external reference code of the parent widget instance. Only available if this widget instance is within a nested applications widget instance."
                    },
                    "position": {
                        "type": "integer",
                        "description": "The 0-based position this widget instance occupies with respect to its siblings (0 for first child, 1 for second child, ...). If not specified when creating a widget instance the widget instance will be added at the last valid position.",
                        "format": "int32"
                    },
                    "widgetConfig": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "description": "The configuration keys and values of the widget instance."
                        },
                        "description": "The configuration keys and values of the widget instance."
                    },
                    "widgetInstanceId": {
                        "type": "string",
                        "description": "The widget instance's ID."
                    },
                    "widgetLookAndFeelConfig": {
                        "type": "array",
                        "description": "The widget instance's look and feel configuration.",
                        "items": {
                            "$ref": "#/components/schemas/WidgetLookAndFeelConfig"
                        }
                    },
                    "widgetName": {
                        "type": "string",
                        "description": "The widget instance's name."
                    },
                    "widgetPermissions": {
                        "type": "array",
                        "description": "The widget instance's permissions.",
                        "items": {
                            "$ref": "#/components/schemas/WidgetPermission"
                        }
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.site.dto.v1_0.WidgetPageWidgetInstance"
                    }
                },
                "xml": {
                    "name": "WidgetPageWidgetInstance"
                }
            },
            "WidgetPermission": {
                "type": "object",
                "properties": {
                    "actionIds": {
                        "type": "array",
                        "description": "The IDs of the actions the role has permission for.",
                        "items": {
                            "type": "string",
                            "description": "The IDs of the actions the role has permission for."
                        }
                    },
                    "roleName": {
                        "type": "string",
                        "description": "The role's name."
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.site.dto.v1_0.WidgetPermission"
                    }
                },
                "description": "The widget instance's permissions.",
                "xml": {
                    "name": "WidgetPermission"
                }
            },
            "FragmentComposition": {
                "type": "object",
                "properties": {
                    "creator": {
                        "$ref": "#/components/schemas/Creator"
                    },
                    "creatorExternalReferenceCode": {
                        "type": "string",
                        "description": "The page's creator external reference code."
                    },
                    "dateCreated": {
                        "type": "string",
                        "description": "The structured content's creation date.",
                        "format": "date-time"
                    },
                    "dateModified": {
                        "type": "string",
                        "description": "The last time any field of the structured content was changed.",
                        "format": "date-time"
                    },
                    "datePublished": {
                        "type": "string",
                        "description": "The structured content's most recent publication date.",
                        "format": "date-time"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of this fragment composition."
                    },
                    "externalReferenceCode": {
                        "type": "string",
                        "description": "The external reference code of this fragment composition."
                    },
                    "fragmentSetExternalReferenceCode": {
                        "type": "string",
                        "description": "The external reference code of the fragment set this fragment composition belongs to."
                    },
                    "key": {
                        "type": "string",
                        "description": "The fragment composition's key."
                    },
                    "name": {
                        "type": "string",
                        "description": "The fragment composition's name."
                    },
                    "pageElement": {
                        "$ref": "#/components/schemas/PageElement"
                    },
                    "thumbnail": {
                        "$ref": "#/components/schemas/ItemExternalReference"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.site.dto.v1_0.FragmentComposition"
                    }
                },
                "xml": {
                    "name": "FragmentComposition"
                }
            },
            "PageFragmentComposition": {
                "type": "object",
                "properties": {
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FragmentComposition"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    }
                }
            },
            "Keyword": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "readOnly": true
                    },
                    "assetLibraryKey": {
                        "type": "string",
                        "readOnly": true
                    },
                    "creator": {
                        "$ref": "#/components/schemas/Creator"
                    },
                    "dateCreated": {
                        "type": "string",
                        "description": "The keyword's creation date.",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "dateModified": {
                        "type": "string",
                        "description": "The keyword's most recent modification date.",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "externalReferenceCode": {
                        "type": "string",
                        "description": "The keyword's external reference code"
                    },
                    "id": {
                        "type": "integer",
                        "description": "The keyword's ID.",
                        "format": "int64",
                        "readOnly": true
                    },
                    "keywordUsageCount": {
                        "type": "integer",
                        "description": "The number of times this keyword has been used with other assets.",
                        "format": "int32",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The keyword's name."
                    },
                    "siteExternalReferenceCode": {
                        "type": "string",
                        "description": "The external reference code of the site to which this keyword is scoped.",
                        "readOnly": true
                    },
                    "siteId": {
                        "type": "integer",
                        "description": "The ID of the site to which this keyword is scoped.",
                        "format": "int64",
                        "readOnly": true
                    },
                    "subscribed": {
                        "type": "boolean",
                        "description": "A flag that indicates whether the user making the requests is subscribed to this keyword.",
                        "readOnly": true
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.taxonomy.dto.v1_0.Keyword"
                    }
                },
                "description": "Represents a keyword that describes content. Properties follow the [keywords](https://schema.org/keywords) specification.",
                "xml": {
                    "name": "Keyword"
                },
                "enum": [
                    "name"
                ]
            },
            "MasterPage": {
                "type": "object",
                "properties": {
                    "creator": {
                        "$ref": "#/components/schemas/Creator"
                    },
                    "creatorExternalReferenceCode": {
                        "type": "string",
                        "description": "The page's creator external reference code."
                    },
                    "dateCreated": {
                        "type": "string",
                        "description": "The master page's creation date.",
                        "format": "date-time"
                    },
                    "dateModified": {
                        "type": "string",
                        "description": "The last time any field of the master page was changed.",
                        "format": "date-time"
                    },
                    "datePublished": {
                        "type": "string",
                        "description": "The master page's most recent publication date.",
                        "format": "date-time"
                    },
                    "externalReferenceCode": {
                        "type": "string",
                        "description": "The master page's external reference code, unique per site."
                    },
                    "key": {
                        "type": "string",
                        "description": "The master page's key."
                    },
                    "keywordItemExternalReferences": {
                        "type": "array",
                        "description": "The external references to the associated keywords.",
                        "items": {
                            "$ref": "#/components/schemas/ItemExternalReference"
                        }
                    },
                    "keywords": {
                        "type": "array",
                        "description": "The associated keywords. They are not returned by default. They can be embedded via nestedFields.",
                        "readOnly": true,
                        "items": {
                            "$ref": "#/components/schemas/Keyword"
                        }
                    },
                    "markedAsDefault": {
                        "type": "boolean",
                        "description": "Whether the master page is the default one."
                    },
                    "name": {
                        "type": "string",
                        "description": "The master page's name."
                    },
                    "pageSpecifications": {
                        "type": "array",
                        "description": "The master page's specifications. A master page may contain 0 or 1 page specifications in draft status and 0 or 1 page specifications in published status. This field is not returned by default. It can be requested via nestedFields.",
                        "items": {
                            "$ref": "#/components/schemas/PageSpecification"
                        }
                    },
                    "taxonomyCategories": {
                        "type": "array",
                        "description": "The associated categories. They are not returned by default. They can be embedded via nestedFields.",
                        "readOnly": true,
                        "items": {
                            "$ref": "#/components/schemas/TaxonomyCategory"
                        }
                    },
                    "taxonomyCategoryItemExternalReferences": {
                        "type": "array",
                        "description": "The external references to the associated categories.",
                        "items": {
                            "$ref": "#/components/schemas/ItemExternalReference"
                        }
                    },
                    "thumbnail": {
                        "$ref": "#/components/schemas/ItemExternalReference"
                    },
                    "uuid": {
                        "type": "string",
                        "description": "A valid external identifier to reference this page."
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.site.dto.v1_0.MasterPage"
                    }
                },
                "xml": {
                    "name": "MasterPage"
                }
            },
            "ParentTaxonomyCategory": {
                "type": "object",
                "properties": {
                    "externalReferenceCode": {
                        "type": "string",
                        "description": "The parent taxonomy category's external reference code."
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "name_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.taxonomy.dto.v1_0.ParentTaxonomyCategory"
                    }
                },
                "description": "The category's parent category, if it exists.",
                "xml": {
                    "name": "ParentTaxonomyCategory"
                }
            },
            "ParentTaxonomyVocabulary": {
                "type": "object",
                "properties": {
                    "externalReferenceCode": {
                        "type": "string",
                        "description": "The parent category's `TaxonomyVocabulary` external reference code."
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "name_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.taxonomy.dto.v1_0.ParentTaxonomyVocabulary"
                    }
                },
                "description": "The parent category's `TaxonomyVocabulary`, if such a parent category exists.",
                "xml": {
                    "name": "ParentTaxonomyVocabulary"
                }
            },
            "TaxonomyCategory": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "readOnly": true
                    },
                    "availableLanguages": {
                        "type": "array",
                        "description": "A list of languages the category has a translation for.",
                        "readOnly": true,
                        "items": {
                            "type": "string",
                            "description": "A list of languages the category has a translation for."
                        }
                    },
                    "creator": {
                        "$ref": "#/components/schemas/Creator"
                    },
                    "dateCreated": {
                        "type": "string",
                        "description": "The category's creation date.",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "dateModified": {
                        "type": "string",
                        "description": "The category's most recent modification date.",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "description": "The category's text description."
                    },
                    "description_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "externalReferenceCode": {
                        "type": "string",
                        "description": "The category's external reference code"
                    },
                    "id": {
                        "type": "string",
                        "description": "The category's ID.",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The category's name."
                    },
                    "name_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "numberOfTaxonomyCategories": {
                        "type": "integer",
                        "description": "The number of times this category has been used in other assets.",
                        "format": "int32",
                        "readOnly": true
                    },
                    "parentTaxonomyCategory": {
                        "$ref": "#/components/schemas/ParentTaxonomyCategory"
                    },
                    "parentTaxonomyVocabulary": {
                        "$ref": "#/components/schemas/ParentTaxonomyVocabulary"
                    },
                    "siteExternalReferenceCode": {
                        "type": "string",
                        "description": "The external reference code of the site to which this category is scoped.",
                        "readOnly": true
                    },
                    "siteId": {
                        "type": "integer",
                        "description": "The ID of the site to which this category is scoped.",
                        "format": "int64",
                        "readOnly": true
                    },
                    "taxonomyCategoryProperties": {
                        "type": "array",
                        "description": "The category's properties.",
                        "items": {
                            "$ref": "#/components/schemas/TaxonomyCategoryProperty"
                        }
                    },
                    "taxonomyCategoryUsageCount": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "taxonomyVocabularyId": {
                        "type": "integer",
                        "description": "The `TaxonomyVocabulary` id, only if the category does not have a parent category.",
                        "format": "int64"
                    },
                    "viewableBy": {
                        "type": "string",
                        "writeOnly": true,
                        "enum": [
                            "Anyone",
                            "Members",
                            "Owner"
                        ]
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.taxonomy.dto.v1_0.TaxonomyCategory"
                    }
                },
                "description": "Represents a category, which is a hierarchical classification that can be associated with particular asset types. Properties follow the [category](https://schema.org/category) specification.",
                "xml": {
                    "name": "TaxonomyCategory"
                },
                "enum": [
                    "name"
                ]
            },
            "TaxonomyCategoryProperty": {
                "required": [
                    "key"
                ],
                "type": "object",
                "properties": {
                    "externalReferenceCode": {
                        "type": "string",
                        "description": "The taxonomy category's external reference code."
                    },
                    "key": {
                        "type": "string",
                        "description": "The taxonomy category property's key."
                    },
                    "value": {
                        "type": "string",
                        "description": "The taxonomy category property's value."
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.taxonomy.dto.v1_0.TaxonomyCategoryProperty"
                    }
                },
                "description": "Key value pair to associate detailed information with a category.",
                "xml": {
                    "name": "TaxonomyCategoryProperty"
                },
                "enum": [
                    "key"
                ]
            },
            "PageMasterPage": {
                "type": "object",
                "properties": {
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MasterPage"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    }
                }
            },
            "PagePageElement": {
                "type": "object",
                "properties": {
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PageElement"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    }
                }
            },
            "PagePageExperience": {
                "type": "object",
                "properties": {
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PageExperience"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    }
                }
            },
            "PagePageRuleAction": {
                "type": "object",
                "properties": {
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PageRuleAction"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    }
                }
            },
            "PagePageRuleCondition": {
                "type": "object",
                "properties": {
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PageRuleCondition"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    }
                }
            },
            "PagePageRule": {
                "type": "object",
                "properties": {
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PageRule"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    }
                }
            },
            "PagePageSpecification": {
                "type": "object",
                "properties": {
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PageSpecification"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    }
                }
            },
            "ContentPageTemplate": {
                "type": "object",
                "properties": {
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.site.dto.v1_0.ContentPageTemplate"
                    }
                },
                "xml": {
                    "name": "ContentPageTemplate"
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PageTemplate"
                    }
                ]
            },
            "ContentPageTemplateSettings": {
                "type": "object",
                "properties": {
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.site.dto.v1_0.ContentPageTemplateSettings"
                    }
                },
                "xml": {
                    "name": "ContentPageTemplateSettings"
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PageTemplateSettings"
                    }
                ]
            },
            "NavigationMenuSettings": {
                "type": "object",
                "properties": {
                    "target": {
                        "type": "string",
                        "description": "The page's description to be used as summary for search engines."
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.site.dto.v1_0.NavigationMenuSettings"
                    },
                    "targetType": {
                        "type": "string",
                        "description": "The target's type (specific frame or new tab).",
                        "enum": [
                            "SpecificFrame",
                            "NewTab"
                        ]
                    }
                },
                "description": "The page's site navigation menu settings.",
                "xml": {
                    "name": "NavigationMenuSettings"
                }
            },
            "PageTemplate": {
                "type": "object",
                "properties": {
                    "creator": {
                        "$ref": "#/components/schemas/Creator"
                    },
                    "creatorExternalReferenceCode": {
                        "type": "string",
                        "description": "The page's creator external reference code."
                    },
                    "dateCreated": {
                        "type": "string",
                        "description": "The page template's creation date.",
                        "format": "date-time"
                    },
                    "dateModified": {
                        "type": "string",
                        "description": "The last time the page template changed.",
                        "format": "date-time"
                    },
                    "datePublished": {
                        "type": "string",
                        "description": "The last time the page template was published.",
                        "format": "date-time"
                    },
                    "externalReferenceCode": {
                        "type": "string",
                        "description": "The page template's external reference code."
                    },
                    "key": {
                        "type": "string",
                        "description": "The page template's key."
                    },
                    "keywordItemExternalReferences": {
                        "type": "array",
                        "description": "The external references to the associated keywords.",
                        "items": {
                            "$ref": "#/components/schemas/ItemExternalReference"
                        }
                    },
                    "keywords": {
                        "type": "array",
                        "description": "The associated keywords. They are not returned by default. They can be embedded via nestedFields.",
                        "readOnly": true,
                        "items": {
                            "$ref": "#/components/schemas/Keyword"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "The page template's name."
                    },
                    "pageSpecifications": {
                        "type": "array",
                        "description": "The page template's specifications. A page template of type content may contain 0 or 1 page specifications in draft status and 0 or 1 page specifications in published status. A page template of type widget contains only 1 page specification in published status. This field is not returned by default. It can be requested via nestedFields.",
                        "items": {
                            "$ref": "#/components/schemas/PageSpecification"
                        }
                    },
                    "pageTemplateSet": {
                        "$ref": "#/components/schemas/PageTemplateSet"
                    },
                    "pageTemplateSettings": {
                        "$ref": "#/components/schemas/PageTemplateSettings"
                    },
                    "taxonomyCategories": {
                        "type": "array",
                        "description": "The associated categories. They are not returned by default. They can be embedded via nestedFields.",
                        "readOnly": true,
                        "items": {
                            "$ref": "#/components/schemas/TaxonomyCategory"
                        }
                    },
                    "taxonomyCategoryItemExternalReferences": {
                        "type": "array",
                        "description": "The external references to the associated categories.",
                        "items": {
                            "$ref": "#/components/schemas/ItemExternalReference"
                        }
                    },
                    "uuid": {
                        "type": "string",
                        "description": "A valid external identifier to reference this page template."
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.site.dto.v1_0.PageTemplate"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of the page template.",
                        "enum": [
                            "ContentPageTemplate",
                            "WidgetPageTemplate"
                        ]
                    }
                },
                "xml": {
                    "name": "PageTemplate"
                },
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "PageTemplateSet": {
                "type": "object",
                "properties": {
                    "creator": {
                        "$ref": "#/components/schemas/Creator"
                    },
                    "creatorExternalReferenceCode": {
                        "type": "string",
                        "description": "The page template set's creator external reference code."
                    },
                    "dateCreated": {
                        "type": "string",
                        "description": "The page template set's creation date.",
                        "format": "date-time"
                    },
                    "dateModified": {
                        "type": "string",
                        "description": "The last time the page template set changed.",
                        "format": "date-time"
                    },
                    "description": {
                        "type": "string",
                        "description": "The page template set's description."
                    },
                    "externalReferenceCode": {
                        "type": "string",
                        "description": "The page template set's external reference code."
                    },
                    "key": {
                        "type": "string",
                        "description": "The page template set's key."
                    },
                    "name": {
                        "type": "string",
                        "description": "The page template set's name."
                    },
                    "uuid": {
                        "type": "string",
                        "description": "A valid external identifier to reference this page template set."
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.site.dto.v1_0.PageTemplateSet"
                    }
                },
                "xml": {
                    "name": "PageTemplateSet"
                }
            },
            "PageTemplateSettings": {
                "type": "object",
                "properties": {
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.site.dto.v1_0.PageTemplateSettings"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "ContentPageTemplateSettings",
                            "WidgetPageTemplateSettings"
                        ]
                    }
                },
                "description": "The settings of the page template.",
                "xml": {
                    "name": "PageTemplateSettings"
                },
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "WidgetPageTemplate": {
                "type": "object",
                "properties": {
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.site.dto.v1_0.WidgetPageTemplate"
                    },
                    "active": {
                        "type": "boolean",
                        "description": "A flag that indicates whether the widget page template is active."
                    },
                    "description_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "The localized descriptions of the widget page template."
                        },
                        "description": "The localized descriptions of the widget page template."
                    },
                    "friendlyUrlPath_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "The localized relative URLs to the page's rendered content."
                        },
                        "description": "The localized relative URLs to the page's rendered content."
                    },
                    "hiddenFromNavigation": {
                        "type": "boolean",
                        "description": "A flag that indicates whether the page created based on this page template is hidden from navigation."
                    },
                    "name_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "The localized names of the widget page template."
                        },
                        "description": "The localized names of the widget page template."
                    }
                },
                "xml": {
                    "name": "WidgetPageTemplate"
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PageTemplate"
                    }
                ]
            },
            "WidgetPageTemplateSettings": {
                "type": "object",
                "properties": {
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.site.dto.v1_0.WidgetPageTemplateSettings"
                    },
                    "layoutTemplateId": {
                        "type": "string",
                        "description": "The identifier of the layout template."
                    },
                    "navigationMenuSettings": {
                        "$ref": "#/components/schemas/NavigationMenuSettings"
                    }
                },
                "xml": {
                    "name": "WidgetPageTemplateSettings"
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PageTemplateSettings"
                    }
                ]
            },
            "PagePageTemplate": {
                "type": "object",
                "properties": {
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PageTemplate"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    }
                }
            },
            "PagePageTemplateSet": {
                "type": "object",
                "properties": {
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PageTemplateSet"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    }
                }
            },
            "ContentPageSettings": {
                "type": "object",
                "properties": {
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.site.dto.v1_0.ContentPageSettings"
                    }
                },
                "xml": {
                    "name": "ContentPageSettings"
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PageSettings"
                    }
                ]
            },
            "CustomField": {
                "type": "object",
                "properties": {
                    "customValue": {
                        "$ref": "#/components/schemas/CustomValue"
                    },
                    "dataType": {
                        "type": "string",
                        "description": "The field type (e.g., image, text, etc.).",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The field's internal name. This is valid for comparisons and unique in the structured content."
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.site.dto.v1_0.CustomField"
                    }
                },
                "description": "Custom fields associated with the page.",
                "xml": {
                    "name": "CustomField"
                }
            },
            "CustomMetaTag": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string",
                        "description": "The custom meta tag's key."
                    },
                    "value_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "The localized custom meta tag's values."
                        },
                        "description": "The localized custom meta tag's values."
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.site.dto.v1_0.CustomMetaTag"
                    }
                },
                "description": "A list of custom meta tags this page has.",
                "xml": {
                    "name": "CustomMetaTag"
                }
            },
            "CustomValue": {
                "type": "object",
                "properties": {
                    "data_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "The localized field's content values for simple types."
                        },
                        "description": "The localized field's content values for simple types."
                    },
                    "geo": {
                        "$ref": "#/components/schemas/Geo"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.site.dto.v1_0.CustomValue"
                    }
                },
                "description": "The field's value.",
                "xml": {
                    "name": "CustomValue"
                }
            },
            "Geo": {
                "type": "object",
                "properties": {
                    "latitude": {
                        "type": "number",
                        "description": "The latitude of a point in space.",
                        "format": "double"
                    },
                    "longitude": {
                        "type": "number",
                        "description": "The longitude of a point in space.",
                        "format": "double"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.site.dto.v1_0.Geo"
                    }
                },
                "description": "A point determined by latitude and longitude.",
                "xml": {
                    "name": "Geo"
                }
            },
            "PageSettings": {
                "type": "object",
                "properties": {
                    "customMetaTags": {
                        "type": "array",
                        "description": "A list of custom meta tags this page has.",
                        "items": {
                            "$ref": "#/components/schemas/CustomMetaTag"
                        }
                    },
                    "hiddenFromNavigation": {
                        "type": "boolean",
                        "description": "A flag that indicates whether the page is hidden from navigation."
                    },
                    "navigationMenuSettings": {
                        "$ref": "#/components/schemas/NavigationMenuSettings"
                    },
                    "openGraphSettings": {
                        "$ref": "#/components/schemas/OpenGraphSettings"
                    },
                    "seoSettings": {
                        "$ref": "#/components/schemas/SEOSettings"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.site.dto.v1_0.PageSettings"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "ContentPageSettings",
                            "WidgetPageSettings"
                        ]
                    }
                },
                "description": "Settings of the page, such as SEO or OpenGraph.",
                "xml": {
                    "name": "PageSettings"
                },
                "discriminator": {
                    "propertyName": "type"
                }
            },
            "SitePage": {
                "type": "object",
                "properties": {
                    "availableLanguages": {
                        "type": "array",
                        "description": "The list of languages the page has a translation for.",
                        "readOnly": true,
                        "items": {
                            "type": "string",
                            "description": "The list of languages the page has a translation for."
                        }
                    },
                    "creator": {
                        "$ref": "#/components/schemas/Creator"
                    },
                    "creatorExternalReferenceCode": {
                        "type": "string",
                        "description": "The page's creator external reference code."
                    },
                    "customFields": {
                        "type": "array",
                        "description": "Custom fields associated with the page.",
                        "items": {
                            "$ref": "#/components/schemas/CustomField"
                        }
                    },
                    "dateCreated": {
                        "type": "string",
                        "description": "The page's creation date.",
                        "format": "date-time"
                    },
                    "dateModified": {
                        "type": "string",
                        "description": "The last time any field of the page was changed.",
                        "format": "date-time"
                    },
                    "datePublished": {
                        "type": "string",
                        "description": "The page's most recent publication date.",
                        "format": "date-time"
                    },
                    "externalReferenceCode": {
                        "type": "string",
                        "description": "The page's external reference code."
                    },
                    "friendlyUrlHistory": {
                        "$ref": "#/components/schemas/FriendlyUrlHistory"
                    },
                    "friendlyUrlPath_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "The localized relative URLs to the page's rendered content."
                        },
                        "description": "The localized relative URLs to the page's rendered content."
                    },
                    "keywordItemExternalReferences": {
                        "type": "array",
                        "description": "The external references to the associated keywords.",
                        "items": {
                            "$ref": "#/components/schemas/ItemExternalReference"
                        }
                    },
                    "keywords": {
                        "type": "array",
                        "description": "The associated keywords. They are not returned by default. They can be embedded via nestedFields.",
                        "readOnly": true,
                        "items": {
                            "$ref": "#/components/schemas/Keyword"
                        }
                    },
                    "name_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "The localized page's names."
                        },
                        "description": "The localized page's names."
                    },
                    "pageSettings": {
                        "$ref": "#/components/schemas/PageSettings"
                    },
                    "pageSpecifications": {
                        "type": "array",
                        "description": "The page's specifications. A page may contain 0 or 1 page specifications in draft status and 0 or 1 page specifications in published status. This field is not returned by default. It can be requested via nestedFields.",
                        "items": {
                            "$ref": "#/components/schemas/PageSpecification"
                        }
                    },
                    "parentSitePageExternalReferenceCode": {
                        "type": "string",
                        "description": "The parent page external reference code or null if it is a top level page."
                    },
                    "taxonomyCategories": {
                        "type": "array",
                        "description": "The associated categories. They are not returned by default. They can be embedded via nestedFields.",
                        "readOnly": true,
                        "items": {
                            "$ref": "#/components/schemas/TaxonomyCategory"
                        }
                    },
                    "taxonomyCategoryItemExternalReferences": {
                        "type": "array",
                        "description": "The external references to the associated categories.",
                        "items": {
                            "$ref": "#/components/schemas/ItemExternalReference"
                        }
                    },
                    "uuid": {
                        "type": "string",
                        "description": "A valid external identifier to reference this page."
                    },
                    "viewableBy": {
                        "type": "string",
                        "writeOnly": true,
                        "enum": [
                            "Anyone",
                            "Members",
                            "Owner"
                        ]
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.site.dto.v1_0.SitePage"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "ContentPage",
                            "WidgetPage"
                        ]
                    }
                },
                "xml": {
                    "name": "SitePage"
                }
            },
            "WidgetPageSettings": {
                "type": "object",
                "properties": {
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.site.dto.v1_0.WidgetPageSettings"
                    },
                    "customizable": {
                        "type": "boolean",
                        "description": "A flag that indicates whether the widget page is customizable."
                    },
                    "customizableSectionIds": {
                        "type": "array",
                        "description": "The IDs of the customizable sections.",
                        "items": {
                            "type": "string",
                            "description": "The IDs of the customizable sections."
                        }
                    },
                    "inheritChanges": {
                        "type": "boolean",
                        "description": "Whether this widget page will inherit changes made to the associated widget page template."
                    },
                    "layoutTemplateId": {
                        "type": "string",
                        "description": "The ID of the layout template."
                    },
                    "widgetPageTemplateReference": {
                        "$ref": "#/components/schemas/ItemExternalReference"
                    }
                },
                "xml": {
                    "name": "WidgetPageSettings"
                },
                "allOf": [
                    {
                        "$ref": "#/components/schemas/PageSettings"
                    }
                ]
            },
            "PageSitePage": {
                "type": "object",
                "properties": {
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SitePage"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    }
                }
            },
            "UtilityPage": {
                "type": "object",
                "properties": {
                    "creator": {
                        "$ref": "#/components/schemas/Creator"
                    },
                    "creatorExternalReferenceCode": {
                        "type": "string",
                        "description": "The utility page's creator external reference code."
                    },
                    "dateCreated": {
                        "type": "string",
                        "description": "The utility page's creation date.",
                        "format": "date-time"
                    },
                    "dateModified": {
                        "type": "string",
                        "description": "The last time the utility page changed.",
                        "format": "date-time"
                    },
                    "datePublished": {
                        "type": "string",
                        "description": "The last time the utility page changed.",
                        "format": "date-time"
                    },
                    "externalReferenceCode": {
                        "type": "string",
                        "description": "The utility page's external reference code."
                    },
                    "friendlyUrlHistory": {
                        "$ref": "#/components/schemas/FriendlyUrlHistory"
                    },
                    "friendlyUrlPath_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "The localized relative URLs to the utility page's rendered content."
                        },
                        "description": "The localized relative URLs to the utility page's rendered content."
                    },
                    "markedAsDefault": {
                        "type": "boolean",
                        "description": "Specifies if the utility page should be the default for the given type."
                    },
                    "name": {
                        "type": "string",
                        "description": "The utility page's name."
                    },
                    "pageSpecifications": {
                        "type": "array",
                        "description": "The utility page's specifications. A utility page may contain 0 or 1 page specifications in draft status and 0 or 1 page specifications in published status. This field is not returned by default. It can be requested via nestedFields.",
                        "items": {
                            "$ref": "#/components/schemas/PageSpecification"
                        }
                    },
                    "thumbnail": {
                        "$ref": "#/components/schemas/ItemExternalReference"
                    },
                    "utilityPageSettings": {
                        "$ref": "#/components/schemas/UtilityPageSettings"
                    },
                    "uuid": {
                        "type": "string",
                        "description": "A valid external identifier to reference this utility page."
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.site.dto.v1_0.UtilityPage"
                    },
                    "type": {
                        "type": "string",
                        "description": "The utility page's type.",
                        "enum": [
                            "CookiePolicy",
                            "CreateAccount",
                            "Error",
                            "ErrorCode404",
                            "ErrorCode500",
                            "ForgotPassword",
                            "Login",
                            "TermsOfUse"
                        ]
                    }
                },
                "xml": {
                    "name": "UtilityPage"
                }
            },
            "UtilityPageSEOSettings": {
                "type": "object",
                "properties": {
                    "description_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "The localized descriptions of the utility page to be used as summary for search engines."
                        },
                        "description": "The localized descriptions of the utility page to be used as summary for search engines."
                    },
                    "htmlTitle_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "The localized main titles of the utility page to be used by search engines."
                        },
                        "description": "The localized main titles of the utility page to be used by search engines."
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.site.dto.v1_0.UtilityPageSEOSettings"
                    }
                },
                "description": "The utility page's SEO settings.",
                "xml": {
                    "name": "UtilityPageSEOSettings"
                }
            },
            "UtilityPageSettings": {
                "type": "object",
                "properties": {
                    "seoSettings": {
                        "$ref": "#/components/schemas/UtilityPageSEOSettings"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.site.dto.v1_0.UtilityPageSettings"
                    }
                },
                "description": "Settings of the utility page.",
                "xml": {
                    "name": "UtilityPageSettings"
                }
            },
            "PageUtilityPage": {
                "type": "object",
                "properties": {
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UtilityPage"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    }
                }
            },
            "PageWidgetPageWidgetInstance": {
                "type": "object",
                "properties": {
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WidgetPageWidgetInstance"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "description": "JWT Bearer token authentication"
            },
            "basicAuth": {
                "type": "http",
                "scheme": "basic",
                "description": "Basic HTTP authentication"
            },
            "apiKeyHeader": {
                "type": "apiKey",
                "in": "header",
                "name": "X-API-Key",
                "description": "API key request header"
            },
            "apiKeyQuery": {
                "type": "apiKey",
                "in": "query",
                "name": "api_key",
                "description": "API key query parameter"
            },
            "apiKeyCookie": {
                "type": "apiKey",
                "in": "cookie",
                "name": "api_key",
                "description": "API key browser cookie"
            },
            "oAuth2": {
                "type": "oauth2",
                "description": "OAuth 2.0 authentication",
                "flows": {
                    "authorizationCode": {
                        "authorizationUrl": "https://galaxy.scalar.com/oauth/authorize",
                        "tokenUrl": "https://galaxy.scalar.com/oauth/token",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    },
                    "clientCredentials": {
                        "tokenUrl": "https://galaxy.scalar.com/oauth/token",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    },
                    "implicit": {
                        "authorizationUrl": "https://galaxy.scalar.com/oauth/authorize",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    },
                    "password": {
                        "tokenUrl": "https://galaxy.scalar.com/oauth/token",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    }
                }
            },
            "openIdConnect": {
                "type": "openIdConnect",
                "openIdConnectUrl": "https://galaxy.scalar.com/.well-known/openid-configuration",
                "description": "OpenID Connect Authentication"
            }
        }
    }
}