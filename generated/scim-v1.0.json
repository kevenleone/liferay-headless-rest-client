{
    "openapi": "3.0.1",
    "info": {
        "title": "System for Cross-domain Identity Management",
        "description": "#### TypeScript SDK Code Sample\n\n```typescript\nimport { createClient } from 'liferay-headless-rest-client';\nimport { getV2GroupById } from 'liferay-headless-rest-client/scim-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getV2GroupById({\n        client,\n        path: {\n           id: \"6022\",\n        },\n    });\n\n    console.log(data);\n}\n```\n#### Java installation:\n\nLiferay SCIM endpoints. A Java client JAR is available for use with the group ID 'com.liferay', artifact ID 'com.liferay.scim.rest.client', and version '1.0.13'.\n\n```gradle\nimplementation group: \"com.liferay\", name: \"com.liferay.scim.rest.client\", version: \"latest\"\n```\n\nReference: https://mvnrepository.com/artifact/com.liferay/com.liferay.scim.rest.client/latest",
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "v1.0"
    },
    "servers": [
        {
            "url": "http://localhost:8080"
        }
    ],
    "paths": {
        "/o/scim/v1.0/v2/Groups/{id}": {
            "get": {
                "tags": [
                    "Group"
                ],
                "description": "Retrieves a group.",
                "operationId": "getV2GroupById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "excludedAttributes",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/scim+json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getV2GroupById } from 'liferay-headless-rest-client/scim-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getV2GroupById({\n        client,\n        path: {\n           id: \"1825\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/scim/v1.0/v2/Groups/{id}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "put": {
                "tags": [
                    "Group"
                ],
                "description": "Updates a group.",
                "operationId": "putV2Group",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/scim+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/scim+json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putV2Group } from 'liferay-headless-rest-client/scim-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putV2Group({\n        client,\n        path: {\n           id: \"5957\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/scim/v1.0/v2/Groups/{id}', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Group"
                ],
                "description": "Deletes a group.",
                "operationId": "deleteV2Group",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "*/*": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteV2Group } from 'liferay-headless-rest-client/scim-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteV2Group({\n        client,\n        path: {\n           id: \"2697\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/scim/v1.0/v2/Groups/{id}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Group"
                ],
                "description": "Updates a group.",
                "operationId": "patchV2Group",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/scim+json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchOp"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "*/*": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchV2Group } from 'liferay-headless-rest-client/scim-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchV2Group({\n        client,\n        path: {\n           id: \"3173\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/scim/v1.0/v2/Groups/{id}', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/scim/v1.0/v2/Groups": {
            "get": {
                "tags": [
                    "Group"
                ],
                "description": "Lists groups.",
                "operationId": "getV2Groups",
                "parameters": [
                    {
                        "name": "count",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "excludedAttributes",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "startIndex",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/scim+json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getV2Groups } from 'liferay-headless-rest-client/scim-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getV2Groups({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/scim/v1.0/v2/Groups', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "post": {
                "tags": [
                    "Group"
                ],
                "description": "Creates a group.",
                "operationId": "postV2Group",
                "requestBody": {
                    "content": {
                        "application/scim+json": {
                            "schema": {
                                "$ref": "#/components/schemas/Group"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/scim+json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postV2Group } from 'liferay-headless-rest-client/scim-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postV2Group({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/scim/v1.0/v2/Groups', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/scim/v1.0/v2/Groups/.search": {
            "post": {
                "tags": [
                    "Group"
                ],
                "description": "Query groups.",
                "operationId": "postV2GroupSearch",
                "requestBody": {
                    "content": {
                        "application/scim+json": {
                            "schema": {
                                "$ref": "#/components/schemas/QueryAttributes"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/scim+json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postV2GroupSearch } from 'liferay-headless-rest-client/scim-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postV2GroupSearch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/scim/v1.0/v2/Groups/.search', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/scim/v1.0/v2/ResourceTypes/{id}": {
            "get": {
                "tags": [
                    "ResourceTypes"
                ],
                "operationId": "getV2ResourceTypeById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/scim+json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getV2ResourceTypeById } from 'liferay-headless-rest-client/scim-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getV2ResourceTypeById({\n        client,\n        path: {\n           id: \"8551\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/scim/v1.0/v2/ResourceTypes/{id}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/scim/v1.0/v2/ResourceTypes": {
            "get": {
                "tags": [
                    "ResourceTypes"
                ],
                "description": "To discover the types of resources available on a SCIM service provider.",
                "operationId": "getV2ResourceTypes",
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/scim+json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getV2ResourceTypes } from 'liferay-headless-rest-client/scim-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getV2ResourceTypes({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/scim/v1.0/v2/ResourceTypes', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/scim/v1.0/v2/Schemas/{id}": {
            "get": {
                "tags": [
                    "Schema"
                ],
                "operationId": "getV2SchemaById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/scim+json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getV2SchemaById } from 'liferay-headless-rest-client/scim-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getV2SchemaById({\n        client,\n        path: {\n           id: \"6852\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/scim/v1.0/v2/Schemas/{id}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/scim/v1.0/v2/Schemas": {
            "get": {
                "tags": [
                    "Schema"
                ],
                "description": "Lists schemas.",
                "operationId": "getV2Schemas",
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/scim+json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getV2Schemas } from 'liferay-headless-rest-client/scim-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getV2Schemas({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/scim/v1.0/v2/Schemas', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/scim/v1.0/v2/ServiceProviderConfig": {
            "get": {
                "tags": [
                    "ServiceProviderConfig"
                ],
                "description": "Gives serviceProviderConfig info.",
                "operationId": "getV2ServiceProviderConfig",
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/scim+json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getV2ServiceProviderConfig } from 'liferay-headless-rest-client/scim-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getV2ServiceProviderConfig({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/scim/v1.0/v2/ServiceProviderConfig', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/scim/v1.0/v2/Users/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "description": "Retrieves a user.",
                "operationId": "getV2UserById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/scim+json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getV2UserById } from 'liferay-headless-rest-client/scim-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getV2UserById({\n        client,\n        path: {\n           id: \"8389\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/scim/v1.0/v2/Users/{id}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "put": {
                "tags": [
                    "User"
                ],
                "description": "Updates a user.",
                "operationId": "putV2User",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/scim+json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/scim+json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putV2User } from 'liferay-headless-rest-client/scim-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putV2User({\n        client,\n        path: {\n           id: \"1014\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/scim/v1.0/v2/Users/{id}', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "description": "Deletes a user.",
                "operationId": "deleteV2User",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "*/*": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteV2User } from 'liferay-headless-rest-client/scim-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteV2User({\n        client,\n        path: {\n           id: \"1115\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/scim/v1.0/v2/Users/{id}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "User"
                ],
                "description": "Updates a user.",
                "operationId": "patchV2User",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/scim+json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchOp"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/scim+json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchV2User } from 'liferay-headless-rest-client/scim-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchV2User({\n        client,\n        path: {\n           id: \"8726\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/scim/v1.0/v2/Users/{id}', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/scim/v1.0/v2/Users": {
            "get": {
                "tags": [
                    "User"
                ],
                "description": "Lists users.",
                "operationId": "getV2Users",
                "parameters": [
                    {
                        "name": "count",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "startIndex",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/scim+json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getV2Users } from 'liferay-headless-rest-client/scim-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getV2Users({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/scim/v1.0/v2/Users', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "post": {
                "tags": [
                    "User"
                ],
                "description": "Creates a user.",
                "operationId": "postV2User",
                "requestBody": {
                    "content": {
                        "application/scim+json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/scim+json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postV2User } from 'liferay-headless-rest-client/scim-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postV2User({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/scim/v1.0/v2/Users', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/scim/v1.0/v2/Users/.search": {
            "post": {
                "tags": [
                    "User"
                ],
                "description": "Query users.",
                "operationId": "postV2UserSearch",
                "requestBody": {
                    "content": {
                        "application/scim+json": {
                            "schema": {
                                "$ref": "#/components/schemas/QueryAttributes"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/scim+json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postV2UserSearch } from 'liferay-headless-rest-client/scim-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postV2UserSearch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/scim/v1.0/v2/Users/.search', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Operation": {
                "type": "object",
                "properties": {
                    "op": {
                        "type": "string",
                        "description": "The method that should be used in the operation. Possible values are add, remove and replace."
                    },
                    "path": {
                        "type": "string",
                        "description": "The path to the specify attribute/sub-attribute that should be updated."
                    },
                    "value": {
                        "type": "object",
                        "description": "The value that should be updated."
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.scim.rest.dto.v1_0.Operation"
                    }
                },
                "xml": {
                    "name": "Operation"
                },
                "x-filterable": []
            },
            "PatchOp": {
                "type": "object",
                "properties": {
                    "Operations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Operation"
                        }
                    },
                    "schemas": {
                        "type": "array",
                        "description": "The schema associated to this operation.",
                        "items": {
                            "type": "string",
                            "description": "The schema associated to this operation."
                        }
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.scim.rest.dto.v1_0.PatchOp"
                    }
                },
                "xml": {
                    "name": "PatchOp"
                },
                "x-filterable": []
            },
            "Group": {
                "type": "object",
                "properties": {
                    "displayName": {
                        "type": "string",
                        "description": "A human-readable name for the Group."
                    },
                    "externalId": {
                        "type": "string",
                        "description": "A String that is an identifier for the resource as defined by the provisioning client."
                    },
                    "id": {
                        "type": "string",
                        "description": "A unique identifier for a SCIM resource as defined by the service provider.",
                        "readOnly": true
                    },
                    "members": {
                        "type": "array",
                        "description": "A list of members of the Group.",
                        "items": {
                            "$ref": "#/components/schemas/MultiValuedAttribute"
                        }
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    },
                    "schemas": {
                        "type": "array",
                        "description": "A multi-valued list of strings indicating the namespaces of the SCIM schemas that define the attributes present in the current JSON structure.",
                        "items": {
                            "type": "string",
                            "description": "A multi-valued list of strings indicating the namespaces of the SCIM schemas that define the attributes present in the current JSON structure."
                        }
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.scim.rest.dto.v1_0.Group"
                    }
                },
                "xml": {
                    "name": "Group"
                },
                "x-filterable": []
            },
            "Meta": {
                "type": "object",
                "properties": {
                    "created": {
                        "type": "string",
                        "description": "The \"DateTime\" that the resource was added to the service provider.",
                        "format": "date-time"
                    },
                    "lastModified": {
                        "type": "string",
                        "description": "The most recent DateTime that the details of this resource were updated at the service provider.",
                        "format": "date-time"
                    },
                    "location": {
                        "type": "string",
                        "description": "The URI of the resource being returned."
                    },
                    "resourceType": {
                        "type": "string",
                        "description": "The name of the resource type of the resource."
                    },
                    "version": {
                        "type": "string",
                        "description": "The version of the resource being returned."
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.scim.rest.dto.v1_0.Meta"
                    }
                },
                "xml": {
                    "name": "Meta"
                },
                "x-filterable": []
            },
            "MultiValuedAttribute": {
                "type": "object",
                "properties": {
                    "get$ref": {
                        "type": "string",
                        "description": "The reference URI of a target resource, if the attribute is a reference."
                    },
                    "display": {
                        "type": "string",
                        "description": "A human-readable name, primarily used for display purposes and having a mutability of \"immutable\"."
                    },
                    "primary": {
                        "type": "boolean",
                        "description": "Boolean value indicating the 'primary' or preferred attribute value for this attribute, e.g., the preferred mailing address or the primary email address."
                    },
                    "type": {
                        "type": "string",
                        "description": "A label indicating the attribute's function, e.g., \"work\" or \"home\"."
                    },
                    "value": {
                        "type": "string",
                        "description": "The attribute's significant value, e.g., email address, phone number."
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.scim.rest.dto.v1_0.MultiValuedAttribute"
                    }
                },
                "description": "A list of certificates associated with the resource (e.g., a User).",
                "xml": {
                    "name": "MultiValuedAttribute"
                },
                "x-filterable": []
            },
            "QueryAttributes": {
                "type": "object",
                "properties": {
                    "attributes": {
                        "type": "array",
                        "description": "A multi-valued list of strings indicating the names of resource attributes to return in the response, overriding the set of attributes that would be returned by default.",
                        "items": {
                            "type": "string",
                            "description": "A multi-valued list of strings indicating the names of resource attributes to return in the response, overriding the set of attributes that would be returned by default."
                        }
                    },
                    "count": {
                        "type": "integer",
                        "description": "An integer indicating the desired maximum number of query results per page.",
                        "format": "int32"
                    },
                    "excludedAttributes": {
                        "type": "array",
                        "description": "A multi-valued list of strings indicating the names of resource attributes to be removed from the default set of attributes to return.",
                        "items": {
                            "type": "string",
                            "description": "A multi-valued list of strings indicating the names of resource attributes to be removed from the default set of attributes to return."
                        }
                    },
                    "filter": {
                        "type": "string",
                        "description": "The filter string used to request a subset of resources."
                    },
                    "sortBy": {
                        "type": "string",
                        "description": "A string indicating the attribute whose value SHALL be used to order the returned responses."
                    },
                    "sortOrder": {
                        "type": "string",
                        "description": "A string indicating the order in which the \"sortBy\" parameter is applied."
                    },
                    "startIndex": {
                        "type": "integer",
                        "description": "An integer indicating the 1-based index of the first query result.",
                        "format": "int32"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.scim.rest.dto.v1_0.QueryAttributes"
                    }
                },
                "xml": {
                    "name": "QueryAttributes"
                },
                "x-filterable": []
            },
            "Name": {
                "type": "object",
                "properties": {
                    "familyName": {
                        "type": "string"
                    },
                    "formatted": {
                        "type": "string"
                    },
                    "givenName": {
                        "type": "string"
                    },
                    "honorificPrefix": {
                        "type": "string"
                    },
                    "honorificSuffix": {
                        "type": "string"
                    },
                    "middleName": {
                        "type": "string"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.scim.rest.dto.v1_0.Name"
                    }
                },
                "description": "The components of the user's name.",
                "xml": {
                    "name": "Name"
                },
                "x-filterable": []
            },
            "User": {
                "type": "object",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "A Boolean value indicating the user's administrative status."
                    },
                    "addresses": {
                        "type": "array",
                        "description": "A physical mailing address for this user.",
                        "items": {
                            "type": "object",
                            "description": "A physical mailing address for this user."
                        }
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The name of the user, suitable for display to end-users."
                    },
                    "emails": {
                        "type": "array",
                        "description": "Email addresses for the User.",
                        "items": {
                            "$ref": "#/components/schemas/MultiValuedAttribute"
                        }
                    },
                    "entitlements": {
                        "type": "array",
                        "description": "A list of entitlements for the user that represent a thing the user has.",
                        "items": {
                            "$ref": "#/components/schemas/MultiValuedAttribute"
                        }
                    },
                    "externalId": {
                        "type": "string",
                        "description": "A String that is an identifier for the resource as defined by the provisioning client."
                    },
                    "groups": {
                        "type": "array",
                        "description": "A list of groups to which the user belongs, either through direct membership, through nested groups, or dynamically calculated.",
                        "items": {
                            "$ref": "#/components/schemas/MultiValuedAttribute"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "A unique identifier for a SCIM resource as defined by the service provider.",
                        "readOnly": true
                    },
                    "ims": {
                        "type": "array",
                        "description": "Instant messaging address for the user.",
                        "items": {
                            "$ref": "#/components/schemas/MultiValuedAttribute"
                        }
                    },
                    "locale": {
                        "type": "string",
                        "description": "Used to indicate the User's default location for purposes of localizing such items as currency, date time format, or numerical representations."
                    },
                    "meta": {
                        "$ref": "#/components/schemas/Meta"
                    },
                    "name": {
                        "$ref": "#/components/schemas/Name"
                    },
                    "nickName": {
                        "type": "string",
                        "description": "The casual way to address the user in real life, e.g., \"Bob\" or \"Bobby\" instead of \"Robert\"."
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "phoneNumbers": {
                        "type": "array",
                        "description": "Phone numbers for the user.",
                        "items": {
                            "$ref": "#/components/schemas/MultiValuedAttribute"
                        }
                    },
                    "photos": {
                        "type": "array",
                        "description": "A URI that is a uniform resource locator that points to a resource location representing the user's image.",
                        "items": {
                            "$ref": "#/components/schemas/MultiValuedAttribute"
                        }
                    },
                    "preferredLanguage": {
                        "type": "string",
                        "description": "Indicates the user's preferred written or spoken languages and is generally used for selecting a localized user interface."
                    },
                    "profileUrl": {
                        "type": "string",
                        "description": "A URI that is a uniform resource locator and that points to a location representing the user's online profile (e.g., a web page)."
                    },
                    "roles": {
                        "type": "array",
                        "description": "A list of roles for the user that collectively represent who the user is, e.g., \"Student\", \"Faculty\".",
                        "items": {
                            "$ref": "#/components/schemas/MultiValuedAttribute"
                        }
                    },
                    "schemas": {
                        "type": "array",
                        "description": "A multi-valued list of strings indicating the namespaces of the SCIM schemas that define the attributes present in the current JSON structure.",
                        "items": {
                            "type": "string",
                            "description": "A multi-valued list of strings indicating the namespaces of the SCIM schemas that define the attributes present in the current JSON structure."
                        }
                    },
                    "timezone": {
                        "type": "string",
                        "description": "The User's time zone, in IANA Time Zone database format, also known as the \"Olson\" time zone database format (e.g., \"America/Los_Angeles\")."
                    },
                    "title": {
                        "type": "string",
                        "description": "The user's title, such as \"Vice President\"."
                    },
                    "userName": {
                        "type": "string",
                        "description": "A service provider's unique identifier for the user, typically used by the user to directly authenticate to the service provider."
                    },
                    "userType": {
                        "type": "string",
                        "description": "Used to identify the relationship between the organization and the user."
                    },
                    "x509Certificates": {
                        "type": "array",
                        "description": "A list of certificates associated with the resource (e.g., a User).",
                        "items": {
                            "$ref": "#/components/schemas/MultiValuedAttribute"
                        }
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.scim.rest.dto.v1_0.User"
                    },
                    "urn:ietf:params:scim:schemas:extension:liferay:2.0:User": {
                        "$ref": "#/components/schemas/UserSchemaExtension"
                    }
                },
                "xml": {
                    "name": "User"
                },
                "x-filterable": []
            },
            "UserSchemaExtension": {
                "type": "object",
                "properties": {
                    "birthday": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "male": {
                        "type": "boolean"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.scim.rest.dto.v1_0.UserSchemaExtension"
                    }
                },
                "description": "The components of the Liferay's User Schema Extension.",
                "xml": {
                    "name": "UserSchemaExtension"
                },
                "x-filterable": []
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "description": "JWT Bearer token authentication"
            },
            "basicAuth": {
                "type": "http",
                "scheme": "basic",
                "description": "Basic HTTP authentication"
            },
            "apiKeyHeader": {
                "type": "apiKey",
                "in": "header",
                "name": "X-API-Key",
                "description": "API key request header"
            },
            "apiKeyQuery": {
                "type": "apiKey",
                "in": "query",
                "name": "api_key",
                "description": "API key query parameter"
            },
            "apiKeyCookie": {
                "type": "apiKey",
                "in": "cookie",
                "name": "api_key",
                "description": "API key browser cookie"
            },
            "oAuth2": {
                "type": "oauth2",
                "description": "OAuth 2.0 authentication",
                "flows": {
                    "authorizationCode": {
                        "authorizationUrl": "https://galaxy.scalar.com/oauth/authorize",
                        "tokenUrl": "https://galaxy.scalar.com/oauth/token",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    },
                    "clientCredentials": {
                        "tokenUrl": "https://galaxy.scalar.com/oauth/token",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    },
                    "implicit": {
                        "authorizationUrl": "https://galaxy.scalar.com/oauth/authorize",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    },
                    "password": {
                        "tokenUrl": "https://galaxy.scalar.com/oauth/token",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    }
                }
            },
            "openIdConnect": {
                "type": "openIdConnect",
                "openIdConnectUrl": "https://galaxy.scalar.com/.well-known/openid-configuration",
                "description": "OpenID Connect Authentication"
            }
        }
    }
}