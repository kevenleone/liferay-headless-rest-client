{
    "openapi": "3.0.1",
    "info": {
        "title": "Liferay Commerce Admin Site Setting API",
        "description": "Liferay Commerce Admin Site Setting API. A Java client JAR is available for use with the group ID 'com.liferay', artifact ID 'com.liferay.headless.commerce.admin.site.setting.client', and version '4.0.40'.",
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "v1.0"
    },
    "servers": [
        {
            "url": "http://localhost:8080"
        }
    ],
    "paths": {
        "/o/headless-commerce-admin-site-setting/v1.0/availabilityEstimate/{id}": {
            "get": {
                "tags": [
                    "AvailabilityEstimate"
                ],
                "operationId": "getAvailabilityEstimate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AvailabilityEstimate"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/AvailabilityEstimate"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getAvailabilityEstimate } from 'liferay-headless-rest-client/headless-commerce-admin-site-setting-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getAvailabilityEstimate({\n        client,\n        path: {\n           id: \"9038\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-site-setting/v1.0/availabilityEstimate/{id}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "put": {
                "tags": [
                    "AvailabilityEstimate"
                ],
                "operationId": "putAvailabilityEstimate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AvailabilityEstimate"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/AvailabilityEstimate"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putAvailabilityEstimate } from 'liferay-headless-rest-client/headless-commerce-admin-site-setting-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putAvailabilityEstimate({\n        client,\n        path: {\n           id: \"234\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-site-setting/v1.0/availabilityEstimate/{id}', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "AvailabilityEstimate"
                ],
                "operationId": "deleteAvailabilityEstimate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteAvailabilityEstimate } from 'liferay-headless-rest-client/headless-commerce-admin-site-setting-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteAvailabilityEstimate({\n        client,\n        path: {\n           id: \"569\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-site-setting/v1.0/availabilityEstimate/{id}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-site-setting/v1.0/availabilityEstimate/batch": {
            "put": {
                "tags": [
                    "AvailabilityEstimate"
                ],
                "operationId": "putAvailabilityEstimateBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putAvailabilityEstimateBatch } from 'liferay-headless-rest-client/headless-commerce-admin-site-setting-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putAvailabilityEstimateBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-site-setting/v1.0/availabilityEstimate/batch', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "AvailabilityEstimate"
                ],
                "operationId": "deleteAvailabilityEstimateBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteAvailabilityEstimateBatch } from 'liferay-headless-rest-client/headless-commerce-admin-site-setting-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteAvailabilityEstimateBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-site-setting/v1.0/availabilityEstimate/batch', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-site-setting/v1.0/commerceAdminSiteSetting/{groupId}/availabilityEstimate": {
            "get": {
                "tags": [
                    "AvailabilityEstimate"
                ],
                "operationId": "getCommerceAdminSiteSettingGroupAvailabilityEstimatePage",
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageAvailabilityEstimate"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageAvailabilityEstimate"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getCommerceAdminSiteSettingGroupAvailabilityEstimatePage } from 'liferay-headless-rest-client/headless-commerce-admin-site-setting-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getCommerceAdminSiteSettingGroupAvailabilityEstimatePage({\n        client,\n        path: {\n           groupId: \"7228\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-site-setting/v1.0/commerceAdminSiteSetting/{groupId}/availabilityEstimate', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "post": {
                "tags": [
                    "AvailabilityEstimate"
                ],
                "operationId": "postCommerceAdminSiteSettingGroupAvailabilityEstimate",
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AvailabilityEstimate"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/AvailabilityEstimate"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AvailabilityEstimate"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/AvailabilityEstimate"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postCommerceAdminSiteSettingGroupAvailabilityEstimate } from 'liferay-headless-rest-client/headless-commerce-admin-site-setting-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postCommerceAdminSiteSettingGroupAvailabilityEstimate({\n        client,\n        path: {\n           groupId: \"615\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-site-setting/v1.0/commerceAdminSiteSetting/{groupId}/availabilityEstimate', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-site-setting/v1.0/measurement-units/{id}": {
            "get": {
                "tags": [
                    "MeasurementUnit"
                ],
                "operationId": "getMeasurementUnit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeasurementUnit"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeasurementUnit"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getMeasurementUnit } from 'liferay-headless-rest-client/headless-commerce-admin-site-setting-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getMeasurementUnit({\n        client,\n        path: {\n           id: \"5703\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-site-setting/v1.0/measurement-units/{id}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "MeasurementUnit"
                ],
                "operationId": "deleteMeasurementUnit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteMeasurementUnit } from 'liferay-headless-rest-client/headless-commerce-admin-site-setting-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteMeasurementUnit({\n        client,\n        path: {\n           id: \"8455\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-site-setting/v1.0/measurement-units/{id}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "MeasurementUnit"
                ],
                "operationId": "patchMeasurementUnit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MeasurementUnit"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/MeasurementUnit"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchMeasurementUnit } from 'liferay-headless-rest-client/headless-commerce-admin-site-setting-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchMeasurementUnit({\n        client,\n        path: {\n           id: \"97\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-site-setting/v1.0/measurement-units/{id}', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-site-setting/v1.0/measurement-units/batch": {
            "post": {
                "tags": [
                    "MeasurementUnit"
                ],
                "operationId": "postMeasurementUnitBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postMeasurementUnitBatch } from 'liferay-headless-rest-client/headless-commerce-admin-site-setting-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postMeasurementUnitBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-site-setting/v1.0/measurement-units/batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "MeasurementUnit"
                ],
                "operationId": "deleteMeasurementUnitBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteMeasurementUnitBatch } from 'liferay-headless-rest-client/headless-commerce-admin-site-setting-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteMeasurementUnitBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-site-setting/v1.0/measurement-units/batch', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-site-setting/v1.0/measurement-units/by-externalReferenceCode/{externalReferenceCode}": {
            "get": {
                "tags": [
                    "MeasurementUnit"
                ],
                "operationId": "getMeasurementUnitByExternalReferenceCode",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeasurementUnit"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeasurementUnit"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getMeasurementUnitByExternalReferenceCode } from 'liferay-headless-rest-client/headless-commerce-admin-site-setting-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getMeasurementUnitByExternalReferenceCode({\n        client,\n        path: {\n           externalReferenceCode: \"6962\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-site-setting/v1.0/measurement-units/by-externalReferenceCode/{externalReferenceCode}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "put": {
                "tags": [
                    "MeasurementUnit"
                ],
                "operationId": "putMeasurementUnitByExternalReferenceCode",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MeasurementUnit"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/MeasurementUnit"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeasurementUnit"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeasurementUnit"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putMeasurementUnitByExternalReferenceCode } from 'liferay-headless-rest-client/headless-commerce-admin-site-setting-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putMeasurementUnitByExternalReferenceCode({\n        client,\n        path: {\n           externalReferenceCode: \"5719\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-site-setting/v1.0/measurement-units/by-externalReferenceCode/{externalReferenceCode}', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "MeasurementUnit"
                ],
                "operationId": "deleteMeasurementUnitByExternalReferenceCode",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteMeasurementUnitByExternalReferenceCode } from 'liferay-headless-rest-client/headless-commerce-admin-site-setting-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteMeasurementUnitByExternalReferenceCode({\n        client,\n        path: {\n           externalReferenceCode: \"4512\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-site-setting/v1.0/measurement-units/by-externalReferenceCode/{externalReferenceCode}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "MeasurementUnit"
                ],
                "operationId": "patchMeasurementUnitByExternalReferenceCode",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MeasurementUnit"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/MeasurementUnit"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchMeasurementUnitByExternalReferenceCode } from 'liferay-headless-rest-client/headless-commerce-admin-site-setting-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchMeasurementUnitByExternalReferenceCode({\n        client,\n        path: {\n           externalReferenceCode: \"4429\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-site-setting/v1.0/measurement-units/by-externalReferenceCode/{externalReferenceCode}', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-site-setting/v1.0/measurement-units/by-key/{key}": {
            "get": {
                "tags": [
                    "MeasurementUnit"
                ],
                "operationId": "getMeasurementUnitByKey",
                "parameters": [
                    {
                        "name": "key",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeasurementUnit"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeasurementUnit"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getMeasurementUnitByKey } from 'liferay-headless-rest-client/headless-commerce-admin-site-setting-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getMeasurementUnitByKey({\n        client,\n        path: {\n           key: \"6754\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-site-setting/v1.0/measurement-units/by-key/{key}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "MeasurementUnit"
                ],
                "operationId": "deleteMeasurementUnitByKey",
                "parameters": [
                    {
                        "name": "key",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteMeasurementUnitByKey } from 'liferay-headless-rest-client/headless-commerce-admin-site-setting-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteMeasurementUnitByKey({\n        client,\n        path: {\n           key: \"2997\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-site-setting/v1.0/measurement-units/by-key/{key}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "MeasurementUnit"
                ],
                "operationId": "patchMeasurementUnitByKey",
                "parameters": [
                    {
                        "name": "key",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MeasurementUnit"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/MeasurementUnit"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchMeasurementUnitByKey } from 'liferay-headless-rest-client/headless-commerce-admin-site-setting-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchMeasurementUnitByKey({\n        client,\n        path: {\n           key: \"8888\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-site-setting/v1.0/measurement-units/by-key/{key}', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-site-setting/v1.0/measurement-units/by-type/{measurementUnitType}": {
            "get": {
                "tags": [
                    "MeasurementUnit"
                ],
                "operationId": "getMeasurementUnitsByType",
                "parameters": [
                    {
                        "name": "measurementUnitType",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageMeasurementUnit"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageMeasurementUnit"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getMeasurementUnitsByType } from 'liferay-headless-rest-client/headless-commerce-admin-site-setting-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getMeasurementUnitsByType({\n        client,\n        path: {\n           measurementUnitType: \"2662\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-site-setting/v1.0/measurement-units/by-type/{measurementUnitType}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-site-setting/v1.0/measurement-units": {
            "get": {
                "tags": [
                    "MeasurementUnit"
                ],
                "operationId": "getMeasurementUnitsPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageMeasurementUnit"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageMeasurementUnit"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getMeasurementUnitsPage } from 'liferay-headless-rest-client/headless-commerce-admin-site-setting-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getMeasurementUnitsPage({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-site-setting/v1.0/measurement-units', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "post": {
                "tags": [
                    "MeasurementUnit"
                ],
                "operationId": "postMeasurementUnit",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MeasurementUnit"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/MeasurementUnit"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeasurementUnit"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/MeasurementUnit"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postMeasurementUnit } from 'liferay-headless-rest-client/headless-commerce-admin-site-setting-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postMeasurementUnit({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-site-setting/v1.0/measurement-units', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-site-setting/v1.0/measurement-units/export-batch": {
            "post": {
                "tags": [
                    "MeasurementUnit"
                ],
                "operationId": "postMeasurementUnitsPageExportBatch",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contentType",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fieldNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postMeasurementUnitsPageExportBatch } from 'liferay-headless-rest-client/headless-commerce-admin-site-setting-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postMeasurementUnitsPageExportBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-site-setting/v1.0/measurement-units/export-batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-site-setting/v1.0/taxCategory/{id}": {
            "get": {
                "tags": [
                    "TaxCategory"
                ],
                "operationId": "getTaxCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxCategory"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxCategory"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getTaxCategory } from 'liferay-headless-rest-client/headless-commerce-admin-site-setting-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getTaxCategory({\n        client,\n        path: {\n           id: \"6323\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-site-setting/v1.0/taxCategory/{id}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "put": {
                "tags": [
                    "TaxCategory"
                ],
                "operationId": "putTaxCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxCategory"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxCategory"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putTaxCategory } from 'liferay-headless-rest-client/headless-commerce-admin-site-setting-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putTaxCategory({\n        client,\n        path: {\n           id: \"1163\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-site-setting/v1.0/taxCategory/{id}', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "TaxCategory"
                ],
                "operationId": "deleteTaxCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteTaxCategory } from 'liferay-headless-rest-client/headless-commerce-admin-site-setting-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteTaxCategory({\n        client,\n        path: {\n           id: \"4234\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-site-setting/v1.0/taxCategory/{id}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-site-setting/v1.0/taxCategory/batch": {
            "put": {
                "tags": [
                    "TaxCategory"
                ],
                "operationId": "putTaxCategoryBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putTaxCategoryBatch } from 'liferay-headless-rest-client/headless-commerce-admin-site-setting-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putTaxCategoryBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-site-setting/v1.0/taxCategory/batch', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "TaxCategory"
                ],
                "operationId": "deleteTaxCategoryBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteTaxCategoryBatch } from 'liferay-headless-rest-client/headless-commerce-admin-site-setting-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteTaxCategoryBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-site-setting/v1.0/taxCategory/batch', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-site-setting/v1.0/commerceAdminSiteSetting/{groupId}/taxCategory": {
            "get": {
                "tags": [
                    "TaxCategory"
                ],
                "operationId": "getCommerceAdminSiteSettingGroupTaxCategoryPage",
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageTaxCategory"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageTaxCategory"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getCommerceAdminSiteSettingGroupTaxCategoryPage } from 'liferay-headless-rest-client/headless-commerce-admin-site-setting-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getCommerceAdminSiteSettingGroupTaxCategoryPage({\n        client,\n        path: {\n           groupId: \"4960\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-site-setting/v1.0/commerceAdminSiteSetting/{groupId}/taxCategory', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "post": {
                "tags": [
                    "TaxCategory"
                ],
                "operationId": "postCommerceAdminSiteSettingGroupTaxCategory",
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxCategory"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/TaxCategory"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxCategory"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxCategory"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postCommerceAdminSiteSettingGroupTaxCategory } from 'liferay-headless-rest-client/headless-commerce-admin-site-setting-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postCommerceAdminSiteSettingGroupTaxCategory({\n        client,\n        path: {\n           groupId: \"8836\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-site-setting/v1.0/commerceAdminSiteSetting/{groupId}/taxCategory', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-site-setting/v1.0/warehouse/{id}": {
            "get": {
                "tags": [
                    "Warehouse"
                ],
                "operationId": "getWarehouse",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Warehouse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Warehouse"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getWarehouse } from 'liferay-headless-rest-client/headless-commerce-admin-site-setting-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getWarehouse({\n        client,\n        path: {\n           id: \"1552\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-site-setting/v1.0/warehouse/{id}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "put": {
                "tags": [
                    "Warehouse"
                ],
                "operationId": "putWarehouse",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Warehouse"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/Warehouse"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putWarehouse } from 'liferay-headless-rest-client/headless-commerce-admin-site-setting-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putWarehouse({\n        client,\n        path: {\n           id: \"8789\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-site-setting/v1.0/warehouse/{id}', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Warehouse"
                ],
                "operationId": "deleteWarehouse",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteWarehouse } from 'liferay-headless-rest-client/headless-commerce-admin-site-setting-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteWarehouse({\n        client,\n        path: {\n           id: \"3374\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-site-setting/v1.0/warehouse/{id}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-site-setting/v1.0/warehouse/batch": {
            "put": {
                "tags": [
                    "Warehouse"
                ],
                "operationId": "putWarehouseBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putWarehouseBatch } from 'liferay-headless-rest-client/headless-commerce-admin-site-setting-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putWarehouseBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-site-setting/v1.0/warehouse/batch', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Warehouse"
                ],
                "operationId": "deleteWarehouseBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteWarehouseBatch } from 'liferay-headless-rest-client/headless-commerce-admin-site-setting-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteWarehouseBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-site-setting/v1.0/warehouse/batch', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-site-setting/v1.0/commerceAdminSiteSetting/{groupId}/warehouse": {
            "get": {
                "tags": [
                    "Warehouse"
                ],
                "operationId": "getCommerceAdminSiteSettingGroupWarehousePage",
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "active",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageWarehouse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageWarehouse"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getCommerceAdminSiteSettingGroupWarehousePage } from 'liferay-headless-rest-client/headless-commerce-admin-site-setting-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getCommerceAdminSiteSettingGroupWarehousePage({\n        client,\n        path: {\n           groupId: \"8538\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-site-setting/v1.0/commerceAdminSiteSetting/{groupId}/warehouse', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "post": {
                "tags": [
                    "Warehouse"
                ],
                "operationId": "postCommerceAdminSiteSettingGroupWarehouse",
                "parameters": [
                    {
                        "name": "groupId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Warehouse"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/Warehouse"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Warehouse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Warehouse"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postCommerceAdminSiteSettingGroupWarehouse } from 'liferay-headless-rest-client/headless-commerce-admin-site-setting-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postCommerceAdminSiteSettingGroupWarehouse({\n        client,\n        path: {\n           groupId: \"784\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-site-setting/v1.0/commerceAdminSiteSetting/{groupId}/warehouse', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "AvailabilityEstimate": {
                "required": [
                    "title"
                ],
                "type": "object",
                "properties": {
                    "groupId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 23130
                    },
                    "id": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30130
                    },
                    "priority": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "format": "double",
                        "example": 1.1
                    },
                    "title": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "example": "{en_US=Croatia, hr_HR=Hrvatska, hu_HU=Horvatorszag}"
                        },
                        "example": "{en_US=Croatia, hr_HR=Hrvatska, hu_HU=Horvatorszag}"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.admin.site.setting.dto.v1_0.AvailabilityEstimate"
                    }
                },
                "xml": {
                    "name": "AvailabilityEstimate"
                },
                "x-filterable": []
            },
            "Facet": {
                "type": "object",
                "properties": {
                    "facetCriteria": {
                        "type": "string"
                    },
                    "facetValues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FacetValue"
                        }
                    }
                },
                "x-filterable": []
            },
            "FacetValue": {
                "type": "object",
                "properties": {
                    "numberOfOccurrences": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "term": {
                        "type": "string"
                    }
                },
                "x-filterable": []
            },
            "PageAvailabilityEstimate": {
                "type": "object",
                "properties": {
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AvailabilityEstimate"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "MeasurementUnit": {
                "required": [
                    "key",
                    "name",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "companyId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 30130
                    },
                    "externalReferenceCode": {
                        "type": "string",
                        "example": "AB-34098-789-N"
                    },
                    "id": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30130
                    },
                    "key": {
                        "type": "string",
                        "example": "kg"
                    },
                    "name": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "example": "{en_US=Croatia, hr_HR=Hrvatska, hu_HU=Horvatorszag}"
                        },
                        "example": "{en_US=Croatia, hr_HR=Hrvatska, hu_HU=Horvatorszag}"
                    },
                    "primary": {
                        "type": "boolean",
                        "example": true
                    },
                    "priority": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "format": "double",
                        "example": 1.1
                    },
                    "rate": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "format": "double",
                        "example": 1
                    },
                    "type": {
                        "type": "string",
                        "example": "Dimensions"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.admin.site.setting.dto.v1_0.MeasurementUnit"
                    }
                },
                "xml": {
                    "name": "MeasurementUnit"
                },
                "x-filterable": []
            },
            "PageMeasurementUnit": {
                "type": "object",
                "properties": {
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MeasurementUnit"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "PageTaxCategory": {
                "type": "object",
                "properties": {
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaxCategory"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "TaxCategory": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "description": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "example": "{en_US=Croatia, hr_HR=Hrvatska, hu_HU=Horvatorszag}"
                        },
                        "example": "{en_US=Croatia, hr_HR=Hrvatska, hu_HU=Horvatorszag}"
                    },
                    "groupId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 23130
                    },
                    "id": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30130
                    },
                    "name": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "example": "{en_US=Croatia, hr_HR=Hrvatska, hu_HU=Horvatorszag}"
                        },
                        "example": "{en_US=Croatia, hr_HR=Hrvatska, hu_HU=Horvatorszag}"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.admin.site.setting.dto.v1_0.TaxCategory"
                    }
                },
                "xml": {
                    "name": "TaxCategory"
                },
                "x-filterable": []
            },
            "PageWarehouse": {
                "type": "object",
                "properties": {
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Warehouse"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "Warehouse": {
                "required": [
                    "commerceCountryId",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "example": true
                    },
                    "city": {
                        "type": "string",
                        "example": "Diamond Bar"
                    },
                    "commerceCountryId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30130
                    },
                    "commerceRegionId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30234
                    },
                    "description": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "example": "{en_US=Warehouse Description US, hr_HR=Warehouse Description HR, hu_HU=Warehouse Description HU}"
                        },
                        "example": "{en_US=Warehouse Description US, hr_HR=Warehouse Description HR, hu_HU=Warehouse Description HU}"
                    },
                    "groupId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 23130
                    },
                    "id": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30130
                    },
                    "latitude": {
                        "type": "number",
                        "format": "double",
                        "example": 33.9976884
                    },
                    "longitude": {
                        "type": "number",
                        "format": "double",
                        "example": -117.8144595
                    },
                    "mvccVersion": {
                        "type": "number",
                        "example": 0
                    },
                    "name": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "example": "{en_US=Warehouse Name US, hr_HR=Warehouse Name HR, hu_HU=Warehouse Name HU}"
                        },
                        "example": "{en_US=Warehouse Name US, hr_HR=Warehouse Name HR, hu_HU=Warehouse Name HU}"
                    },
                    "primary": {
                        "type": "boolean",
                        "example": true
                    },
                    "street1": {
                        "type": "string",
                        "example": "1400 Montefino Ave"
                    },
                    "street2": {
                        "type": "string",
                        "example": "1st floor"
                    },
                    "street3": {
                        "type": "string",
                        "example": "suite 200"
                    },
                    "zip": {
                        "type": "string",
                        "example": "91765"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.admin.site.setting.dto.v1_0.Warehouse"
                    }
                },
                "xml": {
                    "name": "Warehouse"
                },
                "x-filterable": []
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "description": "JWT Bearer token authentication"
            },
            "basicAuth": {
                "type": "http",
                "scheme": "basic",
                "description": "Basic HTTP authentication"
            },
            "apiKeyHeader": {
                "type": "apiKey",
                "in": "header",
                "name": "X-API-Key",
                "description": "API key request header"
            },
            "apiKeyQuery": {
                "type": "apiKey",
                "in": "query",
                "name": "api_key",
                "description": "API key query parameter"
            },
            "apiKeyCookie": {
                "type": "apiKey",
                "in": "cookie",
                "name": "api_key",
                "description": "API key browser cookie"
            },
            "oAuth2": {
                "type": "oauth2",
                "description": "OAuth 2.0 authentication",
                "flows": {
                    "authorizationCode": {
                        "authorizationUrl": "https://galaxy.scalar.com/oauth/authorize",
                        "tokenUrl": "https://galaxy.scalar.com/oauth/token",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    },
                    "clientCredentials": {
                        "tokenUrl": "https://galaxy.scalar.com/oauth/token",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    },
                    "implicit": {
                        "authorizationUrl": "https://galaxy.scalar.com/oauth/authorize",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    },
                    "password": {
                        "tokenUrl": "https://galaxy.scalar.com/oauth/token",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    }
                }
            },
            "openIdConnect": {
                "type": "openIdConnect",
                "openIdConnectUrl": "https://galaxy.scalar.com/.well-known/openid-configuration",
                "description": "OpenID Connect Authentication"
            }
        }
    },
    "security": [
        {
            "bearerAuth": []
        },
        {
            "basicAuth": []
        },
        {
            "apiKeyQuery": []
        },
        {
            "apiKeyHeader": []
        },
        {
            "apiKeyCookie": []
        },
        {
            "oAuth2": []
        },
        {
            "openIdConnect": []
        }
    ]
}