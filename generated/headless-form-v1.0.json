{
    "openapi": "3.0.1",
    "info": {
        "title": "Headless Form",
        "description": "#### TypeScript SDK Code Sample\n\n```typescript\nimport { createClient } from 'liferay-headless-rest-client';\nimport { getFormDocument } from 'liferay-headless-rest-client/headless-form-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getFormDocument({\n        client,\n        path: {\n           formDocumentId: \"20125\",\n        },\n    });\n\n    console.log(data);\n}\n```\n#### Java installation:\n\nA Java client JAR is available for use with the group ID 'com.liferay', artifact ID 'com.liferay.headless.form.client', and version '4.0.34'.\n\n```gradle\nimplementation group: \"com.liferay\", name: \"com.liferay.headless.form.client\", version: \"latest\"\n```\n\nReference: https://mvnrepository.com/artifact/com.liferay/com.liferay.headless.form.client/latest",
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "v1.0"
    },
    "servers": [
        {
            "url": "http://localhost:8080"
        }
    ],
    "paths": {
        "/o/headless-form/v1.0/form-documents/{formDocumentId}": {
            "get": {
                "tags": [
                    "FormDocument"
                ],
                "operationId": "getFormDocument",
                "parameters": [
                    {
                        "name": "formDocumentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FormDocument"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/FormDocument"
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getFormDocument } from 'liferay-headless-rest-client/headless-form-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getFormDocument({\n        client,\n        path: {\n           formDocumentId: \"20125\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-form/v1.0/form-documents/{formDocumentId}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "FormDocument"
                ],
                "operationId": "deleteFormDocument",
                "parameters": [
                    {
                        "name": "formDocumentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "deprecated": true,
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteFormDocument } from 'liferay-headless-rest-client/headless-form-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteFormDocument({\n        client,\n        path: {\n           formDocumentId: \"20125\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-form/v1.0/form-documents/{formDocumentId}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-form/v1.0/form-documents/batch": {
            "delete": {
                "tags": [
                    "FormDocument"
                ],
                "operationId": "deleteFormDocumentBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "deprecated": true,
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteFormDocumentBatch } from 'liferay-headless-rest-client/headless-form-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteFormDocumentBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-form/v1.0/form-documents/batch', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-form/v1.0/forms/{formId}/form-records/by-latest-draft": {
            "get": {
                "tags": [
                    "FormRecord"
                ],
                "operationId": "getFormFormRecordByLatestDraft",
                "parameters": [
                    {
                        "name": "formId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FormRecord"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/FormRecord"
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getFormFormRecordByLatestDraft } from 'liferay-headless-rest-client/headless-form-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getFormFormRecordByLatestDraft({\n        client,\n        path: {\n           formId: \"20125\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-form/v1.0/forms/{formId}/form-records/by-latest-draft', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-form/v1.0/forms/{formId}/form-records": {
            "get": {
                "tags": [
                    "FormRecord"
                ],
                "operationId": "getFormFormRecordsPage",
                "parameters": [
                    {
                        "name": "formId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageFormRecord"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageFormRecord"
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getFormFormRecordsPage } from 'liferay-headless-rest-client/headless-form-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getFormFormRecordsPage({\n        client,\n        path: {\n           formId: \"20125\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-form/v1.0/forms/{formId}/form-records', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "post": {
                "tags": [
                    "FormRecord"
                ],
                "operationId": "postFormFormRecord",
                "parameters": [
                    {
                        "name": "formId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FormRecord"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/FormRecord"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FormRecord"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/FormRecord"
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postFormFormRecord } from 'liferay-headless-rest-client/headless-form-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postFormFormRecord({\n        client,\n        path: {\n           formId: \"20125\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-form/v1.0/forms/{formId}/form-records', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-form/v1.0/form-records/{formRecordId}": {
            "get": {
                "tags": [
                    "FormRecord"
                ],
                "operationId": "getFormRecord",
                "parameters": [
                    {
                        "name": "formRecordId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FormRecord"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/FormRecord"
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getFormRecord } from 'liferay-headless-rest-client/headless-form-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getFormRecord({\n        client,\n        path: {\n           formRecordId: \"20125\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-form/v1.0/form-records/{formRecordId}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "put": {
                "tags": [
                    "FormRecord"
                ],
                "operationId": "putFormRecord",
                "parameters": [
                    {
                        "name": "formRecordId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FormRecord"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/FormRecord"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FormRecord"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/FormRecord"
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putFormRecord } from 'liferay-headless-rest-client/headless-form-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putFormRecord({\n        client,\n        path: {\n           formRecordId: \"20125\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-form/v1.0/form-records/{formRecordId}', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-form/v1.0/forms/{formId}/form-records/batch": {
            "post": {
                "tags": [
                    "FormRecord"
                ],
                "operationId": "postFormFormRecordBatch",
                "parameters": [
                    {
                        "name": "formId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "deprecated": true,
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postFormFormRecordBatch } from 'liferay-headless-rest-client/headless-form-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postFormFormRecordBatch({\n        client,\n        path: {\n           formId: \"20125\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-form/v1.0/forms/{formId}/form-records/batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-form/v1.0/forms/{formId}/form-records/export-batch": {
            "post": {
                "tags": [
                    "FormRecord"
                ],
                "operationId": "postFormFormRecordsPageExportBatch",
                "parameters": [
                    {
                        "name": "formId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contentType",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fieldNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "deprecated": true,
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postFormFormRecordsPageExportBatch } from 'liferay-headless-rest-client/headless-form-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postFormFormRecordsPageExportBatch({\n        client,\n        path: {\n           formId: \"20125\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-form/v1.0/forms/{formId}/form-records/export-batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-form/v1.0/form-records/batch": {
            "put": {
                "tags": [
                    "FormRecord"
                ],
                "operationId": "putFormRecordBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "deprecated": true,
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putFormRecordBatch } from 'liferay-headless-rest-client/headless-form-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putFormRecordBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-form/v1.0/form-records/batch', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-form/v1.0/forms/{formId}": {
            "get": {
                "tags": [
                    "Form"
                ],
                "operationId": "getForm",
                "parameters": [
                    {
                        "name": "formId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Form"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Form"
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getForm } from 'liferay-headless-rest-client/headless-form-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getForm({\n        client,\n        path: {\n           formId: \"20125\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-form/v1.0/forms/{formId}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-form/v1.0/sites/{siteId}/forms": {
            "get": {
                "tags": [
                    "Form"
                ],
                "operationId": "getSiteFormsPage",
                "parameters": [
                    {
                        "name": "siteId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageForm"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageForm"
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteFormsPage } from 'liferay-headless-rest-client/headless-form-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteFormsPage({\n        client,\n        path: {\n           siteId: \"20125\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-form/v1.0/sites/{siteId}/forms', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-form/v1.0/forms/{formId}/evaluate-context": {
            "post": {
                "tags": [
                    "Form"
                ],
                "operationId": "postFormEvaluateContext",
                "parameters": [
                    {
                        "name": "formId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FormContext"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/FormContext"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FormContext"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/FormContext"
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postFormEvaluateContext } from 'liferay-headless-rest-client/headless-form-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postFormEvaluateContext({\n        client,\n        path: {\n           formId: \"20125\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-form/v1.0/forms/{formId}/evaluate-context', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-form/v1.0/forms/{formId}/form-document": {
            "post": {
                "tags": [
                    "Form"
                ],
                "operationId": "postFormFormDocument",
                "parameters": [
                    {
                        "name": "formId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/MultipartBody"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FormDocument"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/FormDocument"
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postFormFormDocument } from 'liferay-headless-rest-client/headless-form-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postFormFormDocument({\n        client,\n        path: {\n           formId: \"20125\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-form/v1.0/forms/{formId}/form-document', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-form/v1.0/sites/{siteId}/forms/export-batch": {
            "post": {
                "tags": [
                    "Form"
                ],
                "operationId": "postSiteFormsPageExportBatch",
                "parameters": [
                    {
                        "name": "siteId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contentType",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fieldNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "deprecated": true,
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postSiteFormsPageExportBatch } from 'liferay-headless-rest-client/headless-form-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postSiteFormsPageExportBatch({\n        client,\n        path: {\n           siteId: \"20125\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-form/v1.0/sites/{siteId}/forms/export-batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-form/v1.0/form-structures/{formStructureId}": {
            "get": {
                "tags": [
                    "FormStructure"
                ],
                "operationId": "getFormStructure",
                "parameters": [
                    {
                        "name": "formStructureId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FormStructure"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/FormStructure"
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getFormStructure } from 'liferay-headless-rest-client/headless-form-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getFormStructure({\n        client,\n        path: {\n           formStructureId: \"20125\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-form/v1.0/form-structures/{formStructureId}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-form/v1.0/sites/{siteId}/form-structures": {
            "get": {
                "tags": [
                    "FormStructure"
                ],
                "operationId": "getSiteFormStructuresPage",
                "parameters": [
                    {
                        "name": "siteId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageFormStructure"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageFormStructure"
                                }
                            }
                        }
                    }
                },
                "deprecated": true,
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSiteFormStructuresPage } from 'liferay-headless-rest-client/headless-form-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSiteFormStructuresPage({\n        client,\n        path: {\n           siteId: \"20125\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-form/v1.0/sites/{siteId}/form-structures', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-form/v1.0/sites/{siteId}/form-structures/export-batch": {
            "post": {
                "tags": [
                    "FormStructure"
                ],
                "operationId": "postSiteFormStructuresPageExportBatch",
                "parameters": [
                    {
                        "name": "siteId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contentType",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fieldNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "deprecated": true,
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postSiteFormStructuresPageExportBatch } from 'liferay-headless-rest-client/headless-form-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postSiteFormStructuresPageExportBatch({\n        client,\n        path: {\n           siteId: \"20125\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-form/v1.0/sites/{siteId}/form-structures/export-batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "FormDocument": {
                "type": "object",
                "properties": {
                    "contentUrl": {
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "encodingFormat": {
                        "type": "string",
                        "readOnly": true
                    },
                    "fileExtension": {
                        "type": "string",
                        "readOnly": true
                    },
                    "folderId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "siteId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "sizeInBytes": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.form.dto.v1_0.FormDocument"
                    }
                },
                "xml": {
                    "name": "FormDocument"
                },
                "x-filterable": []
            },
            "Creator": {
                "type": "object",
                "properties": {
                    "additionalName": {
                        "type": "string"
                    },
                    "contentType": {
                        "type": "string",
                        "description": "The type of the content.",
                        "readOnly": true
                    },
                    "familyName": {
                        "type": "string"
                    },
                    "givenName": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "image": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "profileURL": {
                        "type": "string"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.form.dto.v1_0.Creator"
                    }
                },
                "xml": {
                    "name": "Creator"
                },
                "x-filterable": []
            },
            "FormFieldValue": {
                "type": "object",
                "properties": {
                    "formDocument": {
                        "$ref": "#/components/schemas/FormDocument"
                    },
                    "formDocumentId": {
                        "type": "integer",
                        "format": "int64",
                        "writeOnly": true
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.form.dto.v1_0.FormFieldValue"
                    }
                },
                "description": "https://www.schema.org/FormFieldValue",
                "xml": {
                    "name": "FormFieldValue"
                },
                "x-filterable": []
            },
            "FormRecord": {
                "type": "object",
                "properties": {
                    "creator": {
                        "$ref": "#/components/schemas/Creator"
                    },
                    "dateCreated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "dateModified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "datePublished": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "draft": {
                        "type": "boolean"
                    },
                    "formFieldValues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FormFieldValue"
                        }
                    },
                    "formId": {
                        "type": "integer",
                        "format": "int64",
                        "writeOnly": true
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.form.dto.v1_0.FormRecord"
                    }
                },
                "xml": {
                    "name": "FormRecord"
                },
                "x-filterable": []
            },
            "Facet": {
                "type": "object",
                "properties": {
                    "facetCriteria": {
                        "type": "string"
                    },
                    "facetValues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FacetValue"
                        }
                    }
                },
                "x-filterable": []
            },
            "FacetValue": {
                "type": "object",
                "properties": {
                    "numberOfOccurrences": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "term": {
                        "type": "string"
                    }
                },
                "x-filterable": []
            },
            "PageFormRecord": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FormRecord"
                        }
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "Form": {
                "type": "object",
                "properties": {
                    "availableLanguages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "creator": {
                        "$ref": "#/components/schemas/Creator"
                    },
                    "dateCreated": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "dateModified": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "datePublished": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "defaultLanguage": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "description_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "formRecords": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                            "$ref": "#/components/schemas/FormRecord"
                        }
                    },
                    "formRecordsIds": {
                        "type": "array",
                        "writeOnly": true,
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "name_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "siteId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "structure": {
                        "$ref": "#/components/schemas/FormStructure"
                    },
                    "structureId": {
                        "type": "integer",
                        "format": "int64",
                        "writeOnly": true
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.form.dto.v1_0.Form"
                    }
                },
                "xml": {
                    "name": "Form"
                },
                "x-filterable": []
            },
            "FormField": {
                "type": "object",
                "properties": {
                    "autocomplete": {
                        "type": "boolean"
                    },
                    "dataSourceType": {
                        "type": "string"
                    },
                    "dataType": {
                        "type": "string"
                    },
                    "displayStyle": {
                        "type": "string"
                    },
                    "formFieldOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FormFieldOption"
                        }
                    },
                    "grid": {
                        "$ref": "#/components/schemas/Grid"
                    },
                    "hasFormRules": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "immutable": {
                        "type": "boolean"
                    },
                    "inline": {
                        "type": "boolean"
                    },
                    "inputControl": {
                        "type": "string"
                    },
                    "label": {
                        "type": "string"
                    },
                    "label_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "localizable": {
                        "type": "boolean"
                    },
                    "multiple": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "placeholder": {
                        "type": "string"
                    },
                    "predefinedValue": {
                        "type": "string"
                    },
                    "predefinedValue_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "readOnly": {
                        "type": "boolean"
                    },
                    "repeatable": {
                        "type": "boolean"
                    },
                    "required": {
                        "type": "boolean"
                    },
                    "showAsSwitcher": {
                        "type": "boolean"
                    },
                    "showLabel": {
                        "type": "boolean"
                    },
                    "style": {
                        "type": "string"
                    },
                    "text": {
                        "type": "string"
                    },
                    "text_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "tooltip": {
                        "type": "string"
                    },
                    "validation": {
                        "$ref": "#/components/schemas/Validation"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.form.dto.v1_0.FormField"
                    }
                },
                "xml": {
                    "name": "FormField"
                },
                "x-filterable": []
            },
            "FormFieldOption": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "label": {
                        "type": "string"
                    },
                    "label_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "value": {
                        "type": "string"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.form.dto.v1_0.FormFieldOption"
                    }
                },
                "xml": {
                    "name": "FormFieldOption"
                },
                "x-filterable": []
            },
            "FormPage": {
                "type": "object",
                "properties": {
                    "formFields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FormField"
                        }
                    },
                    "headline": {
                        "type": "string"
                    },
                    "headline_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "text": {
                        "type": "string"
                    },
                    "text_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.form.dto.v1_0.FormPage"
                    }
                },
                "description": "https://www.schema.org/FormPage",
                "xml": {
                    "name": "FormPage"
                },
                "x-filterable": []
            },
            "FormStructure": {
                "type": "object",
                "properties": {
                    "availableLanguages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "creator": {
                        "$ref": "#/components/schemas/Creator"
                    },
                    "dateCreated": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "dateModified": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "description": {
                        "type": "string"
                    },
                    "description_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "formPages": {
                        "type": "array",
                        "description": "https://www.schema.org/FormPage",
                        "items": {
                            "$ref": "#/components/schemas/FormPage"
                        }
                    },
                    "formSuccessPage": {
                        "$ref": "#/components/schemas/FormSuccessPage"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "name_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "siteId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.form.dto.v1_0.FormStructure"
                    }
                },
                "xml": {
                    "name": "FormStructure"
                },
                "x-filterable": []
            },
            "FormSuccessPage": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "description_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "headline": {
                        "type": "string"
                    },
                    "headline_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.form.dto.v1_0.FormSuccessPage"
                    }
                },
                "description": "https://www.schema.org/FormSuccessPage",
                "xml": {
                    "name": "FormSuccessPage"
                },
                "x-filterable": []
            },
            "Grid": {
                "type": "object",
                "properties": {
                    "columns": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FormFieldOption"
                        }
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "rows": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FormFieldOption"
                        }
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.form.dto.v1_0.Grid"
                    }
                },
                "xml": {
                    "name": "Grid"
                },
                "x-filterable": []
            },
            "Validation": {
                "type": "object",
                "properties": {
                    "errorMessage": {
                        "type": "string"
                    },
                    "errorMessage_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "expression": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.form.dto.v1_0.Validation"
                    }
                },
                "description": "https://www.schema.org/FormFieldValidation",
                "xml": {
                    "name": "Validation"
                },
                "x-filterable": []
            },
            "PageForm": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Form"
                        }
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "FormContext": {
                "type": "object",
                "properties": {
                    "formFieldValues": {
                        "type": "array",
                        "description": "https://www.schema.org/FormFieldValue",
                        "items": {
                            "$ref": "#/components/schemas/FormFieldValue"
                        }
                    },
                    "formPageContexts": {
                        "type": "array",
                        "description": "https://www.schema.org/FormPageContext",
                        "items": {
                            "$ref": "#/components/schemas/FormPageContext"
                        }
                    },
                    "readOnly": {
                        "type": "boolean"
                    },
                    "showRequiredFieldsWarning": {
                        "type": "boolean"
                    },
                    "showSubmitButton": {
                        "type": "boolean"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.form.dto.v1_0.FormContext"
                    }
                },
                "xml": {
                    "name": "FormContext"
                },
                "x-filterable": []
            },
            "FormFieldContext": {
                "type": "object",
                "properties": {
                    "evaluable": {
                        "type": "boolean"
                    },
                    "formFieldOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FormFieldOption"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "readOnly": {
                        "type": "boolean"
                    },
                    "required": {
                        "type": "boolean"
                    },
                    "valid": {
                        "type": "boolean"
                    },
                    "value": {
                        "type": "string"
                    },
                    "valueChanged": {
                        "type": "boolean"
                    },
                    "visible": {
                        "type": "boolean"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.form.dto.v1_0.FormFieldContext"
                    }
                },
                "description": "https://www.schema.org/FormFieldContext",
                "xml": {
                    "name": "FormFieldContext"
                },
                "x-filterable": []
            },
            "FormPageContext": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "formFieldContexts": {
                        "type": "array",
                        "description": "https://www.schema.org/FormFieldContext",
                        "items": {
                            "$ref": "#/components/schemas/FormFieldContext"
                        }
                    },
                    "showRequiredFieldsWarning": {
                        "type": "boolean"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.form.dto.v1_0.FormPageContext"
                    }
                },
                "description": "https://www.schema.org/FormPageContext",
                "xml": {
                    "name": "FormPageContext"
                },
                "x-filterable": []
            },
            "MultipartBody": {
                "type": "object",
                "properties": {
                    "values": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "x-filterable": []
            },
            "PageFormStructure": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FormStructure"
                        }
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "description": "JWT Bearer token authentication"
            },
            "basicAuth": {
                "type": "http",
                "scheme": "basic",
                "description": "Basic HTTP authentication"
            },
            "apiKeyHeader": {
                "type": "apiKey",
                "in": "header",
                "name": "X-API-Key",
                "description": "API key request header"
            },
            "apiKeyQuery": {
                "type": "apiKey",
                "in": "query",
                "name": "api_key",
                "description": "API key query parameter"
            },
            "apiKeyCookie": {
                "type": "apiKey",
                "in": "cookie",
                "name": "api_key",
                "description": "API key browser cookie"
            },
            "oAuth2": {
                "type": "oauth2",
                "description": "OAuth 2.0 authentication",
                "flows": {
                    "authorizationCode": {
                        "authorizationUrl": "https://galaxy.scalar.com/oauth/authorize",
                        "tokenUrl": "https://galaxy.scalar.com/oauth/token",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    },
                    "clientCredentials": {
                        "tokenUrl": "https://galaxy.scalar.com/oauth/token",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    },
                    "implicit": {
                        "authorizationUrl": "https://galaxy.scalar.com/oauth/authorize",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    },
                    "password": {
                        "tokenUrl": "https://galaxy.scalar.com/oauth/token",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    }
                }
            },
            "openIdConnect": {
                "type": "openIdConnect",
                "openIdConnectUrl": "https://galaxy.scalar.com/.well-known/openid-configuration",
                "description": "OpenID Connect Authentication"
            }
        }
    }
}