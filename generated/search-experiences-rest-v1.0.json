{
    "openapi": "3.0.1",
    "info": {
        "description": "#### TypeScript SDK Code Sample\n\n```typescript\nimport { createClient } from 'liferay-headless-rest-client';\nimport { getFieldMappingInfosPage } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getFieldMappingInfosPage({\n        client,\n        \n    });\n\n    console.log(data);\n}\n```\n#### Java installation:\n\nA Java client JAR is available for use with the group ID 'com.liferay', artifact ID 'com.liferay.search.experiences.rest.client', and version '3.0.38'.\n\n```gradle\nimplementation group: \"com.liferay\", name: \"com.liferay.search.experiences.rest.client\", version: \"latest\"\n```\n\nReference: https://mvnrepository.com/artifact/com.liferay/com.liferay.search.experiences.rest.client/latest",
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "v1.0"
    },
    "servers": [
        {
            "url": "http://localhost:8080"
        }
    ],
    "paths": {
        "/o/search-experiences-rest/v1.0/field-mapping-infos": {
            "get": {
                "tags": [
                    "FieldMappingInfo"
                ],
                "operationId": "getFieldMappingInfosPage",
                "parameters": [
                    {
                        "name": "external",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "indexName",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageFieldMappingInfo"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageFieldMappingInfo"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getFieldMappingInfosPage } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getFieldMappingInfosPage({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/field-mapping-infos', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/search-experiences-rest/v1.0/field-mapping-infos/export-batch": {
            "post": {
                "tags": [
                    "FieldMappingInfo"
                ],
                "operationId": "postFieldMappingInfosPageExportBatch",
                "parameters": [
                    {
                        "name": "external",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "indexName",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contentType",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fieldNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postFieldMappingInfosPageExportBatch } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postFieldMappingInfosPageExportBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/field-mapping-infos/export-batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/search-experiences-rest/v1.0/keyword-query-contributors": {
            "get": {
                "tags": [
                    "KeywordQueryContributor"
                ],
                "operationId": "getKeywordQueryContributorsPage",
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageKeywordQueryContributor"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageKeywordQueryContributor"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getKeywordQueryContributorsPage } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getKeywordQueryContributorsPage({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/keyword-query-contributors', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ],
                "parameters": [
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/o/search-experiences-rest/v1.0/keyword-query-contributors/export-batch": {
            "post": {
                "tags": [
                    "KeywordQueryContributor"
                ],
                "operationId": "postKeywordQueryContributorsPageExportBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contentType",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fieldNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postKeywordQueryContributorsPageExportBatch } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postKeywordQueryContributorsPageExportBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/keyword-query-contributors/export-batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/search-experiences-rest/v1.0/model-prefilter-contributors": {
            "get": {
                "tags": [
                    "ModelPrefilterContributor"
                ],
                "operationId": "getModelPrefilterContributorsPage",
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageModelPrefilterContributor"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageModelPrefilterContributor"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getModelPrefilterContributorsPage } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getModelPrefilterContributorsPage({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/model-prefilter-contributors', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ],
                "parameters": [
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/o/search-experiences-rest/v1.0/model-prefilter-contributors/export-batch": {
            "post": {
                "tags": [
                    "ModelPrefilterContributor"
                ],
                "operationId": "postModelPrefilterContributorsPageExportBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contentType",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fieldNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postModelPrefilterContributorsPageExportBatch } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postModelPrefilterContributorsPageExportBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/model-prefilter-contributors/export-batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/search-experiences-rest/v1.0/query-prefilter-contributors": {
            "get": {
                "tags": [
                    "QueryPrefilterContributor"
                ],
                "operationId": "getQueryPrefilterContributorsPage",
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageQueryPrefilterContributor"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageQueryPrefilterContributor"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getQueryPrefilterContributorsPage } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getQueryPrefilterContributorsPage({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/query-prefilter-contributors', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ],
                "parameters": [
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/o/search-experiences-rest/v1.0/query-prefilter-contributors/export-batch": {
            "post": {
                "tags": [
                    "QueryPrefilterContributor"
                ],
                "operationId": "postQueryPrefilterContributorsPageExportBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contentType",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fieldNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postQueryPrefilterContributorsPageExportBatch } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postQueryPrefilterContributorsPageExportBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/query-prefilter-contributors/export-batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/search-experiences-rest/v1.0/sxp-blueprints/{sxpBlueprintId}": {
            "get": {
                "tags": [
                    "SXPBlueprint"
                ],
                "operationId": "getSXPBlueprint",
                "parameters": [
                    {
                        "name": "sxpBlueprintId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SXPBlueprint"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/SXPBlueprint"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSXPBlueprint } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSXPBlueprint({\n        client,\n        path: {\n           sxpBlueprintId: \"20125\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/sxp-blueprints/{sxpBlueprintId}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "put": {
                "tags": [
                    "SXPBlueprint"
                ],
                "operationId": "putSXPBlueprint",
                "parameters": [
                    {
                        "name": "sxpBlueprintId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SXPBlueprint"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/SXPBlueprint"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SXPBlueprint"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/SXPBlueprint"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putSXPBlueprint } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putSXPBlueprint({\n        client,\n        path: {\n           sxpBlueprintId: \"20125\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/sxp-blueprints/{sxpBlueprintId}', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "SXPBlueprint"
                ],
                "operationId": "deleteSXPBlueprint",
                "parameters": [
                    {
                        "name": "sxpBlueprintId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteSXPBlueprint } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteSXPBlueprint({\n        client,\n        path: {\n           sxpBlueprintId: \"20125\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/sxp-blueprints/{sxpBlueprintId}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "SXPBlueprint"
                ],
                "operationId": "patchSXPBlueprint",
                "parameters": [
                    {
                        "name": "sxpBlueprintId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SXPBlueprint"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/SXPBlueprint"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SXPBlueprint"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/SXPBlueprint"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchSXPBlueprint } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchSXPBlueprint({\n        client,\n        path: {\n           sxpBlueprintId: \"20125\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/sxp-blueprints/{sxpBlueprintId}', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/search-experiences-rest/v1.0/sxp-blueprints/batch": {
            "put": {
                "tags": [
                    "SXPBlueprint"
                ],
                "operationId": "putSXPBlueprintBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putSXPBlueprintBatch } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putSXPBlueprintBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/sxp-blueprints/batch', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "post": {
                "tags": [
                    "SXPBlueprint"
                ],
                "operationId": "postSXPBlueprintBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postSXPBlueprintBatch } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postSXPBlueprintBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/sxp-blueprints/batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "SXPBlueprint"
                ],
                "operationId": "deleteSXPBlueprintBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteSXPBlueprintBatch } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteSXPBlueprintBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/sxp-blueprints/batch', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/search-experiences-rest/v1.0/sxp-blueprints/by-external-reference-code/{externalReferenceCode}": {
            "get": {
                "tags": [
                    "SXPBlueprint"
                ],
                "operationId": "getSXPBlueprintByExternalReferenceCode",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SXPBlueprint"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/SXPBlueprint"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSXPBlueprintByExternalReferenceCode } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSXPBlueprintByExternalReferenceCode({\n        client,\n        path: {\n           externalReferenceCode: \"20125\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/sxp-blueprints/by-external-reference-code/{externalReferenceCode}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "put": {
                "tags": [
                    "SXPBlueprint"
                ],
                "operationId": "putSXPBlueprintByExternalReferenceCode",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SXPBlueprint"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/SXPBlueprint"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SXPBlueprint"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/SXPBlueprint"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putSXPBlueprintByExternalReferenceCode } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putSXPBlueprintByExternalReferenceCode({\n        client,\n        path: {\n           externalReferenceCode: \"20125\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/sxp-blueprints/by-external-reference-code/{externalReferenceCode}', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/search-experiences-rest/v1.0/sxp-blueprints/{sxpBlueprintId}/export": {
            "get": {
                "tags": [
                    "SXPBlueprint"
                ],
                "operationId": "getSXPBlueprintExport",
                "parameters": [
                    {
                        "name": "sxpBlueprintId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSXPBlueprintExport } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSXPBlueprintExport({\n        client,\n        path: {\n           sxpBlueprintId: \"20125\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/sxp-blueprints/{sxpBlueprintId}/export', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/search-experiences-rest/v1.0/sxp-blueprints": {
            "get": {
                "tags": [
                    "SXPBlueprint"
                ],
                "operationId": "getSXPBlueprintsPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "x-filterable": [
                                "createDate",
                                "description",
                                "modifiedDate",
                                "status",
                                "title"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageSXPBlueprint"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageSXPBlueprint"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSXPBlueprintsPage } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSXPBlueprintsPage({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/sxp-blueprints', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "post": {
                "tags": [
                    "SXPBlueprint"
                ],
                "operationId": "postSXPBlueprint",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SXPBlueprint"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/SXPBlueprint"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SXPBlueprint"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/SXPBlueprint"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postSXPBlueprint } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postSXPBlueprint({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/sxp-blueprints', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/search-experiences-rest/v1.0/sxp-blueprints/{sxpBlueprintId}/copy": {
            "post": {
                "tags": [
                    "SXPBlueprint"
                ],
                "operationId": "postSXPBlueprintCopy",
                "parameters": [
                    {
                        "name": "sxpBlueprintId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SXPBlueprint"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/SXPBlueprint"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postSXPBlueprintCopy } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postSXPBlueprintCopy({\n        client,\n        path: {\n           sxpBlueprintId: \"20125\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/sxp-blueprints/{sxpBlueprintId}/copy', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/search-experiences-rest/v1.0/sxp-blueprints/validate": {
            "post": {
                "tags": [
                    "SXPBlueprint"
                ],
                "operationId": "postSXPBlueprintValidate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "string"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SXPBlueprint"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/SXPBlueprint"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postSXPBlueprintValidate } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postSXPBlueprintValidate({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/sxp-blueprints/validate', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/search-experiences-rest/v1.0/sxp-blueprints/export-batch": {
            "post": {
                "tags": [
                    "SXPBlueprint"
                ],
                "operationId": "postSXPBlueprintsPageExportBatch",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "x-filterable": [
                                "createDate",
                                "description",
                                "modifiedDate",
                                "status",
                                "title"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contentType",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fieldNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postSXPBlueprintsPageExportBatch } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postSXPBlueprintsPageExportBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/sxp-blueprints/export-batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/search-experiences-rest/v1.0/sxp-elements/{sxpElementId}": {
            "get": {
                "tags": [
                    "SXPElement"
                ],
                "operationId": "getSXPElement",
                "parameters": [
                    {
                        "name": "sxpElementId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SXPElement"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/SXPElement"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSXPElement } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSXPElement({\n        client,\n        path: {\n           sxpElementId: \"20125\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/sxp-elements/{sxpElementId}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "put": {
                "tags": [
                    "SXPElement"
                ],
                "operationId": "putSXPElement",
                "parameters": [
                    {
                        "name": "sxpElementId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SXPElement"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/SXPElement"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SXPElement"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/SXPElement"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putSXPElement } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putSXPElement({\n        client,\n        path: {\n           sxpElementId: \"20125\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/sxp-elements/{sxpElementId}', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "SXPElement"
                ],
                "operationId": "deleteSXPElement",
                "parameters": [
                    {
                        "name": "sxpElementId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteSXPElement } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteSXPElement({\n        client,\n        path: {\n           sxpElementId: \"20125\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/sxp-elements/{sxpElementId}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "SXPElement"
                ],
                "operationId": "patchSXPElement",
                "parameters": [
                    {
                        "name": "sxpElementId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SXPElement"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/SXPElement"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SXPElement"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/SXPElement"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchSXPElement } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchSXPElement({\n        client,\n        path: {\n           sxpElementId: \"20125\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/sxp-elements/{sxpElementId}', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/search-experiences-rest/v1.0/sxp-elements/batch": {
            "put": {
                "tags": [
                    "SXPElement"
                ],
                "operationId": "putSXPElementBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putSXPElementBatch } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putSXPElementBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/sxp-elements/batch', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "post": {
                "tags": [
                    "SXPElement"
                ],
                "operationId": "postSXPElementBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postSXPElementBatch } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postSXPElementBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/sxp-elements/batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "SXPElement"
                ],
                "operationId": "deleteSXPElementBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteSXPElementBatch } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteSXPElementBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/sxp-elements/batch', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/search-experiences-rest/v1.0/sxp-elements/by-external-reference-code/{externalReferenceCode}": {
            "get": {
                "tags": [
                    "SXPElement"
                ],
                "operationId": "getSXPElementByExternalReferenceCode",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SXPElement"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/SXPElement"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSXPElementByExternalReferenceCode } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSXPElementByExternalReferenceCode({\n        client,\n        path: {\n           externalReferenceCode: \"20125\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/sxp-elements/by-external-reference-code/{externalReferenceCode}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "put": {
                "tags": [
                    "SXPElement"
                ],
                "operationId": "putSXPElementByExternalReferenceCode",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SXPElement"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/SXPElement"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SXPElement"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/SXPElement"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putSXPElementByExternalReferenceCode } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putSXPElementByExternalReferenceCode({\n        client,\n        path: {\n           externalReferenceCode: \"20125\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/sxp-elements/by-external-reference-code/{externalReferenceCode}', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/search-experiences-rest/v1.0/sxp-elements/{sxpElementId}/export": {
            "get": {
                "tags": [
                    "SXPElement"
                ],
                "operationId": "getSXPElementExport",
                "parameters": [
                    {
                        "name": "sxpElementId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSXPElementExport } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSXPElementExport({\n        client,\n        path: {\n           sxpElementId: \"20125\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/sxp-elements/{sxpElementId}/export', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/search-experiences-rest/v1.0/sxp-elements": {
            "get": {
                "tags": [
                    "SXPElement"
                ],
                "operationId": "getSXPElementsPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "x-filterable": [
                                "createDate",
                                "description",
                                "hidden",
                                "modifiedDate",
                                "readOnly",
                                "title"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageSXPElement"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageSXPElement"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSXPElementsPage } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSXPElementsPage({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/sxp-elements', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "post": {
                "tags": [
                    "SXPElement"
                ],
                "operationId": "postSXPElement",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SXPElement"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/SXPElement"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SXPElement"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/SXPElement"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postSXPElement } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postSXPElement({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/sxp-elements', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/search-experiences-rest/v1.0/sxp-elements/{sxpElementId}/copy": {
            "post": {
                "tags": [
                    "SXPElement"
                ],
                "operationId": "postSXPElementCopy",
                "parameters": [
                    {
                        "name": "sxpElementId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SXPElement"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/SXPElement"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postSXPElementCopy } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postSXPElementCopy({\n        client,\n        path: {\n           sxpElementId: \"20125\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/sxp-elements/{sxpElementId}/copy', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/search-experiences-rest/v1.0/sxp-elements/preview": {
            "post": {
                "tags": [
                    "SXPElement"
                ],
                "operationId": "postSXPElementPreview",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SXPElement"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/SXPElement"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SXPElement"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/SXPElement"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postSXPElementPreview } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postSXPElementPreview({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/sxp-elements/preview', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/search-experiences-rest/v1.0/sxp-elements/validate": {
            "post": {
                "tags": [
                    "SXPElement"
                ],
                "operationId": "postSXPElementValidate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "string"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "type": "string"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SXPElement"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/SXPElement"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postSXPElementValidate } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postSXPElementValidate({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/sxp-elements/validate', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/search-experiences-rest/v1.0/sxp-elements/export-batch": {
            "post": {
                "tags": [
                    "SXPElement"
                ],
                "operationId": "postSXPElementsPageExportBatch",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "x-filterable": [
                                "createDate",
                                "description",
                                "hidden",
                                "modifiedDate",
                                "readOnly",
                                "title"
                            ]
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contentType",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fieldNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postSXPElementsPageExportBatch } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postSXPElementsPageExportBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/sxp-elements/export-batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/search-experiences-rest/v1.0/sxp-parameter-contributor-definitions": {
            "get": {
                "tags": [
                    "SXPParameterContributorDefinition"
                ],
                "operationId": "getSXPParameterContributorDefinitionsPage",
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageSXPParameterContributorDefinition"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageSXPParameterContributorDefinition"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSXPParameterContributorDefinitionsPage } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSXPParameterContributorDefinitionsPage({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/sxp-parameter-contributor-definitions', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ],
                "parameters": [
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/o/search-experiences-rest/v1.0/sxp-parameter-contributor-definitions/export-batch": {
            "post": {
                "tags": [
                    "SXPParameterContributorDefinition"
                ],
                "operationId": "postSXPParameterContributorDefinitionsPageExportBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contentType",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fieldNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postSXPParameterContributorDefinitionsPageExportBatch } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postSXPParameterContributorDefinitionsPageExportBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/sxp-parameter-contributor-definitions/export-batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/search-experiences-rest/v1.0/search-indexes": {
            "get": {
                "tags": [
                    "SearchIndex"
                ],
                "operationId": "getSearchIndexesPage",
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageSearchIndex"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageSearchIndex"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSearchIndexesPage } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSearchIndexesPage({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/search-indexes', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ],
                "parameters": [
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/o/search-experiences-rest/v1.0/search-indexes/export-batch": {
            "post": {
                "tags": [
                    "SearchIndex"
                ],
                "operationId": "postSearchIndexesPageExportBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contentType",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fieldNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postSearchIndexesPageExportBatch } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postSearchIndexesPageExportBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/search-indexes/export-batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/search-experiences-rest/v1.0/search": {
            "post": {
                "tags": [
                    "SearchResponse"
                ],
                "description": "This API is only for the Blueprints application's preview. For a search API, use search/v1.0/search instead.",
                "operationId": "postSearch",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SXPBlueprint"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/SXPBlueprint"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchResponse"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/SearchResponse"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postSearch } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postSearch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/search', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/search-experiences-rest/v1.0/searchable-asset-names/{languageId}": {
            "get": {
                "tags": [
                    "SearchableAssetNameDisplay"
                ],
                "operationId": "getSearchableAssetNameLanguagePage",
                "parameters": [
                    {
                        "name": "languageId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageSearchableAssetNameDisplay"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageSearchableAssetNameDisplay"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSearchableAssetNameLanguagePage } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSearchableAssetNameLanguagePage({\n        client,\n        path: {\n           languageId: \"20125\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/searchable-asset-names/{languageId}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/search-experiences-rest/v1.0/searchable-asset-names": {
            "get": {
                "tags": [
                    "SearchableAssetName"
                ],
                "operationId": "getSearchableAssetNamesPage",
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageSearchableAssetName"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageSearchableAssetName"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getSearchableAssetNamesPage } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getSearchableAssetNamesPage({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/searchable-asset-names', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ],
                "parameters": [
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ]
            }
        },
        "/o/search-experiences-rest/v1.0/searchable-asset-names/export-batch": {
            "post": {
                "tags": [
                    "SearchableAssetName"
                ],
                "operationId": "postSearchableAssetNamesPageExportBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contentType",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fieldNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postSearchableAssetNamesPageExportBatch } from 'liferay-headless-rest-client/search-experiences-rest-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postSearchableAssetNamesPageExportBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/search-experiences-rest/v1.0/searchable-asset-names/export-batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Facet": {
                "type": "object",
                "properties": {
                    "facetCriteria": {
                        "type": "string"
                    },
                    "facetValues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FacetValue"
                        }
                    }
                },
                "x-filterable": []
            },
            "FacetValue": {
                "type": "object",
                "properties": {
                    "numberOfOccurrences": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "term": {
                        "type": "string"
                    }
                },
                "x-filterable": []
            },
            "FieldMappingInfo": {
                "type": "object",
                "properties": {
                    "languageIdPosition": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.FieldMappingInfo"
                    }
                },
                "xml": {
                    "name": "FieldMappingInfo"
                },
                "x-filterable": []
            },
            "PageFieldMappingInfo": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMappingInfo"
                        }
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "KeywordQueryContributor": {
                "type": "object",
                "properties": {
                    "className": {
                        "type": "string"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.KeywordQueryContributor"
                    }
                },
                "xml": {
                    "name": "KeywordQueryContributor"
                },
                "x-filterable": []
            },
            "PageKeywordQueryContributor": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/KeywordQueryContributor"
                        }
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "ModelPrefilterContributor": {
                "type": "object",
                "properties": {
                    "className": {
                        "type": "string"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.ModelPrefilterContributor"
                    }
                },
                "xml": {
                    "name": "ModelPrefilterContributor"
                },
                "x-filterable": []
            },
            "PageModelPrefilterContributor": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ModelPrefilterContributor"
                        }
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "PageQueryPrefilterContributor": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/QueryPrefilterContributor"
                        }
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "QueryPrefilterContributor": {
                "type": "object",
                "properties": {
                    "className": {
                        "type": "string"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.QueryPrefilterContributor"
                    }
                },
                "xml": {
                    "name": "QueryPrefilterContributor"
                },
                "x-filterable": []
            },
            "AdvancedConfiguration": {
                "type": "object",
                "properties": {
                    "collapse": {
                        "$ref": "#/components/schemas/Collapse"
                    },
                    "fields": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "source": {
                        "$ref": "#/components/schemas/Source"
                    },
                    "stored_fields": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.AdvancedConfiguration"
                    }
                },
                "xml": {
                    "name": "AdvancedConfiguration"
                },
                "x-filterable": []
            },
            "AggregationConfiguration": {
                "type": "object",
                "properties": {
                    "aggs": {
                        "type": "object"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.AggregationConfiguration"
                    }
                },
                "xml": {
                    "name": "AggregationConfiguration"
                },
                "x-filterable": []
            },
            "Clause": {
                "type": "object",
                "properties": {
                    "additive": {
                        "type": "boolean"
                    },
                    "boost": {
                        "type": "number",
                        "format": "float"
                    },
                    "context": {
                        "type": "string"
                    },
                    "disabled": {
                        "type": "boolean"
                    },
                    "field": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "occur": {
                        "type": "string"
                    },
                    "parent": {
                        "type": "string"
                    },
                    "query": {
                        "type": "object"
                    },
                    "type": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.Clause"
                    }
                },
                "xml": {
                    "name": "Clause"
                },
                "x-filterable": []
            },
            "Collapse": {
                "type": "object",
                "properties": {
                    "field": {
                        "type": "string"
                    },
                    "innerHits": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InnerHit"
                        }
                    },
                    "maxConcurrentGroupRequests": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.Collapse"
                    }
                },
                "xml": {
                    "name": "Collapse"
                },
                "x-filterable": []
            },
            "Condition": {
                "type": "object",
                "properties": {
                    "allConditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Condition"
                        }
                    },
                    "anyConditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Condition"
                        }
                    },
                    "contains": {
                        "$ref": "#/components/schemas/Contains"
                    },
                    "equals": {
                        "$ref": "#/components/schemas/Equals"
                    },
                    "exists": {
                        "$ref": "#/components/schemas/Exists"
                    },
                    "in": {
                        "$ref": "#/components/schemas/In"
                    },
                    "not": {
                        "$ref": "#/components/schemas/Condition"
                    },
                    "range": {
                        "$ref": "#/components/schemas/Range"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.Condition"
                    }
                },
                "xml": {
                    "name": "Condition"
                },
                "x-filterable": []
            },
            "Configuration": {
                "type": "object",
                "properties": {
                    "advancedConfiguration": {
                        "$ref": "#/components/schemas/AdvancedConfiguration"
                    },
                    "aggregationConfiguration": {
                        "$ref": "#/components/schemas/AggregationConfiguration"
                    },
                    "generalConfiguration": {
                        "$ref": "#/components/schemas/GeneralConfiguration"
                    },
                    "highlightConfiguration": {
                        "$ref": "#/components/schemas/HighlightConfiguration"
                    },
                    "indexConfiguration": {
                        "$ref": "#/components/schemas/IndexConfiguration"
                    },
                    "parameterConfiguration": {
                        "$ref": "#/components/schemas/ParameterConfiguration"
                    },
                    "queryConfiguration": {
                        "$ref": "#/components/schemas/QueryConfiguration"
                    },
                    "searchContextAttributes": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        }
                    },
                    "sortConfiguration": {
                        "$ref": "#/components/schemas/SortConfiguration"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.Configuration"
                    }
                },
                "xml": {
                    "name": "Configuration"
                },
                "x-filterable": []
            },
            "Contains": {
                "type": "object",
                "properties": {
                    "parameterName": {
                        "type": "string"
                    },
                    "value": {
                        "type": "object"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.Contains"
                    }
                },
                "xml": {
                    "name": "Contains"
                },
                "x-filterable": []
            },
            "ElementDefinition": {
                "type": "object",
                "properties": {
                    "category": {
                        "type": "string"
                    },
                    "configuration": {
                        "$ref": "#/components/schemas/Configuration"
                    },
                    "icon": {
                        "type": "string"
                    },
                    "uiConfiguration": {
                        "$ref": "#/components/schemas/UiConfiguration"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.ElementDefinition"
                    }
                },
                "xml": {
                    "name": "ElementDefinition"
                },
                "x-filterable": []
            },
            "ElementInstance": {
                "type": "object",
                "properties": {
                    "configurationEntry": {
                        "$ref": "#/components/schemas/Configuration"
                    },
                    "sxpElement": {
                        "$ref": "#/components/schemas/SXPElement"
                    },
                    "sxpElementId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "type": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "uiConfigurationValues": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        }
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.ElementInstance"
                    }
                },
                "xml": {
                    "name": "ElementInstance"
                },
                "x-filterable": []
            },
            "Equals": {
                "type": "object",
                "properties": {
                    "format": {
                        "type": "string"
                    },
                    "parameterName": {
                        "type": "string"
                    },
                    "value": {
                        "type": "object"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.Equals"
                    }
                },
                "xml": {
                    "name": "Equals"
                },
                "x-filterable": []
            },
            "Exists": {
                "type": "object",
                "properties": {
                    "parameterName": {
                        "type": "string"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.Exists"
                    }
                },
                "xml": {
                    "name": "Exists"
                },
                "x-filterable": []
            },
            "Field": {
                "type": "object",
                "properties": {
                    "defaultValue": {
                        "type": "object"
                    },
                    "fieldMappings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldMapping"
                        }
                    },
                    "helpText": {
                        "type": "string"
                    },
                    "helpTextLocalized": {
                        "type": "string"
                    },
                    "label": {
                        "type": "string"
                    },
                    "labelLocalized": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "typeOptions": {
                        "$ref": "#/components/schemas/TypeOptions"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.Field"
                    }
                },
                "xml": {
                    "name": "Field"
                },
                "x-filterable": []
            },
            "FieldMapping": {
                "type": "object",
                "properties": {
                    "boost": {
                        "type": "number",
                        "format": "float"
                    },
                    "field": {
                        "type": "string"
                    },
                    "locale": {
                        "type": "string"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.FieldMapping"
                    }
                },
                "xml": {
                    "name": "FieldMapping"
                },
                "x-filterable": []
            },
            "FieldSet": {
                "type": "object",
                "properties": {
                    "fields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Field"
                        }
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.FieldSet"
                    }
                },
                "xml": {
                    "name": "FieldSet"
                },
                "x-filterable": []
            },
            "GeneralConfiguration": {
                "type": "object",
                "properties": {
                    "clauseContributorsExcludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "clauseContributorsIncludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "collectionProvider": {
                        "type": "boolean"
                    },
                    "collectionProviderType": {
                        "type": "string"
                    },
                    "emptySearchEnabled": {
                        "type": "boolean"
                    },
                    "explain": {
                        "type": "boolean"
                    },
                    "includeResponseString": {
                        "type": "boolean"
                    },
                    "languageId": {
                        "type": "string"
                    },
                    "legacyAssetCollectionProvider": {
                        "type": "boolean"
                    },
                    "queryString": {
                        "type": "string"
                    },
                    "searchableAssetTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "timeZoneId": {
                        "type": "string"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.GeneralConfiguration"
                    }
                },
                "xml": {
                    "name": "GeneralConfiguration"
                },
                "x-filterable": []
            },
            "HighlightConfiguration": {
                "type": "object",
                "properties": {
                    "fields": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/HighlightField"
                        }
                    },
                    "fragment_size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "number_of_fragments": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "post_tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "pre_tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "require_field_match": {
                        "type": "boolean"
                    },
                    "type": {
                        "type": "string"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.HighlightConfiguration"
                    }
                },
                "xml": {
                    "name": "HighlightConfiguration"
                },
                "x-filterable": []
            },
            "HighlightField": {
                "type": "object",
                "properties": {
                    "fragment_offset": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "fragment_size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "number_of_fragments": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.HighlightField"
                    }
                },
                "xml": {
                    "name": "HighlightField"
                },
                "x-filterable": []
            },
            "In": {
                "type": "object",
                "properties": {
                    "parameterName": {
                        "type": "string"
                    },
                    "value": {
                        "type": "object"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.In"
                    }
                },
                "xml": {
                    "name": "In"
                },
                "x-filterable": []
            },
            "IndexConfiguration": {
                "type": "object",
                "properties": {
                    "external": {
                        "type": "boolean"
                    },
                    "indexName": {
                        "type": "string"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.IndexConfiguration"
                    }
                },
                "xml": {
                    "name": "IndexConfiguration"
                },
                "x-filterable": []
            },
            "InnerCollapse": {
                "type": "object",
                "properties": {
                    "field": {
                        "type": "string"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.InnerCollapse"
                    }
                },
                "xml": {
                    "name": "InnerCollapse"
                },
                "x-filterable": []
            },
            "InnerHit": {
                "type": "object",
                "properties": {
                    "innerCollapse": {
                        "$ref": "#/components/schemas/InnerCollapse"
                    },
                    "name": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "sorts": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.InnerHit"
                    }
                },
                "xml": {
                    "name": "InnerHit"
                },
                "x-filterable": []
            },
            "Option": {
                "type": "object",
                "properties": {
                    "label": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.Option"
                    }
                },
                "xml": {
                    "name": "Option"
                },
                "x-filterable": []
            },
            "Parameter": {
                "type": "object",
                "properties": {
                    "defaultValue": {
                        "type": "object"
                    },
                    "format": {
                        "type": "string"
                    },
                    "max": {
                        "type": "object"
                    },
                    "min": {
                        "type": "object"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.Parameter"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "Boolean",
                            "Date",
                            "Double",
                            "Float",
                            "Integer",
                            "IntegerArray",
                            "Long",
                            "LongArray",
                            "String",
                            "StringArray",
                            "TimeRange"
                        ]
                    }
                },
                "xml": {
                    "name": "Parameter"
                },
                "x-filterable": []
            },
            "ParameterConfiguration": {
                "type": "object",
                "properties": {
                    "parameters": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/Parameter"
                        }
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.ParameterConfiguration"
                    }
                },
                "xml": {
                    "name": "ParameterConfiguration"
                },
                "x-filterable": []
            },
            "QueryConfiguration": {
                "type": "object",
                "properties": {
                    "applyIndexerClauses": {
                        "type": "boolean"
                    },
                    "queryEntries": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/QueryEntry"
                        }
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.QueryConfiguration"
                    }
                },
                "xml": {
                    "name": "QueryConfiguration"
                },
                "x-filterable": []
            },
            "QueryEntry": {
                "type": "object",
                "properties": {
                    "clauses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Clause"
                        }
                    },
                    "condition": {
                        "$ref": "#/components/schemas/Condition"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "postFilterClauses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Clause"
                        }
                    },
                    "rescores": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Rescore"
                        }
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.QueryEntry"
                    }
                },
                "xml": {
                    "name": "QueryEntry"
                },
                "x-filterable": []
            },
            "Range": {
                "type": "object",
                "properties": {
                    "format": {
                        "type": "string"
                    },
                    "gt": {
                        "type": "object"
                    },
                    "gte": {
                        "type": "object"
                    },
                    "lt": {
                        "type": "object"
                    },
                    "lte": {
                        "type": "object"
                    },
                    "parameterName": {
                        "type": "string"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.Range"
                    }
                },
                "xml": {
                    "name": "Range"
                },
                "x-filterable": []
            },
            "Rescore": {
                "type": "object",
                "properties": {
                    "query": {
                        "type": "object"
                    },
                    "queryWeight": {
                        "type": "object"
                    },
                    "rescoreQueryWeight": {
                        "type": "object"
                    },
                    "scoreMode": {
                        "type": "string"
                    },
                    "windowSize": {
                        "type": "object"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.Rescore"
                    }
                },
                "xml": {
                    "name": "Rescore"
                },
                "x-filterable": []
            },
            "SXPBlueprint": {
                "type": "object",
                "properties": {
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "readOnly": true
                    },
                    "collectionProviderSubtypeName": {
                        "type": "string"
                    },
                    "collectionProviderTypeName": {
                        "type": "string"
                    },
                    "configuration": {
                        "$ref": "#/components/schemas/Configuration"
                    },
                    "createDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "description": {
                        "type": "string"
                    },
                    "description_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "elementInstances": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ElementInstance"
                        }
                    },
                    "externalReferenceCode": {
                        "type": "string",
                        "example": "AB-34098-789-N"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "modifiedDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "schemaVersion": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "title_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "userName": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.SXPBlueprint"
                    }
                },
                "xml": {
                    "name": "SXPBlueprint"
                },
                "x-filterable": [
                    "createDate",
                    "description",
                    "modifiedDate",
                    "status",
                    "title"
                ]
            },
            "SXPElement": {
                "type": "object",
                "properties": {
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "readOnly": true
                    },
                    "createDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "description": {
                        "type": "string"
                    },
                    "description_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "elementDefinition": {
                        "$ref": "#/components/schemas/ElementDefinition"
                    },
                    "externalReferenceCode": {
                        "type": "string",
                        "example": "AB-34098-789-N"
                    },
                    "fallbackDescription": {
                        "type": "string"
                    },
                    "fallbackTitle": {
                        "type": "string"
                    },
                    "hidden": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "modifiedDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "readOnly": {
                        "type": "boolean"
                    },
                    "schemaVersion": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "title_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "type": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "userName": {
                        "type": "string"
                    },
                    "version": {
                        "type": "string"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.SXPElement"
                    }
                },
                "xml": {
                    "name": "SXPElement"
                },
                "x-filterable": [
                    "createDate",
                    "description",
                    "hidden",
                    "modifiedDate",
                    "readOnly",
                    "title"
                ]
            },
            "SortConfiguration": {
                "type": "object",
                "properties": {
                    "sorts": {
                        "type": "object"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.SortConfiguration"
                    }
                },
                "xml": {
                    "name": "SortConfiguration"
                },
                "x-filterable": []
            },
            "Source": {
                "type": "object",
                "properties": {
                    "excludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "fetchSource": {
                        "type": "boolean"
                    },
                    "includes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.Source"
                    }
                },
                "xml": {
                    "name": "Source"
                },
                "x-filterable": []
            },
            "TypeOptions": {
                "type": "object",
                "properties": {
                    "boost": {
                        "type": "boolean"
                    },
                    "format": {
                        "type": "string"
                    },
                    "max": {
                        "type": "object"
                    },
                    "min": {
                        "type": "object"
                    },
                    "nullable": {
                        "type": "boolean"
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Option"
                        }
                    },
                    "required": {
                        "type": "boolean"
                    },
                    "step": {
                        "type": "object"
                    },
                    "unit": {
                        "type": "string"
                    },
                    "unitSuffix": {
                        "type": "string"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.TypeOptions"
                    }
                },
                "xml": {
                    "name": "TypeOptions"
                },
                "x-filterable": []
            },
            "UiConfiguration": {
                "type": "object",
                "properties": {
                    "fieldSets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FieldSet"
                        }
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.UiConfiguration"
                    }
                },
                "xml": {
                    "name": "UiConfiguration"
                },
                "x-filterable": []
            },
            "PageSXPBlueprint": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SXPBlueprint"
                        }
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "PageSXPElement": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SXPElement"
                        }
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "PageSXPParameterContributorDefinition": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SXPParameterContributorDefinition"
                        }
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "SXPParameterContributorDefinition": {
                "type": "object",
                "properties": {
                    "className": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "templateVariable": {
                        "type": "string"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.SXPParameterContributorDefinition"
                    }
                },
                "xml": {
                    "name": "SXPParameterContributorDefinition"
                },
                "x-filterable": []
            },
            "PageSearchIndex": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SearchIndex"
                        }
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "SearchIndex": {
                "type": "object",
                "properties": {
                    "external": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.SearchIndex"
                    }
                },
                "xml": {
                    "name": "SearchIndex"
                },
                "x-filterable": []
            },
            "DocumentField": {
                "type": "object",
                "properties": {
                    "values": {
                        "type": "array",
                        "items": {
                            "type": "object"
                        }
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.DocumentField"
                    }
                },
                "xml": {
                    "name": "DocumentField"
                },
                "x-filterable": []
            },
            "Hit": {
                "type": "object",
                "properties": {
                    "documentFields": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/DocumentField"
                        }
                    },
                    "explanation": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "score": {
                        "type": "number",
                        "format": "float"
                    },
                    "version": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.Hit"
                    }
                },
                "xml": {
                    "name": "Hit"
                },
                "x-filterable": []
            },
            "SearchHits": {
                "type": "object",
                "properties": {
                    "hits": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Hit"
                        }
                    },
                    "maxScore": {
                        "type": "number",
                        "format": "float"
                    },
                    "totalHits": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.SearchHits"
                    }
                },
                "xml": {
                    "name": "SearchHits"
                },
                "x-filterable": []
            },
            "SearchRequest": {
                "type": "object",
                "properties": {
                    "queryString": {
                        "type": "string"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.SearchRequest"
                    }
                },
                "xml": {
                    "name": "SearchRequest"
                },
                "x-filterable": []
            },
            "SearchResponse": {
                "type": "object",
                "properties": {
                    "errors": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "object"
                            }
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "request": {
                        "type": "object"
                    },
                    "requestString": {
                        "type": "string"
                    },
                    "response": {
                        "type": "object"
                    },
                    "responseString": {
                        "type": "string"
                    },
                    "searchHits": {
                        "$ref": "#/components/schemas/SearchHits"
                    },
                    "searchRequest": {
                        "$ref": "#/components/schemas/SearchRequest"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.SearchResponse"
                    }
                },
                "xml": {
                    "name": "SearchResponse"
                },
                "x-filterable": []
            },
            "PageSearchableAssetNameDisplay": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SearchableAssetNameDisplay"
                        }
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "SearchableAssetNameDisplay": {
                "type": "object",
                "properties": {
                    "className": {
                        "type": "string"
                    },
                    "displayName": {
                        "type": "string"
                    },
                    "hasSubtype": {
                        "type": "boolean"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.SearchableAssetNameDisplay"
                    }
                },
                "xml": {
                    "name": "SearchableAssetNameDisplay"
                },
                "x-filterable": []
            },
            "PageSearchableAssetName": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SearchableAssetName"
                        }
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "SearchableAssetName": {
                "type": "object",
                "properties": {
                    "className": {
                        "type": "string"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.search.experiences.rest.dto.v1_0.SearchableAssetName"
                    }
                },
                "xml": {
                    "name": "SearchableAssetName"
                },
                "x-filterable": []
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "description": "JWT Bearer token authentication"
            },
            "basicAuth": {
                "type": "http",
                "scheme": "basic",
                "description": "Basic HTTP authentication"
            },
            "apiKeyHeader": {
                "type": "apiKey",
                "in": "header",
                "name": "X-API-Key",
                "description": "API key request header"
            },
            "apiKeyQuery": {
                "type": "apiKey",
                "in": "query",
                "name": "api_key",
                "description": "API key query parameter"
            },
            "apiKeyCookie": {
                "type": "apiKey",
                "in": "cookie",
                "name": "api_key",
                "description": "API key browser cookie"
            },
            "oAuth2": {
                "type": "oauth2",
                "description": "OAuth 2.0 authentication",
                "flows": {
                    "authorizationCode": {
                        "authorizationUrl": "https://galaxy.scalar.com/oauth/authorize",
                        "tokenUrl": "https://galaxy.scalar.com/oauth/token",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    },
                    "clientCredentials": {
                        "tokenUrl": "https://galaxy.scalar.com/oauth/token",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    },
                    "implicit": {
                        "authorizationUrl": "https://galaxy.scalar.com/oauth/authorize",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    },
                    "password": {
                        "tokenUrl": "https://galaxy.scalar.com/oauth/token",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    }
                }
            },
            "openIdConnect": {
                "type": "openIdConnect",
                "openIdConnectUrl": "https://galaxy.scalar.com/.well-known/openid-configuration",
                "description": "OpenID Connect Authentication"
            }
        }
    }
}