{
    "openapi": "3.0.1",
    "info": {
        "title": "Liferay Commerce Admin Channel API",
        "description": "Liferay Commerce Admin Channel API. A Java client JAR is available for use with the group ID 'com.liferay', artifact ID 'com.liferay.headless.commerce.admin.channel.client', and version '4.0.45'.",
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "v1.0"
    },
    "servers": [
        {
            "url": "http://localhost:8080"
        }
    ],
    "paths": {
        "/o/headless-commerce-admin-channel/v1.0/account-address-channels/{accountAddressChannelId}": {
            "delete": {
                "tags": [
                    "AccountAddressChannel"
                ],
                "operationId": "deleteAccountAddressChannel",
                "parameters": [
                    {
                        "name": "accountAddressChannelId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteAccountAddressChannel } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteAccountAddressChannel({\n        client,\n        path: {\n           accountAddressChannelId: \"1037\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/account-address-channels/{accountAddressChannelId}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/account-address-channels/batch": {
            "delete": {
                "tags": [
                    "AccountAddressChannel"
                ],
                "operationId": "deleteAccountAddressChannelBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteAccountAddressChannelBatch } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteAccountAddressChannelBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/account-address-channels/batch', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/account-addresses/by-externalReferenceCode/{externalReferenceCode}/account-address-channels": {
            "get": {
                "tags": [
                    "AccountAddressChannel"
                ],
                "operationId": "getAccountAddressByExternalReferenceCodeAccountAddressChannelsPage",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageAccountAddressChannel"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageAccountAddressChannel"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getAccountAddressByExternalReferenceCodeAccountAddressChannelsPage } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getAccountAddressByExternalReferenceCodeAccountAddressChannelsPage({\n        client,\n        path: {\n           externalReferenceCode: \"2241\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/account-addresses/by-externalReferenceCode/{externalReferenceCode}/account-address-channels', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "post": {
                "tags": [
                    "AccountAddressChannel"
                ],
                "operationId": "postAccountAddressByExternalReferenceCodeAccountAddressChannel",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountAddressChannel"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountAddressChannel"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountAddressChannel"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountAddressChannel"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postAccountAddressByExternalReferenceCodeAccountAddressChannel } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postAccountAddressByExternalReferenceCodeAccountAddressChannel({\n        client,\n        path: {\n           externalReferenceCode: \"5610\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/account-addresses/by-externalReferenceCode/{externalReferenceCode}/account-address-channels', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/account-addresses/{addressId}/account-address-channels": {
            "get": {
                "tags": [
                    "AccountAddressChannel"
                ],
                "operationId": "getAccountAddressIdAccountAddressChannelsPage",
                "parameters": [
                    {
                        "name": "addressId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageAccountAddressChannel"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageAccountAddressChannel"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getAccountAddressIdAccountAddressChannelsPage } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getAccountAddressIdAccountAddressChannelsPage({\n        client,\n        path: {\n           addressId: \"7757\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/account-addresses/{addressId}/account-address-channels', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "post": {
                "tags": [
                    "AccountAddressChannel"
                ],
                "operationId": "postAccountAddressIdAccountAddressChannel",
                "parameters": [
                    {
                        "name": "addressId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountAddressChannel"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountAddressChannel"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountAddressChannel"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountAddressChannel"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postAccountAddressIdAccountAddressChannel } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postAccountAddressIdAccountAddressChannel({\n        client,\n        path: {\n           addressId: \"7210\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/account-addresses/{addressId}/account-address-channels', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/channel-accounts/{channelAccountId}/account": {
            "get": {
                "tags": [
                    "Account"
                ],
                "operationId": "getChannelAccountAccount",
                "parameters": [
                    {
                        "name": "channelAccountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Account"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Account"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getChannelAccountAccount } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannelAccountAccount({\n        client,\n        path: {\n           channelAccountId: \"5603\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/channel-accounts/{channelAccountId}/account', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/category-display-pages/{id}": {
            "get": {
                "tags": [
                    "CategoryDisplayPage"
                ],
                "operationId": "getCategoryDisplayPage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryDisplayPage"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryDisplayPage"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getCategoryDisplayPage } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getCategoryDisplayPage({\n        client,\n        path: {\n           id: \"6987\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/category-display-pages/{id}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "CategoryDisplayPage"
                ],
                "operationId": "deleteCategoryDisplayPage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteCategoryDisplayPage } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteCategoryDisplayPage({\n        client,\n        path: {\n           id: \"6204\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/category-display-pages/{id}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "CategoryDisplayPage"
                ],
                "operationId": "patchCategoryDisplayPage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CategoryDisplayPage"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/CategoryDisplayPage"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryDisplayPage"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryDisplayPage"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchCategoryDisplayPage } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchCategoryDisplayPage({\n        client,\n        path: {\n           id: \"6377\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/category-display-pages/{id}', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/category-display-pages/batch": {
            "delete": {
                "tags": [
                    "CategoryDisplayPage"
                ],
                "operationId": "deleteCategoryDisplayPageBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteCategoryDisplayPageBatch } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteCategoryDisplayPageBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/category-display-pages/batch', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/channels/by-externalReferenceCode/{externalReferenceCode}/category-display-pages": {
            "get": {
                "tags": [
                    "CategoryDisplayPage"
                ],
                "operationId": "getChannelByExternalReferenceCodeCategoryDisplayPagesPage",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageCategoryDisplayPage"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageCategoryDisplayPage"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getChannelByExternalReferenceCodeCategoryDisplayPagesPage } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannelByExternalReferenceCodeCategoryDisplayPagesPage({\n        client,\n        path: {\n           externalReferenceCode: \"9876\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/channels/by-externalReferenceCode/{externalReferenceCode}/category-display-pages', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "post": {
                "tags": [
                    "CategoryDisplayPage"
                ],
                "operationId": "postChannelByExternalReferenceCodeCategoryDisplayPage",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CategoryDisplayPage"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/CategoryDisplayPage"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryDisplayPage"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryDisplayPage"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postChannelByExternalReferenceCodeCategoryDisplayPage } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postChannelByExternalReferenceCodeCategoryDisplayPage({\n        client,\n        path: {\n           externalReferenceCode: \"5562\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/channels/by-externalReferenceCode/{externalReferenceCode}/category-display-pages', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/channels/{id}/category-display-pages": {
            "get": {
                "tags": [
                    "CategoryDisplayPage"
                ],
                "operationId": "getChannelIdCategoryDisplayPagesPage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageCategoryDisplayPage"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageCategoryDisplayPage"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getChannelIdCategoryDisplayPagesPage } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannelIdCategoryDisplayPagesPage({\n        client,\n        path: {\n           id: \"4799\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/channels/{id}/category-display-pages', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "post": {
                "tags": [
                    "CategoryDisplayPage"
                ],
                "operationId": "postChannelIdCategoryDisplayPage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CategoryDisplayPage"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/CategoryDisplayPage"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryDisplayPage"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/CategoryDisplayPage"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postChannelIdCategoryDisplayPage } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postChannelIdCategoryDisplayPage({\n        client,\n        path: {\n           id: \"4256\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/channels/{id}/category-display-pages', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/channel-accounts/{channelAccountId}": {
            "delete": {
                "tags": [
                    "ChannelAccount"
                ],
                "operationId": "deleteChannelAccount",
                "parameters": [
                    {
                        "name": "channelAccountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteChannelAccount } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteChannelAccount({\n        client,\n        path: {\n           channelAccountId: \"5148\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/channel-accounts/{channelAccountId}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/channel-accounts/batch": {
            "delete": {
                "tags": [
                    "ChannelAccount"
                ],
                "operationId": "deleteChannelAccountBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteChannelAccountBatch } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteChannelAccountBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/channel-accounts/batch', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/channels/by-externalReferenceCode/{externalReferenceCode}/channel-accounts": {
            "get": {
                "tags": [
                    "ChannelAccount"
                ],
                "operationId": "getChannelByExternalReferenceCodeChannelAccountsPage",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageChannelAccount"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageChannelAccount"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getChannelByExternalReferenceCodeChannelAccountsPage } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannelByExternalReferenceCodeChannelAccountsPage({\n        client,\n        path: {\n           externalReferenceCode: \"9513\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/channels/by-externalReferenceCode/{externalReferenceCode}/channel-accounts', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "post": {
                "tags": [
                    "ChannelAccount"
                ],
                "operationId": "postChannelByExternalReferenceCodeChannelAccount",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChannelAccount"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/ChannelAccount"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChannelAccount"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChannelAccount"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postChannelByExternalReferenceCodeChannelAccount } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postChannelByExternalReferenceCodeChannelAccount({\n        client,\n        path: {\n           externalReferenceCode: \"7243\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/channels/by-externalReferenceCode/{externalReferenceCode}/channel-accounts', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/channels/{id}/channel-accounts": {
            "get": {
                "tags": [
                    "ChannelAccount"
                ],
                "operationId": "getChannelIdChannelAccountsPage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageChannelAccount"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageChannelAccount"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getChannelIdChannelAccountsPage } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannelIdChannelAccountsPage({\n        client,\n        path: {\n           id: \"1915\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/channels/{id}/channel-accounts', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "post": {
                "tags": [
                    "ChannelAccount"
                ],
                "operationId": "postChannelIdChannelAccount",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChannelAccount"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/ChannelAccount"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChannelAccount"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChannelAccount"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postChannelIdChannelAccount } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postChannelIdChannelAccount({\n        client,\n        path: {\n           id: \"2715\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/channels/{id}/channel-accounts', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/channels/{channelId}": {
            "get": {
                "tags": [
                    "Channel"
                ],
                "description": "Retrive information of the given Channel.",
                "operationId": "getChannel",
                "parameters": [
                    {
                        "name": "channelId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Channel"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Channel"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getChannel } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannel({\n        client,\n        path: {\n           channelId: \"1326\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/channels/{channelId}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "put": {
                "tags": [
                    "Channel"
                ],
                "operationId": "putChannel",
                "parameters": [
                    {
                        "name": "channelId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Channel"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/Channel"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Channel"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Channel"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putChannel } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putChannel({\n        client,\n        path: {\n           channelId: \"7156\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/channels/{channelId}', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Channel"
                ],
                "operationId": "deleteChannel",
                "parameters": [
                    {
                        "name": "channelId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteChannel } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteChannel({\n        client,\n        path: {\n           channelId: \"6141\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/channels/{channelId}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Channel"
                ],
                "operationId": "patchChannel",
                "parameters": [
                    {
                        "name": "channelId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Channel"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/Channel"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Channel"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Channel"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchChannel } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchChannel({\n        client,\n        path: {\n           channelId: \"9930\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/channels/{channelId}', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/channels/batch": {
            "put": {
                "tags": [
                    "Channel"
                ],
                "operationId": "putChannelBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putChannelBatch } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putChannelBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/channels/batch', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "post": {
                "tags": [
                    "Channel"
                ],
                "operationId": "postChannelBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postChannelBatch } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postChannelBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/channels/batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Channel"
                ],
                "operationId": "deleteChannelBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteChannelBatch } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteChannelBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/channels/batch', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/channels/by-externalReferenceCode/{externalReferenceCode}": {
            "get": {
                "tags": [
                    "Channel"
                ],
                "description": "Retrive information of the given Channel.",
                "operationId": "getChannelByExternalReferenceCode",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Channel"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Channel"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getChannelByExternalReferenceCode } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannelByExternalReferenceCode({\n        client,\n        path: {\n           externalReferenceCode: \"9828\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/channels/by-externalReferenceCode/{externalReferenceCode}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "put": {
                "tags": [
                    "Channel"
                ],
                "operationId": "putChannelByExternalReferenceCode",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Channel"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/Channel"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Channel"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Channel"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putChannelByExternalReferenceCode } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putChannelByExternalReferenceCode({\n        client,\n        path: {\n           externalReferenceCode: \"8635\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/channels/by-externalReferenceCode/{externalReferenceCode}', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Channel"
                ],
                "operationId": "deleteChannelByExternalReferenceCode",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteChannelByExternalReferenceCode } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteChannelByExternalReferenceCode({\n        client,\n        path: {\n           externalReferenceCode: \"7479\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/channels/by-externalReferenceCode/{externalReferenceCode}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Channel"
                ],
                "operationId": "patchChannelByExternalReferenceCode",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Channel"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/Channel"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Channel"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Channel"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchChannelByExternalReferenceCode } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchChannelByExternalReferenceCode({\n        client,\n        path: {\n           externalReferenceCode: \"95\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/channels/by-externalReferenceCode/{externalReferenceCode}', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/account-address-channels/{accountAddressChannelId}/channel": {
            "get": {
                "tags": [
                    "Channel"
                ],
                "operationId": "getAccountAddressChannelChannel",
                "parameters": [
                    {
                        "name": "accountAddressChannelId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Channel"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Channel"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getAccountAddressChannelChannel } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getAccountAddressChannelChannel({\n        client,\n        path: {\n           accountAddressChannelId: \"3823\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/account-address-channels/{accountAddressChannelId}/channel', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/channels": {
            "get": {
                "tags": [
                    "Channel"
                ],
                "description": "Retrieves channels.",
                "operationId": "getChannelsPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageChannel"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageChannel"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getChannelsPage } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannelsPage({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/channels', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "post": {
                "tags": [
                    "Channel"
                ],
                "operationId": "postChannel",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Channel"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/Channel"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Channel"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Channel"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postChannel } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postChannel({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/channels', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/channels/export-batch": {
            "post": {
                "tags": [
                    "Channel"
                ],
                "operationId": "postChannelsPageExportBatch",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contentType",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fieldNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postChannelsPageExportBatch } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postChannelsPageExportBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/channels/export-batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/channels/by-externalReferenceCode/{externalReferenceCode}/default-category-display-pages": {
            "get": {
                "tags": [
                    "DefaultCategoryDisplayPage"
                ],
                "operationId": "getChannelByExternalReferenceCodeDefaultCategoryDisplayPage",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultCategoryDisplayPage"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultCategoryDisplayPage"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getChannelByExternalReferenceCodeDefaultCategoryDisplayPage } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannelByExternalReferenceCodeDefaultCategoryDisplayPage({\n        client,\n        path: {\n           externalReferenceCode: \"2547\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/channels/by-externalReferenceCode/{externalReferenceCode}/default-category-display-pages', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "post": {
                "tags": [
                    "DefaultCategoryDisplayPage"
                ],
                "operationId": "postChannelByExternalReferenceCodeDefaultCategoryDisplayPage",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DefaultCategoryDisplayPage"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/DefaultCategoryDisplayPage"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultCategoryDisplayPage"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultCategoryDisplayPage"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postChannelByExternalReferenceCodeDefaultCategoryDisplayPage } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postChannelByExternalReferenceCodeDefaultCategoryDisplayPage({\n        client,\n        path: {\n           externalReferenceCode: \"8856\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/channels/by-externalReferenceCode/{externalReferenceCode}/default-category-display-pages', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "DefaultCategoryDisplayPage"
                ],
                "operationId": "deleteChannelByExternalReferenceCodeDefaultCategoryDisplayPage",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteChannelByExternalReferenceCodeDefaultCategoryDisplayPage } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteChannelByExternalReferenceCodeDefaultCategoryDisplayPage({\n        client,\n        path: {\n           externalReferenceCode: \"686\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/channels/by-externalReferenceCode/{externalReferenceCode}/default-category-display-pages', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/channels/{id}/default-category-display-pages": {
            "get": {
                "tags": [
                    "DefaultCategoryDisplayPage"
                ],
                "operationId": "getChannelIdDefaultCategoryDisplayPage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultCategoryDisplayPage"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultCategoryDisplayPage"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getChannelIdDefaultCategoryDisplayPage } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannelIdDefaultCategoryDisplayPage({\n        client,\n        path: {\n           id: \"6695\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/channels/{id}/default-category-display-pages', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "post": {
                "tags": [
                    "DefaultCategoryDisplayPage"
                ],
                "operationId": "postChannelIdDefaultCategoryDisplayPage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DefaultCategoryDisplayPage"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/DefaultCategoryDisplayPage"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultCategoryDisplayPage"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultCategoryDisplayPage"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postChannelIdDefaultCategoryDisplayPage } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postChannelIdDefaultCategoryDisplayPage({\n        client,\n        path: {\n           id: \"9134\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/channels/{id}/default-category-display-pages', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "DefaultCategoryDisplayPage"
                ],
                "operationId": "deleteChannelIdDefaultCategoryDisplayPage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteChannelIdDefaultCategoryDisplayPage } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteChannelIdDefaultCategoryDisplayPage({\n        client,\n        path: {\n           id: \"6501\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/channels/{id}/default-category-display-pages', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/channels/by-externalReferenceCode/{externalReferenceCode}/default-product-display-page": {
            "get": {
                "tags": [
                    "DefaultProductDisplayPage"
                ],
                "operationId": "getChannelByExternalReferenceCodeDefaultProductDisplayPage",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultProductDisplayPage"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultProductDisplayPage"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getChannelByExternalReferenceCodeDefaultProductDisplayPage } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannelByExternalReferenceCodeDefaultProductDisplayPage({\n        client,\n        path: {\n           externalReferenceCode: \"5166\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/channels/by-externalReferenceCode/{externalReferenceCode}/default-product-display-page', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "post": {
                "tags": [
                    "DefaultProductDisplayPage"
                ],
                "operationId": "postChannelByExternalReferenceCodeDefaultProductDisplayPage",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DefaultProductDisplayPage"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/DefaultProductDisplayPage"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultProductDisplayPage"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultProductDisplayPage"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postChannelByExternalReferenceCodeDefaultProductDisplayPage } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postChannelByExternalReferenceCodeDefaultProductDisplayPage({\n        client,\n        path: {\n           externalReferenceCode: \"7244\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/channels/by-externalReferenceCode/{externalReferenceCode}/default-product-display-page', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "DefaultProductDisplayPage"
                ],
                "operationId": "deleteChannelByExternalReferenceCodeDefaultProductDisplayPage",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteChannelByExternalReferenceCodeDefaultProductDisplayPage } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteChannelByExternalReferenceCodeDefaultProductDisplayPage({\n        client,\n        path: {\n           externalReferenceCode: \"662\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/channels/by-externalReferenceCode/{externalReferenceCode}/default-product-display-page', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/channels/{id}/default-product-display-pages": {
            "get": {
                "tags": [
                    "DefaultProductDisplayPage"
                ],
                "operationId": "getChannelIdDefaultProductDisplayPage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultProductDisplayPage"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultProductDisplayPage"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getChannelIdDefaultProductDisplayPage } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannelIdDefaultProductDisplayPage({\n        client,\n        path: {\n           id: \"1801\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/channels/{id}/default-product-display-pages', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "post": {
                "tags": [
                    "DefaultProductDisplayPage"
                ],
                "operationId": "postChannelIdDefaultProductDisplayPage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DefaultProductDisplayPage"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/DefaultProductDisplayPage"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultProductDisplayPage"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/DefaultProductDisplayPage"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postChannelIdDefaultProductDisplayPage } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postChannelIdDefaultProductDisplayPage({\n        client,\n        path: {\n           id: \"3381\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/channels/{id}/default-product-display-pages', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "DefaultProductDisplayPage"
                ],
                "operationId": "deleteChannelIdDefaultProductDisplayPage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteChannelIdDefaultProductDisplayPage } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteChannelIdDefaultProductDisplayPage({\n        client,\n        path: {\n           id: \"1856\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/channels/{id}/default-product-display-pages', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/payment-method-group-rel-order-types/{paymentMethodGroupRelOrderTypeId}/order-type": {
            "get": {
                "tags": [
                    "OrderType"
                ],
                "operationId": "getPaymentMethodGroupRelOrderTypeOrderType",
                "parameters": [
                    {
                        "name": "paymentMethodGroupRelOrderTypeId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderType"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderType"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getPaymentMethodGroupRelOrderTypeOrderType } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getPaymentMethodGroupRelOrderTypeOrderType({\n        client,\n        path: {\n           paymentMethodGroupRelOrderTypeId: \"6657\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/payment-method-group-rel-order-types/{paymentMethodGroupRelOrderTypeId}/order-type', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/shipping-fixed-option-order-types/{shippingFixedOptionOrderTypeId}/order-type": {
            "get": {
                "tags": [
                    "OrderType"
                ],
                "operationId": "getShippingFixedOptionOrderTypeOrderType",
                "parameters": [
                    {
                        "name": "shippingFixedOptionOrderTypeId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderType"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderType"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getShippingFixedOptionOrderTypeOrderType } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getShippingFixedOptionOrderTypeOrderType({\n        client,\n        path: {\n           shippingFixedOptionOrderTypeId: \"6665\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/shipping-fixed-option-order-types/{shippingFixedOptionOrderTypeId}/order-type', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/payment-method-group-rel-order-types/{paymentMethodGroupRelOrderTypeId}": {
            "delete": {
                "tags": [
                    "PaymentMethodGroupRelOrderType"
                ],
                "operationId": "deletePaymentMethodGroupRelOrderType",
                "parameters": [
                    {
                        "name": "paymentMethodGroupRelOrderTypeId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deletePaymentMethodGroupRelOrderType } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deletePaymentMethodGroupRelOrderType({\n        client,\n        path: {\n           paymentMethodGroupRelOrderTypeId: \"4601\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/payment-method-group-rel-order-types/{paymentMethodGroupRelOrderTypeId}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/payment-method-group-rel-order-types/batch": {
            "delete": {
                "tags": [
                    "PaymentMethodGroupRelOrderType"
                ],
                "operationId": "deletePaymentMethodGroupRelOrderTypeBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deletePaymentMethodGroupRelOrderTypeBatch } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deletePaymentMethodGroupRelOrderTypeBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/payment-method-group-rel-order-types/batch', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/payment-method-group-rels/{id}/payment-method-group-rel-order-types": {
            "get": {
                "tags": [
                    "PaymentMethodGroupRelOrderType"
                ],
                "operationId": "getPaymentMethodGroupRelIdPaymentMethodGroupRelOrderTypesPage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePaymentMethodGroupRelOrderType"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePaymentMethodGroupRelOrderType"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getPaymentMethodGroupRelIdPaymentMethodGroupRelOrderTypesPage } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getPaymentMethodGroupRelIdPaymentMethodGroupRelOrderTypesPage({\n        client,\n        path: {\n           id: \"9207\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/payment-method-group-rels/{id}/payment-method-group-rel-order-types', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "post": {
                "tags": [
                    "PaymentMethodGroupRelOrderType"
                ],
                "operationId": "postPaymentMethodGroupRelIdPaymentMethodGroupRelOrderType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentMethodGroupRelOrderType"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentMethodGroupRelOrderType"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentMethodGroupRelOrderType"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentMethodGroupRelOrderType"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postPaymentMethodGroupRelIdPaymentMethodGroupRelOrderType } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postPaymentMethodGroupRelIdPaymentMethodGroupRelOrderType({\n        client,\n        path: {\n           id: \"9921\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/payment-method-group-rels/{id}/payment-method-group-rel-order-types', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/payment-method-group-rel-terms/{paymentMethodGroupRelTermId}": {
            "delete": {
                "tags": [
                    "PaymentMethodGroupRelTerm"
                ],
                "operationId": "deletePaymentMethodGroupRelTerm",
                "parameters": [
                    {
                        "name": "paymentMethodGroupRelTermId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deletePaymentMethodGroupRelTerm } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deletePaymentMethodGroupRelTerm({\n        client,\n        path: {\n           paymentMethodGroupRelTermId: \"4878\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/payment-method-group-rel-terms/{paymentMethodGroupRelTermId}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/payment-method-group-rel-terms/batch": {
            "delete": {
                "tags": [
                    "PaymentMethodGroupRelTerm"
                ],
                "operationId": "deletePaymentMethodGroupRelTermBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deletePaymentMethodGroupRelTermBatch } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deletePaymentMethodGroupRelTermBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/payment-method-group-rel-terms/batch', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/payment-method-group-rels/{id}/payment-method-group-rel-terms": {
            "get": {
                "tags": [
                    "PaymentMethodGroupRelTerm"
                ],
                "operationId": "getPaymentMethodGroupRelIdPaymentMethodGroupRelTermsPage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePaymentMethodGroupRelTerm"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePaymentMethodGroupRelTerm"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getPaymentMethodGroupRelIdPaymentMethodGroupRelTermsPage } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getPaymentMethodGroupRelIdPaymentMethodGroupRelTermsPage({\n        client,\n        path: {\n           id: \"4563\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/payment-method-group-rels/{id}/payment-method-group-rel-terms', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "post": {
                "tags": [
                    "PaymentMethodGroupRelTerm"
                ],
                "operationId": "postPaymentMethodGroupRelIdPaymentMethodGroupRelTerm",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentMethodGroupRelTerm"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/PaymentMethodGroupRelTerm"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentMethodGroupRelTerm"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentMethodGroupRelTerm"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postPaymentMethodGroupRelIdPaymentMethodGroupRelTerm } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postPaymentMethodGroupRelIdPaymentMethodGroupRelTerm({\n        client,\n        path: {\n           id: \"6363\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/payment-method-group-rels/{id}/payment-method-group-rel-terms', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/product-display-pages/{id}": {
            "get": {
                "tags": [
                    "ProductDisplayPage"
                ],
                "operationId": "getProductDisplayPage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductDisplayPage"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductDisplayPage"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getProductDisplayPage } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getProductDisplayPage({\n        client,\n        path: {\n           id: \"9624\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/product-display-pages/{id}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "ProductDisplayPage"
                ],
                "operationId": "deleteProductDisplayPage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteProductDisplayPage } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteProductDisplayPage({\n        client,\n        path: {\n           id: \"3047\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/product-display-pages/{id}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "ProductDisplayPage"
                ],
                "operationId": "patchProductDisplayPage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductDisplayPage"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductDisplayPage"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductDisplayPage"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductDisplayPage"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchProductDisplayPage } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchProductDisplayPage({\n        client,\n        path: {\n           id: \"1505\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/product-display-pages/{id}', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/product-display-pages/batch": {
            "delete": {
                "tags": [
                    "ProductDisplayPage"
                ],
                "operationId": "deleteProductDisplayPageBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteProductDisplayPageBatch } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteProductDisplayPageBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/product-display-pages/batch', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/channels/by-externalReferenceCode/{externalReferenceCode}/product-display-pages": {
            "get": {
                "tags": [
                    "ProductDisplayPage"
                ],
                "operationId": "getChannelByExternalReferenceCodeProductDisplayPagesPage",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageProductDisplayPage"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageProductDisplayPage"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getChannelByExternalReferenceCodeProductDisplayPagesPage } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannelByExternalReferenceCodeProductDisplayPagesPage({\n        client,\n        path: {\n           externalReferenceCode: \"8341\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/channels/by-externalReferenceCode/{externalReferenceCode}/product-display-pages', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "post": {
                "tags": [
                    "ProductDisplayPage"
                ],
                "operationId": "postChannelByExternalReferenceCodeProductDisplayPage",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductDisplayPage"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductDisplayPage"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductDisplayPage"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductDisplayPage"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postChannelByExternalReferenceCodeProductDisplayPage } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postChannelByExternalReferenceCodeProductDisplayPage({\n        client,\n        path: {\n           externalReferenceCode: \"8364\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/channels/by-externalReferenceCode/{externalReferenceCode}/product-display-pages', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/channels/{id}/product-display-pages": {
            "get": {
                "tags": [
                    "ProductDisplayPage"
                ],
                "operationId": "getChannelIdProductDisplayPagesPage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageProductDisplayPage"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageProductDisplayPage"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getChannelIdProductDisplayPagesPage } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannelIdProductDisplayPagesPage({\n        client,\n        path: {\n           id: \"9719\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/channels/{id}/product-display-pages', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "post": {
                "tags": [
                    "ProductDisplayPage"
                ],
                "operationId": "postChannelIdProductDisplayPage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductDisplayPage"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/ProductDisplayPage"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductDisplayPage"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductDisplayPage"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postChannelIdProductDisplayPage } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postChannelIdProductDisplayPage({\n        client,\n        path: {\n           id: \"1774\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/channels/{id}/product-display-pages', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/shipping-fixed-option-order-types/{shippingFixedOptionOrderTypeId}": {
            "delete": {
                "tags": [
                    "ShippingFixedOptionOrderType"
                ],
                "operationId": "deleteShippingFixedOptionOrderType",
                "parameters": [
                    {
                        "name": "shippingFixedOptionOrderTypeId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteShippingFixedOptionOrderType } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteShippingFixedOptionOrderType({\n        client,\n        path: {\n           shippingFixedOptionOrderTypeId: \"4041\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/shipping-fixed-option-order-types/{shippingFixedOptionOrderTypeId}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/shipping-fixed-option-order-types/batch": {
            "delete": {
                "tags": [
                    "ShippingFixedOptionOrderType"
                ],
                "operationId": "deleteShippingFixedOptionOrderTypeBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteShippingFixedOptionOrderTypeBatch } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteShippingFixedOptionOrderTypeBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/shipping-fixed-option-order-types/batch', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/shipping-fixed-options/{id}/shipping-fixed-option-order-types": {
            "get": {
                "tags": [
                    "ShippingFixedOptionOrderType"
                ],
                "operationId": "getShippingFixedOptionIdShippingFixedOptionOrderTypesPage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageShippingFixedOptionOrderType"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageShippingFixedOptionOrderType"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getShippingFixedOptionIdShippingFixedOptionOrderTypesPage } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getShippingFixedOptionIdShippingFixedOptionOrderTypesPage({\n        client,\n        path: {\n           id: \"9543\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/shipping-fixed-options/{id}/shipping-fixed-option-order-types', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "post": {
                "tags": [
                    "ShippingFixedOptionOrderType"
                ],
                "operationId": "postShippingFixedOptionIdShippingFixedOptionOrderType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShippingFixedOptionOrderType"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/ShippingFixedOptionOrderType"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShippingFixedOptionOrderType"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShippingFixedOptionOrderType"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postShippingFixedOptionIdShippingFixedOptionOrderType } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postShippingFixedOptionIdShippingFixedOptionOrderType({\n        client,\n        path: {\n           id: \"2632\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/shipping-fixed-options/{id}/shipping-fixed-option-order-types', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/shipping-fixed-option-terms/{shippingFixedOptionTermId}": {
            "delete": {
                "tags": [
                    "ShippingFixedOptionTerm"
                ],
                "operationId": "deleteShippingFixedOptionTerm",
                "parameters": [
                    {
                        "name": "shippingFixedOptionTermId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteShippingFixedOptionTerm } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteShippingFixedOptionTerm({\n        client,\n        path: {\n           shippingFixedOptionTermId: \"9976\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/shipping-fixed-option-terms/{shippingFixedOptionTermId}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/shipping-fixed-option-terms/batch": {
            "delete": {
                "tags": [
                    "ShippingFixedOptionTerm"
                ],
                "operationId": "deleteShippingFixedOptionTermBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteShippingFixedOptionTermBatch } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteShippingFixedOptionTermBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/shipping-fixed-option-terms/batch', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/shipping-fixed-options/{id}/shipping-fixed-option-terms": {
            "get": {
                "tags": [
                    "ShippingFixedOptionTerm"
                ],
                "operationId": "getShippingFixedOptionIdShippingFixedOptionTermsPage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageShippingFixedOptionTerm"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageShippingFixedOptionTerm"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getShippingFixedOptionIdShippingFixedOptionTermsPage } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getShippingFixedOptionIdShippingFixedOptionTermsPage({\n        client,\n        path: {\n           id: \"1552\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/shipping-fixed-options/{id}/shipping-fixed-option-terms', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "post": {
                "tags": [
                    "ShippingFixedOptionTerm"
                ],
                "operationId": "postShippingFixedOptionIdShippingFixedOptionTerm",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShippingFixedOptionTerm"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/ShippingFixedOptionTerm"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShippingFixedOptionTerm"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShippingFixedOptionTerm"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postShippingFixedOptionIdShippingFixedOptionTerm } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postShippingFixedOptionIdShippingFixedOptionTerm({\n        client,\n        path: {\n           id: \"6699\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/shipping-fixed-options/{id}/shipping-fixed-option-terms', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/channels/{channelId}/shipping-methods": {
            "get": {
                "tags": [
                    "ShippingMethod"
                ],
                "description": "Retrieves channel shipping methods.",
                "operationId": "getChannelShippingMethodsPage",
                "parameters": [
                    {
                        "name": "channelId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageShippingMethod"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageShippingMethod"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getChannelShippingMethodsPage } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannelShippingMethodsPage({\n        client,\n        path: {\n           channelId: \"7358\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/channels/{channelId}/shipping-methods', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/channels/{channelId}/shipping-methods/export-batch": {
            "post": {
                "tags": [
                    "ShippingMethod"
                ],
                "operationId": "postChannelShippingMethodsPageExportBatch",
                "parameters": [
                    {
                        "name": "channelId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contentType",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fieldNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postChannelShippingMethodsPageExportBatch } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postChannelShippingMethodsPageExportBatch({\n        client,\n        path: {\n           channelId: \"5281\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/channels/{channelId}/shipping-methods/export-batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/tax-categories": {
            "get": {
                "tags": [
                    "TaxCategory"
                ],
                "operationId": "getTaxCategoriesPage",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageTaxCategory"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageTaxCategory"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getTaxCategoriesPage } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getTaxCategoriesPage({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/tax-categories', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/tax-categories/{id}": {
            "get": {
                "tags": [
                    "TaxCategory"
                ],
                "operationId": "getTaxCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxCategory"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaxCategory"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getTaxCategory } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getTaxCategory({\n        client,\n        path: {\n           id: \"5135\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/tax-categories/{id}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/tax-categories/export-batch": {
            "post": {
                "tags": [
                    "TaxCategory"
                ],
                "operationId": "postTaxCategoriesPageExportBatch",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contentType",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fieldNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postTaxCategoriesPageExportBatch } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postTaxCategoriesPageExportBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/tax-categories/export-batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/payment-method-group-rel-terms/{paymentMethodGroupRelTermId}/term": {
            "get": {
                "tags": [
                    "Term"
                ],
                "operationId": "getPaymentMethodGroupRelTermTerm",
                "parameters": [
                    {
                        "name": "paymentMethodGroupRelTermId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Term"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Term"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getPaymentMethodGroupRelTermTerm } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getPaymentMethodGroupRelTermTerm({\n        client,\n        path: {\n           paymentMethodGroupRelTermId: \"361\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/payment-method-group-rel-terms/{paymentMethodGroupRelTermId}/term', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-channel/v1.0/shipping-fixed-option-terms/{shippingFixedOptionTermId}/term": {
            "get": {
                "tags": [
                    "Term"
                ],
                "operationId": "getShippingFixedOptionTermTerm",
                "parameters": [
                    {
                        "name": "shippingFixedOptionTermId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Term"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Term"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getShippingFixedOptionTermTerm } from 'liferay-headless-rest-client/headless-commerce-admin-channel-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getShippingFixedOptionTermTerm({\n        client,\n        path: {\n           shippingFixedOptionTermId: \"7021\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-channel/v1.0/shipping-fixed-option-terms/{shippingFixedOptionTermId}/term', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "AccountAddressChannel": {
                "required": [
                    "addressChannelId",
                    "addressId"
                ],
                "type": "object",
                "properties": {
                    "accountAddressChannelId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 30643
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "readOnly": true
                    },
                    "addressChannelExternalReferenceCode": {
                        "type": "string",
                        "example": "PAB-34098-789-N"
                    },
                    "addressChannelId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30130
                    },
                    "addressExternalReferenceCode": {
                        "type": "string",
                        "example": "DAB-34098-789-N"
                    },
                    "addressId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30324
                    },
                    "channel": {
                        "$ref": "#/components/schemas/Channel"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.admin.channel.dto.v1_0.AccountAddressChannel"
                    }
                },
                "xml": {
                    "name": "AccountAddressChannel"
                },
                "x-filterable": []
            },
            "Channel": {
                "required": [
                    "currencyCode",
                    "name",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "accountExternalReferenceCode": {
                        "type": "string",
                        "example": "DAB-34098-789-N"
                    },
                    "accountId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30130
                    },
                    "currencyCode": {
                        "type": "string"
                    },
                    "currencyExternalReferenceCode": {
                        "type": "string",
                        "example": "AAB-34098-789-N"
                    },
                    "currencyId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30130
                    },
                    "externalReferenceCode": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "siteGroupId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "type": {
                        "type": "string"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.admin.channel.dto.v1_0.Channel"
                    }
                },
                "xml": {
                    "name": "Channel"
                },
                "x-filterable": [
                    "name",
                    "siteGroupId"
                ]
            },
            "Facet": {
                "type": "object",
                "properties": {
                    "facetCriteria": {
                        "type": "string"
                    },
                    "facetValues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FacetValue"
                        }
                    }
                },
                "x-filterable": []
            },
            "FacetValue": {
                "type": "object",
                "properties": {
                    "numberOfOccurrences": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "term": {
                        "type": "string"
                    }
                },
                "x-filterable": []
            },
            "PageAccountAddressChannel": {
                "type": "object",
                "properties": {
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AccountAddressChannel"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "Account": {
                "type": "object",
                "properties": {
                    "id": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30130
                    },
                    "name": {
                        "type": "string",
                        "example": "Account Name"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.admin.channel.dto.v1_0.Account"
                    },
                    "accountToOAuth2DxpAuthorization": {
                        "type": "array",
                        "description": "Information about the object relationship accountToOAuth2DxpAuthorization can be embedded with \"nestedFields\".",
                        "items": {
                            "$ref": "#/components/schemas/OAuth2DxpAuthorization"
                        }
                    },
                    "accountEntryToUserAdditionalInfo": {
                        "type": "array",
                        "description": "Information about the object relationship accountEntryToUserAdditionalInfo can be embedded with \"nestedFields\".",
                        "items": {
                            "$ref": "#/components/schemas/UserAdditionalInfo"
                        }
                    },
                    "company": {
                        "type": "string"
                    },
                    "accountEntryToPublisherAssets": {
                        "type": "array",
                        "description": "Information about the object relationship accountEntryToPublisherAssets can be embedded with \"nestedFields\".",
                        "items": {
                            "$ref": "#/components/schemas/PublisherAssets"
                        }
                    }
                },
                "xml": {
                    "name": "Account"
                },
                "x-filterable": []
            },
            "CategoryDisplayPage": {
                "type": "object",
                "properties": {
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "readOnly": true
                    },
                    "categoryExternalReferenceCode": {
                        "type": "string",
                        "example": "DAB-34098-789-N"
                    },
                    "categoryId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30130
                    },
                    "groupExternalReferenceCode": {
                        "type": "string",
                        "example": "DAB-34098-789-N"
                    },
                    "id": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 30130
                    },
                    "pageUuid": {
                        "type": "string"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.admin.channel.dto.v1_0.CategoryDisplayPage"
                    }
                },
                "xml": {
                    "name": "CategoryDisplayPage"
                },
                "x-filterable": []
            },
            "PageCategoryDisplayPage": {
                "type": "object",
                "properties": {
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CategoryDisplayPage"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "ChannelAccount": {
                "required": [
                    "accountId",
                    "channelId"
                ],
                "type": "object",
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/Account"
                    },
                    "accountExternalReferenceCode": {
                        "type": "string",
                        "example": "DAB-34098-789-N"
                    },
                    "accountId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30324
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "readOnly": true
                    },
                    "channelAccountId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 30643
                    },
                    "channelExternalReferenceCode": {
                        "type": "string",
                        "example": "PAB-34098-789-N"
                    },
                    "channelId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30130
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.admin.channel.dto.v1_0.ChannelAccount"
                    }
                },
                "xml": {
                    "name": "ChannelAccount"
                },
                "x-filterable": []
            },
            "PageChannelAccount": {
                "type": "object",
                "properties": {
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ChannelAccount"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "PageChannel": {
                "type": "object",
                "properties": {
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Channel"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "DefaultCategoryDisplayPage": {
                "type": "object",
                "properties": {
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "readOnly": true
                    },
                    "pageUuid": {
                        "type": "string"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.admin.channel.dto.v1_0.DefaultCategoryDisplayPage"
                    }
                },
                "xml": {
                    "name": "DefaultCategoryDisplayPage"
                },
                "x-filterable": []
            },
            "DefaultProductDisplayPage": {
                "type": "object",
                "properties": {
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "readOnly": true
                    },
                    "pageUuid": {
                        "type": "string"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.admin.channel.dto.v1_0.DefaultProductDisplayPage"
                    }
                },
                "xml": {
                    "name": "DefaultProductDisplayPage"
                },
                "x-filterable": []
            },
            "OrderType": {
                "type": "object",
                "properties": {
                    "id": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 30130
                    },
                    "name": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "example": "{en_US=Hand Saw, hr_HR=Product Name HR, hu_HU=Product Name HU}"
                        },
                        "example": "{en_US=Hand Saw, hr_HR=Product Name HR, hu_HU=Product Name HU}"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.admin.channel.dto.v1_0.OrderType"
                    }
                },
                "xml": {
                    "name": "OrderType"
                },
                "x-filterable": []
            },
            "PagePaymentMethodGroupRelOrderType": {
                "type": "object",
                "properties": {
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PaymentMethodGroupRelOrderType"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "PaymentMethodGroupRelOrderType": {
                "required": [
                    "orderTypeId",
                    "paymentMethodGroupRelId"
                ],
                "type": "object",
                "properties": {
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "readOnly": true
                    },
                    "orderType": {
                        "$ref": "#/components/schemas/OrderType"
                    },
                    "orderTypeExternalReferenceCode": {
                        "type": "string",
                        "example": "DAB-34098-789-N"
                    },
                    "orderTypeId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30324
                    },
                    "paymentMethodGroupRelId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30130
                    },
                    "paymentMethodGroupRelOrderTypeId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 30643
                    },
                    "priority": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.admin.channel.dto.v1_0.PaymentMethodGroupRelOrderType"
                    }
                },
                "xml": {
                    "name": "PaymentMethodGroupRelOrderType"
                },
                "x-filterable": []
            },
            "PagePaymentMethodGroupRelTerm": {
                "type": "object",
                "properties": {
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PaymentMethodGroupRelTerm"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "PaymentMethodGroupRelTerm": {
                "required": [
                    "paymentMethodGroupRelId",
                    "termId"
                ],
                "type": "object",
                "properties": {
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "readOnly": true
                    },
                    "paymentMethodGroupRelId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30324
                    },
                    "paymentMethodGroupRelTermId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 30643
                    },
                    "term": {
                        "$ref": "#/components/schemas/Term"
                    },
                    "termExternalReferenceCode": {
                        "type": "string",
                        "example": "PAB-34098-789-N"
                    },
                    "termId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30130
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.admin.channel.dto.v1_0.PaymentMethodGroupRelTerm"
                    }
                },
                "xml": {
                    "name": "PaymentMethodGroupRelTerm"
                },
                "x-filterable": []
            },
            "Term": {
                "type": "object",
                "properties": {
                    "id": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 30130
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true,
                        "example": "simple"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.admin.channel.dto.v1_0.Term"
                    }
                },
                "xml": {
                    "name": "Term"
                },
                "x-filterable": []
            },
            "PageProductDisplayPage": {
                "type": "object",
                "properties": {
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductDisplayPage"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "ProductDisplayPage": {
                "type": "object",
                "properties": {
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "readOnly": true
                    },
                    "id": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 30324
                    },
                    "pageTemplateUuid": {
                        "type": "string"
                    },
                    "pageUuid": {
                        "type": "string"
                    },
                    "productExternalReferenceCode": {
                        "type": "string",
                        "example": "DAB-34098-789-N"
                    },
                    "productId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30324
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.admin.channel.dto.v1_0.ProductDisplayPage"
                    }
                },
                "xml": {
                    "name": "ProductDisplayPage"
                },
                "x-filterable": []
            },
            "PageShippingFixedOptionOrderType": {
                "type": "object",
                "properties": {
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShippingFixedOptionOrderType"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "ShippingFixedOptionOrderType": {
                "required": [
                    "orderTypeId",
                    "shippingFixedOptionId"
                ],
                "type": "object",
                "properties": {
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "readOnly": true
                    },
                    "orderType": {
                        "$ref": "#/components/schemas/OrderType"
                    },
                    "orderTypeExternalReferenceCode": {
                        "type": "string",
                        "example": "DAB-34098-789-N"
                    },
                    "orderTypeId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30324
                    },
                    "priority": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "shippingFixedOptionId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30130
                    },
                    "shippingFixedOptionOrderTypeId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 30643
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.admin.channel.dto.v1_0.ShippingFixedOptionOrderType"
                    }
                },
                "xml": {
                    "name": "ShippingFixedOptionOrderType"
                },
                "x-filterable": []
            },
            "PageShippingFixedOptionTerm": {
                "type": "object",
                "properties": {
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShippingFixedOptionTerm"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "ShippingFixedOptionTerm": {
                "required": [
                    "shippingFixedOptionId",
                    "termId"
                ],
                "type": "object",
                "properties": {
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "readOnly": true
                    },
                    "shippingFixedOptionId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30324
                    },
                    "shippingFixedOptionTermId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 30643
                    },
                    "term": {
                        "$ref": "#/components/schemas/Term"
                    },
                    "termExternalReferenceCode": {
                        "type": "string",
                        "example": "PAB-34098-789-N"
                    },
                    "termId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30130
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.admin.channel.dto.v1_0.ShippingFixedOptionTerm"
                    }
                },
                "xml": {
                    "name": "ShippingFixedOptionTerm"
                },
                "x-filterable": []
            },
            "PageShippingMethod": {
                "type": "object",
                "properties": {
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShippingMethod"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "ShippingMethod": {
                "type": "object",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "example": true
                    },
                    "description": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "example": "{en_US=Professional hand stainless steel saw for wood. Made to last and saw forever. Made of best steel, hr_HR=Product Description HR, hu_HU=Product Description HU}"
                        },
                        "example": "{en_US=Professional hand stainless steel saw for wood. Made to last and saw forever. Made of best steel, hr_HR=Product Description HR, hu_HU=Product Description HU}"
                    },
                    "engineKey": {
                        "type": "string",
                        "example": "DAB-34098-789-N"
                    },
                    "id": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30324
                    },
                    "name": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "example": "{en_US=Professional hand stainless steel saw for wood. Made to last and saw forever. Made of best steel, hr_HR=Product Description HR, hu_HU=Product Description HU}"
                        },
                        "example": "{en_US=Professional hand stainless steel saw for wood. Made to last and saw forever. Made of best steel, hr_HR=Product Description HR, hu_HU=Product Description HU}"
                    },
                    "priority": {
                        "type": "number",
                        "format": "double",
                        "example": 1.2
                    },
                    "shippingOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShippingOption"
                        }
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.admin.channel.dto.v1_0.ShippingMethod"
                    }
                },
                "xml": {
                    "name": "ShippingMethod"
                },
                "x-filterable": []
            },
            "ShippingOption": {
                "type": "object",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "example": true
                    },
                    "amount": {
                        "type": "number",
                        "format": "double",
                        "example": 1.2
                    },
                    "description": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "example": "{en_US=Professional hand stainless steel saw for wood. Made to last and saw forever. Made of best steel, hr_HR=Product Description HR, hu_HU=Product Description HU}"
                        },
                        "example": "{en_US=Professional hand stainless steel saw for wood. Made to last and saw forever. Made of best steel, hr_HR=Product Description HR, hu_HU=Product Description HU}"
                    },
                    "id": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30324
                    },
                    "name": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "example": "{en_US=Professional hand stainless steel saw for wood. Made to last and saw forever. Made of best steel, hr_HR=Product Description HR, hu_HU=Product Description HU}"
                        },
                        "example": "{en_US=Professional hand stainless steel saw for wood. Made to last and saw forever. Made of best steel, hr_HR=Product Description HR, hu_HU=Product Description HU}"
                    },
                    "priority": {
                        "type": "number",
                        "format": "double",
                        "example": 1.2
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.admin.channel.dto.v1_0.ShippingOption"
                    }
                },
                "xml": {
                    "name": "ShippingOption"
                },
                "x-filterable": []
            },
            "PageTaxCategory": {
                "type": "object",
                "properties": {
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaxCategory"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "TaxCategory": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "description": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "example": "{en_US=Croatia, hr_HR=Hrvatska, hu_HU=Horvatorszag}"
                        },
                        "example": "{en_US=Croatia, hr_HR=Hrvatska, hu_HU=Horvatorszag}"
                    },
                    "groupId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 23130
                    },
                    "id": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30130
                    },
                    "name": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "example": "{en_US=Croatia, hr_HR=Hrvatska, hu_HU=Horvatorszag}"
                        },
                        "example": "{en_US=Croatia, hr_HR=Hrvatska, hu_HU=Horvatorszag}"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.admin.channel.dto.v1_0.TaxCategory"
                    }
                },
                "xml": {
                    "name": "TaxCategory"
                },
                "x-filterable": []
            },
            "OAuth2DxpAuthorization": {
                "type": "object",
                "x-filterable": []
            },
            "UserAdditionalInfo": {
                "type": "object",
                "x-filterable": []
            },
            "PublisherAssets": {
                "type": "object",
                "x-filterable": []
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "description": "JWT Bearer token authentication"
            },
            "basicAuth": {
                "type": "http",
                "scheme": "basic",
                "description": "Basic HTTP authentication"
            },
            "apiKeyHeader": {
                "type": "apiKey",
                "in": "header",
                "name": "X-API-Key",
                "description": "API key request header"
            },
            "apiKeyQuery": {
                "type": "apiKey",
                "in": "query",
                "name": "api_key",
                "description": "API key query parameter"
            },
            "apiKeyCookie": {
                "type": "apiKey",
                "in": "cookie",
                "name": "api_key",
                "description": "API key browser cookie"
            },
            "oAuth2": {
                "type": "oauth2",
                "description": "OAuth 2.0 authentication",
                "flows": {
                    "authorizationCode": {
                        "authorizationUrl": "https://galaxy.scalar.com/oauth/authorize",
                        "tokenUrl": "https://galaxy.scalar.com/oauth/token",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    },
                    "clientCredentials": {
                        "tokenUrl": "https://galaxy.scalar.com/oauth/token",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    },
                    "implicit": {
                        "authorizationUrl": "https://galaxy.scalar.com/oauth/authorize",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    },
                    "password": {
                        "tokenUrl": "https://galaxy.scalar.com/oauth/token",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    }
                }
            },
            "openIdConnect": {
                "type": "openIdConnect",
                "openIdConnectUrl": "https://galaxy.scalar.com/.well-known/openid-configuration",
                "description": "OpenID Connect Authentication"
            }
        }
    },
    "security": [
        {
            "bearerAuth": []
        },
        {
            "basicAuth": []
        },
        {
            "apiKeyQuery": []
        },
        {
            "apiKeyHeader": []
        },
        {
            "apiKeyCookie": []
        },
        {
            "oAuth2": []
        },
        {
            "openIdConnect": []
        }
    ]
}