{
    "openapi": "3.0.1",
    "info": {
        "title": "Headless Delivery Commerce Order API",
        "description": "#### TypeScript SDK Code Sample\n\n```typescript\nimport { createClient } from 'liferay-headless-rest-client';\nimport { postPlacedOrderByExternalReferenceCodeAttachmentByBase64 } from 'liferay-headless-rest-client/headless-commerce-delivery-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postPlacedOrderByExternalReferenceCodeAttachmentByBase64({\n        client,\n        path: {\n           externalReferenceCode: \"2865\",\n        },\n    });\n\n    console.log(data);\n}\n```\n#### Java installation:\n\nHeadless Delivery Commerce Order API. A Java client JAR is available for use with the group ID 'com.liferay', artifact ID 'com.liferay.headless.commerce.delivery.order.client', and version '1.0.28'.\n\n```gradle\nimplementation group: \"com.liferay\", name: \"com.liferay.headless.commerce.delivery.order.client\", version: \"latest\"\n```\n\nReference: https://mvnrepository.com/artifact/com.liferay/com.liferay.headless.commerce.delivery.order.client/latest",
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "v1.0"
    },
    "servers": [
        {
            "url": "http://localhost:8080"
        }
    ],
    "paths": {
        "/o/headless-commerce-delivery-order/v1.0/placed-orders/by-externalReferenceCode/{externalReferenceCode}/attachments/by-base64": {
            "post": {
                "tags": [
                    "Attachment"
                ],
                "operationId": "postPlacedOrderByExternalReferenceCodeAttachmentByBase64",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AttachmentBase64"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/AttachmentBase64"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attachment"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attachment"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postPlacedOrderByExternalReferenceCodeAttachmentByBase64 } from 'liferay-headless-rest-client/headless-commerce-delivery-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postPlacedOrderByExternalReferenceCodeAttachmentByBase64({\n        client,\n        path: {\n           externalReferenceCode: \"1606\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-order/v1.0/placed-orders/by-externalReferenceCode/{externalReferenceCode}/attachments/by-base64', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-order/v1.0/placed-orders/{placedOrderId}/attachments/by-base64": {
            "post": {
                "tags": [
                    "Attachment"
                ],
                "operationId": "postPlacedOrderAttachmentByBase64",
                "parameters": [
                    {
                        "name": "placedOrderId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AttachmentBase64"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/AttachmentBase64"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attachment"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Attachment"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postPlacedOrderAttachmentByBase64 } from 'liferay-headless-rest-client/headless-commerce-delivery-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postPlacedOrderAttachmentByBase64({\n        client,\n        path: {\n           placedOrderId: \"3018\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-order/v1.0/placed-orders/{placedOrderId}/attachments/by-base64', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-order/v1.0/placed-orders/{placedOrderId}/attachments/{attachmentId}": {
            "delete": {
                "tags": [
                    "Attachment"
                ],
                "operationId": "deletePlacedOrderAttachment",
                "parameters": [
                    {
                        "name": "attachmentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "placedOrderId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deletePlacedOrderAttachment } from 'liferay-headless-rest-client/headless-commerce-delivery-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deletePlacedOrderAttachment({\n        client,\n        path: {\n           attachmentId: \"5026\",\n           placedOrderId: \"7907\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-order/v1.0/placed-orders/{placedOrderId}/attachments/{attachmentId}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-order/v1.0/placed-orders/{placedOrderId}/attachments": {
            "get": {
                "tags": [
                    "Attachment"
                ],
                "operationId": "getPlacedOrderAttachmentsPage",
                "parameters": [
                    {
                        "name": "placedOrderId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageAttachment"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageAttachment"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getPlacedOrderAttachmentsPage } from 'liferay-headless-rest-client/headless-commerce-delivery-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getPlacedOrderAttachmentsPage({\n        client,\n        path: {\n           placedOrderId: \"1882\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-order/v1.0/placed-orders/{placedOrderId}/attachments', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-order/v1.0/placed-orders/by-externalReferenceCode/{externalReferenceCode}/attachments": {
            "get": {
                "tags": [
                    "Attachment"
                ],
                "operationId": "getPlacedOrderByExternalReferenceCodeAttachmentsPage",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageAttachment"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageAttachment"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getPlacedOrderByExternalReferenceCodeAttachmentsPage } from 'liferay-headless-rest-client/headless-commerce-delivery-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getPlacedOrderByExternalReferenceCodeAttachmentsPage({\n        client,\n        path: {\n           externalReferenceCode: \"7747\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-order/v1.0/placed-orders/by-externalReferenceCode/{externalReferenceCode}/attachments', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-order/v1.0/placed-orders/by-externalReferenceCode/{externalReferenceCode}/attachments/by-externalReferenceCode/{attachmentExternalReferenceCode}": {
            "delete": {
                "tags": [
                    "Attachment"
                ],
                "operationId": "deletePlacedOrderByExternalReferenceCodeAttachmentByExternalReferenceCodeAttachmentExternalReferenceCode",
                "parameters": [
                    {
                        "name": "attachmentExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deletePlacedOrderByExternalReferenceCodeAttachmentByExternalReferenceCodeAttachmentExternalReferenceCode } from 'liferay-headless-rest-client/headless-commerce-delivery-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deletePlacedOrderByExternalReferenceCodeAttachmentByExternalReferenceCodeAttachmentExternalReferenceCode({\n        client,\n        path: {\n           attachmentExternalReferenceCode: \"7960\",\n           externalReferenceCode: \"9444\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-order/v1.0/placed-orders/by-externalReferenceCode/{externalReferenceCode}/attachments/by-externalReferenceCode/{attachmentExternalReferenceCode}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-order/v1.0/placed-orders/{placedOrderId}/attachments/export-batch": {
            "post": {
                "tags": [
                    "Attachment"
                ],
                "operationId": "postPlacedOrderAttachmentsPageExportBatch",
                "parameters": [
                    {
                        "name": "placedOrderId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contentType",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fieldNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postPlacedOrderAttachmentsPageExportBatch } from 'liferay-headless-rest-client/headless-commerce-delivery-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postPlacedOrderAttachmentsPageExportBatch({\n        client,\n        path: {\n           placedOrderId: \"9917\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-order/v1.0/placed-orders/{placedOrderId}/attachments/export-batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-order/v1.0/placed-orders/{placedOrderId}/order-transitions": {
            "get": {
                "tags": [
                    "OrderTransition"
                ],
                "description": "Retrieve order transitions of the given Placed Order.",
                "operationId": "getPlacedOrderOrderTransitionsPage",
                "parameters": [
                    {
                        "name": "placedOrderId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageOrderTransition"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageOrderTransition"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getPlacedOrderOrderTransitionsPage } from 'liferay-headless-rest-client/headless-commerce-delivery-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getPlacedOrderOrderTransitionsPage({\n        client,\n        path: {\n           placedOrderId: \"5934\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-order/v1.0/placed-orders/{placedOrderId}/order-transitions', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "post": {
                "tags": [
                    "OrderTransition"
                ],
                "operationId": "postPlacedOrderOrderTransition",
                "parameters": [
                    {
                        "name": "placedOrderId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderTransition"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderTransition"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderTransition"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderTransition"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postPlacedOrderOrderTransition } from 'liferay-headless-rest-client/headless-commerce-delivery-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postPlacedOrderOrderTransition({\n        client,\n        path: {\n           placedOrderId: \"590\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-order/v1.0/placed-orders/{placedOrderId}/order-transitions', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-order/v1.0/placed-orders/{placedOrderId}/order-transitions/batch": {
            "post": {
                "tags": [
                    "OrderTransition"
                ],
                "operationId": "postPlacedOrderOrderTransitionBatch",
                "parameters": [
                    {
                        "name": "placedOrderId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postPlacedOrderOrderTransitionBatch } from 'liferay-headless-rest-client/headless-commerce-delivery-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postPlacedOrderOrderTransitionBatch({\n        client,\n        path: {\n           placedOrderId: \"8232\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-order/v1.0/placed-orders/{placedOrderId}/order-transitions/batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-order/v1.0/placed-orders/{placedOrderId}/order-transitions/export-batch": {
            "post": {
                "tags": [
                    "OrderTransition"
                ],
                "operationId": "postPlacedOrderOrderTransitionsPageExportBatch",
                "parameters": [
                    {
                        "name": "placedOrderId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contentType",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fieldNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postPlacedOrderOrderTransitionsPageExportBatch } from 'liferay-headless-rest-client/headless-commerce-delivery-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postPlacedOrderOrderTransitionsPageExportBatch({\n        client,\n        path: {\n           placedOrderId: \"8619\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-order/v1.0/placed-orders/{placedOrderId}/order-transitions/export-batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-order/v1.0/placed-orders/by-externalReferenceCode/{externalReferenceCode}/placed-order-billing-address": {
            "get": {
                "tags": [
                    "PlacedOrderAddress"
                ],
                "description": "Retrieve placed order billing address.",
                "operationId": "getPlacedOrderByExternalReferenceCodePlacedOrderBillingAddress",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlacedOrderAddress"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlacedOrderAddress"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getPlacedOrderByExternalReferenceCodePlacedOrderBillingAddress } from 'liferay-headless-rest-client/headless-commerce-delivery-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getPlacedOrderByExternalReferenceCodePlacedOrderBillingAddress({\n        client,\n        path: {\n           externalReferenceCode: \"4319\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-order/v1.0/placed-orders/by-externalReferenceCode/{externalReferenceCode}/placed-order-billing-address', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-order/v1.0/placed-orders/{placedOrderId}/placed-order-billing-address": {
            "get": {
                "tags": [
                    "PlacedOrderAddress"
                ],
                "description": "Retrieve placed order billing address.",
                "operationId": "getPlacedOrderPlacedOrderBillingAddress",
                "parameters": [
                    {
                        "name": "placedOrderId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlacedOrderAddress"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlacedOrderAddress"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getPlacedOrderPlacedOrderBillingAddress } from 'liferay-headless-rest-client/headless-commerce-delivery-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getPlacedOrderPlacedOrderBillingAddress({\n        client,\n        path: {\n           placedOrderId: \"8267\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-order/v1.0/placed-orders/{placedOrderId}/placed-order-billing-address', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-order/v1.0/placed-orders/{placedOrderId}/placed-order-shipping-address": {
            "get": {
                "tags": [
                    "PlacedOrderAddress"
                ],
                "description": "Retrieve placed order shipping address.",
                "operationId": "getPlacedOrderPlacedOrderShippingAddress",
                "parameters": [
                    {
                        "name": "placedOrderId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlacedOrderAddress"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlacedOrderAddress"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getPlacedOrderPlacedOrderShippingAddress } from 'liferay-headless-rest-client/headless-commerce-delivery-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getPlacedOrderPlacedOrderShippingAddress({\n        client,\n        path: {\n           placedOrderId: \"8538\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-order/v1.0/placed-orders/{placedOrderId}/placed-order-shipping-address', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-order/v1.0/placed-orders/by-externalReferenceCode/{externalReferenceCode}/placed-order-shipping-address": {
            "get": {
                "tags": [
                    "PlacedOrderAddress"
                ],
                "description": "Retrieve placed order shipping address.",
                "operationId": "getPlacedOrderByExternalReferenceCodePlacedOrderShippingAddress",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlacedOrderAddress"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlacedOrderAddress"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getPlacedOrderByExternalReferenceCodePlacedOrderShippingAddress } from 'liferay-headless-rest-client/headless-commerce-delivery-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getPlacedOrderByExternalReferenceCodePlacedOrderShippingAddress({\n        client,\n        path: {\n           externalReferenceCode: \"4294\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-order/v1.0/placed-orders/by-externalReferenceCode/{externalReferenceCode}/placed-order-shipping-address', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-order/v1.0/placed-order-comments/{placedOrderCommentId}": {
            "get": {
                "tags": [
                    "PlacedOrderComment"
                ],
                "operationId": "getPlacedOrderComment",
                "parameters": [
                    {
                        "name": "placedOrderCommentId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlacedOrderComment"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlacedOrderComment"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getPlacedOrderComment } from 'liferay-headless-rest-client/headless-commerce-delivery-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getPlacedOrderComment({\n        client,\n        path: {\n           placedOrderCommentId: \"4067\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-order/v1.0/placed-order-comments/{placedOrderCommentId}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-order/v1.0/placed-orders/by-externalReferenceCode/{externalReferenceCode}/placed-order-comments": {
            "get": {
                "tags": [
                    "PlacedOrderComment"
                ],
                "operationId": "getPlacedOrderByExternalReferenceCodePlacedOrderCommentsPage",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePlacedOrderComment"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePlacedOrderComment"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getPlacedOrderByExternalReferenceCodePlacedOrderCommentsPage } from 'liferay-headless-rest-client/headless-commerce-delivery-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getPlacedOrderByExternalReferenceCodePlacedOrderCommentsPage({\n        client,\n        path: {\n           externalReferenceCode: \"8134\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-order/v1.0/placed-orders/by-externalReferenceCode/{externalReferenceCode}/placed-order-comments', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-order/v1.0/placed-orders/{placedOrderId}/placed-order-comments": {
            "get": {
                "tags": [
                    "PlacedOrderComment"
                ],
                "operationId": "getPlacedOrderPlacedOrderCommentsPage",
                "parameters": [
                    {
                        "name": "placedOrderId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePlacedOrderComment"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePlacedOrderComment"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getPlacedOrderPlacedOrderCommentsPage } from 'liferay-headless-rest-client/headless-commerce-delivery-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getPlacedOrderPlacedOrderCommentsPage({\n        client,\n        path: {\n           placedOrderId: \"5672\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-order/v1.0/placed-orders/{placedOrderId}/placed-order-comments', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-order/v1.0/placed-order-comments/by-externalReferenceCode/{externalReferenceCode}": {
            "get": {
                "tags": [
                    "PlacedOrderComment"
                ],
                "operationId": "getPlacedOrderCommentByExternalReferenceCode",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlacedOrderComment"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlacedOrderComment"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getPlacedOrderCommentByExternalReferenceCode } from 'liferay-headless-rest-client/headless-commerce-delivery-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getPlacedOrderCommentByExternalReferenceCode({\n        client,\n        path: {\n           externalReferenceCode: \"8515\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-order/v1.0/placed-order-comments/by-externalReferenceCode/{externalReferenceCode}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-order/v1.0/placed-orders/{placedOrderId}/placed-order-comments/export-batch": {
            "post": {
                "tags": [
                    "PlacedOrderComment"
                ],
                "operationId": "postPlacedOrderPlacedOrderCommentsPageExportBatch",
                "parameters": [
                    {
                        "name": "placedOrderId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contentType",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fieldNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postPlacedOrderPlacedOrderCommentsPageExportBatch } from 'liferay-headless-rest-client/headless-commerce-delivery-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postPlacedOrderPlacedOrderCommentsPageExportBatch({\n        client,\n        path: {\n           placedOrderId: \"6661\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-order/v1.0/placed-orders/{placedOrderId}/placed-order-comments/export-batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-order/v1.0/placed-order-items/{placedOrderItemId}": {
            "get": {
                "tags": [
                    "PlacedOrderItem"
                ],
                "description": "Retrieve information of the given Placed Order.",
                "operationId": "getPlacedOrderItem",
                "parameters": [
                    {
                        "name": "placedOrderItemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlacedOrderItem"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlacedOrderItem"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getPlacedOrderItem } from 'liferay-headless-rest-client/headless-commerce-delivery-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getPlacedOrderItem({\n        client,\n        path: {\n           placedOrderItemId: \"5333\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-order/v1.0/placed-order-items/{placedOrderItemId}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-order/v1.0/placed-orders/by-externalReferenceCode/{externalReferenceCode}/placed-order-items": {
            "get": {
                "tags": [
                    "PlacedOrderItem"
                ],
                "description": "Retrieve placed order items.",
                "operationId": "getPlacedOrderByExternalReferenceCodePlacedOrderItemsPage",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "skuId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePlacedOrderItem"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePlacedOrderItem"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getPlacedOrderByExternalReferenceCodePlacedOrderItemsPage } from 'liferay-headless-rest-client/headless-commerce-delivery-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getPlacedOrderByExternalReferenceCodePlacedOrderItemsPage({\n        client,\n        path: {\n           externalReferenceCode: \"3284\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-order/v1.0/placed-orders/by-externalReferenceCode/{externalReferenceCode}/placed-order-items', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-order/v1.0/placed-orders/{placedOrderId}/placed-order-items": {
            "get": {
                "tags": [
                    "PlacedOrderItem"
                ],
                "description": "Retrieve placed order items.",
                "operationId": "getPlacedOrderPlacedOrderItemsPage",
                "parameters": [
                    {
                        "name": "placedOrderId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "skuId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePlacedOrderItem"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePlacedOrderItem"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getPlacedOrderPlacedOrderItemsPage } from 'liferay-headless-rest-client/headless-commerce-delivery-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getPlacedOrderPlacedOrderItemsPage({\n        client,\n        path: {\n           placedOrderId: \"8626\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-order/v1.0/placed-orders/{placedOrderId}/placed-order-items', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-order/v1.0/placed-order-items/by-externalReferenceCode/{externalReferenceCode}": {
            "get": {
                "tags": [
                    "PlacedOrderItem"
                ],
                "description": "Retrieve information of the given placed order item.",
                "operationId": "getPlacedOrderItemByExternalReferenceCode",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlacedOrderItem"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlacedOrderItem"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getPlacedOrderItemByExternalReferenceCode } from 'liferay-headless-rest-client/headless-commerce-delivery-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getPlacedOrderItemByExternalReferenceCode({\n        client,\n        path: {\n           externalReferenceCode: \"1706\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-order/v1.0/placed-order-items/by-externalReferenceCode/{externalReferenceCode}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-order/v1.0/placed-orders/{placedOrderId}/placed-order-items/export-batch": {
            "post": {
                "tags": [
                    "PlacedOrderItem"
                ],
                "operationId": "postPlacedOrderPlacedOrderItemsPageExportBatch",
                "parameters": [
                    {
                        "name": "placedOrderId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "skuId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contentType",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fieldNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postPlacedOrderPlacedOrderItemsPageExportBatch } from 'liferay-headless-rest-client/headless-commerce-delivery-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postPlacedOrderPlacedOrderItemsPageExportBatch({\n        client,\n        path: {\n           placedOrderId: \"1776\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-order/v1.0/placed-orders/{placedOrderId}/placed-order-items/export-batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-order/v1.0/placed-order-items/{placedOrderItemId}/placed-order-item-shipments": {
            "get": {
                "tags": [
                    "PlacedOrderItemShipment"
                ],
                "description": "Retrieve shipments of the given Placed Order Item.",
                "operationId": "getPlacedOrderItemPlacedOrderItemShipmentsPage",
                "parameters": [
                    {
                        "name": "placedOrderItemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePlacedOrderItemShipment"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePlacedOrderItemShipment"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getPlacedOrderItemPlacedOrderItemShipmentsPage } from 'liferay-headless-rest-client/headless-commerce-delivery-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getPlacedOrderItemPlacedOrderItemShipmentsPage({\n        client,\n        path: {\n           placedOrderItemId: \"1774\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-order/v1.0/placed-order-items/{placedOrderItemId}/placed-order-item-shipments', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-order/v1.0/placed-order-items/by-externalReferenceCode/{externalReferenceCode}/placed-order-item-shipments": {
            "get": {
                "tags": [
                    "PlacedOrderItemShipment"
                ],
                "description": "Retrieve shipments of the given placed order item.",
                "operationId": "getPlacedOrderItemByExternalReferenceCodePlacedOrderItemShipmentsPage",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePlacedOrderItemShipment"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePlacedOrderItemShipment"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getPlacedOrderItemByExternalReferenceCodePlacedOrderItemShipmentsPage } from 'liferay-headless-rest-client/headless-commerce-delivery-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getPlacedOrderItemByExternalReferenceCodePlacedOrderItemShipmentsPage({\n        client,\n        path: {\n           externalReferenceCode: \"5118\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-order/v1.0/placed-order-items/by-externalReferenceCode/{externalReferenceCode}/placed-order-item-shipments', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-order/v1.0/placed-order-items/{placedOrderItemId}/placed-order-item-shipments/export-batch": {
            "post": {
                "tags": [
                    "PlacedOrderItemShipment"
                ],
                "operationId": "postPlacedOrderItemPlacedOrderItemShipmentsPageExportBatch",
                "parameters": [
                    {
                        "name": "placedOrderItemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contentType",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fieldNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postPlacedOrderItemPlacedOrderItemShipmentsPageExportBatch } from 'liferay-headless-rest-client/headless-commerce-delivery-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postPlacedOrderItemPlacedOrderItemShipmentsPageExportBatch({\n        client,\n        path: {\n           placedOrderItemId: \"2200\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-order/v1.0/placed-order-items/{placedOrderItemId}/placed-order-item-shipments/export-batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-order/v1.0/placed-orders/{placedOrderId}": {
            "get": {
                "tags": [
                    "PlacedOrder"
                ],
                "description": "Retrieve information of the given Placed Order.",
                "operationId": "getPlacedOrder",
                "parameters": [
                    {
                        "name": "placedOrderId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlacedOrder"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlacedOrder"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getPlacedOrder } from 'liferay-headless-rest-client/headless-commerce-delivery-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getPlacedOrder({\n        client,\n        path: {\n           placedOrderId: \"7372\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-order/v1.0/placed-orders/{placedOrderId}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "PlacedOrder"
                ],
                "operationId": "patchPlacedOrder",
                "parameters": [
                    {
                        "name": "placedOrderId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PlacedOrder"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/PlacedOrder"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlacedOrder"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlacedOrder"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchPlacedOrder } from 'liferay-headless-rest-client/headless-commerce-delivery-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchPlacedOrder({\n        client,\n        path: {\n           placedOrderId: \"2172\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-order/v1.0/placed-orders/{placedOrderId}', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-order/v1.0/channels/{channelId}/accounts/{accountId}/placed-orders": {
            "get": {
                "tags": [
                    "PlacedOrder"
                ],
                "description": "Retrieves placed orders for specific account in the given channel.",
                "operationId": "getChannelAccountPlacedOrdersPage",
                "parameters": [
                    {
                        "name": "accountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "channelId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePlacedOrder"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePlacedOrder"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getChannelAccountPlacedOrdersPage } from 'liferay-headless-rest-client/headless-commerce-delivery-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannelAccountPlacedOrdersPage({\n        client,\n        path: {\n           accountId: \"6934\",\n           channelId: \"5625\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-order/v1.0/channels/{channelId}/accounts/{accountId}/placed-orders', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-order/v1.0/placed-orders/by-externalReferenceCode/{externalReferenceCode}": {
            "get": {
                "tags": [
                    "PlacedOrder"
                ],
                "description": "Retrieve information of the given Placed Order.",
                "operationId": "getPlacedOrderByExternalReferenceCode",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlacedOrder"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlacedOrder"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getPlacedOrderByExternalReferenceCode } from 'liferay-headless-rest-client/headless-commerce-delivery-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getPlacedOrderByExternalReferenceCode({\n        client,\n        path: {\n           externalReferenceCode: \"7155\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-order/v1.0/placed-orders/by-externalReferenceCode/{externalReferenceCode}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "PlacedOrder"
                ],
                "operationId": "patchPlacedOrderByExternalReferenceCode",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PlacedOrder"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/PlacedOrder"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlacedOrder"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PlacedOrder"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchPlacedOrderByExternalReferenceCode } from 'liferay-headless-rest-client/headless-commerce-delivery-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchPlacedOrderByExternalReferenceCode({\n        client,\n        path: {\n           externalReferenceCode: \"8265\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-order/v1.0/placed-orders/by-externalReferenceCode/{externalReferenceCode}', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-order/v1.0/channels/{channelId}/placed-orders": {
            "get": {
                "tags": [
                    "PlacedOrder"
                ],
                "description": "Retrieves placed orders in the given channel.",
                "operationId": "getChannelPlacedOrdersPage",
                "parameters": [
                    {
                        "name": "channelId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePlacedOrder"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePlacedOrder"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getChannelPlacedOrdersPage } from 'liferay-headless-rest-client/headless-commerce-delivery-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannelPlacedOrdersPage({\n        client,\n        path: {\n           channelId: \"488\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-order/v1.0/channels/{channelId}/placed-orders', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-order/v1.0/placed-orders/{placedOrderId}/payment-url": {
            "get": {
                "tags": [
                    "PlacedOrder"
                ],
                "operationId": "getPlacedOrderPaymentURL",
                "parameters": [
                    {
                        "name": "placedOrderId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getPlacedOrderPaymentURL } from 'liferay-headless-rest-client/headless-commerce-delivery-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getPlacedOrderPaymentURL({\n        client,\n        path: {\n           placedOrderId: \"3228\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-order/v1.0/placed-orders/{placedOrderId}/payment-url', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-order/v1.0/channels/by-externalReferenceCode/{externalReferenceCode}/placed-orders": {
            "get": {
                "tags": [
                    "PlacedOrder"
                ],
                "description": "Retrieves placed orders in the given channel.",
                "operationId": "getChannelByExternalReferenceCodePlacedOrdersPage",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePlacedOrder"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePlacedOrder"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getChannelByExternalReferenceCodePlacedOrdersPage } from 'liferay-headless-rest-client/headless-commerce-delivery-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannelByExternalReferenceCodePlacedOrdersPage({\n        client,\n        path: {\n           externalReferenceCode: \"8755\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-order/v1.0/channels/by-externalReferenceCode/{externalReferenceCode}/placed-orders', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-order/v1.0/placed-orders/by-externalReferenceCode/{externalReferenceCode}/payment-url": {
            "get": {
                "tags": [
                    "PlacedOrder"
                ],
                "operationId": "getPlacedOrderByExternalReferenceCodePaymentURL",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getPlacedOrderByExternalReferenceCodePaymentURL } from 'liferay-headless-rest-client/headless-commerce-delivery-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getPlacedOrderByExternalReferenceCodePaymentURL({\n        client,\n        path: {\n           externalReferenceCode: \"8515\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-order/v1.0/placed-orders/by-externalReferenceCode/{externalReferenceCode}/payment-url', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-order/v1.0/channels/by-externalReferenceCode/{channelExternalReferenceCode}/accounts/by-externalReferenceCode/{accountExternalReferenceCode}/placed-orders": {
            "get": {
                "tags": [
                    "PlacedOrder"
                ],
                "description": "Retrieves placed orders for specific account in the given channel.",
                "operationId": "getChannelByExternalReferenceCodeChannelExternalReferenceCodeAccountByExternalReferenceCodeAccountExternalReferenceCodePlacedOrdersPage",
                "parameters": [
                    {
                        "name": "accountExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "channelExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePlacedOrder"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePlacedOrder"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getChannelByExternalReferenceCodeChannelExternalReferenceCodeAccountByExternalReferenceCodeAccountExternalReferenceCodePlacedOrdersPage } from 'liferay-headless-rest-client/headless-commerce-delivery-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannelByExternalReferenceCodeChannelExternalReferenceCodeAccountByExternalReferenceCodeAccountExternalReferenceCodePlacedOrdersPage({\n        client,\n        path: {\n           accountExternalReferenceCode: \"9386\",\n           channelExternalReferenceCode: \"7488\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-order/v1.0/channels/by-externalReferenceCode/{channelExternalReferenceCode}/accounts/by-externalReferenceCode/{accountExternalReferenceCode}/placed-orders', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-order/v1.0/placed-orders/{placedOrderId}/delivery-term": {
            "get": {
                "tags": [
                    "Term"
                ],
                "description": "Retrieve delivery term of the given Placed Order.",
                "operationId": "getPlacedOrderDeliveryTerm",
                "parameters": [
                    {
                        "name": "placedOrderId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Term"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Term"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getPlacedOrderDeliveryTerm } from 'liferay-headless-rest-client/headless-commerce-delivery-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getPlacedOrderDeliveryTerm({\n        client,\n        path: {\n           placedOrderId: \"7847\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-order/v1.0/placed-orders/{placedOrderId}/delivery-term', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-order/v1.0/placed-orders/{placedOrderId}/payment-term": {
            "get": {
                "tags": [
                    "Term"
                ],
                "description": "Retrieve payment term of the given Placed Order.",
                "operationId": "getPlacedOrderPaymentTerm",
                "parameters": [
                    {
                        "name": "placedOrderId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Term"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Term"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getPlacedOrderPaymentTerm } from 'liferay-headless-rest-client/headless-commerce-delivery-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getPlacedOrderPaymentTerm({\n        client,\n        path: {\n           placedOrderId: \"8729\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-order/v1.0/placed-orders/{placedOrderId}/payment-term', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-order/v1.0/placed-orders/by-externalReferenceCode/{externalReferenceCode}/delivery-term": {
            "get": {
                "tags": [
                    "Term"
                ],
                "description": "Retrieve delivery term of the given Placed Order.",
                "operationId": "getPlacedOrderByExternalReferenceCodeDeliveryTerm",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Term"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Term"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getPlacedOrderByExternalReferenceCodeDeliveryTerm } from 'liferay-headless-rest-client/headless-commerce-delivery-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getPlacedOrderByExternalReferenceCodeDeliveryTerm({\n        client,\n        path: {\n           externalReferenceCode: \"5542\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-order/v1.0/placed-orders/by-externalReferenceCode/{externalReferenceCode}/delivery-term', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-order/v1.0/placed-orders/by-externalReferenceCode/{externalReferenceCode}/payment-term": {
            "get": {
                "tags": [
                    "Term"
                ],
                "description": "Retrieve payment term of the given Placed Order.",
                "operationId": "getPlacedOrderByExternalReferenceCodePaymentTerm",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Term"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Term"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getPlacedOrderByExternalReferenceCodePaymentTerm } from 'liferay-headless-rest-client/headless-commerce-delivery-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getPlacedOrderByExternalReferenceCodePaymentTerm({\n        client,\n        path: {\n           externalReferenceCode: \"6368\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-order/v1.0/placed-orders/by-externalReferenceCode/{externalReferenceCode}/payment-term', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Attachment": {
                "type": "object",
                "properties": {
                    "externalReferenceCode": {
                        "type": "string",
                        "readOnly": true,
                        "example": "AB-34098-789-N"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "readOnly": true
                    },
                    "type": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "url": {
                        "type": "string",
                        "readOnly": true
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.delivery.order.dto.v1_0.Attachment"
                    }
                },
                "xml": {
                    "name": "Attachment"
                }
            },
            "AttachmentBase64": {
                "type": "object",
                "properties": {
                    "attachment": {
                        "type": "string",
                        "description": "Base64 encoded file"
                    },
                    "externalReferenceCode": {
                        "type": "string",
                        "example": "AB-34098-789-N"
                    },
                    "title": {
                        "type": "string"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.delivery.order.dto.v1_0.AttachmentBase64"
                    }
                },
                "xml": {
                    "name": "AttachmentBase64"
                }
            },
            "Facet": {
                "type": "object",
                "properties": {
                    "facetCriteria": {
                        "type": "string"
                    },
                    "facetValues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FacetValue"
                        }
                    }
                }
            },
            "FacetValue": {
                "type": "object",
                "properties": {
                    "numberOfOccurrences": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "term": {
                        "type": "string"
                    }
                }
            },
            "PageAttachment": {
                "type": "object",
                "properties": {
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    }
                }
            },
            "OrderTransition": {
                "type": "object",
                "properties": {
                    "comment": {
                        "type": "string"
                    },
                    "label": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "orderId": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "placedOrderId": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "workflowTaskId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.delivery.order.dto.v1_0.OrderTransition"
                    }
                },
                "xml": {
                    "name": "OrderTransition"
                }
            },
            "PageOrderTransition": {
                "type": "object",
                "properties": {
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderTransition"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    }
                }
            },
            "PlacedOrderAddress": {
                "type": "object",
                "properties": {
                    "city": {
                        "type": "string",
                        "readOnly": true
                    },
                    "country": {
                        "type": "string",
                        "readOnly": true
                    },
                    "countryISOCode": {
                        "type": "string",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "readOnly": true
                    },
                    "externalReferenceCode": {
                        "type": "string",
                        "readOnly": true,
                        "example": "AB-34098-789-N"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "latitude": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "longitude": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "phoneNumber": {
                        "type": "string",
                        "readOnly": true
                    },
                    "region": {
                        "type": "string",
                        "readOnly": true
                    },
                    "regionISOCode": {
                        "type": "string",
                        "readOnly": true
                    },
                    "street1": {
                        "type": "string",
                        "readOnly": true
                    },
                    "street2": {
                        "type": "string",
                        "readOnly": true
                    },
                    "street3": {
                        "type": "string",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "typeId": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "vatNumber": {
                        "type": "string",
                        "readOnly": true
                    },
                    "zip": {
                        "type": "string",
                        "readOnly": true
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.delivery.order.dto.v1_0.PlacedOrderAddress"
                    }
                },
                "xml": {
                    "name": "PlacedOrderAddress"
                }
            },
            "PlacedOrderComment": {
                "type": "object",
                "properties": {
                    "author": {
                        "type": "string",
                        "readOnly": true
                    },
                    "content": {
                        "type": "string",
                        "readOnly": true
                    },
                    "externalReferenceCode": {
                        "type": "string",
                        "readOnly": true,
                        "example": "AB-34098-789-N"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "orderId": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "restricted": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.delivery.order.dto.v1_0.PlacedOrderComment"
                    }
                },
                "xml": {
                    "name": "PlacedOrderComment"
                }
            },
            "PagePlacedOrderComment": {
                "type": "object",
                "properties": {
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PlacedOrderComment"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    }
                }
            },
            "PlacedOrderItem": {
                "type": "object",
                "properties": {
                    "adaptiveMediaImageHTMLTag": {
                        "type": "string",
                        "readOnly": true
                    },
                    "customFields": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        },
                        "readOnly": true
                    },
                    "deliveryGroup": {
                        "type": "string",
                        "readOnly": true,
                        "deprecated": true
                    },
                    "deliveryGroupName": {
                        "type": "string",
                        "readOnly": true
                    },
                    "errorMessages": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "externalReferenceCode": {
                        "type": "string",
                        "readOnly": true,
                        "example": "AB-34098-789-N"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "options": {
                        "type": "string",
                        "readOnly": true
                    },
                    "parentOrderItemId": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "placedOrderItemShipments": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                            "$ref": "#/components/schemas/PlacedOrderItemShipment"
                        }
                    },
                    "price": {
                        "$ref": "#/components/schemas/Price"
                    },
                    "productId": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "productURLs": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "example": "{en_US=product-url-us, hr_HR=product-url-hr, hu_HU=product-url-hu}"
                        },
                        "readOnly": true,
                        "example": "{en_US=product-url-us, hr_HR=product-url-hr, hu_HU=product-url-hu}"
                    },
                    "quantity": {
                        "type": "number",
                        "readOnly": true,
                        "example": 10.1
                    },
                    "replacedSku": {
                        "type": "string",
                        "readOnly": true
                    },
                    "requestedDeliveryDate": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "settings": {
                        "$ref": "#/components/schemas/Settings"
                    },
                    "shippingAddressExternalReferenceCode": {
                        "type": "string",
                        "readOnly": true,
                        "example": "AB-34098-789-N"
                    },
                    "shippingAddressId": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "sku": {
                        "type": "string",
                        "readOnly": true
                    },
                    "skuId": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "subscription": {
                        "type": "boolean",
                        "readOnly": true,
                        "example": true
                    },
                    "thumbnail": {
                        "type": "string",
                        "readOnly": true
                    },
                    "unitOfMeasure": {
                        "type": "string",
                        "readOnly": true
                    },
                    "unitOfMeasureKey": {
                        "type": "string",
                        "readOnly": true,
                        "example": "m"
                    },
                    "valid": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "virtualItemURLs": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "virtualItems": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                            "$ref": "#/components/schemas/VirtualItem"
                        }
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.delivery.order.dto.v1_0.PlacedOrderItem"
                    }
                },
                "xml": {
                    "name": "PlacedOrderItem"
                }
            },
            "PlacedOrderItemShipment": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 30130
                    },
                    "author": {
                        "type": "string",
                        "readOnly": true,
                        "example": "Author"
                    },
                    "carrier": {
                        "type": "string",
                        "readOnly": true,
                        "example": "FedEx"
                    },
                    "createDate": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "estimatedDeliveryDate": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "estimatedShippingDate": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "externalReferenceCode": {
                        "type": "string",
                        "readOnly": true,
                        "example": "AB-34098-789-N"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 30130
                    },
                    "modifiedDate": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "orderId": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 30130
                    },
                    "quantity": {
                        "type": "number",
                        "readOnly": true,
                        "example": 10.1
                    },
                    "shippingAddressId": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 31130
                    },
                    "shippingMethodId": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 30130
                    },
                    "shippingOptionName": {
                        "type": "string",
                        "readOnly": true,
                        "example": "Standard Delivery"
                    },
                    "status": {
                        "$ref": "#/components/schemas/Status"
                    },
                    "supplierShipment": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "trackingNumber": {
                        "type": "string",
                        "readOnly": true,
                        "example": "123AD-asd"
                    },
                    "trackingURL": {
                        "type": "string",
                        "readOnly": true
                    },
                    "unitOfMeasureKey": {
                        "type": "string",
                        "readOnly": true,
                        "example": "m"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.delivery.order.dto.v1_0.PlacedOrderItemShipment"
                    }
                },
                "xml": {
                    "name": "PlacedOrderItemShipment"
                }
            },
            "Price": {
                "type": "object",
                "properties": {
                    "currency": {
                        "type": "string",
                        "readOnly": true
                    },
                    "discount": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "discountFormatted": {
                        "type": "string",
                        "readOnly": true
                    },
                    "discountPercentage": {
                        "type": "string",
                        "readOnly": true
                    },
                    "discountPercentageLevel1": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "discountPercentageLevel2": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "discountPercentageLevel3": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "discountPercentageLevel4": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "finalPrice": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "finalPriceFormatted": {
                        "type": "string",
                        "readOnly": true
                    },
                    "price": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "priceFormatted": {
                        "type": "string",
                        "readOnly": true
                    },
                    "promoPrice": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "promoPriceFormatted": {
                        "type": "string",
                        "readOnly": true
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.delivery.order.dto.v1_0.Price"
                    }
                },
                "xml": {
                    "name": "Price"
                }
            },
            "Settings": {
                "type": "object",
                "properties": {
                    "allowedQuantities": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                            "type": "number"
                        }
                    },
                    "maxQuantity": {
                        "type": "number",
                        "readOnly": true,
                        "example": 10.1
                    },
                    "minQuantity": {
                        "type": "number",
                        "readOnly": true,
                        "example": 10.1
                    },
                    "multipleQuantity": {
                        "type": "number",
                        "readOnly": true,
                        "example": 10.1
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.delivery.order.dto.v1_0.Settings"
                    }
                },
                "xml": {
                    "name": "Settings"
                }
            },
            "Status": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "label": {
                        "type": "string",
                        "readOnly": true,
                        "example": "black"
                    },
                    "label_i18n": {
                        "type": "string",
                        "readOnly": true,
                        "example": "black"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.delivery.order.dto.v1_0.Status"
                    }
                },
                "xml": {
                    "name": "Status"
                }
            },
            "VirtualItem": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "readOnly": true,
                        "example": "http://www.liferay.com"
                    },
                    "usages": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "version": {
                        "type": "string",
                        "readOnly": true,
                        "example": "v1.0.0"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.delivery.order.dto.v1_0.VirtualItem"
                    }
                },
                "xml": {
                    "name": "VirtualItem"
                }
            },
            "PagePlacedOrderItem": {
                "type": "object",
                "properties": {
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PlacedOrderItem"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    }
                }
            },
            "PagePlacedOrderItemShipment": {
                "type": "object",
                "properties": {
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PlacedOrderItemShipment"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    }
                }
            },
            "PlacedOrder": {
                "type": "object",
                "properties": {
                    "account": {
                        "type": "string",
                        "readOnly": true
                    },
                    "accountId": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        }
                    },
                    "author": {
                        "type": "string",
                        "readOnly": true
                    },
                    "channelId": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "couponCode": {
                        "type": "string",
                        "readOnly": true
                    },
                    "createDate": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "currencyCode": {
                        "type": "string",
                        "readOnly": true
                    },
                    "customFields": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        }
                    },
                    "errorMessages": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "externalReferenceCode": {
                        "type": "string",
                        "readOnly": true,
                        "example": "AB-34098-789-N"
                    },
                    "friendlyURLSeparator": {
                        "type": "string",
                        "readOnly": true
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "lastPriceUpdateDate": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "modifiedDate": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "example": "Order Name"
                    },
                    "orderStatusInfo": {
                        "$ref": "#/components/schemas/Status"
                    },
                    "orderType": {
                        "type": "string",
                        "readOnly": true
                    },
                    "orderTypeExternalReferenceCode": {
                        "type": "string",
                        "readOnly": true,
                        "example": "AB-34098-789-N"
                    },
                    "orderTypeId": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "orderUUID": {
                        "type": "string",
                        "readOnly": true
                    },
                    "paymentMethod": {
                        "type": "string",
                        "readOnly": true
                    },
                    "paymentMethodLabel": {
                        "type": "string",
                        "readOnly": true
                    },
                    "paymentStatus": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "paymentStatusInfo": {
                        "$ref": "#/components/schemas/Status"
                    },
                    "paymentStatusLabel": {
                        "type": "string",
                        "readOnly": true
                    },
                    "placedOrderBillingAddress": {
                        "$ref": "#/components/schemas/PlacedOrderAddress"
                    },
                    "placedOrderBillingAddressId": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "placedOrderComments": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                            "$ref": "#/components/schemas/PlacedOrderComment"
                        }
                    },
                    "placedOrderItems": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                            "$ref": "#/components/schemas/PlacedOrderItem"
                        }
                    },
                    "placedOrderShippingAddress": {
                        "$ref": "#/components/schemas/PlacedOrderAddress"
                    },
                    "placedOrderShippingAddressId": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "printedNote": {
                        "type": "string"
                    },
                    "purchaseOrderNumber": {
                        "type": "string"
                    },
                    "shippingMethod": {
                        "type": "string",
                        "readOnly": true
                    },
                    "shippingOption": {
                        "type": "string",
                        "readOnly": true
                    },
                    "status": {
                        "type": "string",
                        "readOnly": true
                    },
                    "steps": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Step"
                        }
                    },
                    "summary": {
                        "$ref": "#/components/schemas/Summary"
                    },
                    "useAsBilling": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "valid": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "workflowStatusInfo": {
                        "$ref": "#/components/schemas/Status"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.delivery.order.dto.v1_0.PlacedOrder"
                    }
                },
                "xml": {
                    "name": "PlacedOrder"
                }
            },
            "Step": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true
                    },
                    "label": {
                        "type": "string",
                        "readOnly": true
                    },
                    "state": {
                        "type": "string",
                        "readOnly": true
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.delivery.order.dto.v1_0.Step"
                    }
                },
                "xml": {
                    "name": "Step"
                }
            },
            "Summary": {
                "type": "object",
                "properties": {
                    "currency": {
                        "type": "string",
                        "readOnly": true
                    },
                    "itemsQuantity": {
                        "type": "number",
                        "readOnly": true,
                        "example": 10.1
                    },
                    "shippingDiscountPercentages": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "shippingDiscountValue": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "shippingDiscountValueFormatted": {
                        "type": "string",
                        "readOnly": true
                    },
                    "shippingValue": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "shippingValueFormatted": {
                        "type": "string",
                        "readOnly": true
                    },
                    "shippingValueWithTaxAmount": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "shippingValueWithTaxAmountFormatted": {
                        "type": "string",
                        "readOnly": true
                    },
                    "subtotal": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "subtotalDiscountPercentages": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "subtotalDiscountValue": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "subtotalDiscountValueFormatted": {
                        "type": "string",
                        "readOnly": true
                    },
                    "subtotalFormatted": {
                        "type": "string",
                        "readOnly": true
                    },
                    "taxValue": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "taxValueFormatted": {
                        "type": "string",
                        "readOnly": true
                    },
                    "total": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "totalDiscountPercentages": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "totalDiscountValue": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "totalDiscountValueFormatted": {
                        "type": "string",
                        "readOnly": true
                    },
                    "totalFormatted": {
                        "type": "string",
                        "readOnly": true
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.delivery.order.dto.v1_0.Summary"
                    }
                },
                "xml": {
                    "name": "Summary"
                }
            },
            "PagePlacedOrder": {
                "type": "object",
                "properties": {
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PlacedOrder"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    }
                }
            },
            "Term": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "readOnly": true,
                        "example": "description"
                    },
                    "externalReferenceCode": {
                        "type": "string",
                        "example": "AAB-34098-789-N"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 30130
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true,
                        "example": "name"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.delivery.order.dto.v1_0.Term"
                    }
                },
                "xml": {
                    "name": "Term"
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "description": "JWT Bearer token authentication"
            },
            "basicAuth": {
                "type": "http",
                "scheme": "basic",
                "description": "Basic HTTP authentication"
            },
            "apiKeyHeader": {
                "type": "apiKey",
                "in": "header",
                "name": "X-API-Key",
                "description": "API key request header"
            },
            "apiKeyQuery": {
                "type": "apiKey",
                "in": "query",
                "name": "api_key",
                "description": "API key query parameter"
            },
            "apiKeyCookie": {
                "type": "apiKey",
                "in": "cookie",
                "name": "api_key",
                "description": "API key browser cookie"
            },
            "oAuth2": {
                "type": "oauth2",
                "description": "OAuth 2.0 authentication",
                "flows": {
                    "authorizationCode": {
                        "authorizationUrl": "https://galaxy.scalar.com/oauth/authorize",
                        "tokenUrl": "https://galaxy.scalar.com/oauth/token",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    },
                    "clientCredentials": {
                        "tokenUrl": "https://galaxy.scalar.com/oauth/token",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    },
                    "implicit": {
                        "authorizationUrl": "https://galaxy.scalar.com/oauth/authorize",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    },
                    "password": {
                        "tokenUrl": "https://galaxy.scalar.com/oauth/token",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    }
                }
            },
            "openIdConnect": {
                "type": "openIdConnect",
                "openIdConnectUrl": "https://galaxy.scalar.com/.well-known/openid-configuration",
                "description": "OpenID Connect Authentication"
            }
        }
    }
}