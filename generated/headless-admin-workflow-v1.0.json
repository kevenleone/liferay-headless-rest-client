{
    "openapi": "3.0.1",
    "info": {
        "title": "Headless Admin Workflow",
        "description": "#### TypeScript SDK Code Sample\n\n```typescript\nimport { createClient } from 'liferay-headless-rest-client';\nimport { getWorkflowTaskAssignableUsersPage } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getWorkflowTaskAssignableUsersPage({\n        client,\n        path: {\n           workflowTaskId: \"2004\",\n        },\n    });\n\n    console.log(data);\n}\n```\n#### Java installation:\n\nA Java client JAR is available for use with the group ID 'com.liferay', artifact ID 'com.liferay.headless.admin.workflow.client', and version '4.0.40'.\n\n```gradle\nimplementation group: \"com.liferay\", name: \"com.liferay.headless.admin.workflow.client\", version: \"latest\"\n```\n\nReference: https://mvnrepository.com/artifact/com.liferay/com.liferay.headless.admin.workflow.client/latest",
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "v1.0"
    },
    "servers": [
        {
            "url": "http://localhost:8080"
        }
    ],
    "paths": {
        "/o/headless-admin-workflow/v1.0/workflow-tasks/{workflowTaskId}/assignable-users": {
            "get": {
                "tags": [
                    "Assignee"
                ],
                "operationId": "getWorkflowTaskAssignableUsersPage",
                "parameters": [
                    {
                        "name": "workflowTaskId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageAssignee"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageAssignee"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getWorkflowTaskAssignableUsersPage } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getWorkflowTaskAssignableUsersPage({\n        client,\n        path: {\n           workflowTaskId: \"7745\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-tasks/{workflowTaskId}/assignable-users', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-instances/{workflowInstanceId}/next-transitions": {
            "get": {
                "tags": [
                    "Transition"
                ],
                "operationId": "getWorkflowInstanceNextTransitionsPage",
                "parameters": [
                    {
                        "name": "workflowInstanceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageTransition"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageTransition"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getWorkflowInstanceNextTransitionsPage } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getWorkflowInstanceNextTransitionsPage({\n        client,\n        path: {\n           workflowInstanceId: \"4666\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-instances/{workflowInstanceId}/next-transitions', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-tasks/{workflowTaskId}/next-transitions": {
            "get": {
                "tags": [
                    "Transition"
                ],
                "operationId": "getWorkflowTaskNextTransitionsPage",
                "parameters": [
                    {
                        "name": "workflowTaskId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageTransition"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageTransition"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getWorkflowTaskNextTransitionsPage } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getWorkflowTaskNextTransitionsPage({\n        client,\n        path: {\n           workflowTaskId: \"2927\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-tasks/{workflowTaskId}/next-transitions', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-definitions/by-external-reference-code/{externalReferenceCode}/workflow-definition-links": {
            "get": {
                "tags": [
                    "WorkflowDefinitionLink"
                ],
                "operationId": "getWorkflowDefinitionByExternalReferenceCodeWorkflowDefinitionLinksPage",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageWorkflowDefinitionLink"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageWorkflowDefinitionLink"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getWorkflowDefinitionByExternalReferenceCodeWorkflowDefinitionLinksPage } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getWorkflowDefinitionByExternalReferenceCodeWorkflowDefinitionLinksPage({\n        client,\n        path: {\n           externalReferenceCode: \"8264\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-definitions/by-external-reference-code/{externalReferenceCode}/workflow-definition-links', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "post": {
                "tags": [
                    "WorkflowDefinitionLink"
                ],
                "operationId": "postWorkflowDefinitionByExternalReferenceCodeWorkflowDefinitionLink",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkflowDefinitionLink"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkflowDefinitionLink"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowDefinitionLink"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowDefinitionLink"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postWorkflowDefinitionByExternalReferenceCodeWorkflowDefinitionLink } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postWorkflowDefinitionByExternalReferenceCodeWorkflowDefinitionLink({\n        client,\n        path: {\n           externalReferenceCode: \"8949\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-definitions/by-external-reference-code/{externalReferenceCode}/workflow-definition-links', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-definitions/{workflowDefinitionId}/workflow-definition-links": {
            "get": {
                "tags": [
                    "WorkflowDefinitionLink"
                ],
                "operationId": "getWorkflowDefinitionWorkflowDefinitionLinksPage",
                "parameters": [
                    {
                        "name": "workflowDefinitionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageWorkflowDefinitionLink"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageWorkflowDefinitionLink"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getWorkflowDefinitionWorkflowDefinitionLinksPage } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getWorkflowDefinitionWorkflowDefinitionLinksPage({\n        client,\n        path: {\n           workflowDefinitionId: \"1894\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-definitions/{workflowDefinitionId}/workflow-definition-links', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "post": {
                "tags": [
                    "WorkflowDefinitionLink"
                ],
                "operationId": "postWorkflowDefinitionWorkflowDefinitionLink",
                "parameters": [
                    {
                        "name": "workflowDefinitionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkflowDefinitionLink"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkflowDefinitionLink"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowDefinitionLink"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowDefinitionLink"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postWorkflowDefinitionWorkflowDefinitionLink } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postWorkflowDefinitionWorkflowDefinitionLink({\n        client,\n        path: {\n           workflowDefinitionId: \"2330\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-definitions/{workflowDefinitionId}/workflow-definition-links', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-definitions/{workflowDefinitionId}/workflow-definition-links/batch": {
            "post": {
                "tags": [
                    "WorkflowDefinitionLink"
                ],
                "operationId": "postWorkflowDefinitionWorkflowDefinitionLinkBatch",
                "parameters": [
                    {
                        "name": "workflowDefinitionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postWorkflowDefinitionWorkflowDefinitionLinkBatch } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postWorkflowDefinitionWorkflowDefinitionLinkBatch({\n        client,\n        path: {\n           workflowDefinitionId: \"3754\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-definitions/{workflowDefinitionId}/workflow-definition-links/batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-definitions/{workflowDefinitionId}/workflow-definition-links/export-batch": {
            "post": {
                "tags": [
                    "WorkflowDefinitionLink"
                ],
                "operationId": "postWorkflowDefinitionWorkflowDefinitionLinksPageExportBatch",
                "parameters": [
                    {
                        "name": "workflowDefinitionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contentType",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fieldNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postWorkflowDefinitionWorkflowDefinitionLinksPageExportBatch } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postWorkflowDefinitionWorkflowDefinitionLinksPageExportBatch({\n        client,\n        path: {\n           workflowDefinitionId: \"5676\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-definitions/{workflowDefinitionId}/workflow-definition-links/export-batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-definition-links/by-external-reference-code/{externalReferenceCode}": {
            "put": {
                "tags": [
                    "WorkflowDefinitionLink"
                ],
                "operationId": "putWorkflowDefinitionLinkByExternalReferenceCode",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkflowDefinitionLink"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkflowDefinitionLink"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowDefinitionLink"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowDefinitionLink"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putWorkflowDefinitionLinkByExternalReferenceCode } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putWorkflowDefinitionLinkByExternalReferenceCode({\n        client,\n        path: {\n           externalReferenceCode: \"8075\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-definition-links/by-external-reference-code/{externalReferenceCode}', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-definitions/{workflowDefinitionId}": {
            "get": {
                "tags": [
                    "WorkflowDefinition"
                ],
                "operationId": "getWorkflowDefinition",
                "parameters": [
                    {
                        "name": "workflowDefinitionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowDefinition"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowDefinition"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getWorkflowDefinition } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getWorkflowDefinition({\n        client,\n        path: {\n           workflowDefinitionId: \"1330\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-definitions/{workflowDefinitionId}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "put": {
                "tags": [
                    "WorkflowDefinition"
                ],
                "operationId": "putWorkflowDefinition",
                "parameters": [
                    {
                        "name": "workflowDefinitionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkflowDefinition"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkflowDefinition"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowDefinition"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowDefinition"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putWorkflowDefinition } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putWorkflowDefinition({\n        client,\n        path: {\n           workflowDefinitionId: \"6705\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-definitions/{workflowDefinitionId}', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "WorkflowDefinition"
                ],
                "operationId": "deleteWorkflowDefinition",
                "parameters": [
                    {
                        "name": "workflowDefinitionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteWorkflowDefinition } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteWorkflowDefinition({\n        client,\n        path: {\n           workflowDefinitionId: \"2035\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-definitions/{workflowDefinitionId}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-definitions/batch": {
            "put": {
                "tags": [
                    "WorkflowDefinition"
                ],
                "operationId": "putWorkflowDefinitionBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putWorkflowDefinitionBatch } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putWorkflowDefinitionBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-definitions/batch', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "post": {
                "tags": [
                    "WorkflowDefinition"
                ],
                "operationId": "postWorkflowDefinitionBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postWorkflowDefinitionBatch } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postWorkflowDefinitionBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-definitions/batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "WorkflowDefinition"
                ],
                "operationId": "deleteWorkflowDefinitionBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteWorkflowDefinitionBatch } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteWorkflowDefinitionBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-definitions/batch', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-definitions/undeploy": {
            "delete": {
                "tags": [
                    "WorkflowDefinition"
                ],
                "operationId": "deleteWorkflowDefinitionUndeploy",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteWorkflowDefinitionUndeploy } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteWorkflowDefinitionUndeploy({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-definitions/undeploy', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-definitions/by-name/{name}": {
            "get": {
                "tags": [
                    "WorkflowDefinition"
                ],
                "operationId": "getWorkflowDefinitionByName",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contentFormat",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowDefinition"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowDefinition"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getWorkflowDefinitionByName } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getWorkflowDefinitionByName({\n        client,\n        path: {\n           name: \"2613\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-definitions/by-name/{name}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-definitions": {
            "get": {
                "tags": [
                    "WorkflowDefinition"
                ],
                "operationId": "getWorkflowDefinitionsPage",
                "parameters": [
                    {
                        "name": "active",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageWorkflowDefinition"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageWorkflowDefinition"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getWorkflowDefinitionsPage } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getWorkflowDefinitionsPage({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-definitions', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "post": {
                "tags": [
                    "WorkflowDefinition"
                ],
                "operationId": "postWorkflowDefinition",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkflowDefinition"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkflowDefinition"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowDefinition"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowDefinition"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postWorkflowDefinition } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postWorkflowDefinition({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-definitions', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-definitions/deploy": {
            "post": {
                "tags": [
                    "WorkflowDefinition"
                ],
                "operationId": "postWorkflowDefinitionDeploy",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkflowDefinition"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkflowDefinition"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowDefinition"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowDefinition"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postWorkflowDefinitionDeploy } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postWorkflowDefinitionDeploy({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-definitions/deploy', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-definitions/save": {
            "post": {
                "tags": [
                    "WorkflowDefinition"
                ],
                "operationId": "postWorkflowDefinitionSave",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkflowDefinition"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkflowDefinition"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowDefinition"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowDefinition"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postWorkflowDefinitionSave } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postWorkflowDefinitionSave({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-definitions/save', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-definitions/update-active": {
            "post": {
                "tags": [
                    "WorkflowDefinition"
                ],
                "operationId": "postWorkflowDefinitionUpdateActive",
                "parameters": [
                    {
                        "name": "active",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "version",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowDefinition"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowDefinition"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postWorkflowDefinitionUpdateActive } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postWorkflowDefinitionUpdateActive({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-definitions/update-active', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-definitions/export-batch": {
            "post": {
                "tags": [
                    "WorkflowDefinition"
                ],
                "operationId": "postWorkflowDefinitionsPageExportBatch",
                "parameters": [
                    {
                        "name": "active",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contentType",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fieldNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postWorkflowDefinitionsPageExportBatch } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postWorkflowDefinitionsPageExportBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-definitions/export-batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-instances/{workflowInstanceId}": {
            "get": {
                "tags": [
                    "WorkflowInstance"
                ],
                "operationId": "getWorkflowInstance",
                "parameters": [
                    {
                        "name": "workflowInstanceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowInstance"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowInstance"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getWorkflowInstance } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getWorkflowInstance({\n        client,\n        path: {\n           workflowInstanceId: \"6034\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-instances/{workflowInstanceId}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "WorkflowInstance"
                ],
                "operationId": "deleteWorkflowInstance",
                "parameters": [
                    {
                        "name": "workflowInstanceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteWorkflowInstance } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteWorkflowInstance({\n        client,\n        path: {\n           workflowInstanceId: \"2352\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-instances/{workflowInstanceId}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-instances/batch": {
            "delete": {
                "tags": [
                    "WorkflowInstance"
                ],
                "operationId": "deleteWorkflowInstanceBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteWorkflowInstanceBatch } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteWorkflowInstanceBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-instances/batch', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-instances": {
            "get": {
                "tags": [
                    "WorkflowInstance"
                ],
                "operationId": "getWorkflowInstancesPage",
                "parameters": [
                    {
                        "name": "assetClassName",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "assetPrimaryKey",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "completed",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageWorkflowInstance"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageWorkflowInstance"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getWorkflowInstancesPage } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getWorkflowInstancesPage({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-instances', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-instances/{workflowInstanceId}/change-transition": {
            "post": {
                "tags": [
                    "WorkflowInstance"
                ],
                "operationId": "postWorkflowInstanceChangeTransition",
                "parameters": [
                    {
                        "name": "workflowInstanceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangeTransition"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangeTransition"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowInstance"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowInstance"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postWorkflowInstanceChangeTransition } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postWorkflowInstanceChangeTransition({\n        client,\n        path: {\n           workflowInstanceId: \"4969\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-instances/{workflowInstanceId}/change-transition', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-instances/submit": {
            "post": {
                "tags": [
                    "WorkflowInstance"
                ],
                "operationId": "postWorkflowInstanceSubmit",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkflowInstanceSubmit"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkflowInstanceSubmit"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowInstance"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowInstance"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postWorkflowInstanceSubmit } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postWorkflowInstanceSubmit({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-instances/submit', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-instances/export-batch": {
            "post": {
                "tags": [
                    "WorkflowInstance"
                ],
                "operationId": "postWorkflowInstancesPageExportBatch",
                "parameters": [
                    {
                        "name": "assetClassName",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "assetPrimaryKey",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "completed",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contentType",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fieldNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postWorkflowInstancesPageExportBatch } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postWorkflowInstancesPageExportBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-instances/export-batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-instances/{workflowInstanceId}/workflow-logs": {
            "get": {
                "tags": [
                    "WorkflowLog"
                ],
                "operationId": "getWorkflowInstanceWorkflowLogsPage",
                "parameters": [
                    {
                        "name": "workflowInstanceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "types",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageWorkflowLog"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageWorkflowLog"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getWorkflowInstanceWorkflowLogsPage } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getWorkflowInstanceWorkflowLogsPage({\n        client,\n        path: {\n           workflowInstanceId: \"5365\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-instances/{workflowInstanceId}/workflow-logs', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-logs/{workflowLogId}": {
            "get": {
                "tags": [
                    "WorkflowLog"
                ],
                "operationId": "getWorkflowLog",
                "parameters": [
                    {
                        "name": "workflowLogId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowLog"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowLog"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getWorkflowLog } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getWorkflowLog({\n        client,\n        path: {\n           workflowLogId: \"6963\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-logs/{workflowLogId}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-tasks/{workflowTaskId}/workflow-logs": {
            "get": {
                "tags": [
                    "WorkflowLog"
                ],
                "operationId": "getWorkflowTaskWorkflowLogsPage",
                "parameters": [
                    {
                        "name": "workflowTaskId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "types",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageWorkflowLog"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageWorkflowLog"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getWorkflowTaskWorkflowLogsPage } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getWorkflowTaskWorkflowLogsPage({\n        client,\n        path: {\n           workflowTaskId: \"3177\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-tasks/{workflowTaskId}/workflow-logs', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-instances/{workflowInstanceId}/workflow-logs/export-batch": {
            "post": {
                "tags": [
                    "WorkflowLog"
                ],
                "operationId": "postWorkflowInstanceWorkflowLogsPageExportBatch",
                "parameters": [
                    {
                        "name": "workflowInstanceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "types",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contentType",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fieldNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postWorkflowInstanceWorkflowLogsPageExportBatch } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postWorkflowInstanceWorkflowLogsPageExportBatch({\n        client,\n        path: {\n           workflowInstanceId: \"4776\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-instances/{workflowInstanceId}/workflow-logs/export-batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-tasks/{workflowTaskId}/workflow-logs/export-batch": {
            "post": {
                "tags": [
                    "WorkflowLog"
                ],
                "operationId": "postWorkflowTaskWorkflowLogsPageExportBatch",
                "parameters": [
                    {
                        "name": "workflowTaskId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "types",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contentType",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fieldNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postWorkflowTaskWorkflowLogsPageExportBatch } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postWorkflowTaskWorkflowLogsPageExportBatch({\n        client,\n        path: {\n           workflowTaskId: \"3245\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-tasks/{workflowTaskId}/workflow-logs/export-batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-tasks/assignable-users": {
            "post": {
                "tags": [
                    "WorkflowTaskAssignableUsers"
                ],
                "operationId": "postWorkflowTaskAssignableUser",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkflowTaskIds"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkflowTaskIds"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowTaskAssignableUsers"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowTaskAssignableUsers"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postWorkflowTaskAssignableUser } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postWorkflowTaskAssignableUser({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-tasks/assignable-users', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-instances/{workflowInstanceId}/workflow-tasks/assigned-to-me": {
            "get": {
                "tags": [
                    "WorkflowTask"
                ],
                "operationId": "getWorkflowInstanceWorkflowTasksAssignedToMePage",
                "parameters": [
                    {
                        "name": "workflowInstanceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "completed",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageWorkflowTask"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageWorkflowTask"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getWorkflowInstanceWorkflowTasksAssignedToMePage } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getWorkflowInstanceWorkflowTasksAssignedToMePage({\n        client,\n        path: {\n           workflowInstanceId: \"3700\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-instances/{workflowInstanceId}/workflow-tasks/assigned-to-me', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-instances/{workflowInstanceId}/workflow-tasks/assigned-to-user": {
            "get": {
                "tags": [
                    "WorkflowTask"
                ],
                "operationId": "getWorkflowInstanceWorkflowTasksAssignedToUserPage",
                "parameters": [
                    {
                        "name": "workflowInstanceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "assigneeId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "completed",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageWorkflowTask"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageWorkflowTask"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getWorkflowInstanceWorkflowTasksAssignedToUserPage } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getWorkflowInstanceWorkflowTasksAssignedToUserPage({\n        client,\n        path: {\n           workflowInstanceId: \"3369\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-instances/{workflowInstanceId}/workflow-tasks/assigned-to-user', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-instances/{workflowInstanceId}/workflow-tasks": {
            "get": {
                "tags": [
                    "WorkflowTask"
                ],
                "operationId": "getWorkflowInstanceWorkflowTasksPage",
                "parameters": [
                    {
                        "name": "workflowInstanceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "completed",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageWorkflowTask"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageWorkflowTask"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getWorkflowInstanceWorkflowTasksPage } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getWorkflowInstanceWorkflowTasksPage({\n        client,\n        path: {\n           workflowInstanceId: \"1171\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-instances/{workflowInstanceId}/workflow-tasks', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-tasks/{workflowTaskId}": {
            "get": {
                "tags": [
                    "WorkflowTask"
                ],
                "operationId": "getWorkflowTask",
                "parameters": [
                    {
                        "name": "workflowTaskId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowTask"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowTask"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getWorkflowTask } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getWorkflowTask({\n        client,\n        path: {\n           workflowTaskId: \"9671\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-tasks/{workflowTaskId}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-tasks/{workflowTaskId}/has-assignable-users": {
            "get": {
                "tags": [
                    "WorkflowTask"
                ],
                "operationId": "getWorkflowTaskHasAssignableUsers",
                "parameters": [
                    {
                        "name": "workflowTaskId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getWorkflowTaskHasAssignableUsers } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getWorkflowTaskHasAssignableUsers({\n        client,\n        path: {\n           workflowTaskId: \"3014\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-tasks/{workflowTaskId}/has-assignable-users', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-tasks/assigned-to-me": {
            "get": {
                "tags": [
                    "WorkflowTask"
                ],
                "operationId": "getWorkflowTasksAssignedToMePage",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageWorkflowTask"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageWorkflowTask"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getWorkflowTasksAssignedToMePage } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getWorkflowTasksAssignedToMePage({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-tasks/assigned-to-me', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-tasks/assigned-to-my-roles": {
            "get": {
                "tags": [
                    "WorkflowTask"
                ],
                "operationId": "getWorkflowTasksAssignedToMyRolesPage",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageWorkflowTask"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageWorkflowTask"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getWorkflowTasksAssignedToMyRolesPage } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getWorkflowTasksAssignedToMyRolesPage({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-tasks/assigned-to-my-roles', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-tasks/assigned-to-role": {
            "get": {
                "tags": [
                    "WorkflowTask"
                ],
                "operationId": "getWorkflowTasksAssignedToRolePage",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "roleId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageWorkflowTask"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageWorkflowTask"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getWorkflowTasksAssignedToRolePage } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getWorkflowTasksAssignedToRolePage({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-tasks/assigned-to-role', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-tasks/assigned-to-user": {
            "get": {
                "tags": [
                    "WorkflowTask"
                ],
                "operationId": "getWorkflowTasksAssignedToUserPage",
                "parameters": [
                    {
                        "name": "assigneeId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageWorkflowTask"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageWorkflowTask"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getWorkflowTasksAssignedToUserPage } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getWorkflowTasksAssignedToUserPage({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-tasks/assigned-to-user', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-tasks/assigned-to-user-roles": {
            "get": {
                "tags": [
                    "WorkflowTask"
                ],
                "operationId": "getWorkflowTasksAssignedToUserRolesPage",
                "parameters": [
                    {
                        "name": "assigneeId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageWorkflowTask"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageWorkflowTask"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getWorkflowTasksAssignedToUserRolesPage } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getWorkflowTasksAssignedToUserRolesPage({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-tasks/assigned-to-user-roles', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-tasks/submitting-user": {
            "get": {
                "tags": [
                    "WorkflowTask"
                ],
                "operationId": "getWorkflowTasksSubmittingUserPage",
                "parameters": [
                    {
                        "name": "creatorId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageWorkflowTask"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageWorkflowTask"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getWorkflowTasksSubmittingUserPage } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getWorkflowTasksSubmittingUserPage({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-tasks/submitting-user', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-tasks/assign-to-user": {
            "patch": {
                "tags": [
                    "WorkflowTask"
                ],
                "operationId": "patchWorkflowTaskAssignToUser",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/WorkflowTaskAssignToUser"
                                }
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/WorkflowTaskAssignToUser"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchWorkflowTaskAssignToUser } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchWorkflowTaskAssignToUser({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-tasks/assign-to-user', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-tasks/change-transition": {
            "patch": {
                "tags": [
                    "WorkflowTask"
                ],
                "operationId": "patchWorkflowTaskChangeTransition",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ChangeTransition"
                                }
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ChangeTransition"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchWorkflowTaskChangeTransition } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchWorkflowTaskChangeTransition({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-tasks/change-transition', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-tasks/update-due-date": {
            "patch": {
                "tags": [
                    "WorkflowTask"
                ],
                "operationId": "patchWorkflowTaskUpdateDueDate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/WorkflowTaskAssignToMe"
                                }
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/WorkflowTaskAssignToMe"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchWorkflowTaskUpdateDueDate } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchWorkflowTaskUpdateDueDate({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-tasks/update-due-date', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-instances/{workflowInstanceId}/workflow-tasks/export-batch": {
            "post": {
                "tags": [
                    "WorkflowTask"
                ],
                "operationId": "postWorkflowInstanceWorkflowTasksPageExportBatch",
                "parameters": [
                    {
                        "name": "workflowInstanceId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "completed",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contentType",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fieldNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postWorkflowInstanceWorkflowTasksPageExportBatch } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postWorkflowInstanceWorkflowTasksPageExportBatch({\n        client,\n        path: {\n           workflowInstanceId: \"5701\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-instances/{workflowInstanceId}/workflow-tasks/export-batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-tasks/{workflowTaskId}/assign-to-me": {
            "post": {
                "tags": [
                    "WorkflowTask"
                ],
                "operationId": "postWorkflowTaskAssignToMe",
                "parameters": [
                    {
                        "name": "workflowTaskId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkflowTaskAssignToMe"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkflowTaskAssignToMe"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowTask"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowTask"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postWorkflowTaskAssignToMe } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postWorkflowTaskAssignToMe({\n        client,\n        path: {\n           workflowTaskId: \"2432\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-tasks/{workflowTaskId}/assign-to-me', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-tasks/{workflowTaskId}/assign-to-role": {
            "post": {
                "tags": [
                    "WorkflowTask"
                ],
                "operationId": "postWorkflowTaskAssignToRole",
                "parameters": [
                    {
                        "name": "workflowTaskId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkflowTaskAssignToRole"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkflowTaskAssignToRole"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowTask"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowTask"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postWorkflowTaskAssignToRole } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postWorkflowTaskAssignToRole({\n        client,\n        path: {\n           workflowTaskId: \"2219\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-tasks/{workflowTaskId}/assign-to-role', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-tasks/{workflowTaskId}/assign-to-user": {
            "post": {
                "tags": [
                    "WorkflowTask"
                ],
                "operationId": "postWorkflowTaskAssignToUser",
                "parameters": [
                    {
                        "name": "workflowTaskId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkflowTaskAssignToUser"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkflowTaskAssignToUser"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowTask"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowTask"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postWorkflowTaskAssignToUser } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postWorkflowTaskAssignToUser({\n        client,\n        path: {\n           workflowTaskId: \"8748\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-tasks/{workflowTaskId}/assign-to-user', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-tasks/{workflowTaskId}/change-transition": {
            "post": {
                "tags": [
                    "WorkflowTask"
                ],
                "operationId": "postWorkflowTaskChangeTransition",
                "parameters": [
                    {
                        "name": "workflowTaskId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangeTransition"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangeTransition"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowTask"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowTask"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postWorkflowTaskChangeTransition } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postWorkflowTaskChangeTransition({\n        client,\n        path: {\n           workflowTaskId: \"9615\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-tasks/{workflowTaskId}/change-transition', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-tasks/{workflowTaskId}/update-due-date": {
            "post": {
                "tags": [
                    "WorkflowTask"
                ],
                "operationId": "postWorkflowTaskUpdateDueDate",
                "parameters": [
                    {
                        "name": "workflowTaskId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkflowTaskAssignToMe"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkflowTaskAssignToMe"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowTask"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowTask"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postWorkflowTaskUpdateDueDate } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postWorkflowTaskUpdateDueDate({\n        client,\n        path: {\n           workflowTaskId: \"1336\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-tasks/{workflowTaskId}/update-due-date', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-tasks": {
            "post": {
                "tags": [
                    "WorkflowTask"
                ],
                "operationId": "postWorkflowTasksPage",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkflowTasksBulkSelection"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkflowTasksBulkSelection"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageWorkflowTask"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageWorkflowTask"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postWorkflowTasksPage } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postWorkflowTasksPage({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-tasks', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-admin-workflow/v1.0/workflow-tasks/next-transitions": {
            "post": {
                "tags": [
                    "WorkflowTaskTransitions"
                ],
                "operationId": "postWorkflowTaskTransition",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkflowTaskIds"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/WorkflowTaskIds"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowTaskTransitions"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkflowTaskTransitions"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postWorkflowTaskTransition } from 'liferay-headless-rest-client/headless-admin-workflow-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postWorkflowTaskTransition({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-admin-workflow/v1.0/workflow-tasks/next-transitions', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Assignee": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The user's ID.",
                        "format": "int64",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The user's full name.",
                        "readOnly": true
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.workflow.dto.v1_0.Assignee"
                    }
                },
                "xml": {
                    "name": "Assignee"
                },
                "x-filterable": []
            },
            "Facet": {
                "type": "object",
                "properties": {
                    "facetCriteria": {
                        "type": "string"
                    },
                    "facetValues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FacetValue"
                        }
                    }
                },
                "x-filterable": []
            },
            "FacetValue": {
                "type": "object",
                "properties": {
                    "numberOfOccurrences": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "term": {
                        "type": "string"
                    }
                },
                "x-filterable": []
            },
            "PageAssignee": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Assignee"
                        }
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "PageTransition": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Transition"
                        }
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "Transition": {
                "type": "object",
                "properties": {
                    "label": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "sourceNodeName": {
                        "type": "string",
                        "readOnly": true
                    },
                    "targetNodeName": {
                        "type": "string",
                        "readOnly": true
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.workflow.dto.v1_0.Transition"
                    }
                },
                "xml": {
                    "name": "Transition"
                },
                "x-filterable": []
            },
            "PageWorkflowDefinitionLink": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkflowDefinitionLink"
                        }
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "WorkflowDefinitionLink": {
                "type": "object",
                "properties": {
                    "className": {
                        "type": "string"
                    },
                    "externalReferenceCode": {
                        "type": "string"
                    },
                    "groupExternalReferenceCode": {
                        "type": "string"
                    },
                    "groupId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "workflowDefinitionName": {
                        "type": "string",
                        "description": "The name of the instance's workflow definition."
                    },
                    "workflowDefinitionVersion": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.workflow.dto.v1_0.WorkflowDefinitionLink"
                    }
                },
                "xml": {
                    "name": "WorkflowDefinitionLink"
                },
                "x-filterable": []
            },
            "Creator": {
                "type": "object",
                "properties": {
                    "additionalName": {
                        "type": "string",
                        "description": "The user's additional name, which can be used as a middle name.",
                        "readOnly": true
                    },
                    "contentType": {
                        "type": "string",
                        "description": "The type of the content.",
                        "readOnly": true
                    },
                    "familyName": {
                        "type": "string",
                        "description": "The user's surname (last name).",
                        "readOnly": true
                    },
                    "givenName": {
                        "type": "string",
                        "description": "The user's first name.",
                        "readOnly": true
                    },
                    "id": {
                        "type": "integer",
                        "description": "The user's ID.",
                        "format": "int64",
                        "readOnly": true
                    },
                    "image": {
                        "type": "string",
                        "description": "A relative URL to the user's profile image.",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The user's full name.",
                        "readOnly": true
                    },
                    "profileURL": {
                        "type": "string",
                        "description": "A relative URL to the user's profile.",
                        "readOnly": true
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.workflow.dto.v1_0.Creator"
                    }
                },
                "description": "The role's creator.",
                "xml": {
                    "name": "Creator"
                },
                "x-filterable": []
            },
            "Node": {
                "type": "object",
                "properties": {
                    "label": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.workflow.dto.v1_0.Node"
                    },
                    "type": {
                        "type": "string",
                        "description": "The workflow's node types.",
                        "readOnly": true,
                        "enum": [
                            "CONDITION",
                            "FORK",
                            "INITIAL_STATE",
                            "JOIN",
                            "JOIN_XOR",
                            "STATE",
                            "TASK",
                            "TERMINAL_STATE"
                        ]
                    }
                },
                "xml": {
                    "name": "Node"
                },
                "x-filterable": []
            },
            "WorkflowDefinition": {
                "type": "object",
                "properties": {
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "readOnly": true
                    },
                    "active": {
                        "type": "boolean"
                    },
                    "content": {
                        "type": "string"
                    },
                    "creator": {
                        "$ref": "#/components/schemas/Creator"
                    },
                    "dateCreated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "dateModified": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "readOnly": true
                    },
                    "externalReferenceCode": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "nodes": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                            "$ref": "#/components/schemas/Node"
                        }
                    },
                    "title": {
                        "type": "string"
                    },
                    "title_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "transitions": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                            "$ref": "#/components/schemas/Transition"
                        }
                    },
                    "version": {
                        "type": "string"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.workflow.dto.v1_0.WorkflowDefinition"
                    }
                },
                "xml": {
                    "name": "WorkflowDefinition"
                },
                "x-filterable": [
                    "dateModified",
                    "name"
                ]
            },
            "PageWorkflowDefinition": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkflowDefinition"
                        }
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "ObjectReviewed": {
                "type": "object",
                "properties": {
                    "assetTitle": {
                        "type": "string",
                        "readOnly": true
                    },
                    "assetType": {
                        "type": "string",
                        "readOnly": true
                    },
                    "id": {
                        "type": "integer",
                        "description": "The resource's ID.",
                        "format": "int64",
                        "readOnly": true
                    },
                    "resourceType": {
                        "type": "string",
                        "description": "The resource's type.",
                        "readOnly": true
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.workflow.dto.v1_0.ObjectReviewed"
                    }
                },
                "description": "The object/asset that the task's workflow is managing.",
                "xml": {
                    "name": "ObjectReviewed"
                },
                "x-filterable": []
            },
            "WorkflowInstance": {
                "type": "object",
                "properties": {
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "readOnly": true
                    },
                    "completed": {
                        "type": "boolean",
                        "description": "A flag that indicates whether the instance is complete.",
                        "readOnly": true
                    },
                    "currentNodeNames": {
                        "type": "array",
                        "description": "The instance's current node names.",
                        "readOnly": true,
                        "items": {
                            "type": "string",
                            "description": "The instance's current node names."
                        }
                    },
                    "dateCompletion": {
                        "type": "string",
                        "description": "The instance's completion date.",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "dateCreated": {
                        "type": "string",
                        "description": "The instance's creation date.",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "id": {
                        "type": "integer",
                        "description": "The instance's ID.",
                        "format": "int64",
                        "readOnly": true
                    },
                    "objectReviewed": {
                        "$ref": "#/components/schemas/ObjectReviewed"
                    },
                    "workflowDefinitionName": {
                        "type": "string",
                        "description": "The name of the instance's workflow definition.",
                        "readOnly": true
                    },
                    "workflowDefinitionVersion": {
                        "type": "string",
                        "readOnly": true
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.workflow.dto.v1_0.WorkflowInstance"
                    }
                },
                "xml": {
                    "name": "WorkflowInstance"
                },
                "x-filterable": []
            },
            "PageWorkflowInstance": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkflowInstance"
                        }
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "ChangeTransition": {
                "type": "object",
                "properties": {
                    "comment": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "transitionName": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "workflowTaskId": {
                        "type": "integer",
                        "format": "int64",
                        "writeOnly": true
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.workflow.dto.v1_0.ChangeTransition"
                    }
                },
                "xml": {
                    "name": "ChangeTransition"
                },
                "x-filterable": []
            },
            "WorkflowInstanceSubmit": {
                "type": "object",
                "properties": {
                    "context": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        },
                        "writeOnly": true
                    },
                    "siteId": {
                        "type": "integer",
                        "format": "int64",
                        "writeOnly": true
                    },
                    "transitionName": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "workflowDefinitionName": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "workflowDefinitionVersion": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.workflow.dto.v1_0.WorkflowInstanceSubmit"
                    }
                },
                "xml": {
                    "name": "WorkflowInstanceSubmit"
                },
                "x-filterable": []
            },
            "PageWorkflowLog": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkflowLog"
                        }
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "Role": {
                "type": "object",
                "properties": {
                    "availableLanguages": {
                        "type": "array",
                        "description": "A list of languages for which the role has a translation.",
                        "readOnly": true,
                        "items": {
                            "type": "string",
                            "description": "A list of languages for which the role has a translation."
                        }
                    },
                    "creator": {
                        "$ref": "#/components/schemas/Creator"
                    },
                    "dateCreated": {
                        "type": "string",
                        "description": "The role's creation date.",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "dateModified": {
                        "type": "string",
                        "description": "The last time any of the role's fields were changed.",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "description": "The role's description.",
                        "readOnly": true
                    },
                    "description_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "readOnly": true
                    },
                    "id": {
                        "type": "integer",
                        "description": "The role's ID.",
                        "format": "int64",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The role's name.",
                        "readOnly": true
                    },
                    "name_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "readOnly": true
                    },
                    "roleType": {
                        "type": "string",
                        "description": "The role's type.",
                        "readOnly": true
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.workflow.dto.v1_0.Role"
                    }
                },
                "xml": {
                    "name": "Role"
                },
                "x-filterable": []
            },
            "WorkflowLog": {
                "type": "object",
                "properties": {
                    "auditPerson": {
                        "$ref": "#/components/schemas/Creator"
                    },
                    "commentLog": {
                        "type": "string",
                        "description": "The log's comments.",
                        "readOnly": true
                    },
                    "dateCreated": {
                        "type": "string",
                        "description": "The log's creation date.",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "description": "The log's description.",
                        "readOnly": true
                    },
                    "id": {
                        "type": "integer",
                        "description": "The log's ID.",
                        "format": "int64",
                        "readOnly": true
                    },
                    "person": {
                        "$ref": "#/components/schemas/Creator"
                    },
                    "previousPerson": {
                        "$ref": "#/components/schemas/Creator"
                    },
                    "previousRole": {
                        "$ref": "#/components/schemas/Role"
                    },
                    "previousState": {
                        "type": "string",
                        "description": "The workflow's previous state.",
                        "readOnly": true
                    },
                    "previousStateLabel": {
                        "type": "string",
                        "description": "The workflow's previous state Label.",
                        "readOnly": true
                    },
                    "role": {
                        "$ref": "#/components/schemas/Role"
                    },
                    "state": {
                        "type": "string",
                        "description": "The workflow's current state.",
                        "readOnly": true
                    },
                    "stateLabel": {
                        "type": "string",
                        "description": "The workflow's current state Label.",
                        "readOnly": true
                    },
                    "workflowTaskId": {
                        "type": "integer",
                        "description": "The task associated with this workflow log.",
                        "format": "int64",
                        "readOnly": true
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.workflow.dto.v1_0.WorkflowLog"
                    },
                    "type": {
                        "type": "string",
                        "description": "The workflow log's type.",
                        "readOnly": true,
                        "enum": [
                            "InstanceFail",
                            "NodeEntry",
                            "TaskAssign",
                            "TaskCompletion",
                            "TaskUpdate",
                            "Transition"
                        ]
                    }
                },
                "xml": {
                    "name": "WorkflowLog"
                },
                "x-filterable": []
            },
            "WorkflowTaskAssignableUser": {
                "type": "object",
                "properties": {
                    "assignableUsers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Assignee"
                        }
                    },
                    "workflowTaskId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.workflow.dto.v1_0.WorkflowTaskAssignableUser"
                    }
                },
                "xml": {
                    "name": "WorkflowTaskAssignableUser"
                },
                "x-filterable": []
            },
            "WorkflowTaskAssignableUsers": {
                "type": "object",
                "properties": {
                    "workflowTaskAssignableUsers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkflowTaskAssignableUser"
                        }
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.workflow.dto.v1_0.WorkflowTaskAssignableUsers"
                    }
                },
                "xml": {
                    "name": "WorkflowTaskAssignableUsers"
                },
                "x-filterable": []
            },
            "WorkflowTaskIds": {
                "type": "object",
                "properties": {
                    "workflowTaskIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.workflow.dto.v1_0.WorkflowTaskIds"
                    }
                },
                "xml": {
                    "name": "WorkflowTaskIds"
                },
                "x-filterable": []
            },
            "PageWorkflowTask": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkflowTask"
                        }
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "WorkflowTask": {
                "type": "object",
                "properties": {
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "readOnly": true
                    },
                    "assigneePerson": {
                        "$ref": "#/components/schemas/Creator"
                    },
                    "assigneeRoles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Role"
                        }
                    },
                    "completed": {
                        "type": "boolean",
                        "description": "A flag that indicates whether the task is complete.",
                        "readOnly": true
                    },
                    "dateCompletion": {
                        "type": "string",
                        "description": "The task's completion date.",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "dateCreated": {
                        "type": "string",
                        "description": "The task's creation date.",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "dateDue": {
                        "type": "string",
                        "description": "The date the task should be completed by.",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "description": "The task's description.",
                        "readOnly": true
                    },
                    "id": {
                        "type": "integer",
                        "description": "The task's ID.",
                        "format": "int64",
                        "readOnly": true
                    },
                    "label": {
                        "type": "string",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The task's name.",
                        "readOnly": true
                    },
                    "objectReviewed": {
                        "$ref": "#/components/schemas/ObjectReviewed"
                    },
                    "workflowDefinitionId": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "workflowDefinitionName": {
                        "type": "string",
                        "description": "The name of the task's workflow definition.",
                        "readOnly": true
                    },
                    "workflowDefinitionVersion": {
                        "type": "string",
                        "readOnly": true
                    },
                    "workflowInstanceId": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.workflow.dto.v1_0.WorkflowTask"
                    }
                },
                "xml": {
                    "name": "WorkflowTask"
                },
                "x-filterable": []
            },
            "WorkflowTaskAssignToUser": {
                "type": "object",
                "properties": {
                    "assigneeId": {
                        "type": "integer",
                        "format": "int64",
                        "writeOnly": true
                    },
                    "comment": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "dueDate": {
                        "type": "string",
                        "format": "date-time",
                        "writeOnly": true
                    },
                    "workflowTaskId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.workflow.dto.v1_0.WorkflowTaskAssignToUser"
                    }
                },
                "xml": {
                    "name": "WorkflowTaskAssignToUser"
                },
                "x-filterable": []
            },
            "WorkflowTaskAssignToMe": {
                "type": "object",
                "properties": {
                    "comment": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "dueDate": {
                        "type": "string",
                        "format": "date-time",
                        "writeOnly": true
                    },
                    "workflowTaskId": {
                        "type": "integer",
                        "format": "int64",
                        "writeOnly": true
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.workflow.dto.v1_0.WorkflowTaskAssignToMe"
                    }
                },
                "xml": {
                    "name": "WorkflowTaskAssignToMe"
                },
                "x-filterable": []
            },
            "WorkflowTaskAssignToRole": {
                "type": "object",
                "properties": {
                    "comment": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "dueDate": {
                        "type": "string",
                        "format": "date-time",
                        "writeOnly": true
                    },
                    "roleId": {
                        "type": "integer",
                        "format": "int64",
                        "writeOnly": true
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.workflow.dto.v1_0.WorkflowTaskAssignToRole"
                    }
                },
                "xml": {
                    "name": "WorkflowTaskAssignToRole"
                },
                "x-filterable": []
            },
            "WorkflowTasksBulkSelection": {
                "type": "object",
                "properties": {
                    "andOperator": {
                        "type": "boolean"
                    },
                    "assetPrimaryKeys": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    "assetTitle": {
                        "type": "string"
                    },
                    "assetTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "assigneeIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    "completed": {
                        "type": "boolean"
                    },
                    "dateDueEnd": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "dateDueStart": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "searchByRoles": {
                        "type": "boolean"
                    },
                    "searchByUserRoles": {
                        "type": "boolean"
                    },
                    "workflowDefinitionId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "workflowInstanceIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    "workflowTaskNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.workflow.dto.v1_0.WorkflowTasksBulkSelection"
                    }
                },
                "xml": {
                    "name": "WorkflowTasksBulkSelection"
                },
                "x-filterable": []
            },
            "WorkflowTaskTransition": {
                "type": "object",
                "properties": {
                    "transitions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Transition"
                        }
                    },
                    "workflowDefinitionVersion": {
                        "type": "string"
                    },
                    "workflowTaskLabel": {
                        "type": "string"
                    },
                    "workflowTaskName": {
                        "type": "string"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.workflow.dto.v1_0.WorkflowTaskTransition"
                    }
                },
                "xml": {
                    "name": "WorkflowTaskTransition"
                },
                "x-filterable": []
            },
            "WorkflowTaskTransitions": {
                "type": "object",
                "properties": {
                    "workflowTaskTransitions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WorkflowTaskTransition"
                        }
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.admin.workflow.dto.v1_0.WorkflowTaskTransitions"
                    }
                },
                "xml": {
                    "name": "WorkflowTaskTransitions"
                },
                "x-filterable": []
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "description": "JWT Bearer token authentication"
            },
            "basicAuth": {
                "type": "http",
                "scheme": "basic",
                "description": "Basic HTTP authentication"
            },
            "apiKeyHeader": {
                "type": "apiKey",
                "in": "header",
                "name": "X-API-Key",
                "description": "API key request header"
            },
            "apiKeyQuery": {
                "type": "apiKey",
                "in": "query",
                "name": "api_key",
                "description": "API key query parameter"
            },
            "apiKeyCookie": {
                "type": "apiKey",
                "in": "cookie",
                "name": "api_key",
                "description": "API key browser cookie"
            },
            "oAuth2": {
                "type": "oauth2",
                "description": "OAuth 2.0 authentication",
                "flows": {
                    "authorizationCode": {
                        "authorizationUrl": "https://galaxy.scalar.com/oauth/authorize",
                        "tokenUrl": "https://galaxy.scalar.com/oauth/token",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    },
                    "clientCredentials": {
                        "tokenUrl": "https://galaxy.scalar.com/oauth/token",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    },
                    "implicit": {
                        "authorizationUrl": "https://galaxy.scalar.com/oauth/authorize",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    },
                    "password": {
                        "tokenUrl": "https://galaxy.scalar.com/oauth/token",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    }
                }
            },
            "openIdConnect": {
                "type": "openIdConnect",
                "openIdConnectUrl": "https://galaxy.scalar.com/.well-known/openid-configuration",
                "description": "OpenID Connect Authentication"
            }
        }
    }
}