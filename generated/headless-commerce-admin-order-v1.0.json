{
    "openapi": "3.0.1",
    "info": {
        "title": "Liferay Commerce Admin Order API",
        "description": "Liferay Commerce Admin Order API. A Java client JAR is available for use with the group ID 'com.liferay', artifact ID 'com.liferay.headless.commerce.admin.order.client', and version '4.0.51'.",
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "v1.0"
    },
    "servers": [
        {
            "url": "http://localhost:8080"
        }
    ],
    "paths": {
        "/o/headless-commerce-admin-order/v1.0/orders/by-externalReferenceCode/{externalReferenceCode}/account": {
            "get": {
                "tags": [
                    "Account"
                ],
                "operationId": "getOrderByExternalReferenceCodeAccount",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Account"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Account"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getOrderByExternalReferenceCodeAccount } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getOrderByExternalReferenceCodeAccount({\n        client,\n        path: {\n           externalReferenceCode: \"6059\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orders/by-externalReferenceCode/{externalReferenceCode}/account', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/orders/{id}/account": {
            "get": {
                "tags": [
                    "Account"
                ],
                "operationId": "getOrderIdAccount",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Account"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Account"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getOrderIdAccount } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getOrderIdAccount({\n        client,\n        path: {\n           id: \"4401\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orders/{id}/account', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/order-rule-accounts/{orderRuleAccountId}/account": {
            "get": {
                "tags": [
                    "Account"
                ],
                "operationId": "getOrderRuleAccountAccount",
                "parameters": [
                    {
                        "name": "orderRuleAccountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Account"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Account"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getOrderRuleAccountAccount } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getOrderRuleAccountAccount({\n        client,\n        path: {\n           orderRuleAccountId: \"228\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-rule-accounts/{orderRuleAccountId}/account', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/orders/by-externalReferenceCode/{externalReferenceCode}/billingAddress": {
            "get": {
                "tags": [
                    "BillingAddress"
                ],
                "operationId": "getOrderByExternalReferenceCodeBillingAddress",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BillingAddress"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/BillingAddress"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getOrderByExternalReferenceCodeBillingAddress } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getOrderByExternalReferenceCodeBillingAddress({\n        client,\n        path: {\n           externalReferenceCode: \"134\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orders/by-externalReferenceCode/{externalReferenceCode}/billingAddress', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "BillingAddress"
                ],
                "operationId": "patchOrderByExternalReferenceCodeBillingAddress",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BillingAddress"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/BillingAddress"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchOrderByExternalReferenceCodeBillingAddress } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchOrderByExternalReferenceCodeBillingAddress({\n        client,\n        path: {\n           externalReferenceCode: \"157\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orders/by-externalReferenceCode/{externalReferenceCode}/billingAddress', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/orders/{id}/billingAddress": {
            "get": {
                "tags": [
                    "BillingAddress"
                ],
                "operationId": "getOrderIdBillingAddress",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BillingAddress"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/BillingAddress"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getOrderIdBillingAddress } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getOrderIdBillingAddress({\n        client,\n        path: {\n           id: \"1884\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orders/{id}/billingAddress', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "BillingAddress"
                ],
                "operationId": "patchOrderIdBillingAddress",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BillingAddress"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/BillingAddress"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchOrderIdBillingAddress } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchOrderIdBillingAddress({\n        client,\n        path: {\n           id: \"232\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orders/{id}/billingAddress', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/orders/by-externalReferenceCode/{externalReferenceCode}/channel": {
            "get": {
                "tags": [
                    "Channel"
                ],
                "operationId": "getOrderByExternalReferenceCodeChannel",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Channel"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Channel"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getOrderByExternalReferenceCodeChannel } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getOrderByExternalReferenceCodeChannel({\n        client,\n        path: {\n           externalReferenceCode: \"3089\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orders/by-externalReferenceCode/{externalReferenceCode}/channel', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/orders/{id}/channel": {
            "get": {
                "tags": [
                    "Channel"
                ],
                "operationId": "getOrderIdChannel",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Channel"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Channel"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getOrderIdChannel } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getOrderIdChannel({\n        client,\n        path: {\n           id: \"9868\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orders/{id}/channel', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/order-rule-channels/{orderRuleChannelId}/channel": {
            "get": {
                "tags": [
                    "Channel"
                ],
                "operationId": "getOrderRuleChannelChannel",
                "parameters": [
                    {
                        "name": "orderRuleChannelId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Channel"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Channel"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getOrderRuleChannelChannel } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getOrderRuleChannelChannel({\n        client,\n        path: {\n           orderRuleChannelId: \"6720\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-rule-channels/{orderRuleChannelId}/channel', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/order-type-channels/{orderTypeChannelId}/channel": {
            "get": {
                "tags": [
                    "Channel"
                ],
                "operationId": "getOrderTypeChannelChannel",
                "parameters": [
                    {
                        "name": "orderTypeChannelId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Channel"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Channel"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getOrderTypeChannelChannel } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getOrderTypeChannelChannel({\n        client,\n        path: {\n           orderTypeChannelId: \"9878\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-type-channels/{orderTypeChannelId}/channel', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/order-rule-account-groups/{orderRuleAccountGroupId}/account-group": {
            "get": {
                "tags": [
                    "OrderAccountGroup"
                ],
                "operationId": "getOrderRuleAccountGroupAccountGroup",
                "parameters": [
                    {
                        "name": "orderRuleAccountGroupId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderAccountGroup"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderAccountGroup"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getOrderRuleAccountGroupAccountGroup } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getOrderRuleAccountGroupAccountGroup({\n        client,\n        path: {\n           orderRuleAccountGroupId: \"435\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-rule-account-groups/{orderRuleAccountGroupId}/account-group', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/orderItems/{id}": {
            "get": {
                "tags": [
                    "OrderItem"
                ],
                "operationId": "getOrderItem",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderItem"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderItem"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getOrderItem } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getOrderItem({\n        client,\n        path: {\n           id: \"5052\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orderItems/{id}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "put": {
                "tags": [
                    "OrderItem"
                ],
                "operationId": "putOrderItem",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderItem"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderItem"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderItem"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderItem"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putOrderItem } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putOrderItem({\n        client,\n        path: {\n           id: \"8015\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orderItems/{id}', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "OrderItem"
                ],
                "operationId": "deleteOrderItem",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteOrderItem } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteOrderItem({\n        client,\n        path: {\n           id: \"4278\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orderItems/{id}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "OrderItem"
                ],
                "operationId": "patchOrderItem",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderItem"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderItem"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderItem"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderItem"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchOrderItem } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchOrderItem({\n        client,\n        path: {\n           id: \"573\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orderItems/{id}', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/orderItems/batch": {
            "put": {
                "tags": [
                    "OrderItem"
                ],
                "operationId": "putOrderItemBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putOrderItemBatch } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putOrderItemBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orderItems/batch', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "OrderItem"
                ],
                "operationId": "deleteOrderItemBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteOrderItemBatch } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteOrderItemBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orderItems/batch', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/orderItems/by-externalReferenceCode/{externalReferenceCode}": {
            "get": {
                "tags": [
                    "OrderItem"
                ],
                "operationId": "getOrderItemByExternalReferenceCode",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderItem"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderItem"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getOrderItemByExternalReferenceCode } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getOrderItemByExternalReferenceCode({\n        client,\n        path: {\n           externalReferenceCode: \"9024\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orderItems/by-externalReferenceCode/{externalReferenceCode}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "put": {
                "tags": [
                    "OrderItem"
                ],
                "operationId": "putOrderItemByExternalReferenceCode",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderItem"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderItem"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderItem"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderItem"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putOrderItemByExternalReferenceCode } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putOrderItemByExternalReferenceCode({\n        client,\n        path: {\n           externalReferenceCode: \"7181\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orderItems/by-externalReferenceCode/{externalReferenceCode}', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "OrderItem"
                ],
                "operationId": "deleteOrderItemByExternalReferenceCode",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteOrderItemByExternalReferenceCode } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteOrderItemByExternalReferenceCode({\n        client,\n        path: {\n           externalReferenceCode: \"8020\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orderItems/by-externalReferenceCode/{externalReferenceCode}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "OrderItem"
                ],
                "operationId": "patchOrderItemByExternalReferenceCode",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderItem"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderItem"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderItem"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderItem"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchOrderItemByExternalReferenceCode } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchOrderItemByExternalReferenceCode({\n        client,\n        path: {\n           externalReferenceCode: \"6414\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orderItems/by-externalReferenceCode/{externalReferenceCode}', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/orders/by-externalReferenceCode/{externalReferenceCode}/orderItems": {
            "get": {
                "tags": [
                    "OrderItem"
                ],
                "operationId": "getOrderByExternalReferenceCodeOrderItemsPage",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageOrderItem"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageOrderItem"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getOrderByExternalReferenceCodeOrderItemsPage } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getOrderByExternalReferenceCodeOrderItemsPage({\n        client,\n        path: {\n           externalReferenceCode: \"2158\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orders/by-externalReferenceCode/{externalReferenceCode}/orderItems', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "post": {
                "tags": [
                    "OrderItem"
                ],
                "operationId": "postOrderByExternalReferenceCodeOrderItem",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderItem"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderItem"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderItem"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderItem"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postOrderByExternalReferenceCodeOrderItem } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postOrderByExternalReferenceCodeOrderItem({\n        client,\n        path: {\n           externalReferenceCode: \"3741\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orders/by-externalReferenceCode/{externalReferenceCode}/orderItems', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/orders/{id}/orderItems": {
            "get": {
                "tags": [
                    "OrderItem"
                ],
                "operationId": "getOrderIdOrderItemsPage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageOrderItem"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageOrderItem"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getOrderIdOrderItemsPage } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getOrderIdOrderItemsPage({\n        client,\n        path: {\n           id: \"2885\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orders/{id}/orderItems', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "post": {
                "tags": [
                    "OrderItem"
                ],
                "operationId": "postOrderIdOrderItem",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderItem"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderItem"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderItem"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderItem"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postOrderIdOrderItem } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postOrderIdOrderItem({\n        client,\n        path: {\n           id: \"4710\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orders/{id}/orderItems', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/orderItems": {
            "get": {
                "tags": [
                    "OrderItem"
                ],
                "operationId": "getOrderItemsPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageOrderItem"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageOrderItem"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getOrderItemsPage } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getOrderItemsPage({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orderItems', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/orders/orderItems/batch": {
            "post": {
                "tags": [
                    "OrderItem"
                ],
                "operationId": "postOrderIdOrderItemBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postOrderIdOrderItemBatch } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postOrderIdOrderItemBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orders/orderItems/batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/orderItems/export-batch": {
            "post": {
                "tags": [
                    "OrderItem"
                ],
                "operationId": "postOrderItemsPageExportBatch",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contentType",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fieldNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postOrderItemsPageExportBatch } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postOrderItemsPageExportBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orderItems/export-batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/orderNotes/{id}": {
            "get": {
                "tags": [
                    "OrderNote"
                ],
                "operationId": "getOrderNote",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderNote"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderNote"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getOrderNote } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getOrderNote({\n        client,\n        path: {\n           id: \"2328\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orderNotes/{id}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "OrderNote"
                ],
                "operationId": "deleteOrderNote",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteOrderNote } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteOrderNote({\n        client,\n        path: {\n           id: \"4958\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orderNotes/{id}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "OrderNote"
                ],
                "operationId": "patchOrderNote",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderNote"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderNote"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchOrderNote } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchOrderNote({\n        client,\n        path: {\n           id: \"5384\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orderNotes/{id}', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/orderNotes/batch": {
            "delete": {
                "tags": [
                    "OrderNote"
                ],
                "operationId": "deleteOrderNoteBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteOrderNoteBatch } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteOrderNoteBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orderNotes/batch', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/orderNotes/by-externalReferenceCode/{externalReferenceCode}": {
            "get": {
                "tags": [
                    "OrderNote"
                ],
                "operationId": "getOrderNoteByExternalReferenceCode",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderNote"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderNote"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getOrderNoteByExternalReferenceCode } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getOrderNoteByExternalReferenceCode({\n        client,\n        path: {\n           externalReferenceCode: \"8876\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orderNotes/by-externalReferenceCode/{externalReferenceCode}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "OrderNote"
                ],
                "operationId": "deleteOrderNoteByExternalReferenceCode",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteOrderNoteByExternalReferenceCode } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteOrderNoteByExternalReferenceCode({\n        client,\n        path: {\n           externalReferenceCode: \"8977\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orderNotes/by-externalReferenceCode/{externalReferenceCode}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "OrderNote"
                ],
                "operationId": "patchOrderNoteByExternalReferenceCode",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderNote"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderNote"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchOrderNoteByExternalReferenceCode } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchOrderNoteByExternalReferenceCode({\n        client,\n        path: {\n           externalReferenceCode: \"2718\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orderNotes/by-externalReferenceCode/{externalReferenceCode}', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/orders/by-externalReferenceCode/{externalReferenceCode}/orderNotes": {
            "get": {
                "tags": [
                    "OrderNote"
                ],
                "operationId": "getOrderByExternalReferenceCodeOrderNotesPage",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageOrderNote"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageOrderNote"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getOrderByExternalReferenceCodeOrderNotesPage } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getOrderByExternalReferenceCodeOrderNotesPage({\n        client,\n        path: {\n           externalReferenceCode: \"1177\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orders/by-externalReferenceCode/{externalReferenceCode}/orderNotes', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "post": {
                "tags": [
                    "OrderNote"
                ],
                "operationId": "postOrderByExternalReferenceCodeOrderNote",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderNote"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderNote"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderNote"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderNote"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postOrderByExternalReferenceCodeOrderNote } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postOrderByExternalReferenceCodeOrderNote({\n        client,\n        path: {\n           externalReferenceCode: \"3743\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orders/by-externalReferenceCode/{externalReferenceCode}/orderNotes', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/orders/{id}/orderNotes": {
            "get": {
                "tags": [
                    "OrderNote"
                ],
                "operationId": "getOrderIdOrderNotesPage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageOrderNote"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageOrderNote"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getOrderIdOrderNotesPage } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getOrderIdOrderNotesPage({\n        client,\n        path: {\n           id: \"6271\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orders/{id}/orderNotes', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "post": {
                "tags": [
                    "OrderNote"
                ],
                "operationId": "postOrderIdOrderNote",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderNote"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderNote"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderNote"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderNote"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postOrderIdOrderNote } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postOrderIdOrderNote({\n        client,\n        path: {\n           id: \"6363\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orders/{id}/orderNotes', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/orders/orderNotes/batch": {
            "post": {
                "tags": [
                    "OrderNote"
                ],
                "operationId": "postOrderIdOrderNoteBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postOrderIdOrderNoteBatch } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postOrderIdOrderNoteBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orders/orderNotes/batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/orders/{id}": {
            "get": {
                "tags": [
                    "Order"
                ],
                "operationId": "getOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getOrder } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getOrder({\n        client,\n        path: {\n           id: \"9031\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orders/{id}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Order"
                ],
                "operationId": "deleteOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteOrder } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteOrder({\n        client,\n        path: {\n           id: \"6169\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orders/{id}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Order"
                ],
                "operationId": "patchOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Order"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/Order"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchOrder } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchOrder({\n        client,\n        path: {\n           id: \"2163\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orders/{id}', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/orders/batch": {
            "post": {
                "tags": [
                    "Order"
                ],
                "operationId": "postOrderBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postOrderBatch } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postOrderBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orders/batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Order"
                ],
                "operationId": "deleteOrderBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteOrderBatch } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteOrderBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orders/batch', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/orders/by-externalReferenceCode/{externalReferenceCode}": {
            "get": {
                "tags": [
                    "Order"
                ],
                "operationId": "getOrderByExternalReferenceCode",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getOrderByExternalReferenceCode } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getOrderByExternalReferenceCode({\n        client,\n        path: {\n           externalReferenceCode: \"2763\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orders/by-externalReferenceCode/{externalReferenceCode}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "put": {
                "tags": [
                    "Order"
                ],
                "operationId": "putOrderByExternalReferenceCode",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Order"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/Order"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putOrderByExternalReferenceCode } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putOrderByExternalReferenceCode({\n        client,\n        path: {\n           externalReferenceCode: \"6164\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orders/by-externalReferenceCode/{externalReferenceCode}', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Order"
                ],
                "operationId": "deleteOrderByExternalReferenceCode",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteOrderByExternalReferenceCode } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteOrderByExternalReferenceCode({\n        client,\n        path: {\n           externalReferenceCode: \"5407\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orders/by-externalReferenceCode/{externalReferenceCode}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Order"
                ],
                "operationId": "patchOrderByExternalReferenceCode",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Order"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/Order"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchOrderByExternalReferenceCode } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchOrderByExternalReferenceCode({\n        client,\n        path: {\n           externalReferenceCode: \"9218\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orders/by-externalReferenceCode/{externalReferenceCode}', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/orders": {
            "get": {
                "tags": [
                    "Order"
                ],
                "operationId": "getOrdersPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageOrder"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageOrder"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getOrdersPage } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getOrdersPage({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orders', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "post": {
                "tags": [
                    "Order"
                ],
                "operationId": "postOrder",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Order"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/Order"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postOrder } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postOrder({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orders', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/orders/export-batch": {
            "post": {
                "tags": [
                    "Order"
                ],
                "operationId": "postOrdersPageExportBatch",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contentType",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fieldNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postOrdersPageExportBatch } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postOrdersPageExportBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orders/export-batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/order-rule-account-groups/{orderRuleAccountGroupId}": {
            "delete": {
                "tags": [
                    "OrderRuleAccountGroup"
                ],
                "operationId": "deleteOrderRuleAccountGroup",
                "parameters": [
                    {
                        "name": "orderRuleAccountGroupId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteOrderRuleAccountGroup } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteOrderRuleAccountGroup({\n        client,\n        path: {\n           orderRuleAccountGroupId: \"7011\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-rule-account-groups/{orderRuleAccountGroupId}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/order-rule-account-groups/batch": {
            "delete": {
                "tags": [
                    "OrderRuleAccountGroup"
                ],
                "operationId": "deleteOrderRuleAccountGroupBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteOrderRuleAccountGroupBatch } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteOrderRuleAccountGroupBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-rule-account-groups/batch', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/order-rules/by-externalReferenceCode/{externalReferenceCode}/order-rule-account-groups": {
            "get": {
                "tags": [
                    "OrderRuleAccountGroup"
                ],
                "operationId": "getOrderRuleByExternalReferenceCodeOrderRuleAccountGroupsPage",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageOrderRuleAccountGroup"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageOrderRuleAccountGroup"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getOrderRuleByExternalReferenceCodeOrderRuleAccountGroupsPage } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getOrderRuleByExternalReferenceCodeOrderRuleAccountGroupsPage({\n        client,\n        path: {\n           externalReferenceCode: \"5798\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-rules/by-externalReferenceCode/{externalReferenceCode}/order-rule-account-groups', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "post": {
                "tags": [
                    "OrderRuleAccountGroup"
                ],
                "operationId": "postOrderRuleByExternalReferenceCodeOrderRuleAccountGroup",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRuleAccountGroup"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRuleAccountGroup"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderRuleAccountGroup"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderRuleAccountGroup"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postOrderRuleByExternalReferenceCodeOrderRuleAccountGroup } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postOrderRuleByExternalReferenceCodeOrderRuleAccountGroup({\n        client,\n        path: {\n           externalReferenceCode: \"8140\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-rules/by-externalReferenceCode/{externalReferenceCode}/order-rule-account-groups', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/order-rules/{id}/order-rule-account-groups": {
            "get": {
                "tags": [
                    "OrderRuleAccountGroup"
                ],
                "operationId": "getOrderRuleIdOrderRuleAccountGroupsPage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageOrderRuleAccountGroup"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageOrderRuleAccountGroup"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getOrderRuleIdOrderRuleAccountGroupsPage } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getOrderRuleIdOrderRuleAccountGroupsPage({\n        client,\n        path: {\n           id: \"9125\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-rules/{id}/order-rule-account-groups', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "post": {
                "operationId": "postOrderRuleIdOrderRuleAccountGroup",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRuleAccountGroup"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRuleAccountGroup"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderRuleAccountGroup"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderRuleAccountGroup"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postOrderRuleIdOrderRuleAccountGroup } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postOrderRuleIdOrderRuleAccountGroup({\n        client,\n        path: {\n           id: \"5597\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-rules/{id}/order-rule-account-groups', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/order-rules/order-rule-account-groups/batch": {
            "post": {
                "operationId": "postOrderRuleIdOrderRuleAccountGroupBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postOrderRuleIdOrderRuleAccountGroupBatch } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postOrderRuleIdOrderRuleAccountGroupBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-rules/order-rule-account-groups/batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/order-rule-accounts/{orderRuleAccountId}": {
            "delete": {
                "tags": [
                    "OrderRuleAccount"
                ],
                "operationId": "deleteOrderRuleAccount",
                "parameters": [
                    {
                        "name": "orderRuleAccountId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteOrderRuleAccount } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteOrderRuleAccount({\n        client,\n        path: {\n           orderRuleAccountId: \"7072\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-rule-accounts/{orderRuleAccountId}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/order-rule-accounts/batch": {
            "delete": {
                "tags": [
                    "OrderRuleAccount"
                ],
                "operationId": "deleteOrderRuleAccountBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteOrderRuleAccountBatch } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteOrderRuleAccountBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-rule-accounts/batch', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/order-rules/by-externalReferenceCode/{externalReferenceCode}/order-rule-accounts": {
            "get": {
                "tags": [
                    "OrderRuleAccount"
                ],
                "operationId": "getOrderRuleByExternalReferenceCodeOrderRuleAccountsPage",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageOrderRuleAccount"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageOrderRuleAccount"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getOrderRuleByExternalReferenceCodeOrderRuleAccountsPage } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getOrderRuleByExternalReferenceCodeOrderRuleAccountsPage({\n        client,\n        path: {\n           externalReferenceCode: \"6502\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-rules/by-externalReferenceCode/{externalReferenceCode}/order-rule-accounts', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "post": {
                "tags": [
                    "OrderRuleAccount"
                ],
                "operationId": "postOrderRuleByExternalReferenceCodeOrderRuleAccount",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRuleAccount"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRuleAccount"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderRuleAccount"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderRuleAccount"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postOrderRuleByExternalReferenceCodeOrderRuleAccount } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postOrderRuleByExternalReferenceCodeOrderRuleAccount({\n        client,\n        path: {\n           externalReferenceCode: \"5414\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-rules/by-externalReferenceCode/{externalReferenceCode}/order-rule-accounts', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/order-rules/{id}/order-rule-accounts": {
            "get": {
                "tags": [
                    "OrderRuleAccount"
                ],
                "operationId": "getOrderRuleIdOrderRuleAccountsPage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageOrderRuleAccount"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageOrderRuleAccount"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getOrderRuleIdOrderRuleAccountsPage } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getOrderRuleIdOrderRuleAccountsPage({\n        client,\n        path: {\n           id: \"1138\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-rules/{id}/order-rule-accounts', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "post": {
                "operationId": "postOrderRuleIdOrderRuleAccount",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRuleAccount"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRuleAccount"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderRuleAccount"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderRuleAccount"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postOrderRuleIdOrderRuleAccount } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postOrderRuleIdOrderRuleAccount({\n        client,\n        path: {\n           id: \"8929\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-rules/{id}/order-rule-accounts', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/order-rules/order-rule-accounts/batch": {
            "post": {
                "operationId": "postOrderRuleIdOrderRuleAccountBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postOrderRuleIdOrderRuleAccountBatch } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postOrderRuleIdOrderRuleAccountBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-rules/order-rule-accounts/batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/order-rule-channels/{orderRuleChannelId}": {
            "delete": {
                "tags": [
                    "OrderRuleChannel"
                ],
                "operationId": "deleteOrderRuleChannel",
                "parameters": [
                    {
                        "name": "orderRuleChannelId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteOrderRuleChannel } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteOrderRuleChannel({\n        client,\n        path: {\n           orderRuleChannelId: \"9314\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-rule-channels/{orderRuleChannelId}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/order-rule-channels/batch": {
            "delete": {
                "tags": [
                    "OrderRuleChannel"
                ],
                "operationId": "deleteOrderRuleChannelBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteOrderRuleChannelBatch } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteOrderRuleChannelBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-rule-channels/batch', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/order-rules/by-externalReferenceCode/{externalReferenceCode}/order-rule-channels": {
            "get": {
                "tags": [
                    "OrderRuleChannel"
                ],
                "operationId": "getOrderRuleByExternalReferenceCodeOrderRuleChannelsPage",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageOrderRuleChannel"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageOrderRuleChannel"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getOrderRuleByExternalReferenceCodeOrderRuleChannelsPage } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getOrderRuleByExternalReferenceCodeOrderRuleChannelsPage({\n        client,\n        path: {\n           externalReferenceCode: \"4855\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-rules/by-externalReferenceCode/{externalReferenceCode}/order-rule-channels', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "post": {
                "tags": [
                    "OrderRuleChannel"
                ],
                "operationId": "postOrderRuleByExternalReferenceCodeOrderRuleChannel",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRuleChannel"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRuleChannel"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderRuleChannel"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderRuleChannel"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postOrderRuleByExternalReferenceCodeOrderRuleChannel } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postOrderRuleByExternalReferenceCodeOrderRuleChannel({\n        client,\n        path: {\n           externalReferenceCode: \"3551\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-rules/by-externalReferenceCode/{externalReferenceCode}/order-rule-channels', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/order-rules/{id}/order-rule-channels": {
            "get": {
                "tags": [
                    "OrderRuleChannel"
                ],
                "operationId": "getOrderRuleIdOrderRuleChannelsPage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageOrderRuleChannel"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageOrderRuleChannel"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getOrderRuleIdOrderRuleChannelsPage } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getOrderRuleIdOrderRuleChannelsPage({\n        client,\n        path: {\n           id: \"1733\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-rules/{id}/order-rule-channels', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "post": {
                "tags": [
                    "OrderRuleChannel"
                ],
                "operationId": "postOrderRuleIdOrderRuleChannel",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRuleChannel"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRuleChannel"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderRuleChannel"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderRuleChannel"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postOrderRuleIdOrderRuleChannel } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postOrderRuleIdOrderRuleChannel({\n        client,\n        path: {\n           id: \"6322\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-rules/{id}/order-rule-channels', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/order-rules/order-rule-channels/batch": {
            "post": {
                "tags": [
                    "OrderRuleChannel"
                ],
                "operationId": "postOrderRuleIdOrderRuleChannelBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postOrderRuleIdOrderRuleChannelBatch } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postOrderRuleIdOrderRuleChannelBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-rules/order-rule-channels/batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/order-rule-order-types/{orderRuleOrderTypeId}": {
            "delete": {
                "tags": [
                    "OrderRuleOrderType"
                ],
                "operationId": "deleteOrderRuleOrderType",
                "parameters": [
                    {
                        "name": "orderRuleOrderTypeId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteOrderRuleOrderType } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteOrderRuleOrderType({\n        client,\n        path: {\n           orderRuleOrderTypeId: \"7832\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-rule-order-types/{orderRuleOrderTypeId}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/order-rule-order-types/batch": {
            "delete": {
                "tags": [
                    "OrderRuleOrderType"
                ],
                "operationId": "deleteOrderRuleOrderTypeBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteOrderRuleOrderTypeBatch } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteOrderRuleOrderTypeBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-rule-order-types/batch', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/order-rules/by-externalReferenceCode/{externalReferenceCode}/order-rule-order-types": {
            "get": {
                "tags": [
                    "OrderRuleOrderType"
                ],
                "operationId": "getOrderRuleByExternalReferenceCodeOrderRuleOrderTypesPage",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageOrderRuleOrderType"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageOrderRuleOrderType"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getOrderRuleByExternalReferenceCodeOrderRuleOrderTypesPage } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getOrderRuleByExternalReferenceCodeOrderRuleOrderTypesPage({\n        client,\n        path: {\n           externalReferenceCode: \"7674\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-rules/by-externalReferenceCode/{externalReferenceCode}/order-rule-order-types', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "post": {
                "tags": [
                    "OrderRuleOrderType"
                ],
                "operationId": "postOrderRuleByExternalReferenceCodeOrderRuleOrderType",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRuleOrderType"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRuleOrderType"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderRuleOrderType"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderRuleOrderType"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postOrderRuleByExternalReferenceCodeOrderRuleOrderType } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postOrderRuleByExternalReferenceCodeOrderRuleOrderType({\n        client,\n        path: {\n           externalReferenceCode: \"349\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-rules/by-externalReferenceCode/{externalReferenceCode}/order-rule-order-types', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/order-rules/{id}/order-rule-order-types": {
            "get": {
                "tags": [
                    "OrderRuleOrderType"
                ],
                "operationId": "getOrderRuleIdOrderRuleOrderTypesPage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageOrderRuleOrderType"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageOrderRuleOrderType"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getOrderRuleIdOrderRuleOrderTypesPage } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getOrderRuleIdOrderRuleOrderTypesPage({\n        client,\n        path: {\n           id: \"5610\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-rules/{id}/order-rule-order-types', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "post": {
                "tags": [
                    "OrderRuleOrderType"
                ],
                "operationId": "postOrderRuleIdOrderRuleOrderType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRuleOrderType"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRuleOrderType"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderRuleOrderType"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderRuleOrderType"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postOrderRuleIdOrderRuleOrderType } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postOrderRuleIdOrderRuleOrderType({\n        client,\n        path: {\n           id: \"245\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-rules/{id}/order-rule-order-types', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/order-rules/order-rule-order-types/batch": {
            "post": {
                "tags": [
                    "OrderRuleOrderType"
                ],
                "operationId": "postOrderRuleIdOrderRuleOrderTypeBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postOrderRuleIdOrderRuleOrderTypeBatch } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postOrderRuleIdOrderRuleOrderTypeBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-rules/order-rule-order-types/batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/order-rules/{id}": {
            "get": {
                "tags": [
                    "OrderRule"
                ],
                "operationId": "getOrderRule",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderRule"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderRule"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getOrderRule } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getOrderRule({\n        client,\n        path: {\n           id: \"3828\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-rules/{id}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "OrderRule"
                ],
                "operationId": "deleteOrderRule",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteOrderRule } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteOrderRule({\n        client,\n        path: {\n           id: \"6306\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-rules/{id}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "OrderRule"
                ],
                "operationId": "patchOrderRule",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRule"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRule"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderRule"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderRule"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchOrderRule } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchOrderRule({\n        client,\n        path: {\n           id: \"2548\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-rules/{id}', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/order-rules/batch": {
            "post": {
                "tags": [
                    "OrderRule"
                ],
                "operationId": "postOrderRuleBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postOrderRuleBatch } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postOrderRuleBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-rules/batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "OrderRule"
                ],
                "operationId": "deleteOrderRuleBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteOrderRuleBatch } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteOrderRuleBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-rules/batch', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/order-rules/by-externalReferenceCode/{externalReferenceCode}": {
            "get": {
                "tags": [
                    "OrderRule"
                ],
                "operationId": "getOrderRuleByExternalReferenceCode",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderRule"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderRule"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getOrderRuleByExternalReferenceCode } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getOrderRuleByExternalReferenceCode({\n        client,\n        path: {\n           externalReferenceCode: \"8365\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-rules/by-externalReferenceCode/{externalReferenceCode}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "put": {
                "tags": [
                    "OrderRule"
                ],
                "operationId": "putOrderRuleByExternalReferenceCode",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRule"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRule"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderRule"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderRule"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putOrderRuleByExternalReferenceCode } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putOrderRuleByExternalReferenceCode({\n        client,\n        path: {\n           externalReferenceCode: \"9994\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-rules/by-externalReferenceCode/{externalReferenceCode}', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "OrderRule"
                ],
                "operationId": "deleteOrderRuleByExternalReferenceCode",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteOrderRuleByExternalReferenceCode } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteOrderRuleByExternalReferenceCode({\n        client,\n        path: {\n           externalReferenceCode: \"6053\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-rules/by-externalReferenceCode/{externalReferenceCode}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "OrderRule"
                ],
                "operationId": "patchOrderRuleByExternalReferenceCode",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRule"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRule"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderRule"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderRule"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchOrderRuleByExternalReferenceCode } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchOrderRuleByExternalReferenceCode({\n        client,\n        path: {\n           externalReferenceCode: \"7307\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-rules/by-externalReferenceCode/{externalReferenceCode}', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/order-rules": {
            "get": {
                "tags": [
                    "OrderRule"
                ],
                "operationId": "getOrderRulesPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageOrderRule"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageOrderRule"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getOrderRulesPage } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getOrderRulesPage({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-rules', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "post": {
                "tags": [
                    "OrderRule"
                ],
                "operationId": "postOrderRule",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRule"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderRule"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderRule"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderRule"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postOrderRule } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postOrderRule({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-rules', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/order-rules/export-batch": {
            "post": {
                "tags": [
                    "OrderRule"
                ],
                "operationId": "postOrderRulesPageExportBatch",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contentType",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fieldNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postOrderRulesPageExportBatch } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postOrderRulesPageExportBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-rules/export-batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/order-type-channels/{orderTypeChannelId}": {
            "delete": {
                "tags": [
                    "OrderTypeChannel"
                ],
                "operationId": "deleteOrderTypeChannel",
                "parameters": [
                    {
                        "name": "orderTypeChannelId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteOrderTypeChannel } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteOrderTypeChannel({\n        client,\n        path: {\n           orderTypeChannelId: \"1180\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-type-channels/{orderTypeChannelId}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/order-type-channels/batch": {
            "delete": {
                "tags": [
                    "OrderTypeChannel"
                ],
                "operationId": "deleteOrderTypeChannelBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteOrderTypeChannelBatch } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteOrderTypeChannelBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-type-channels/batch', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/order-types/by-externalReferenceCode/{externalReferenceCode}/order-type-channels": {
            "get": {
                "tags": [
                    "OrderTypeChannel"
                ],
                "operationId": "getOrderTypeByExternalReferenceCodeOrderTypeChannelsPage",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageOrderTypeChannel"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageOrderTypeChannel"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getOrderTypeByExternalReferenceCodeOrderTypeChannelsPage } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getOrderTypeByExternalReferenceCodeOrderTypeChannelsPage({\n        client,\n        path: {\n           externalReferenceCode: \"7461\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-types/by-externalReferenceCode/{externalReferenceCode}/order-type-channels', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "post": {
                "tags": [
                    "OrderTypeChannel"
                ],
                "operationId": "postOrderTypeByExternalReferenceCodeOrderTypeChannel",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderTypeChannel"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderTypeChannel"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderTypeChannel"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderTypeChannel"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postOrderTypeByExternalReferenceCodeOrderTypeChannel } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postOrderTypeByExternalReferenceCodeOrderTypeChannel({\n        client,\n        path: {\n           externalReferenceCode: \"6290\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-types/by-externalReferenceCode/{externalReferenceCode}/order-type-channels', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/order-types/{id}/order-type-channels": {
            "get": {
                "tags": [
                    "OrderTypeChannel"
                ],
                "operationId": "getOrderTypeIdOrderTypeChannelsPage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageOrderTypeChannel"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageOrderTypeChannel"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getOrderTypeIdOrderTypeChannelsPage } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getOrderTypeIdOrderTypeChannelsPage({\n        client,\n        path: {\n           id: \"9950\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-types/{id}/order-type-channels', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "post": {
                "tags": [
                    "OrderTypeChannel"
                ],
                "operationId": "postOrderTypeIdOrderTypeChannel",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderTypeChannel"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderTypeChannel"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderTypeChannel"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderTypeChannel"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postOrderTypeIdOrderTypeChannel } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postOrderTypeIdOrderTypeChannel({\n        client,\n        path: {\n           id: \"3002\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-types/{id}/order-type-channels', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/order-types/order-type-channels/batch": {
            "post": {
                "tags": [
                    "OrderTypeChannel"
                ],
                "operationId": "postOrderTypeIdOrderTypeChannelBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postOrderTypeIdOrderTypeChannelBatch } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postOrderTypeIdOrderTypeChannelBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-types/order-type-channels/batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/order-types/{id}": {
            "get": {
                "tags": [
                    "OrderType"
                ],
                "operationId": "getOrderType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderType"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderType"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getOrderType } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getOrderType({\n        client,\n        path: {\n           id: \"1305\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-types/{id}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "OrderType"
                ],
                "operationId": "deleteOrderType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteOrderType } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteOrderType({\n        client,\n        path: {\n           id: \"3232\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-types/{id}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "OrderType"
                ],
                "operationId": "patchOrderType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderType"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderType"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderType"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderType"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchOrderType } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchOrderType({\n        client,\n        path: {\n           id: \"7927\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-types/{id}', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/order-types/batch": {
            "post": {
                "tags": [
                    "OrderType"
                ],
                "operationId": "postOrderTypeBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postOrderTypeBatch } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postOrderTypeBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-types/batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "OrderType"
                ],
                "operationId": "deleteOrderTypeBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteOrderTypeBatch } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteOrderTypeBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-types/batch', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/order-types/by-externalReferenceCode/{externalReferenceCode}": {
            "get": {
                "tags": [
                    "OrderType"
                ],
                "operationId": "getOrderTypeByExternalReferenceCode",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderType"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderType"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getOrderTypeByExternalReferenceCode } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getOrderTypeByExternalReferenceCode({\n        client,\n        path: {\n           externalReferenceCode: \"8105\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-types/by-externalReferenceCode/{externalReferenceCode}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "put": {
                "tags": [
                    "OrderType"
                ],
                "operationId": "putOrderTypeByExternalReferenceCode",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderType"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderType"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderType"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderType"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putOrderTypeByExternalReferenceCode } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putOrderTypeByExternalReferenceCode({\n        client,\n        path: {\n           externalReferenceCode: \"9426\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-types/by-externalReferenceCode/{externalReferenceCode}', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "OrderType"
                ],
                "operationId": "deleteOrderTypeByExternalReferenceCode",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteOrderTypeByExternalReferenceCode } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteOrderTypeByExternalReferenceCode({\n        client,\n        path: {\n           externalReferenceCode: \"1198\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-types/by-externalReferenceCode/{externalReferenceCode}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "OrderType"
                ],
                "operationId": "patchOrderTypeByExternalReferenceCode",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderType"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderType"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderType"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderType"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchOrderTypeByExternalReferenceCode } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchOrderTypeByExternalReferenceCode({\n        client,\n        path: {\n           externalReferenceCode: \"59\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-types/by-externalReferenceCode/{externalReferenceCode}', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/order-rule-order-types/{orderRuleOrderTypeId}/order-type": {
            "get": {
                "tags": [
                    "OrderType"
                ],
                "operationId": "getOrderRuleOrderTypeOrderType",
                "parameters": [
                    {
                        "name": "orderRuleOrderTypeId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderType"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderType"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getOrderRuleOrderTypeOrderType } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getOrderRuleOrderTypeOrderType({\n        client,\n        path: {\n           orderRuleOrderTypeId: \"4106\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-rule-order-types/{orderRuleOrderTypeId}/order-type', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/order-types": {
            "get": {
                "tags": [
                    "OrderType"
                ],
                "operationId": "getOrderTypesPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageOrderType"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageOrderType"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getOrderTypesPage } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getOrderTypesPage({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-types', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "post": {
                "tags": [
                    "OrderType"
                ],
                "operationId": "postOrderType",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderType"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderType"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderType"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderType"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postOrderType } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postOrderType({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-types', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/term-order-types/{termOrderTypeId}/order-type": {
            "get": {
                "tags": [
                    "OrderType"
                ],
                "operationId": "getTermOrderTypeOrderType",
                "parameters": [
                    {
                        "name": "termOrderTypeId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderType"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderType"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getTermOrderTypeOrderType } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getTermOrderTypeOrderType({\n        client,\n        path: {\n           termOrderTypeId: \"2496\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/term-order-types/{termOrderTypeId}/order-type', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/order-types/export-batch": {
            "post": {
                "tags": [
                    "OrderType"
                ],
                "operationId": "postOrderTypesPageExportBatch",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contentType",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fieldNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postOrderTypesPageExportBatch } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postOrderTypesPageExportBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/order-types/export-batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/orders/by-externalReferenceCode/{externalReferenceCode}/shippingAddress": {
            "get": {
                "tags": [
                    "ShippingAddress"
                ],
                "operationId": "getOrderByExternalReferenceCodeShippingAddress",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShippingAddress"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShippingAddress"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getOrderByExternalReferenceCodeShippingAddress } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getOrderByExternalReferenceCodeShippingAddress({\n        client,\n        path: {\n           externalReferenceCode: \"3122\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orders/by-externalReferenceCode/{externalReferenceCode}/shippingAddress', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "ShippingAddress"
                ],
                "operationId": "patchOrderByExternalReferenceCodeShippingAddress",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShippingAddress"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/ShippingAddress"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchOrderByExternalReferenceCodeShippingAddress } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchOrderByExternalReferenceCodeShippingAddress({\n        client,\n        path: {\n           externalReferenceCode: \"4597\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orders/by-externalReferenceCode/{externalReferenceCode}/shippingAddress', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/orders/{id}/shippingAddress": {
            "get": {
                "tags": [
                    "ShippingAddress"
                ],
                "operationId": "getOrderIdShippingAddress",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShippingAddress"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShippingAddress"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getOrderIdShippingAddress } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getOrderIdShippingAddress({\n        client,\n        path: {\n           id: \"1276\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orders/{id}/shippingAddress', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "ShippingAddress"
                ],
                "operationId": "patchOrderIdShippingAddress",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ShippingAddress"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/ShippingAddress"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchOrderIdShippingAddress } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchOrderIdShippingAddress({\n        client,\n        path: {\n           id: \"2025\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orders/{id}/shippingAddress', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/orderItems/{id}/shippingAddress": {
            "get": {
                "tags": [
                    "ShippingAddress"
                ],
                "operationId": "getOrderItemShippingAddress",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShippingAddress"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/ShippingAddress"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getOrderItemShippingAddress } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getOrderItemShippingAddress({\n        client,\n        path: {\n           id: \"8011\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/orderItems/{id}/shippingAddress', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/term-order-types/{termOrderTypeId}": {
            "delete": {
                "tags": [
                    "TermOrderType"
                ],
                "operationId": "deleteTermOrderType",
                "parameters": [
                    {
                        "name": "termOrderTypeId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteTermOrderType } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteTermOrderType({\n        client,\n        path: {\n           termOrderTypeId: \"5623\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/term-order-types/{termOrderTypeId}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/term-order-types/batch": {
            "delete": {
                "tags": [
                    "TermOrderType"
                ],
                "operationId": "deleteTermOrderTypeBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteTermOrderTypeBatch } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteTermOrderTypeBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/term-order-types/batch', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/terms/by-externalReferenceCode/{externalReferenceCode}/term-order-types": {
            "get": {
                "tags": [
                    "TermOrderType"
                ],
                "operationId": "getTermByExternalReferenceCodeTermOrderTypesPage",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageTermOrderType"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageTermOrderType"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getTermByExternalReferenceCodeTermOrderTypesPage } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getTermByExternalReferenceCodeTermOrderTypesPage({\n        client,\n        path: {\n           externalReferenceCode: \"454\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/terms/by-externalReferenceCode/{externalReferenceCode}/term-order-types', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "post": {
                "tags": [
                    "TermOrderType"
                ],
                "operationId": "postTermByExternalReferenceCodeTermOrderType",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TermOrderType"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/TermOrderType"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TermOrderType"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/TermOrderType"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postTermByExternalReferenceCodeTermOrderType } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postTermByExternalReferenceCodeTermOrderType({\n        client,\n        path: {\n           externalReferenceCode: \"2941\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/terms/by-externalReferenceCode/{externalReferenceCode}/term-order-types', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/terms/{id}/term-order-types": {
            "get": {
                "tags": [
                    "TermOrderType"
                ],
                "operationId": "getTermIdTermOrderTypesPage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageTermOrderType"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageTermOrderType"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getTermIdTermOrderTypesPage } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getTermIdTermOrderTypesPage({\n        client,\n        path: {\n           id: \"1945\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/terms/{id}/term-order-types', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "post": {
                "tags": [
                    "TermOrderType"
                ],
                "operationId": "postTermIdTermOrderType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TermOrderType"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/TermOrderType"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TermOrderType"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/TermOrderType"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postTermIdTermOrderType } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postTermIdTermOrderType({\n        client,\n        path: {\n           id: \"5617\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/terms/{id}/term-order-types', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/terms/term-order-types/batch": {
            "post": {
                "tags": [
                    "TermOrderType"
                ],
                "operationId": "postTermIdTermOrderTypeBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postTermIdTermOrderTypeBatch } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postTermIdTermOrderTypeBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/terms/term-order-types/batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/terms/{id}": {
            "get": {
                "tags": [
                    "Term"
                ],
                "operationId": "getTerm",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Term"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Term"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getTerm } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getTerm({\n        client,\n        path: {\n           id: \"2432\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/terms/{id}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Term"
                ],
                "operationId": "deleteTerm",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteTerm } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteTerm({\n        client,\n        path: {\n           id: \"8154\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/terms/{id}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Term"
                ],
                "operationId": "patchTerm",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Term"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/Term"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Term"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Term"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchTerm } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchTerm({\n        client,\n        path: {\n           id: \"6969\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/terms/{id}', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/terms/batch": {
            "post": {
                "tags": [
                    "Term"
                ],
                "operationId": "postTermBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postTermBatch } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postTermBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/terms/batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Term"
                ],
                "operationId": "deleteTermBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteTermBatch } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteTermBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/terms/batch', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/terms/by-externalReferenceCode/{externalReferenceCode}": {
            "get": {
                "tags": [
                    "Term"
                ],
                "operationId": "getTermByExternalReferenceCode",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Term"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Term"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getTermByExternalReferenceCode } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getTermByExternalReferenceCode({\n        client,\n        path: {\n           externalReferenceCode: \"1421\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/terms/by-externalReferenceCode/{externalReferenceCode}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "put": {
                "tags": [
                    "Term"
                ],
                "operationId": "putTermByExternalReferenceCode",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Term"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/Term"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Term"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Term"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { putTermByExternalReferenceCode } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await putTermByExternalReferenceCode({\n        client,\n        path: {\n           externalReferenceCode: \"5729\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/terms/by-externalReferenceCode/{externalReferenceCode}', {\n  method: 'PUT',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Term"
                ],
                "operationId": "deleteTermByExternalReferenceCode",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteTermByExternalReferenceCode } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteTermByExternalReferenceCode({\n        client,\n        path: {\n           externalReferenceCode: \"7802\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/terms/by-externalReferenceCode/{externalReferenceCode}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Term"
                ],
                "operationId": "patchTermByExternalReferenceCode",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Term"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/Term"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Term"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Term"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchTermByExternalReferenceCode } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchTermByExternalReferenceCode({\n        client,\n        path: {\n           externalReferenceCode: \"3114\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/terms/by-externalReferenceCode/{externalReferenceCode}', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/terms": {
            "get": {
                "tags": [
                    "Term"
                ],
                "operationId": "getTermsPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageTerm"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageTerm"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getTermsPage } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getTermsPage({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/terms', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            },
            "post": {
                "tags": [
                    "Term"
                ],
                "operationId": "postTerm",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Term"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/Term"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Term"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Term"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postTerm } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postTerm({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/terms', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        },
        "/o/headless-commerce-admin-order/v1.0/terms/export-batch": {
            "post": {
                "tags": [
                    "Term"
                ],
                "operationId": "postTermsPageExportBatch",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contentType",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fieldNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postTermsPageExportBatch } from 'liferay-headless-rest-client/headless-commerce-admin-order-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postTermsPageExportBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "\nconst response = await Liferay.Util.fetch('/o/headless-commerce-admin-order/v1.0/terms/export-batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);\n"
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Account": {
                "type": "object",
                "properties": {
                    "customFields": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        }
                    },
                    "emailAddress": {
                        "type": "string"
                    },
                    "externalReferenceCode": {
                        "type": "string",
                        "example": "AB-34098-789-N"
                    },
                    "id": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30130
                    },
                    "logoId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 20078
                    },
                    "name": {
                        "type": "string",
                        "example": "Account Name"
                    },
                    "root": {
                        "type": "boolean",
                        "example": true
                    },
                    "taxId": {
                        "type": "string",
                        "example": "Abcd1234"
                    },
                    "type": {
                        "maximum": 2,
                        "exclusiveMaximum": false,
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.admin.order.dto.v1_0.Account"
                    },
                    "accountToOAuth2DxpAuthorization": {
                        "type": "array",
                        "description": "Information about the object relationship accountToOAuth2DxpAuthorization can be embedded with \"nestedFields\".",
                        "items": {
                            "$ref": "#/components/schemas/OAuth2DxpAuthorization"
                        }
                    },
                    "accountEntryToUserAdditionalInfo": {
                        "type": "array",
                        "description": "Information about the object relationship accountEntryToUserAdditionalInfo can be embedded with \"nestedFields\".",
                        "items": {
                            "$ref": "#/components/schemas/UserAdditionalInfo"
                        }
                    },
                    "company": {
                        "type": "string"
                    },
                    "accountEntryToPublisherAssets": {
                        "type": "array",
                        "description": "Information about the object relationship accountEntryToPublisherAssets can be embedded with \"nestedFields\".",
                        "items": {
                            "$ref": "#/components/schemas/PublisherAssets"
                        }
                    }
                },
                "xml": {
                    "name": "Account"
                },
                "x-filterable": []
            },
            "BillingAddress": {
                "required": [
                    "city",
                    "countryISOCode",
                    "name",
                    "street1"
                ],
                "type": "object",
                "properties": {
                    "city": {
                        "type": "string",
                        "example": "Diamond Bar"
                    },
                    "countryISOCode": {
                        "type": "string",
                        "example": "US"
                    },
                    "description": {
                        "type": "string",
                        "example": "right stairs, first room on the left"
                    },
                    "externalReferenceCode": {
                        "type": "string",
                        "readOnly": true,
                        "example": "AB-34098-789-N"
                    },
                    "id": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 31130
                    },
                    "latitude": {
                        "type": "number",
                        "format": "double",
                        "example": 33.9976884
                    },
                    "longitude": {
                        "type": "number",
                        "format": "double",
                        "example": -117.8144595
                    },
                    "name": {
                        "type": "string",
                        "example": "Alessio Antonio Rendina"
                    },
                    "phoneNumber": {
                        "type": "string",
                        "example": "(123) 456 7890"
                    },
                    "regionISOCode": {
                        "type": "string",
                        "example": "CA"
                    },
                    "street1": {
                        "type": "string",
                        "example": "1400 Montefino Ave"
                    },
                    "street2": {
                        "type": "string",
                        "example": "1st floor"
                    },
                    "street3": {
                        "type": "string",
                        "example": "suite 200"
                    },
                    "subtype": {
                        "type": "string",
                        "example": "box"
                    },
                    "vatNumber": {
                        "type": "string",
                        "example": "353246836565"
                    },
                    "zip": {
                        "type": "string",
                        "example": "91765"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.admin.order.dto.v1_0.BillingAddress"
                    }
                },
                "xml": {
                    "name": "BillingAddress"
                },
                "x-filterable": []
            },
            "Channel": {
                "type": "object",
                "properties": {
                    "currencyCode": {
                        "type": "string",
                        "example": "USD"
                    },
                    "externalReferenceCode": {
                        "type": "string",
                        "example": "AB-34098-789-N"
                    },
                    "id": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 31130
                    },
                    "name": {
                        "type": "string",
                        "example": "Alessio Antonio Rendina"
                    },
                    "type": {
                        "type": "string"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.admin.order.dto.v1_0.Channel"
                    }
                },
                "xml": {
                    "name": "Channel"
                },
                "x-filterable": []
            },
            "OrderAccountGroup": {
                "type": "object",
                "properties": {
                    "id": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 30130
                    },
                    "name": {
                        "type": "string",
                        "example": "OrderAccountGroup Name"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.admin.order.dto.v1_0.OrderAccountGroup"
                    }
                },
                "xml": {
                    "name": "OrderAccountGroup"
                },
                "x-filterable": []
            },
            "CustomField": {
                "type": "object",
                "properties": {
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.portal.vulcan.custom.field.CustomField"
                    },
                    "customValue": {
                        "$ref": "#/components/schemas/CustomValue"
                    },
                    "dataType": {
                        "type": "string",
                        "description": "The field type (e.g., image, text, etc.).",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The field's internal name. This is valid for comparisons and unique in the structured content."
                    }
                },
                "xml": {
                    "name": "CustomField"
                },
                "x-filterable": []
            },
            "CustomValue": {
                "type": "object",
                "properties": {
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.portal.vulcan.custom.field.CustomValue"
                    },
                    "data": {
                        "type": "object",
                        "description": "The field's content value for simple types."
                    },
                    "data_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "The localized field's content values for simple types."
                        },
                        "description": "The localized field's content values for simple types."
                    },
                    "geo": {
                        "$ref": "#/components/schemas/Geo"
                    }
                },
                "description": "The field's value.",
                "xml": {
                    "name": "CustomValue"
                },
                "x-filterable": []
            },
            "Facet": {
                "type": "object",
                "properties": {
                    "facetCriteria": {
                        "type": "string"
                    },
                    "facetValues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FacetValue"
                        }
                    }
                },
                "x-filterable": []
            },
            "FacetValue": {
                "type": "object",
                "properties": {
                    "numberOfOccurrences": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "term": {
                        "type": "string"
                    }
                },
                "x-filterable": []
            },
            "Geo": {
                "type": "object",
                "properties": {
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.portal.vulcan.custom.field.Geo"
                    },
                    "latitude": {
                        "type": "number",
                        "description": "The latitude of a point in space.",
                        "format": "double"
                    },
                    "longitude": {
                        "type": "number",
                        "description": "The longitude of a point in space.",
                        "format": "double"
                    }
                },
                "description": "A point determined by latitude and longitude.",
                "xml": {
                    "name": "Geo"
                },
                "x-filterable": []
            },
            "OrderItem": {
                "type": "object",
                "properties": {
                    "bookedQuantityId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 32144
                    },
                    "customFields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CustomField"
                        }
                    },
                    "decimalQuantity": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 10.1
                    },
                    "deliveryGroup": {
                        "type": "string",
                        "example": "separate package",
                        "deprecated": true
                    },
                    "deliveryGroupName": {
                        "type": "string",
                        "example": "separate package"
                    },
                    "discountAmount": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 2
                    },
                    "discountManuallyAdjusted": {
                        "type": "boolean",
                        "readOnly": true,
                        "example": true
                    },
                    "discountPercentageLevel1": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 20
                    },
                    "discountPercentageLevel1WithTaxAmount": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 20
                    },
                    "discountPercentageLevel2": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 0
                    },
                    "discountPercentageLevel2WithTaxAmount": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 0
                    },
                    "discountPercentageLevel3": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 0
                    },
                    "discountPercentageLevel3WithTaxAmount": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 0
                    },
                    "discountPercentageLevel4": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 0
                    },
                    "discountPercentageLevel4WithTaxAmount": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 0
                    },
                    "discountWithTaxAmount": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 2
                    },
                    "externalReferenceCode": {
                        "type": "string",
                        "example": "AB-34098-789-N"
                    },
                    "finalPrice": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 200
                    },
                    "finalPriceWithTaxAmount": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 200
                    },
                    "formattedQuantity": {
                        "type": "string",
                        "readOnly": true
                    },
                    "id": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30130
                    },
                    "name": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "example": "{en_US=Hand Saw, hr_HR=Product Name HR, hu_HU=Product Name HU}"
                        },
                        "example": "{en_US=Hand Saw, hr_HR=Product Name HR, hu_HU=Product Name HU}"
                    },
                    "options": {
                        "type": "string"
                    },
                    "orderExternalReferenceCode": {
                        "type": "string",
                        "example": "CAB-34098-789-N"
                    },
                    "orderId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30128
                    },
                    "priceManuallyAdjusted": {
                        "type": "boolean",
                        "readOnly": true,
                        "example": true
                    },
                    "printedNote": {
                        "type": "string",
                        "example": "Order item printed note"
                    },
                    "promoPrice": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 101
                    },
                    "promoPriceWithTaxAmount": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 101
                    },
                    "quantity": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 2.1
                    },
                    "replacedSku": {
                        "type": "string",
                        "readOnly": true,
                        "example": "1234123124"
                    },
                    "replacedSkuExternalReferenceCode": {
                        "type": "string",
                        "example": "AB-34098-789-N"
                    },
                    "replacedSkuId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "requestedDeliveryDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "shippable": {
                        "type": "boolean",
                        "readOnly": true,
                        "example": true
                    },
                    "shippedQuantity": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 1.1
                    },
                    "shippingAddress": {
                        "$ref": "#/components/schemas/ShippingAddress"
                    },
                    "shippingAddressExternalReferenceCode": {
                        "type": "string",
                        "example": "AB-34098-789-N"
                    },
                    "shippingAddressId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 31130
                    },
                    "sku": {
                        "type": "string",
                        "example": "12341234"
                    },
                    "skuExternalReferenceCode": {
                        "type": "string",
                        "example": "CAB-34098-789-N"
                    },
                    "skuId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30128
                    },
                    "subscription": {
                        "type": "boolean",
                        "example": true
                    },
                    "unitOfMeasure": {
                        "type": "string",
                        "example": "pc"
                    },
                    "unitOfMeasureKey": {
                        "type": "string",
                        "example": "s"
                    },
                    "unitPrice": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 101
                    },
                    "unitPriceWithTaxAmount": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 101
                    },
                    "virtualItemURLs": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                            "type": "string"
                        }
                    },
                    "virtualItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VirtualItem"
                        }
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.admin.order.dto.v1_0.OrderItem"
                    }
                },
                "xml": {
                    "name": "OrderItem"
                },
                "x-filterable": [
                    "sku"
                ]
            },
            "PageOrderItem": {
                "type": "object",
                "properties": {
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderItem"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "ShippingAddress": {
                "required": [
                    "city",
                    "countryISOCode",
                    "name",
                    "street1"
                ],
                "type": "object",
                "properties": {
                    "city": {
                        "type": "string",
                        "example": "Diamond Bar"
                    },
                    "countryISOCode": {
                        "type": "string",
                        "example": "US"
                    },
                    "description": {
                        "type": "string",
                        "example": "right stairs, first room on the left"
                    },
                    "externalReferenceCode": {
                        "type": "string",
                        "readOnly": true,
                        "example": "AB-34098-789-N"
                    },
                    "id": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 31130
                    },
                    "latitude": {
                        "type": "number",
                        "format": "double",
                        "example": 33.9976884
                    },
                    "longitude": {
                        "type": "number",
                        "format": "double",
                        "example": -117.8144595
                    },
                    "name": {
                        "type": "string",
                        "example": "Alessio Antonio Rendina"
                    },
                    "phoneNumber": {
                        "type": "string",
                        "example": "(123) 456 7890"
                    },
                    "regionISOCode": {
                        "type": "string",
                        "example": "CA"
                    },
                    "street1": {
                        "type": "string",
                        "example": "1400 Montefino Ave"
                    },
                    "street2": {
                        "type": "string",
                        "example": "1st floor"
                    },
                    "street3": {
                        "type": "string",
                        "example": "suite 200"
                    },
                    "subtype": {
                        "type": "string",
                        "example": "box"
                    },
                    "zip": {
                        "type": "string",
                        "example": "91765"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.admin.order.dto.v1_0.ShippingAddress"
                    }
                },
                "xml": {
                    "name": "ShippingAddress"
                },
                "x-filterable": []
            },
            "VirtualItem": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string",
                        "example": "http://www.liferay.com"
                    },
                    "usages": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "version": {
                        "type": "string",
                        "example": "v1.0.0"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.admin.order.dto.v1_0.VirtualItem"
                    }
                },
                "xml": {
                    "name": "VirtualItem"
                },
                "x-filterable": []
            },
            "OrderNote": {
                "type": "object",
                "properties": {
                    "author": {
                        "type": "string",
                        "example": "Alessio Antonio Rendina"
                    },
                    "content": {
                        "type": "string",
                        "example": "This order will be shipped separately"
                    },
                    "externalReferenceCode": {
                        "type": "string",
                        "example": "AB-34098-789-N"
                    },
                    "id": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30130
                    },
                    "orderExternalReferenceCode": {
                        "type": "string",
                        "example": "CAB-34098-789-N"
                    },
                    "orderId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30128
                    },
                    "restricted": {
                        "type": "boolean",
                        "example": true
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.admin.order.dto.v1_0.OrderNote"
                    }
                },
                "xml": {
                    "name": "OrderNote"
                },
                "x-filterable": []
            },
            "PageOrderNote": {
                "type": "object",
                "properties": {
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderNote"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "Order": {
                "required": [
                    "channelId",
                    "currencyCode"
                ],
                "type": "object",
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/Account"
                    },
                    "accountExternalReferenceCode": {
                        "type": "string",
                        "example": "AAB-34098-789-N"
                    },
                    "accountId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30130
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "readOnly": true
                    },
                    "advanceStatus": {
                        "type": "string",
                        "example": "trasmitted"
                    },
                    "billingAddress": {
                        "$ref": "#/components/schemas/BillingAddress"
                    },
                    "billingAddressExternalReferenceCode": {
                        "type": "string",
                        "example": "AAB-34098-789-N"
                    },
                    "billingAddressId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 31130
                    },
                    "channel": {
                        "$ref": "#/components/schemas/Channel"
                    },
                    "channelExternalReferenceCode": {
                        "type": "string",
                        "example": "AAB-34098-789-N"
                    },
                    "channelId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30130
                    },
                    "couponCode": {
                        "type": "string",
                        "example": "save20"
                    },
                    "createDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "creatorEmailAddress": {
                        "type": "string"
                    },
                    "currencyCode": {
                        "type": "string",
                        "example": "USD"
                    },
                    "currencyExternalReferenceCode": {
                        "type": "string",
                        "example": "AAB-34098-789-N"
                    },
                    "currencyId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30130
                    },
                    "customFields": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        }
                    },
                    "deliveryTermDescription": {
                        "type": "string",
                        "readOnly": true,
                        "example": "Orders delivery terms description"
                    },
                    "deliveryTermExternalReferenceCode": {
                        "type": "string",
                        "example": "AAB-34098-789-N"
                    },
                    "deliveryTermId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30130
                    },
                    "deliveryTermName": {
                        "type": "string",
                        "readOnly": true,
                        "example": "Orders delivery terms name"
                    },
                    "externalReferenceCode": {
                        "type": "string",
                        "example": "AB-34098-789-N"
                    },
                    "id": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30130
                    },
                    "lastPriceUpdateDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "modifiedDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "name": {
                        "type": "string",
                        "example": "Order Name"
                    },
                    "orderDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "orderItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderItem"
                        }
                    },
                    "orderStatus": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int32",
                        "example": 0
                    },
                    "orderStatusInfo": {
                        "$ref": "#/components/schemas/Status"
                    },
                    "orderTypeExternalReferenceCode": {
                        "type": "string",
                        "example": "AB-34098-789-N"
                    },
                    "orderTypeId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30130
                    },
                    "paymentMethod": {
                        "type": "string",
                        "example": "paypal"
                    },
                    "paymentStatus": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int32",
                        "example": 0
                    },
                    "paymentStatusInfo": {
                        "$ref": "#/components/schemas/Status"
                    },
                    "paymentTermDescription": {
                        "type": "string",
                        "readOnly": true,
                        "example": "Orders payment terms description"
                    },
                    "paymentTermExternalReferenceCode": {
                        "type": "string",
                        "example": "AAB-34098-789-N"
                    },
                    "paymentTermId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30130
                    },
                    "paymentTermName": {
                        "type": "string",
                        "readOnly": true,
                        "example": "Orders payment terms name"
                    },
                    "printedNote": {
                        "type": "string",
                        "example": "Order printed note"
                    },
                    "purchaseOrderNumber": {
                        "type": "string",
                        "example": "Abcd1234"
                    },
                    "requestedDeliveryDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "shippable": {
                        "type": "boolean",
                        "readOnly": true,
                        "example": true
                    },
                    "shippingAddress": {
                        "$ref": "#/components/schemas/ShippingAddress"
                    },
                    "shippingAddressExternalReferenceCode": {
                        "type": "string",
                        "example": "AAB-34098-789-N"
                    },
                    "shippingAddressId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 31130
                    },
                    "shippingAmount": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 12
                    },
                    "shippingAmountFormatted": {
                        "type": "string"
                    },
                    "shippingAmountValue": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "format": "double",
                        "example": 12
                    },
                    "shippingDiscountAmount": {
                        "type": "number"
                    },
                    "shippingDiscountAmountFormatted": {
                        "type": "string"
                    },
                    "shippingDiscountAmountValue": {
                        "type": "number",
                        "format": "double"
                    },
                    "shippingDiscountPercentageLevel1": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 20
                    },
                    "shippingDiscountPercentageLevel1WithTaxAmount": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 20
                    },
                    "shippingDiscountPercentageLevel2": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 0
                    },
                    "shippingDiscountPercentageLevel2WithTaxAmount": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 0
                    },
                    "shippingDiscountPercentageLevel3": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 0
                    },
                    "shippingDiscountPercentageLevel3WithTaxAmount": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 0
                    },
                    "shippingDiscountPercentageLevel4": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 0
                    },
                    "shippingDiscountPercentageLevel4WithTaxAmount": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 0
                    },
                    "shippingDiscountWithTaxAmount": {
                        "type": "number"
                    },
                    "shippingDiscountWithTaxAmountFormatted": {
                        "type": "string"
                    },
                    "shippingMethod": {
                        "type": "string",
                        "example": "fixed"
                    },
                    "shippingOption": {
                        "type": "string",
                        "example": "by Air"
                    },
                    "shippingWithTaxAmount": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 12
                    },
                    "shippingWithTaxAmountFormatted": {
                        "type": "string"
                    },
                    "shippingWithTaxAmountValue": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "format": "double",
                        "example": 12
                    },
                    "subtotal": {
                        "type": "number"
                    },
                    "subtotalAmount": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "subtotalDiscountAmount": {
                        "type": "number"
                    },
                    "subtotalDiscountAmountFormatted": {
                        "type": "string"
                    },
                    "subtotalDiscountPercentageLevel1": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 20
                    },
                    "subtotalDiscountPercentageLevel1WithTaxAmount": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 20
                    },
                    "subtotalDiscountPercentageLevel2": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 0
                    },
                    "subtotalDiscountPercentageLevel2WithTaxAmount": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 0
                    },
                    "subtotalDiscountPercentageLevel3": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 0
                    },
                    "subtotalDiscountPercentageLevel3WithTaxAmount": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 0
                    },
                    "subtotalDiscountPercentageLevel4": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 0
                    },
                    "subtotalDiscountPercentageLevel4WithTaxAmount": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 0
                    },
                    "subtotalDiscountWithTaxAmount": {
                        "type": "number"
                    },
                    "subtotalDiscountWithTaxAmountFormatted": {
                        "type": "string"
                    },
                    "subtotalFormatted": {
                        "type": "string"
                    },
                    "subtotalWithTaxAmount": {
                        "type": "number"
                    },
                    "subtotalWithTaxAmountFormatted": {
                        "type": "string"
                    },
                    "subtotalWithTaxAmountValue": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "taxAmount": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 11
                    },
                    "taxAmountFormatted": {
                        "type": "string"
                    },
                    "taxAmountValue": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "format": "double",
                        "example": 12
                    },
                    "total": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 113
                    },
                    "totalAmount": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "format": "double",
                        "readOnly": true,
                        "example": 113
                    },
                    "totalDiscountAmount": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 11
                    },
                    "totalDiscountAmountFormatted": {
                        "type": "string"
                    },
                    "totalDiscountAmountValue": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "format": "double",
                        "example": 11
                    },
                    "totalDiscountPercentageLevel1": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 20
                    },
                    "totalDiscountPercentageLevel1WithTaxAmount": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 20
                    },
                    "totalDiscountPercentageLevel2": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 0
                    },
                    "totalDiscountPercentageLevel2WithTaxAmount": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 0
                    },
                    "totalDiscountPercentageLevel3": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 0
                    },
                    "totalDiscountPercentageLevel3WithTaxAmount": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 0
                    },
                    "totalDiscountPercentageLevel4": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 0
                    },
                    "totalDiscountPercentageLevel4WithTaxAmount": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 0
                    },
                    "totalDiscountWithTaxAmount": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 11
                    },
                    "totalDiscountWithTaxAmountFormatted": {
                        "type": "string"
                    },
                    "totalDiscountWithTaxAmountValue": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "format": "double",
                        "example": 11
                    },
                    "totalFormatted": {
                        "type": "string"
                    },
                    "totalWithTaxAmount": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 113
                    },
                    "totalWithTaxAmountFormatted": {
                        "type": "string"
                    },
                    "totalWithTaxAmountValue": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "format": "double",
                        "readOnly": true,
                        "example": 113
                    },
                    "transactionId": {
                        "type": "string"
                    },
                    "workflowStatusInfo": {
                        "$ref": "#/components/schemas/Status"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.admin.order.dto.v1_0.Order"
                    },
                    "projectName": {
                        "type": "string"
                    },
                    "siteInitializer": {
                        "type": "string"
                    }
                },
                "xml": {
                    "name": "Order"
                },
                "x-filterable": [
                    "accountId",
                    "channelId",
                    "createDate",
                    "creatorEmailAddress",
                    "modifiedDate",
                    "orderDate",
                    "orderId",
                    "orderStatus",
                    "orderTypeExternalReferenceCode",
                    "orderTypeId",
                    "totalAmount"
                ]
            },
            "Status": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "label": {
                        "type": "string",
                        "example": "black"
                    },
                    "label_i18n": {
                        "type": "string",
                        "example": "black"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.admin.order.dto.v1_0.Status"
                    }
                },
                "xml": {
                    "name": "Status"
                },
                "x-filterable": []
            },
            "PageOrder": {
                "type": "object",
                "properties": {
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Order"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "OrderRuleAccountGroup": {
                "required": [
                    "accountGroupId",
                    "orderRuleId"
                ],
                "type": "object",
                "properties": {
                    "accountGroup": {
                        "$ref": "#/components/schemas/OrderAccountGroup"
                    },
                    "accountGroupExternalReferenceCode": {
                        "type": "string",
                        "example": "DAB-34098-789-N"
                    },
                    "accountGroupId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30324
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "readOnly": true
                    },
                    "orderRuleAccountGroupId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 30643
                    },
                    "orderRuleExternalReferenceCode": {
                        "type": "string",
                        "example": "PAB-34098-789-N"
                    },
                    "orderRuleId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30130
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.admin.order.dto.v1_0.OrderRuleAccountGroup"
                    }
                },
                "xml": {
                    "name": "OrderRuleAccountGroup"
                },
                "x-filterable": []
            },
            "PageOrderRuleAccountGroup": {
                "type": "object",
                "properties": {
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderRuleAccountGroup"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "OrderRuleAccount": {
                "required": [
                    "accountId",
                    "orderRuleId"
                ],
                "type": "object",
                "properties": {
                    "account": {
                        "$ref": "#/components/schemas/Account"
                    },
                    "accountExternalReferenceCode": {
                        "type": "string",
                        "example": "DAB-34098-789-N"
                    },
                    "accountId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30324
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "readOnly": true
                    },
                    "orderRuleAccountId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 30643
                    },
                    "orderRuleExternalReferenceCode": {
                        "type": "string",
                        "example": "PAB-34098-789-N"
                    },
                    "orderRuleId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30130
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.admin.order.dto.v1_0.OrderRuleAccount"
                    }
                },
                "xml": {
                    "name": "OrderRuleAccount"
                },
                "x-filterable": []
            },
            "PageOrderRuleAccount": {
                "type": "object",
                "properties": {
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderRuleAccount"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "OrderRuleChannel": {
                "required": [
                    "channelId",
                    "orderRuleId"
                ],
                "type": "object",
                "properties": {
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "readOnly": true
                    },
                    "channel": {
                        "$ref": "#/components/schemas/Channel"
                    },
                    "channelExternalReferenceCode": {
                        "type": "string",
                        "example": "DAB-34098-789-N"
                    },
                    "channelId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30324
                    },
                    "orderRuleChannelId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 30643
                    },
                    "orderRuleExternalReferenceCode": {
                        "type": "string",
                        "example": "PAB-34098-789-N"
                    },
                    "orderRuleId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30130
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.admin.order.dto.v1_0.OrderRuleChannel"
                    }
                },
                "xml": {
                    "name": "OrderRuleChannel"
                },
                "x-filterable": []
            },
            "PageOrderRuleChannel": {
                "type": "object",
                "properties": {
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderRuleChannel"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "OrderRuleOrderType": {
                "required": [
                    "orderRuleId",
                    "orderTypeId"
                ],
                "type": "object",
                "properties": {
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "readOnly": true
                    },
                    "orderRuleExternalReferenceCode": {
                        "type": "string",
                        "example": "PAB-34098-789-N"
                    },
                    "orderRuleId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30130
                    },
                    "orderRuleOrderTypeId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 30643
                    },
                    "orderType": {
                        "$ref": "#/components/schemas/OrderType"
                    },
                    "orderTypeExternalReferenceCode": {
                        "type": "string",
                        "example": "DAB-34098-789-N"
                    },
                    "orderTypeId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30324
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.admin.order.dto.v1_0.OrderRuleOrderType"
                    }
                },
                "xml": {
                    "name": "OrderRuleOrderType"
                },
                "x-filterable": []
            },
            "OrderType": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "readOnly": true
                    },
                    "active": {
                        "type": "boolean",
                        "example": true
                    },
                    "customFields": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        }
                    },
                    "description": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "example": "{en_US=Title, hr_HR=Title HR, hu_HU=Title HU}"
                        },
                        "example": "{en_US=Title, hr_HR=Title HR, hu_HU=Title HU}"
                    },
                    "displayDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "displayOrder": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "expirationDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "externalReferenceCode": {
                        "type": "string",
                        "example": "AB-34098-789-N"
                    },
                    "id": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30130
                    },
                    "name": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "example": "{en_US=Title, hr_HR=Title HR, hu_HU=Title HU}"
                        },
                        "example": "{en_US=Title, hr_HR=Title HR, hu_HU=Title HU}"
                    },
                    "neverExpire": {
                        "type": "boolean",
                        "example": true
                    },
                    "orderTypeChannels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderTypeChannel"
                        }
                    },
                    "workflowStatusInfo": {
                        "$ref": "#/components/schemas/Status"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.admin.order.dto.v1_0.OrderType"
                    }
                },
                "xml": {
                    "name": "OrderType"
                },
                "x-filterable": [
                    "name"
                ]
            },
            "OrderTypeChannel": {
                "required": [
                    "channelId",
                    "orderTypeId"
                ],
                "type": "object",
                "properties": {
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "readOnly": true
                    },
                    "channel": {
                        "$ref": "#/components/schemas/Channel"
                    },
                    "channelExternalReferenceCode": {
                        "type": "string",
                        "example": "PAB-34098-789-N"
                    },
                    "channelId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30130
                    },
                    "orderTypeChannelId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 30643
                    },
                    "orderTypeExternalReferenceCode": {
                        "type": "string",
                        "example": "DAB-34098-789-N"
                    },
                    "orderTypeId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30324
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.admin.order.dto.v1_0.OrderTypeChannel"
                    }
                },
                "xml": {
                    "name": "OrderTypeChannel"
                },
                "x-filterable": []
            },
            "PageOrderRuleOrderType": {
                "type": "object",
                "properties": {
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderRuleOrderType"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "OrderRule": {
                "required": [
                    "name",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "readOnly": true
                    },
                    "active": {
                        "type": "boolean",
                        "example": true
                    },
                    "author": {
                        "type": "string",
                        "example": "admin"
                    },
                    "createDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "description": {
                        "type": "string",
                        "example": "Laptops, Beverages"
                    },
                    "displayDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "expirationDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "externalReferenceCode": {
                        "type": "string",
                        "example": "AB-34098-789-N"
                    },
                    "id": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30130
                    },
                    "name": {
                        "type": "string",
                        "example": "Laptops, Beverages"
                    },
                    "neverExpire": {
                        "type": "boolean",
                        "example": true
                    },
                    "orderRuleAccount": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderRuleAccount"
                        }
                    },
                    "orderRuleAccountGroup": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderRuleAccountGroup"
                        }
                    },
                    "orderRuleChannel": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderRuleChannel"
                        }
                    },
                    "orderRuleOrderType": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderRuleOrderType"
                        }
                    },
                    "priority": {
                        "type": "number",
                        "format": "double",
                        "example": 1.2
                    },
                    "type": {
                        "type": "string",
                        "example": "order-limit"
                    },
                    "typeSettings": {
                        "type": "string",
                        "example": "22.5"
                    },
                    "workflowStatusInfo": {
                        "$ref": "#/components/schemas/Status"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.admin.order.dto.v1_0.OrderRule"
                    }
                },
                "xml": {
                    "name": "OrderRule"
                },
                "x-filterable": [
                    "name"
                ]
            },
            "PageOrderRule": {
                "type": "object",
                "properties": {
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderRule"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "PageOrderTypeChannel": {
                "type": "object",
                "properties": {
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderTypeChannel"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "PageOrderType": {
                "type": "object",
                "properties": {
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderType"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "PageTermOrderType": {
                "type": "object",
                "properties": {
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TermOrderType"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "TermOrderType": {
                "required": [
                    "orderTypeId",
                    "termId"
                ],
                "type": "object",
                "properties": {
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "readOnly": true
                    },
                    "orderType": {
                        "$ref": "#/components/schemas/OrderType"
                    },
                    "orderTypeExternalReferenceCode": {
                        "type": "string",
                        "example": "DAB-34098-789-N"
                    },
                    "orderTypeId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30324
                    },
                    "termExternalReferenceCode": {
                        "type": "string",
                        "example": "PAB-34098-789-N"
                    },
                    "termId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30130
                    },
                    "termOrderTypeId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 30643
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.admin.order.dto.v1_0.TermOrderType"
                    }
                },
                "xml": {
                    "name": "TermOrderType"
                },
                "x-filterable": []
            },
            "Term": {
                "required": [
                    "name",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "readOnly": true
                    },
                    "active": {
                        "type": "boolean",
                        "example": true
                    },
                    "createDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "description": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "example": "{en_US=Term Description US, hr_HR=Term Description HR, hu_HU=Term Description HU}"
                        },
                        "example": "{en_US=Term Description US, hr_HR=Term Description HR, hu_HU=Term Description HU}"
                    },
                    "displayDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "expirationDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "externalReferenceCode": {
                        "type": "string",
                        "example": "AB-34098-789-N"
                    },
                    "id": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30130
                    },
                    "label": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "example": "{en_US=Term Label US, hr_HR=Term Label HR, hu_HU=Term Label HU}"
                        },
                        "example": "{en_US=Term Label US, hr_HR=Term Label HR, hu_HU=Term Label HU}"
                    },
                    "name": {
                        "type": "string",
                        "example": "Laptops, Beverages"
                    },
                    "neverExpire": {
                        "type": "boolean",
                        "example": true
                    },
                    "priority": {
                        "type": "number",
                        "format": "double",
                        "example": 1.2
                    },
                    "termOrderType": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TermOrderType"
                        }
                    },
                    "type": {
                        "type": "string",
                        "example": "payment-terms"
                    },
                    "typeLocalized": {
                        "type": "string",
                        "example": "Payment Terms"
                    },
                    "typeSettings": {
                        "type": "string"
                    },
                    "workflowStatusInfo": {
                        "$ref": "#/components/schemas/Status"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.admin.order.dto.v1_0.Term"
                    }
                },
                "xml": {
                    "name": "Term"
                },
                "x-filterable": [
                    "name",
                    "priority",
                    "type"
                ]
            },
            "PageTerm": {
                "type": "object",
                "properties": {
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Term"
                        }
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "OAuth2DxpAuthorization": {
                "type": "object",
                "x-filterable": []
            },
            "UserAdditionalInfo": {
                "type": "object",
                "x-filterable": []
            },
            "PublisherAssets": {
                "type": "object",
                "x-filterable": []
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "description": "JWT Bearer token authentication"
            },
            "basicAuth": {
                "type": "http",
                "scheme": "basic",
                "description": "Basic HTTP authentication"
            },
            "apiKeyHeader": {
                "type": "apiKey",
                "in": "header",
                "name": "X-API-Key",
                "description": "API key request header"
            },
            "apiKeyQuery": {
                "type": "apiKey",
                "in": "query",
                "name": "api_key",
                "description": "API key query parameter"
            },
            "apiKeyCookie": {
                "type": "apiKey",
                "in": "cookie",
                "name": "api_key",
                "description": "API key browser cookie"
            },
            "oAuth2": {
                "type": "oauth2",
                "description": "OAuth 2.0 authentication",
                "flows": {
                    "authorizationCode": {
                        "authorizationUrl": "https://galaxy.scalar.com/oauth/authorize",
                        "tokenUrl": "https://galaxy.scalar.com/oauth/token",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    },
                    "clientCredentials": {
                        "tokenUrl": "https://galaxy.scalar.com/oauth/token",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    },
                    "implicit": {
                        "authorizationUrl": "https://galaxy.scalar.com/oauth/authorize",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    },
                    "password": {
                        "tokenUrl": "https://galaxy.scalar.com/oauth/token",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    }
                }
            },
            "openIdConnect": {
                "type": "openIdConnect",
                "openIdConnectUrl": "https://galaxy.scalar.com/.well-known/openid-configuration",
                "description": "OpenID Connect Authentication"
            }
        }
    },
    "security": [
        {
            "bearerAuth": []
        },
        {
            "basicAuth": []
        },
        {
            "apiKeyQuery": []
        },
        {
            "apiKeyHeader": []
        },
        {
            "apiKeyCookie": []
        },
        {
            "oAuth2": []
        },
        {
            "openIdConnect": []
        }
    ]
}