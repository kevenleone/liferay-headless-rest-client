{
    "openapi": "3.0.1",
    "info": {
        "title": "Headless Commerce Delivery Catalog API",
        "description": "#### TypeScript SDK Code Sample\n\n```typescript\nimport { createClient } from 'liferay-headless-rest-client';\nimport { getChannelAccountsPage } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannelAccountsPage({\n        client,\n        path: {\n           channelId: \"4605\",\n        },\n    });\n\n    console.log(data);\n}\n```\n#### Java installation:\n\nHeadless Commerce Delivery Catalog API. A Java client JAR is available for use with the group ID 'com.liferay', artifact ID 'com.liferay.headless.commerce.delivery.catalog.client', and version '4.0.61'.\n\n```gradle\nimplementation group: \"com.liferay\", name: \"com.liferay.headless.commerce.delivery.catalog.client\", version: \"latest\"\n```\n\nReference: https://mvnrepository.com/artifact/com.liferay/com.liferay.headless.commerce.delivery.catalog.client/latest",
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "v1.0"
    },
    "servers": [
        {
            "url": "http://localhost:8080"
        }
    ],
    "paths": {
        "/o/headless-commerce-delivery-catalog/v1.0/channels/{channelId}/accounts": {
            "get": {
                "tags": [
                    "Account"
                ],
                "operationId": "getChannelAccountsPage",
                "parameters": [
                    {
                        "name": "channelId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageAccount"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageAccount"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getChannelAccountsPage } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannelAccountsPage({\n        client,\n        path: {\n           channelId: \"6935\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-catalog/v1.0/channels/{channelId}/accounts', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "post": {
                "tags": [
                    "Account"
                ],
                "operationId": "postChannelAccount",
                "parameters": [
                    {
                        "name": "channelId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Account"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/Account"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Account"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Account"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postChannelAccount } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postChannelAccount({\n        client,\n        path: {\n           channelId: \"3477\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-catalog/v1.0/channels/{channelId}/accounts', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-catalog/v1.0/channels/{channelId}/products/{productId}/attachments": {
            "get": {
                "tags": [
                    "Attachment"
                ],
                "operationId": "getChannelProductAttachmentsPage",
                "parameters": [
                    {
                        "name": "channelId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageAttachment"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageAttachment"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getChannelProductAttachmentsPage } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannelProductAttachmentsPage({\n        client,\n        path: {\n           channelId: \"3158\",\n           productId: \"6039\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-catalog/v1.0/channels/{channelId}/products/{productId}/attachments', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-catalog/v1.0/channels/{channelId}/products/{productId}/images": {
            "get": {
                "tags": [
                    "Attachment"
                ],
                "operationId": "getChannelProductImagesPage",
                "parameters": [
                    {
                        "name": "channelId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageAttachment"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageAttachment"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getChannelProductImagesPage } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannelProductImagesPage({\n        client,\n        path: {\n           channelId: \"4932\",\n           productId: \"6804\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-catalog/v1.0/channels/{channelId}/products/{productId}/images', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-catalog/v1.0/channels/{channelId}/products/{productId}/categories": {
            "get": {
                "tags": [
                    "Category"
                ],
                "description": "Gets a list of Category related to a Product.",
                "operationId": "getChannelProductCategoriesPage",
                "parameters": [
                    {
                        "name": "channelId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageCategory"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageCategory"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getChannelProductCategoriesPage } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannelProductCategoriesPage({\n        client,\n        path: {\n           channelId: \"7644\",\n           productId: \"8355\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-catalog/v1.0/channels/{channelId}/products/{productId}/categories', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-catalog/v1.0/channels": {
            "get": {
                "tags": [
                    "Channel"
                ],
                "operationId": "getChannelsPage",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageChannel"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageChannel"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getChannelsPage } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannelsPage({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-catalog/v1.0/channels', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-catalog/v1.0/channels/export-batch": {
            "post": {
                "tags": [
                    "Channel"
                ],
                "operationId": "postChannelsPageExportBatch",
                "parameters": [
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "contentType",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fieldNames",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postChannelsPageExportBatch } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postChannelsPageExportBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-catalog/v1.0/channels/export-batch', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-catalog/v1.0/channels/by-externalReferenceCode/{externalReferenceCode}/currencies": {
            "get": {
                "tags": [
                    "Currency"
                ],
                "description": "Retrieves currencies from selected channel.",
                "operationId": "getChannelByExternalReferenceCodeCurrenciesPage",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageCurrency"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageCurrency"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getChannelByExternalReferenceCodeCurrenciesPage } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannelByExternalReferenceCodeCurrenciesPage({\n        client,\n        path: {\n           externalReferenceCode: \"5640\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-catalog/v1.0/channels/by-externalReferenceCode/{externalReferenceCode}/currencies', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-catalog/v1.0/channels/{channelId}/currencies": {
            "get": {
                "tags": [
                    "Currency"
                ],
                "description": "Retrieves currencies from selected channel.",
                "operationId": "getChannelCurrenciesPage",
                "parameters": [
                    {
                        "name": "channelId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageCurrency"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageCurrency"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getChannelCurrenciesPage } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannelCurrenciesPage({\n        client,\n        path: {\n           channelId: \"8434\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-catalog/v1.0/channels/{channelId}/currencies', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-catalog/v1.0/channels/{channelId}/products/{productId}/linked-products": {
            "get": {
                "tags": [
                    "LinkedProduct"
                ],
                "operationId": "getChannelProductLinkedProductsPage",
                "parameters": [
                    {
                        "name": "channelId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageLinkedProduct"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageLinkedProduct"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getChannelProductLinkedProductsPage } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannelProductLinkedProductsPage({\n        client,\n        path: {\n           channelId: \"7935\",\n           productId: \"6461\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-catalog/v1.0/channels/{channelId}/products/{productId}/linked-products', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-catalog/v1.0/channels/{channelId}/products/{productId}/mapped-products": {
            "get": {
                "tags": [
                    "MappedProduct"
                ],
                "operationId": "getChannelProductMappedProductsPage",
                "parameters": [
                    {
                        "name": "channelId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "currencyCode",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageMappedProduct"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageMappedProduct"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getChannelProductMappedProductsPage } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannelProductMappedProductsPage({\n        client,\n        path: {\n           channelId: \"6745\",\n           productId: \"5308\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-catalog/v1.0/channels/{channelId}/products/{productId}/mapped-products', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-catalog/v1.0/channels/by-externalReferenceCode/{channelExternalReferenceCode}/products/by-externalReferenceCode/{productExternalReferenceCode}/pins": {
            "get": {
                "tags": [
                    "Pin"
                ],
                "operationId": "getChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodePinsPage",
                "parameters": [
                    {
                        "name": "channelExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePin"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePin"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodePinsPage } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodePinsPage({\n        client,\n        path: {\n           channelExternalReferenceCode: \"663\",\n           productExternalReferenceCode: \"5271\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-catalog/v1.0/channels/by-externalReferenceCode/{channelExternalReferenceCode}/products/by-externalReferenceCode/{productExternalReferenceCode}/pins', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-catalog/v1.0/channels/{channelId}/products/{productId}/pins": {
            "get": {
                "tags": [
                    "Pin"
                ],
                "operationId": "getChannelProductPinsPage",
                "parameters": [
                    {
                        "name": "channelId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePin"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PagePin"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getChannelProductPinsPage } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannelProductPinsPage({\n        client,\n        path: {\n           channelId: \"3103\",\n           productId: \"351\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-catalog/v1.0/channels/{channelId}/products/{productId}/pins', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-catalog/v1.0/channels/by-externalReferenceCode/{channelExternalReferenceCode}/products/by-externalReferenceCode/{productExternalReferenceCode}/product-options": {
            "get": {
                "tags": [
                    "ProductOption"
                ],
                "operationId": "getChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeProductOptionsPage",
                "parameters": [
                    {
                        "name": "channelExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageProductOption"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageProductOption"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeProductOptionsPage } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeProductOptionsPage({\n        client,\n        path: {\n           channelExternalReferenceCode: \"3131\",\n           productExternalReferenceCode: \"7082\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-catalog/v1.0/channels/by-externalReferenceCode/{channelExternalReferenceCode}/products/by-externalReferenceCode/{productExternalReferenceCode}/product-options', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-catalog/v1.0/channels/{channelId}/products/{productId}/product-options": {
            "get": {
                "tags": [
                    "ProductOption"
                ],
                "operationId": "getChannelProductProductOptionsPage",
                "parameters": [
                    {
                        "name": "channelId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageProductOption"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageProductOption"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getChannelProductProductOptionsPage } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannelProductProductOptionsPage({\n        client,\n        path: {\n           channelId: \"5062\",\n           productId: \"8297\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-catalog/v1.0/channels/{channelId}/products/{productId}/product-options', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-catalog/v1.0/channels/by-externalReferenceCode/{channelExternalReferenceCode}/products/by-externalReferenceCode/{productExternalReferenceCode}/product-options/by-externalReferenceCode/{productOptionExternalReferenceCode}/product-option-values": {
            "get": {
                "tags": [
                    "ProductOptionValue"
                ],
                "operationId": "getChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeProductOptionByExternalReferenceCodeProductOptionExternalReferenceCodeProductOptionValuesPage",
                "parameters": [
                    {
                        "name": "channelExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productOptionExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "currencyCode",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productOptionValueId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "skuId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageProductOptionValue"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageProductOptionValue"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeProductOptionByExternalReferenceCodeProductOptionExternalReferenceCodeProductOptionValuesPage } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeProductOptionByExternalReferenceCodeProductOptionExternalReferenceCodeProductOptionValuesPage({\n        client,\n        path: {\n           channelExternalReferenceCode: \"6424\",\n           productExternalReferenceCode: \"9119\",\n           productOptionExternalReferenceCode: \"2467\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-catalog/v1.0/channels/by-externalReferenceCode/{channelExternalReferenceCode}/products/by-externalReferenceCode/{productExternalReferenceCode}/product-options/by-externalReferenceCode/{productOptionExternalReferenceCode}/product-option-values', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "post": {
                "tags": [
                    "ProductOptionValue"
                ],
                "description": "Retrieves a list of ProductOptionValue with selected channel, product and product option external reference code.",
                "operationId": "postChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeProductOptionByExternalReferenceCodeProductOptionExternalReferenceCodeProductOptionValuesPage",
                "parameters": [
                    {
                        "name": "channelExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productOptionExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "currencyCode",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productOptionValueId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "skuId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SkuOption"
                                }
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SkuOption"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageProductOptionValue"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageProductOptionValue"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeProductOptionByExternalReferenceCodeProductOptionExternalReferenceCodeProductOptionValuesPage } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeProductOptionByExternalReferenceCodeProductOptionExternalReferenceCodeProductOptionValuesPage({\n        client,\n        path: {\n           channelExternalReferenceCode: \"8461\",\n           productExternalReferenceCode: \"5644\",\n           productOptionExternalReferenceCode: \"8655\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-catalog/v1.0/channels/by-externalReferenceCode/{channelExternalReferenceCode}/products/by-externalReferenceCode/{productExternalReferenceCode}/product-options/by-externalReferenceCode/{productOptionExternalReferenceCode}/product-option-values', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-catalog/v1.0/channels/{channelId}/products/{productId}/product-options/{productOptionId}/product-option-values": {
            "get": {
                "tags": [
                    "ProductOptionValue"
                ],
                "operationId": "getChannelProductProductOptionProductOptionValuesPage",
                "parameters": [
                    {
                        "name": "channelId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productOptionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "currencyCode",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productOptionValueId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "skuId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageProductOptionValue"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageProductOptionValue"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getChannelProductProductOptionProductOptionValuesPage } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannelProductProductOptionProductOptionValuesPage({\n        client,\n        path: {\n           channelId: \"2267\",\n           productId: \"8101\",\n           productOptionId: \"3854\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-catalog/v1.0/channels/{channelId}/products/{productId}/product-options/{productOptionId}/product-option-values', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "post": {
                "tags": [
                    "ProductOptionValue"
                ],
                "description": "Retrieves a list of ProductOptionValue from selected channel, product ID and product option ID.",
                "operationId": "postChannelProductProductOptionProductOptionValuesPage",
                "parameters": [
                    {
                        "name": "channelId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productOptionId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "currencyCode",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productOptionValueId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "skuId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SkuOption"
                                }
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SkuOption"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageProductOptionValue"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageProductOptionValue"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postChannelProductProductOptionProductOptionValuesPage } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postChannelProductProductOptionProductOptionValuesPage({\n        client,\n        path: {\n           channelId: \"5293\",\n           productId: \"2178\",\n           productOptionId: \"1895\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-catalog/v1.0/channels/{channelId}/products/{productId}/product-options/{productOptionId}/product-option-values', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-catalog/v1.0/channels/{channelId}/products/{productId}": {
            "get": {
                "tags": [
                    "Product"
                ],
                "description": "Retrieves products from selected channel.",
                "operationId": "getChannelProduct",
                "parameters": [
                    {
                        "name": "channelId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getChannelProduct } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannelProduct({\n        client,\n        path: {\n           channelId: \"2705\",\n           productId: \"8422\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-catalog/v1.0/channels/{channelId}/products/{productId}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-catalog/v1.0/channels/{channelId}/products/by-friendly-url-path/{friendlyUrlPath}": {
            "get": {
                "tags": [
                    "Product"
                ],
                "description": "Retrieves products from selected channel.",
                "operationId": "getChannelProductByFriendlyUrlPath",
                "parameters": [
                    {
                        "name": "channelId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "friendlyUrlPath",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "pattern": ".+",
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getChannelProductByFriendlyUrlPath } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannelProductByFriendlyUrlPath({\n        client,\n        path: {\n           channelId: \"3473\",\n           friendlyUrlPath: \"5147\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-catalog/v1.0/channels/{channelId}/products/by-friendly-url-path/{friendlyUrlPath}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-catalog/v1.0/channels/{channelId}/products": {
            "get": {
                "tags": [
                    "Product"
                ],
                "description": "Retrieves products from selected channel.",
                "operationId": "getChannelProductsPage",
                "parameters": [
                    {
                        "name": "channelId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageProduct"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageProduct"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getChannelProductsPage } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannelProductsPage({\n        client,\n        path: {\n           channelId: \"8872\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-catalog/v1.0/channels/{channelId}/products', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-catalog/v1.0/channels/by-externalReferenceCode/{channelExternalReferenceCode}/products/by-externalReferenceCode/{productExternalReferenceCode}/product-specifications": {
            "get": {
                "tags": [
                    "ProductSpecification"
                ],
                "operationId": "getChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeProductSpecificationsPage",
                "parameters": [
                    {
                        "name": "channelExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageProductSpecification"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageProductSpecification"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeProductSpecificationsPage } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeProductSpecificationsPage({\n        client,\n        path: {\n           channelExternalReferenceCode: \"5791\",\n           productExternalReferenceCode: \"4147\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-catalog/v1.0/channels/by-externalReferenceCode/{channelExternalReferenceCode}/products/by-externalReferenceCode/{productExternalReferenceCode}/product-specifications', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-catalog/v1.0/channels/{channelId}/products/{productId}/product-specifications": {
            "get": {
                "tags": [
                    "ProductSpecification"
                ],
                "operationId": "getChannelProductProductSpecificationsPage",
                "parameters": [
                    {
                        "name": "channelId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageProductSpecification"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageProductSpecification"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getChannelProductProductSpecificationsPage } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannelProductProductSpecificationsPage({\n        client,\n        path: {\n           channelId: \"1173\",\n           productId: \"2592\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-catalog/v1.0/channels/{channelId}/products/{productId}/product-specifications', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-catalog/v1.0/channels/{channelId}/products/{productId}/related-products": {
            "get": {
                "tags": [
                    "RelatedProduct"
                ],
                "description": "Gets a list of Related Products of a Product.",
                "operationId": "getChannelProductRelatedProductsPage",
                "parameters": [
                    {
                        "name": "channelId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageRelatedProduct"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageRelatedProduct"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getChannelProductRelatedProductsPage } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannelProductRelatedProductsPage({\n        client,\n        path: {\n           channelId: \"2452\",\n           productId: \"1042\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-catalog/v1.0/channels/{channelId}/products/{productId}/related-products', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-catalog/v1.0/channels/by-externalReferenceCode/{channelExternalReferenceCode}/products/by-externalReferenceCode/{productExternalReferenceCode}/skus/by-externalReferenceCode/{skuExternalReferenceCode}": {
            "get": {
                "tags": [
                    "Sku"
                ],
                "description": "Retrieves a product from selected channel.",
                "operationId": "getChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeSkuByExternalReferenceCodeSkuExternalReferenceCode",
                "parameters": [
                    {
                        "name": "channelExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "skuExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "currencyCode",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sku"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sku"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeSkuByExternalReferenceCodeSkuExternalReferenceCode } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeSkuByExternalReferenceCodeSkuExternalReferenceCode({\n        client,\n        path: {\n           channelExternalReferenceCode: \"6706\",\n           productExternalReferenceCode: \"6257\",\n           skuExternalReferenceCode: \"1855\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-catalog/v1.0/channels/by-externalReferenceCode/{channelExternalReferenceCode}/products/by-externalReferenceCode/{productExternalReferenceCode}/skus/by-externalReferenceCode/{skuExternalReferenceCode}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-catalog/v1.0/channels/by-externalReferenceCode/{channelExternalReferenceCode}/products/by-externalReferenceCode/{productExternalReferenceCode}/skus": {
            "get": {
                "tags": [
                    "Sku"
                ],
                "description": "Retrieves products from selected channel.",
                "operationId": "getChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeSkusPage",
                "parameters": [
                    {
                        "name": "channelExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "currencyCode",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageSku"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageSku"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeSkusPage } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeSkusPage({\n        client,\n        path: {\n           channelExternalReferenceCode: \"6800\",\n           productExternalReferenceCode: \"9072\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-catalog/v1.0/channels/by-externalReferenceCode/{channelExternalReferenceCode}/products/by-externalReferenceCode/{productExternalReferenceCode}/skus', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "post": {
                "tags": [
                    "Sku"
                ],
                "description": "Posts an SKU with selected channel and product external reference code.",
                "operationId": "postChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeSku",
                "parameters": [
                    {
                        "name": "channelExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "quantity",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DDMOption"
                                }
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DDMOption"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sku"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sku"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeSku } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeSku({\n        client,\n        path: {\n           channelExternalReferenceCode: \"2826\",\n           productExternalReferenceCode: \"8967\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-catalog/v1.0/channels/by-externalReferenceCode/{channelExternalReferenceCode}/products/by-externalReferenceCode/{productExternalReferenceCode}/skus', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-catalog/v1.0/channels/{channelId}/products/{productId}/skus/{skuId}": {
            "get": {
                "tags": [
                    "Sku"
                ],
                "description": "Retrieves a product from selected channel.",
                "operationId": "getChannelProductSku",
                "parameters": [
                    {
                        "name": "channelId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "skuId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "currencyCode",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sku"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sku"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getChannelProductSku } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannelProductSku({\n        client,\n        path: {\n           channelId: \"2002\",\n           productId: \"9962\",\n           skuId: \"3387\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-catalog/v1.0/channels/{channelId}/products/{productId}/skus/{skuId}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-catalog/v1.0/channels/{channelId}/products/{productId}/skus": {
            "get": {
                "tags": [
                    "Sku"
                ],
                "description": "Retrieves products from selected channel.",
                "operationId": "getChannelProductSkusPage",
                "parameters": [
                    {
                        "name": "channelId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "currencyCode",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageSku"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageSku"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getChannelProductSkusPage } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannelProductSkusPage({\n        client,\n        path: {\n           channelId: \"2394\",\n           productId: \"4771\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-catalog/v1.0/channels/{channelId}/products/{productId}/skus', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "post": {
                "tags": [
                    "Sku"
                ],
                "description": "Retrieves a SKU from selected channel and product ID.",
                "operationId": "postChannelProductSku",
                "parameters": [
                    {
                        "name": "channelId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "quantity",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DDMOption"
                                }
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/DDMOption"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sku"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sku"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postChannelProductSku } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postChannelProductSku({\n        client,\n        path: {\n           channelId: \"126\",\n           productId: \"7330\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-catalog/v1.0/channels/{channelId}/products/{productId}/skus', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-catalog/v1.0/channels/by-externalReferenceCode/{channelExternalReferenceCode}/products/by-externalReferenceCode/{productExternalReferenceCode}/skus/by-sku-option": {
            "post": {
                "tags": [
                    "Sku"
                ],
                "description": "Retrieves a SKU from selected channel and product using their external reference code.",
                "operationId": "postChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeSkuBySkuOption",
                "parameters": [
                    {
                        "name": "channelExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productExternalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "currencyCode",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "quantity",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "skuUnitOfMeasureKey",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SkuOption"
                                }
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SkuOption"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sku"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sku"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeSkuBySkuOption } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeSkuBySkuOption({\n        client,\n        path: {\n           channelExternalReferenceCode: \"4896\",\n           productExternalReferenceCode: \"4244\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-catalog/v1.0/channels/by-externalReferenceCode/{channelExternalReferenceCode}/products/by-externalReferenceCode/{productExternalReferenceCode}/skus/by-sku-option', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-catalog/v1.0/channels/{channelId}/products/{productId}/skus/by-sku-option": {
            "post": {
                "tags": [
                    "Sku"
                ],
                "description": "Retrieves a SKU from selected channel and product ID.",
                "operationId": "postChannelProductSkuBySkuOption",
                "parameters": [
                    {
                        "name": "channelId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "productId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "currencyCode",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "quantity",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "skuUnitOfMeasureKey",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SkuOption"
                                }
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/SkuOption"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sku"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sku"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postChannelProductSkuBySkuOption } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postChannelProductSkuBySkuOption({\n        client,\n        path: {\n           channelId: \"2164\",\n           productId: \"8251\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-catalog/v1.0/channels/{channelId}/products/{productId}/skus/by-sku-option', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-catalog/v1.0/wishlist-items/{wishListItemId}": {
            "get": {
                "tags": [
                    "WishListItem"
                ],
                "description": "Retrieves wishlist item by wishListItemId for a specific channel and account",
                "operationId": "getWishListItem",
                "parameters": [
                    {
                        "name": "wishListItemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "currencyCode",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WishListItem"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/WishListItem"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getWishListItem } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getWishListItem({\n        client,\n        path: {\n           wishListItemId: \"2850\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-catalog/v1.0/wishlist-items/{wishListItemId}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "WishListItem"
                ],
                "description": "Deletes a wishlist item by wishListItemId.",
                "operationId": "deleteWishListItem",
                "parameters": [
                    {
                        "name": "wishListItemId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteWishListItem } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteWishListItem({\n        client,\n        path: {\n           wishListItemId: \"6588\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-catalog/v1.0/wishlist-items/{wishListItemId}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-catalog/v1.0/wishlist-items/batch": {
            "delete": {
                "tags": [
                    "WishListItem"
                ],
                "operationId": "deleteWishListItemBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteWishListItemBatch } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteWishListItemBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-catalog/v1.0/wishlist-items/batch', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-catalog/v1.0/wishlists/{wishListId}/wishlist-items": {
            "get": {
                "tags": [
                    "WishListItem"
                ],
                "description": "Retrieves wishlist items by wishListId for a specific channel and account",
                "operationId": "getWishlistWishListWishListItemsPage",
                "parameters": [
                    {
                        "name": "wishListId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "currencyCode",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageWishListItem"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageWishListItem"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getWishlistWishListWishListItemsPage } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getWishlistWishListWishListItemsPage({\n        client,\n        path: {\n           wishListId: \"8626\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-catalog/v1.0/wishlists/{wishListId}/wishlist-items', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "post": {
                "tags": [
                    "WishListItem"
                ],
                "operationId": "postWishlistWishListWishListItem",
                "parameters": [
                    {
                        "name": "wishListId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WishListItem"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/WishListItem"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WishListItem"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/WishListItem"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postWishlistWishListWishListItem } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postWishlistWishListWishListItem({\n        client,\n        path: {\n           wishListId: \"8830\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-catalog/v1.0/wishlists/{wishListId}/wishlist-items', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-catalog/v1.0/wishlists/{wishListId}": {
            "get": {
                "tags": [
                    "WishList"
                ],
                "description": "Retrieves a wishlist by wishListId.",
                "operationId": "getWishList",
                "parameters": [
                    {
                        "name": "wishListId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WishList"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/WishList"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getWishList } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getWishList({\n        client,\n        path: {\n           wishListId: \"4595\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-catalog/v1.0/wishlists/{wishListId}', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "delete": {
                "tags": [
                    "WishList"
                ],
                "description": "Deletes a wishlist by wishListId.",
                "operationId": "deleteWishList",
                "parameters": [
                    {
                        "name": "wishListId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {},
                            "application/xml": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteWishList } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteWishList({\n        client,\n        path: {\n           wishListId: \"7474\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-catalog/v1.0/wishlists/{wishListId}', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "patch": {
                "tags": [
                    "WishList"
                ],
                "operationId": "patchWishList",
                "parameters": [
                    {
                        "name": "wishListId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WishList"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/WishList"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WishList"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/WishList"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { patchWishList } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await patchWishList({\n        client,\n        path: {\n           wishListId: \"2155\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-catalog/v1.0/wishlists/{wishListId}', {\n  method: 'PATCH',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-catalog/v1.0/wishlists/batch": {
            "delete": {
                "tags": [
                    "WishList"
                ],
                "operationId": "deleteWishListBatch",
                "parameters": [
                    {
                        "name": "callbackURL",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { deleteWishListBatch } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await deleteWishListBatch({\n        client,\n        \n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-catalog/v1.0/wishlists/batch', {\n  method: 'DELETE',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-catalog/v1.0/channels/by-externalReferenceCode/{externalReferenceCode}/wishlists": {
            "get": {
                "tags": [
                    "WishList"
                ],
                "description": "Retrieves wishlists for a given channel.",
                "operationId": "getChannelByExternalReferenceCodeWishListsPage",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "currencyCode",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageWishList"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageWishList"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getChannelByExternalReferenceCodeWishListsPage } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannelByExternalReferenceCodeWishListsPage({\n        client,\n        path: {\n           externalReferenceCode: \"1411\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-catalog/v1.0/channels/by-externalReferenceCode/{externalReferenceCode}/wishlists', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "post": {
                "tags": [
                    "WishList"
                ],
                "operationId": "postChannelByExternalReferenceCodeWishList",
                "parameters": [
                    {
                        "name": "externalReferenceCode",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WishList"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/WishList"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WishList"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/WishList"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postChannelByExternalReferenceCodeWishList } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postChannelByExternalReferenceCodeWishList({\n        client,\n        path: {\n           externalReferenceCode: \"9007\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-catalog/v1.0/channels/by-externalReferenceCode/{externalReferenceCode}/wishlists', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        },
        "/o/headless-commerce-delivery-catalog/v1.0/channels/{channelId}/wishlists": {
            "get": {
                "tags": [
                    "WishList"
                ],
                "description": "Retrieves wishlists for a given channel.",
                "operationId": "getChannelWishListsPage",
                "parameters": [
                    {
                        "name": "channelId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "currencyCode",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "nestedFields",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageWishList"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/PageWishList"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { getChannelWishListsPage } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await getChannelWishListsPage({\n        client,\n        path: {\n           channelId: \"1816\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-catalog/v1.0/channels/{channelId}/wishlists', {\n  method: 'GET',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            },
            "post": {
                "tags": [
                    "WishList"
                ],
                "operationId": "postChannelWishList",
                "parameters": [
                    {
                        "name": "channelId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "accountId",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WishList"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/WishList"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "default response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WishList"
                                }
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/WishList"
                                }
                            }
                        }
                    }
                },
                "x-codeSamples": [
                    {
                        "lang": "typescript",
                        "label": "sdk",
                        "source": "import { createClient } from 'liferay-headless-rest-client';\nimport { postChannelWishList } from 'liferay-headless-rest-client/headless-commerce-delivery-catalog-v1.0';\n\nconst client = createClient({\n    baseUrl: 'http://localhost:8080',\n    headers: {\n        Authorization: `Basic ${btoa(\"test@liferay.com:test\")}`,\n    },\n});\n\nasync function main() {\n    const { data } = await postChannelWishList({\n        client,\n        path: {\n           channelId: \"8153\",\n        },\n    });\n\n    console.log(data);\n}"
                    },
                    {
                        "lang": "javascript",
                        "label": "Liferay.Util.fetch",
                        "source": "const response = await Liferay.Util.fetch('/o/headless-commerce-delivery-catalog/v1.0/channels/{channelId}/wishlists', {\n  method: 'POST',\n})\n\nconst data = await response.json();\n\nconsole.log(data);"
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Account": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "readOnly": true
                    },
                    "customFields": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                            "$ref": "#/components/schemas/CustomField"
                        }
                    },
                    "dateCreated": {
                        "type": "string",
                        "description": "The account's creation date.",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "dateModified": {
                        "type": "string",
                        "description": "The account's most recent modification date.",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "defaultBillingAddressId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 10130
                    },
                    "defaultShippingAddressId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 10131
                    },
                    "description": {
                        "type": "string"
                    },
                    "domains": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "externalReferenceCode": {
                        "type": "string",
                        "example": "AB-34098-789-N"
                    },
                    "id": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30130
                    },
                    "logoId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 20078
                    },
                    "logoURL": {
                        "type": "string",
                        "example": "AB-34098-789-N"
                    },
                    "name": {
                        "type": "string",
                        "example": "Account Name"
                    },
                    "organizationIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    "status": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "taxId": {
                        "type": "string",
                        "example": "Abcd1234"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.delivery.catalog.dto.v1_0.Account"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "business",
                            "guest",
                            "person",
                            "supplier"
                        ]
                    },
                    "accountToOAuth2DxpAuthorization": {
                        "type": "array",
                        "description": "Information about the object relationship accountToOAuth2DxpAuthorization can be embedded with \"nestedFields\".",
                        "items": {
                            "$ref": "#/components/schemas/OAuth2DxpAuthorization"
                        }
                    },
                    "accountEntryToUserAdditionalInfo": {
                        "type": "array",
                        "description": "Information about the object relationship accountEntryToUserAdditionalInfo can be embedded with \"nestedFields\".",
                        "items": {
                            "$ref": "#/components/schemas/UserAdditionalInfo"
                        }
                    },
                    "company": {
                        "type": "string"
                    },
                    "accountEntryToPublisherAssets": {
                        "type": "array",
                        "description": "Information about the object relationship accountEntryToPublisherAssets can be embedded with \"nestedFields\".",
                        "items": {
                            "$ref": "#/components/schemas/PublisherAssets"
                        }
                    }
                },
                "xml": {
                    "name": "Account"
                },
                "x-filterable": [
                    "dateCreated",
                    "dateModified",
                    "name",
                    "type"
                ]
            },
            "CustomField": {
                "type": "object",
                "properties": {
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.portal.vulcan.custom.field.CustomField"
                    },
                    "customValue": {
                        "$ref": "#/components/schemas/CustomValue"
                    },
                    "dataType": {
                        "type": "string",
                        "description": "The field type (e.g., image, text, etc.).",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The field's internal name. This is valid for comparisons and unique in the structured content."
                    }
                },
                "xml": {
                    "name": "CustomField"
                },
                "x-filterable": []
            },
            "CustomValue": {
                "type": "object",
                "properties": {
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.portal.vulcan.custom.field.CustomValue"
                    },
                    "data": {
                        "type": "object",
                        "description": "The field's content value for simple types."
                    },
                    "data_i18n": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "The localized field's content values for simple types."
                        },
                        "description": "The localized field's content values for simple types."
                    },
                    "geo": {
                        "$ref": "#/components/schemas/Geo"
                    }
                },
                "description": "The field's value.",
                "xml": {
                    "name": "CustomValue"
                },
                "x-filterable": []
            },
            "Facet": {
                "type": "object",
                "properties": {
                    "facetCriteria": {
                        "type": "string"
                    },
                    "facetValues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FacetValue"
                        }
                    }
                },
                "x-filterable": []
            },
            "FacetValue": {
                "type": "object",
                "properties": {
                    "numberOfOccurrences": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "term": {
                        "type": "string"
                    }
                },
                "x-filterable": []
            },
            "Geo": {
                "type": "object",
                "properties": {
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.portal.vulcan.custom.field.Geo"
                    },
                    "latitude": {
                        "type": "number",
                        "description": "The latitude of a point in space.",
                        "format": "double"
                    },
                    "longitude": {
                        "type": "number",
                        "description": "The longitude of a point in space.",
                        "format": "double"
                    }
                },
                "description": "A point determined by latitude and longitude.",
                "xml": {
                    "name": "Geo"
                },
                "x-filterable": []
            },
            "PageAccount": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Account"
                        }
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "Attachment": {
                "required": [
                    "sku"
                ],
                "type": "object",
                "properties": {
                    "attachment": {
                        "type": "string",
                        "description": "Base64 encoded file"
                    },
                    "cdnEnabled": {
                        "type": "boolean"
                    },
                    "cdnURL": {
                        "type": "string",
                        "example": "AB-34098-789-N"
                    },
                    "customFields": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                            "$ref": "#/components/schemas/CustomField"
                        }
                    },
                    "displayDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "expirationDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "externalReferenceCode": {
                        "type": "string",
                        "example": "AB-34098-789-N"
                    },
                    "fileEntryId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 30130
                    },
                    "galleryEnabled": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "id": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 30130
                    },
                    "neverExpire": {
                        "type": "boolean",
                        "example": true
                    },
                    "options": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "example": "{color=yellow, optionKey=optionValueKey, size=xs}"
                        },
                        "example": "{color=yellow, optionKey=optionValueKey, size=xs}"
                    },
                    "priority": {
                        "type": "number",
                        "format": "double",
                        "example": 1.2
                    },
                    "src": {
                        "type": "string",
                        "description": "URL of the location"
                    },
                    "tags": {
                        "type": "array",
                        "readOnly": true,
                        "example": "[tag1, tag2, tag3]",
                        "items": {
                            "type": "string",
                            "example": "[tag1, tag2, tag3]"
                        }
                    },
                    "title": {
                        "type": "string"
                    },
                    "type": {
                        "type": "integer",
                        "format": "int32",
                        "readOnly": true
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.delivery.catalog.dto.v1_0.Attachment"
                    }
                },
                "xml": {
                    "name": "Attachment"
                },
                "x-filterable": []
            },
            "PageAttachment": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        }
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "Category": {
                "type": "object",
                "properties": {
                    "id": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30130
                    },
                    "name": {
                        "type": "string",
                        "description": "Category Name"
                    },
                    "siteId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "title": {
                        "type": "string",
                        "description": "Category Title",
                        "readOnly": true
                    },
                    "vocabulary": {
                        "type": "string",
                        "readOnly": true,
                        "example": "Default Vocabulary"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.delivery.catalog.dto.v1_0.Category"
                    }
                },
                "xml": {
                    "name": "Category"
                },
                "x-filterable": []
            },
            "PageCategory": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Category"
                        }
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "Channel": {
                "required": [
                    "currencyCode",
                    "name",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "currencyCode": {
                        "type": "string"
                    },
                    "externalReferenceCode": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "siteGroupId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "type": {
                        "type": "string"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.delivery.catalog.dto.v1_0.Channel"
                    }
                },
                "xml": {
                    "name": "Channel"
                },
                "x-filterable": [
                    "name",
                    "siteGroupId"
                ]
            },
            "PageChannel": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Channel"
                        }
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "Currency": {
                "required": [
                    "code",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "example": true
                    },
                    "code": {
                        "type": "string",
                        "example": "USD"
                    },
                    "externalReferenceCode": {
                        "type": "string",
                        "example": "AB-34098-789-N"
                    },
                    "formatPattern": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "example": "{en_US=Hand Saw, hr_HR=Product Name HR, hu_HU=Product Name HU}"
                        },
                        "example": "{en_US=Hand Saw, hr_HR=Product Name HR, hu_HU=Product Name HU}"
                    },
                    "id": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30130
                    },
                    "maxFractionDigits": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    "minFractionDigits": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "example": "{en_US=Hand Saw, hr_HR=Product Name HR, hu_HU=Product Name HU}"
                        },
                        "example": "{en_US=Hand Saw, hr_HR=Product Name HR, hu_HU=Product Name HU}"
                    },
                    "primary": {
                        "type": "boolean",
                        "example": true
                    },
                    "priority": {
                        "type": "number",
                        "format": "double",
                        "example": 1.2
                    },
                    "rate": {
                        "type": "number",
                        "example": 33.54
                    },
                    "symbol": {
                        "type": "string",
                        "example": "$"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.delivery.catalog.dto.v1_0.Currency"
                    },
                    "roundingMode": {
                        "type": "string",
                        "example": "HALF_EVEN",
                        "enum": [
                            "UP",
                            "DOWN",
                            "CEILING",
                            "FLOOR",
                            "HALF_UP",
                            "HALF_DOWN",
                            "HALF_EVEN",
                            "UNNECESSARY"
                        ]
                    }
                },
                "xml": {
                    "name": "Currency"
                },
                "x-filterable": []
            },
            "PageCurrency": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Currency"
                        }
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "LinkedProduct": {
                "type": "object",
                "properties": {
                    "productExternalReferenceCode": {
                        "type": "string",
                        "readOnly": true,
                        "example": "exampleERC"
                    },
                    "productId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 33131
                    },
                    "type": {
                        "type": "string",
                        "readOnly": true,
                        "example": "exampleERC"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.delivery.catalog.dto.v1_0.LinkedProduct"
                    }
                },
                "xml": {
                    "name": "LinkedProduct"
                },
                "x-filterable": []
            },
            "PageLinkedProduct": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LinkedProduct"
                        }
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "Availability": {
                "type": "object",
                "properties": {
                    "label": {
                        "type": "string",
                        "example": "available"
                    },
                    "label_i18n": {
                        "type": "string",
                        "example": "Available"
                    },
                    "stockQuantity": {
                        "type": "number",
                        "example": 10.1
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.delivery.catalog.dto.v1_0.Availability"
                    }
                },
                "xml": {
                    "name": "Availability"
                },
                "x-filterable": []
            },
            "MappedProduct": {
                "type": "object",
                "properties": {
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        },
                        "readOnly": true
                    },
                    "availability": {
                        "$ref": "#/components/schemas/Availability"
                    },
                    "firstAvailableReplacementMappedProduct": {
                        "$ref": "#/components/schemas/MappedProduct"
                    },
                    "id": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 33130
                    },
                    "price": {
                        "$ref": "#/components/schemas/Price"
                    },
                    "productConfiguration": {
                        "$ref": "#/components/schemas/ProductConfiguration"
                    },
                    "productExternalReferenceCode": {
                        "type": "string",
                        "example": "exampleERC"
                    },
                    "productId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 33131
                    },
                    "productName": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "example": "{en_US=Hand Saw, hr_HR=Product Name HR, hu_HU=Product Name HU}"
                        },
                        "readOnly": true,
                        "example": "{en_US=Hand Saw, hr_HR=Product Name HR, hu_HU=Product Name HU}"
                    },
                    "productOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductOption"
                        }
                    },
                    "purchasable": {
                        "type": "boolean",
                        "readOnly": true,
                        "example": true
                    },
                    "quantity": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int32",
                        "example": 1
                    },
                    "replacementMappedProduct": {
                        "$ref": "#/components/schemas/MappedProduct"
                    },
                    "replacementMessage": {
                        "type": "string",
                        "readOnly": true,
                        "example": "MIN3123 has been replaced by MIN1289"
                    },
                    "sequence": {
                        "type": "string",
                        "example": "1"
                    },
                    "sku": {
                        "type": "string",
                        "example": "SKU01"
                    },
                    "skuExternalReferenceCode": {
                        "type": "string",
                        "example": "SKU0111"
                    },
                    "skuId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 33135
                    },
                    "skuOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SkuOption"
                        }
                    },
                    "thumbnail": {
                        "type": "string",
                        "readOnly": true,
                        "example": "simple"
                    },
                    "urls": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "example": "{en_US=product-url-us, hr_HR=product-url-hr, hu_HU=product-url-hu}"
                        },
                        "example": "{en_US=product-url-us, hr_HR=product-url-hr, hu_HU=product-url-hu}"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.delivery.catalog.dto.v1_0.MappedProduct"
                    },
                    "type": {
                        "type": "string",
                        "example": "sku",
                        "enum": [
                            "diagram",
                            "external",
                            "sku"
                        ]
                    }
                },
                "xml": {
                    "name": "MappedProduct"
                },
                "x-filterable": []
            },
            "PageMappedProduct": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MappedProduct"
                        }
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "Price": {
                "type": "object",
                "properties": {
                    "currency": {
                        "type": "string"
                    },
                    "discount": {
                        "type": "string"
                    },
                    "discountPercentage": {
                        "type": "string"
                    },
                    "discountPercentages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "finalPrice": {
                        "type": "string"
                    },
                    "price": {
                        "type": "number",
                        "format": "double"
                    },
                    "priceFormatted": {
                        "type": "string"
                    },
                    "priceOnApplication": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "pricingQuantityPrice": {
                        "type": "number",
                        "format": "double"
                    },
                    "pricingQuantityPriceFormatted": {
                        "type": "string"
                    },
                    "promoPrice": {
                        "type": "number",
                        "format": "double"
                    },
                    "promoPriceFormatted": {
                        "type": "string"
                    },
                    "tierPrice": {
                        "type": "number",
                        "format": "double"
                    },
                    "tierPriceFormatted": {
                        "type": "string"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.delivery.catalog.dto.v1_0.Price"
                    }
                },
                "xml": {
                    "name": "Price"
                },
                "x-filterable": []
            },
            "ProductConfiguration": {
                "type": "object",
                "properties": {
                    "allowBackOrder": {
                        "type": "boolean",
                        "example": true
                    },
                    "allowedOrderQuantities": {
                        "type": "array",
                        "example": [
                            10,
                            20,
                            30,
                            40
                        ],
                        "items": {
                            "type": "number"
                        }
                    },
                    "availabilityEstimateId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 31130
                    },
                    "availabilityEstimateName": {
                        "type": "string",
                        "readOnly": true
                    },
                    "displayAvailability": {
                        "type": "boolean",
                        "example": true
                    },
                    "displayStockQuantity": {
                        "type": "boolean",
                        "example": true
                    },
                    "inventoryEngine": {
                        "type": "string",
                        "description": "The inventory engine that will be used to manage the product inventory"
                    },
                    "lowStockAction": {
                        "type": "string",
                        "description": "The low stock action that will be performed when a product is out of stock"
                    },
                    "maxOrderQuantity": {
                        "type": "number",
                        "example": 10.1
                    },
                    "minOrderQuantity": {
                        "type": "number",
                        "example": 10.1
                    },
                    "minStockQuantity": {
                        "type": "number",
                        "example": 10.1
                    },
                    "multipleOrderQuantity": {
                        "type": "number",
                        "example": 10.1
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.delivery.catalog.dto.v1_0.ProductConfiguration"
                    }
                },
                "xml": {
                    "name": "ProductConfiguration"
                },
                "x-filterable": []
            },
            "ProductOption": {
                "type": "object",
                "properties": {
                    "catalogId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "description": {
                        "type": "string"
                    },
                    "fieldType": {
                        "type": "string",
                        "example": "select"
                    },
                    "id": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 30130
                    },
                    "key": {
                        "type": "string",
                        "example": "color"
                    },
                    "name": {
                        "type": "string"
                    },
                    "optionExternalReferenceCode": {
                        "type": "string",
                        "example": "AB-34098-789-N"
                    },
                    "optionId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30080
                    },
                    "priority": {
                        "type": "number",
                        "format": "double",
                        "example": 1.2
                    },
                    "productOptionValues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductOptionValue"
                        }
                    },
                    "required": {
                        "type": "boolean",
                        "readOnly": true,
                        "example": true
                    },
                    "skuContributor": {
                        "type": "boolean",
                        "readOnly": true,
                        "example": true
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.delivery.catalog.dto.v1_0.ProductOption"
                    }
                },
                "xml": {
                    "name": "ProductOption"
                },
                "x-filterable": []
            },
            "ProductOptionValue": {
                "type": "object",
                "properties": {
                    "id": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 30130
                    },
                    "infoMessage": {
                        "type": "string",
                        "readOnly": true
                    },
                    "key": {
                        "type": "string",
                        "example": "black"
                    },
                    "name": {
                        "type": "string"
                    },
                    "preselected": {
                        "type": "boolean",
                        "readOnly": true,
                        "example": true
                    },
                    "price": {
                        "type": "string",
                        "readOnly": true
                    },
                    "priceType": {
                        "type": "string",
                        "readOnly": true,
                        "example": "static"
                    },
                    "priority": {
                        "type": "number",
                        "format": "double",
                        "example": 1.2
                    },
                    "productOptionId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 30130
                    },
                    "quantity": {
                        "type": "string",
                        "readOnly": true
                    },
                    "relativePriceFormatted": {
                        "type": "string",
                        "readOnly": true
                    },
                    "selectable": {
                        "type": "boolean",
                        "readOnly": true,
                        "example": true
                    },
                    "skuId": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 30130
                    },
                    "totalPrice": {
                        "type": "string",
                        "readOnly": true
                    },
                    "unitOfMeasureKey": {
                        "type": "string",
                        "readOnly": true
                    },
                    "visible": {
                        "type": "boolean",
                        "readOnly": true,
                        "example": true
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.delivery.catalog.dto.v1_0.ProductOptionValue"
                    }
                },
                "xml": {
                    "name": "ProductOptionValue"
                },
                "x-filterable": []
            },
            "SkuOption": {
                "type": "object",
                "properties": {
                    "key": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 31130
                    },
                    "price": {
                        "type": "string"
                    },
                    "priceType": {
                        "type": "string",
                        "example": "static"
                    },
                    "quantity": {
                        "type": "string"
                    },
                    "required": {
                        "type": "boolean"
                    },
                    "skuId": {
                        "type": "integer",
                        "format": "int64",
                        "example": 30130
                    },
                    "skuOptionId": {
                        "type": "integer",
                        "format": "int64",
                        "example": 30130
                    },
                    "skuOptionKey": {
                        "type": "string",
                        "example": "Sku Option Key"
                    },
                    "skuOptionName": {
                        "type": "string",
                        "example": "Sku Option Name"
                    },
                    "skuOptionValueId": {
                        "type": "integer",
                        "format": "int64",
                        "example": 30130
                    },
                    "skuOptionValueKey": {
                        "type": "string",
                        "example": "Sku Option Value Key"
                    },
                    "skuOptionValueNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "value": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 31130
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.delivery.catalog.dto.v1_0.SkuOption"
                    }
                },
                "xml": {
                    "name": "SkuOption"
                },
                "x-filterable": []
            },
            "PagePin": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Pin"
                        }
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "Pin": {
                "type": "object",
                "properties": {
                    "id": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 33130
                    },
                    "mappedProduct": {
                        "$ref": "#/components/schemas/MappedProduct"
                    },
                    "positionX": {
                        "type": "number",
                        "format": "double",
                        "example": 33.54
                    },
                    "positionY": {
                        "type": "number",
                        "format": "double",
                        "example": 33.54
                    },
                    "sequence": {
                        "type": "string",
                        "example": "1"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.delivery.catalog.dto.v1_0.Pin"
                    }
                },
                "xml": {
                    "name": "Pin"
                },
                "x-filterable": []
            },
            "PageProductOption": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductOption"
                        }
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "PageProductOptionValue": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductOptionValue"
                        }
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "DDMOption": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "required": {
                        "type": "boolean"
                    },
                    "value": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.delivery.catalog.dto.v1_0.DDMOption"
                    }
                },
                "xml": {
                    "name": "DDMOption"
                },
                "x-filterable": []
            },
            "Product": {
                "type": "object",
                "properties": {
                    "attachments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        }
                    },
                    "catalogName": {
                        "type": "string",
                        "readOnly": true
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Category"
                        }
                    },
                    "createDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "customFields": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CustomField"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "expando": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        }
                    },
                    "externalReferenceCode": {
                        "type": "string"
                    },
                    "id": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 30130
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        }
                    },
                    "linkedProducts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/LinkedProduct"
                        }
                    },
                    "metaDescription": {
                        "type": "string"
                    },
                    "metaKeyword": {
                        "type": "string"
                    },
                    "metaTitle": {
                        "type": "string"
                    },
                    "modifiedDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "multipleOrderQuantity": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string"
                    },
                    "productConfiguration": {
                        "$ref": "#/components/schemas/ProductConfiguration"
                    },
                    "productId": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                    },
                    "productOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductOption"
                        }
                    },
                    "productSpecifications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductSpecification"
                        }
                    },
                    "productType": {
                        "type": "string",
                        "example": "simple"
                    },
                    "relatedProducts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RelatedProduct"
                        }
                    },
                    "shortDescription": {
                        "type": "string"
                    },
                    "skus": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Sku"
                        }
                    },
                    "slug": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "example": "[tag1, tag2, tag3]",
                        "items": {
                            "type": "string",
                            "example": "[tag1, tag2, tag3]"
                        }
                    },
                    "urlImage": {
                        "type": "string"
                    },
                    "urls": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "example": "{en_US=product-url-us, hr_HR=product-url-hr, hu_HU=product-url-hu}"
                        },
                        "readOnly": true,
                        "example": "{en_US=product-url-us, hr_HR=product-url-hr, hu_HU=product-url-hu}"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.delivery.catalog.dto.v1_0.Product"
                    }
                },
                "xml": {
                    "name": "Product"
                },
                "x-filterable": [
                    "catalogId",
                    "categoryIds",
                    "categoryNames",
                    "createDate",
                    "customFields/Collects_Personal_Data",
                    "customFields/Current_Requirements",
                    "customFields/Developer_Name",
                    "customFields/Developer_Website",
                    "customFields/Documentation",
                    "customFields/Github_Username",
                    "customFields/Instructions",
                    "customFields/Latest_Version",
                    "customFields/License",
                    "customFields/Liferay_Version",
                    "customFields/Past_Versions_Work_With",
                    "customFields/Profile",
                    "customFields/Reference",
                    "customFields/Release_Notes",
                    "customFields/Site_Initializer",
                    "customFields/Support",
                    "customFields/Terms",
                    "customFields/Version",
                    "customFields/analyticsgroupid",
                    "externalReferenceCode",
                    "gtins",
                    "modifiedDate",
                    "name",
                    "productType",
                    "specificationNames",
                    "specificationValues",
                    "statusCode",
                    "tags"
                ]
            },
            "ProductSpecification": {
                "type": "object",
                "properties": {
                    "id": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 31130
                    },
                    "optionCategoryId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30129
                    },
                    "priority": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "format": "double",
                        "example": 1.2
                    },
                    "productId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30129
                    },
                    "specificationGroupKey": {
                        "type": "string"
                    },
                    "specificationGroupTitle": {
                        "type": "string"
                    },
                    "specificationId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30129
                    },
                    "specificationKey": {
                        "type": "string",
                        "example": "specification-key"
                    },
                    "specificationPriority": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "format": "double",
                        "example": 1.1
                    },
                    "specificationTitle": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.delivery.catalog.dto.v1_0.ProductSpecification"
                    }
                },
                "xml": {
                    "name": "ProductSpecification"
                },
                "x-filterable": []
            },
            "RelatedProduct": {
                "type": "object",
                "properties": {
                    "id": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 30130
                    },
                    "priority": {
                        "type": "number",
                        "format": "double",
                        "example": 1.2
                    },
                    "productExternalReferenceCode": {
                        "type": "string",
                        "example": "AB-34098-789-N"
                    },
                    "productId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 30129
                    },
                    "type": {
                        "type": "string",
                        "example": "cross-sell"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.delivery.catalog.dto.v1_0.RelatedProduct"
                    }
                },
                "xml": {
                    "name": "RelatedProduct"
                },
                "x-filterable": []
            },
            "ReplacementSku": {
                "type": "object",
                "properties": {
                    "price": {
                        "$ref": "#/components/schemas/Price"
                    },
                    "productConfiguration": {
                        "$ref": "#/components/schemas/ProductConfiguration"
                    },
                    "sku": {
                        "type": "string",
                        "readOnly": true
                    },
                    "skuExternalReferenceCode": {
                        "type": "string",
                        "example": "SKU0111"
                    },
                    "skuId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 33135
                    },
                    "skuOptions": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                            "$ref": "#/components/schemas/SkuOption"
                        }
                    },
                    "skuUnitOfMeasures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SkuUnitOfMeasure"
                        }
                    },
                    "urls": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "example": "{en_US=product-url-us, hr_HR=product-url-hr, hu_HU=product-url-hu}"
                        },
                        "readOnly": true,
                        "example": "{en_US=product-url-us, hr_HR=product-url-hr, hu_HU=product-url-hu}"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.delivery.catalog.dto.v1_0.ReplacementSku"
                    }
                },
                "xml": {
                    "name": "ReplacementSku"
                },
                "x-filterable": []
            },
            "Sku": {
                "type": "object",
                "properties": {
                    "DDMOptions": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                            "$ref": "#/components/schemas/DDMOption"
                        }
                    },
                    "allowedOrderQuantities": {
                        "type": "array",
                        "example": [
                            10,
                            20,
                            30,
                            40
                        ],
                        "items": {
                            "type": "string",
                            "example": "[10,20,30,40]"
                        }
                    },
                    "availability": {
                        "$ref": "#/components/schemas/Availability"
                    },
                    "backOrderAllowed": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "customFields": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                            "$ref": "#/components/schemas/CustomField"
                        }
                    },
                    "depth": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "format": "double",
                        "example": 1.1
                    },
                    "discontinued": {
                        "type": "boolean",
                        "example": false
                    },
                    "discontinuedDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "displayDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "displayDiscountLevels": {
                        "type": "boolean",
                        "example": true
                    },
                    "expirationDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "externalReferenceCode": {
                        "type": "string",
                        "example": "SKU0111"
                    },
                    "gtin": {
                        "type": "string",
                        "example": "12341234"
                    },
                    "height": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "format": "double",
                        "example": 20.2
                    },
                    "id": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 30130
                    },
                    "incomingQuantityLabel": {
                        "type": "string"
                    },
                    "manufacturerPartNumber": {
                        "type": "string",
                        "example": "12341234"
                    },
                    "maxOrderQuantity": {
                        "type": "number",
                        "example": 10.1
                    },
                    "minOrderQuantity": {
                        "type": "number",
                        "example": 10.1
                    },
                    "neverExpire": {
                        "type": "boolean",
                        "example": true
                    },
                    "price": {
                        "$ref": "#/components/schemas/Price"
                    },
                    "productConfiguration": {
                        "$ref": "#/components/schemas/ProductConfiguration"
                    },
                    "productId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "example": 30130
                    },
                    "published": {
                        "type": "boolean",
                        "example": true
                    },
                    "purchasable": {
                        "type": "boolean",
                        "example": true
                    },
                    "replacementSku": {
                        "$ref": "#/components/schemas/ReplacementSku"
                    },
                    "replacementSkuExternalReferenceCode": {
                        "type": "string",
                        "example": "SKU0111"
                    },
                    "replacementSkuId": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "integer",
                        "format": "int64",
                        "example": 33135
                    },
                    "sku": {
                        "type": "string"
                    },
                    "skuOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SkuOption"
                        }
                    },
                    "skuUnitOfMeasures": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SkuUnitOfMeasure"
                        }
                    },
                    "tierPrices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TierPrice"
                        }
                    },
                    "weight": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "format": "double",
                        "example": 1.1
                    },
                    "width": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "format": "double",
                        "example": 20.2
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.delivery.catalog.dto.v1_0.Sku"
                    }
                },
                "xml": {
                    "name": "Sku"
                },
                "x-filterable": []
            },
            "SkuUnitOfMeasure": {
                "type": "object",
                "properties": {
                    "incrementalOrderQuantity": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 1.5
                    },
                    "key": {
                        "type": "string",
                        "example": "pl"
                    },
                    "name": {
                        "type": "string",
                        "example": "Pallet"
                    },
                    "precision": {
                        "type": "integer",
                        "format": "int32",
                        "example": 3
                    },
                    "price": {
                        "$ref": "#/components/schemas/Price"
                    },
                    "primary": {
                        "type": "boolean",
                        "example": true
                    },
                    "priority": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "format": "double",
                        "example": 1.1
                    },
                    "rate": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "example": 202.1
                    },
                    "tierPrices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TierPrice"
                        }
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.delivery.catalog.dto.v1_0.SkuUnitOfMeasure"
                    }
                },
                "xml": {
                    "name": "SkuUnitOfMeasure"
                },
                "x-filterable": []
            },
            "TierPrice": {
                "type": "object",
                "properties": {
                    "currency": {
                        "type": "string"
                    },
                    "price": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "priceFormatted": {
                        "type": "string",
                        "readOnly": true
                    },
                    "pricingQuantityPrice": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "pricingQuantityPriceFormatted": {
                        "type": "string",
                        "readOnly": true
                    },
                    "quantity": {
                        "minimum": 0,
                        "exclusiveMinimum": false,
                        "type": "number",
                        "readOnly": true,
                        "example": 202.1
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.delivery.catalog.dto.v1_0.TierPrice"
                    }
                },
                "xml": {
                    "name": "TierPrice"
                },
                "x-filterable": []
            },
            "PageProduct": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Product"
                        }
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "PageProductSpecification": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductSpecification"
                        }
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "PageRelatedProduct": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RelatedProduct"
                        }
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "PageSku": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Sku"
                        }
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "WishListItem": {
                "type": "object",
                "properties": {
                    "finalPrice": {
                        "type": "string"
                    },
                    "friendlyURL": {
                        "type": "string"
                    },
                    "icon": {
                        "type": "string"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "productId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "productName": {
                        "type": "string"
                    },
                    "skuId": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.delivery.catalog.dto.v1_0.WishListItem"
                    }
                },
                "xml": {
                    "name": "WishListItem"
                },
                "x-filterable": []
            },
            "PageWishListItem": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WishListItem"
                        }
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "PageWishList": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WishList"
                        }
                    },
                    "lastPage": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "totalCount": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "actions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "facets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Facet"
                        }
                    },
                    "page": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "pageSize": {
                        "type": "integer",
                        "format": "int64"
                    }
                },
                "x-filterable": []
            },
            "WishList": {
                "type": "object",
                "properties": {
                    "defaultWishList": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    },
                    "wishListItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/WishListItem"
                        }
                    },
                    "x-class-name": {
                        "type": "string",
                        "readOnly": true,
                        "default": "com.liferay.headless.commerce.delivery.catalog.dto.v1_0.WishList"
                    }
                },
                "xml": {
                    "name": "WishList"
                },
                "x-filterable": []
            },
            "PublisherAssets": {
                "type": "object",
                "x-filterable": []
            },
            "OAuth2DxpAuthorization": {
                "type": "object",
                "x-filterable": []
            },
            "UserAdditionalInfo": {
                "type": "object",
                "x-filterable": []
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "description": "JWT Bearer token authentication"
            },
            "basicAuth": {
                "type": "http",
                "scheme": "basic",
                "description": "Basic HTTP authentication"
            },
            "apiKeyHeader": {
                "type": "apiKey",
                "in": "header",
                "name": "X-API-Key",
                "description": "API key request header"
            },
            "apiKeyQuery": {
                "type": "apiKey",
                "in": "query",
                "name": "api_key",
                "description": "API key query parameter"
            },
            "apiKeyCookie": {
                "type": "apiKey",
                "in": "cookie",
                "name": "api_key",
                "description": "API key browser cookie"
            },
            "oAuth2": {
                "type": "oauth2",
                "description": "OAuth 2.0 authentication",
                "flows": {
                    "authorizationCode": {
                        "authorizationUrl": "https://galaxy.scalar.com/oauth/authorize",
                        "tokenUrl": "https://galaxy.scalar.com/oauth/token",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    },
                    "clientCredentials": {
                        "tokenUrl": "https://galaxy.scalar.com/oauth/token",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    },
                    "implicit": {
                        "authorizationUrl": "https://galaxy.scalar.com/oauth/authorize",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    },
                    "password": {
                        "tokenUrl": "https://galaxy.scalar.com/oauth/token",
                        "scopes": {
                            "read:account": "read your account information",
                            "write:planets": "modify planets in your account",
                            "read:planets": "read your planets"
                        }
                    }
                }
            },
            "openIdConnect": {
                "type": "openIdConnect",
                "openIdConnectUrl": "https://galaxy.scalar.com/.well-known/openid-configuration",
                "description": "OpenID Connect Authentication"
            }
        }
    }
}