// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';
import type { DeleteObjectEntryFolderCollaboratorByTypeCollaboratorData, DeleteObjectEntryFolderCollaboratorByTypeCollaboratorResponses, GetObjectEntryFolderCollaboratorByTypeCollaboratorData, GetObjectEntryFolderCollaboratorByTypeCollaboratorResponses, PutObjectEntryFolderCollaboratorByTypeCollaboratorData, PutObjectEntryFolderCollaboratorByTypeCollaboratorResponses, DeleteScopeScopeKeyObjectEntryFolderByExternalReferenceCodeCollaboratorByTypeCollaboratorData, DeleteScopeScopeKeyObjectEntryFolderByExternalReferenceCodeCollaboratorByTypeCollaboratorResponses, GetScopeScopeKeyObjectEntryFolderByExternalReferenceCodeCollaboratorByTypeCollaboratorData, GetScopeScopeKeyObjectEntryFolderByExternalReferenceCodeCollaboratorByTypeCollaboratorResponses, PutScopeScopeKeyObjectEntryFolderByExternalReferenceCodeCollaboratorByTypeCollaboratorData, PutScopeScopeKeyObjectEntryFolderByExternalReferenceCodeCollaboratorByTypeCollaboratorResponses, GetObjectEntryFolderCollaboratorsPageData, GetObjectEntryFolderCollaboratorsPageResponses, PostObjectEntryFolderCollaboratorsPageData, PostObjectEntryFolderCollaboratorsPageResponses, GetScopeScopeKeyObjectEntryFolderByExternalReferenceCodeCollaboratorsPageData, GetScopeScopeKeyObjectEntryFolderByExternalReferenceCodeCollaboratorsPageResponses, PostScopeScopeKeyObjectEntryFolderByExternalReferenceCodeCollaboratorsPageData, PostScopeScopeKeyObjectEntryFolderByExternalReferenceCodeCollaboratorsPageResponses, PostObjectEntryFolderCollaboratorsPageExportBatchData, PostObjectEntryFolderCollaboratorsPageExportBatchResponses, DeleteObjectEntryFolderData, DeleteObjectEntryFolderResponses, GetObjectEntryFolderData, GetObjectEntryFolderResponses, PatchObjectEntryFolderData, PatchObjectEntryFolderResponses, PutObjectEntryFolderData, PutObjectEntryFolderResponses, DeleteObjectEntryFolderBatchData, DeleteObjectEntryFolderBatchResponses, PutObjectEntryFolderBatchData, PutObjectEntryFolderBatchResponses, DeleteScopeScopeKeyObjectEntryFolderByExternalReferenceCodeData, DeleteScopeScopeKeyObjectEntryFolderByExternalReferenceCodeResponses, GetScopeScopeKeyObjectEntryFolderByExternalReferenceCodeData, GetScopeScopeKeyObjectEntryFolderByExternalReferenceCodeResponses, PatchScopeScopeKeyObjectEntryFolderByExternalReferenceCodeData, PatchScopeScopeKeyObjectEntryFolderByExternalReferenceCodeResponses, PutScopeScopeKeyObjectEntryFolderByExternalReferenceCodeData, PutScopeScopeKeyObjectEntryFolderByExternalReferenceCodeResponses, GetObjectEntryFolderPermissionsPageData, GetObjectEntryFolderPermissionsPageResponses, PutObjectEntryFolderPermissionsPageData, PutObjectEntryFolderPermissionsPageResponses, GetScopeScopeKeyObjectEntryFoldersPageData, GetScopeScopeKeyObjectEntryFoldersPageResponses, PostScopeScopeKeyObjectEntryFolderData, PostScopeScopeKeyObjectEntryFolderResponses } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Deletes the collaborator for an object entry folder and returns a 204 if the operation succeeds.
 */
export const deleteObjectEntryFolderCollaboratorByTypeCollaborator = <ThrowOnError extends boolean = false>(options: Options<DeleteObjectEntryFolderCollaboratorByTypeCollaboratorData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteObjectEntryFolderCollaboratorByTypeCollaboratorResponses, unknown, ThrowOnError>({
        url: '/o/headless-object/v1.0/object-entry-folders/{objectEntryFolderId}/collaborators/by-type/{type}/{collaboratorId}',
        ...options
    });
};

/**
 * Retrieves the collaborator of an object entry.
 */
export const getObjectEntryFolderCollaboratorByTypeCollaborator = <ThrowOnError extends boolean = false>(options: Options<GetObjectEntryFolderCollaboratorByTypeCollaboratorData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetObjectEntryFolderCollaboratorByTypeCollaboratorResponses, unknown, ThrowOnError>({
        url: '/o/headless-object/v1.0/object-entry-folders/{objectEntryFolderId}/collaborators/by-type/{type}/{collaboratorId}',
        ...options
    });
};

/**
 * Add or update a collaborator received in the request.
 */
export const putObjectEntryFolderCollaboratorByTypeCollaborator = <ThrowOnError extends boolean = false>(options: Options<PutObjectEntryFolderCollaboratorByTypeCollaboratorData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutObjectEntryFolderCollaboratorByTypeCollaboratorResponses, unknown, ThrowOnError>({
        url: '/o/headless-object/v1.0/object-entry-folders/{objectEntryFolderId}/collaborators/by-type/{type}/{collaboratorId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Deletes the collaborator for an object entry folder and returns a 204 if the operation succeeds.
 */
export const deleteScopeScopeKeyObjectEntryFolderByExternalReferenceCodeCollaboratorByTypeCollaborator = <ThrowOnError extends boolean = false>(options: Options<DeleteScopeScopeKeyObjectEntryFolderByExternalReferenceCodeCollaboratorByTypeCollaboratorData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteScopeScopeKeyObjectEntryFolderByExternalReferenceCodeCollaboratorByTypeCollaboratorResponses, unknown, ThrowOnError>({
        url: '/o/headless-object/v1.0/scopes/{scopeKey}/object-entry-folders/by-external-reference-code/{externalReferenceCode}/collaborators/by-type/{type}/{collaboratorId}',
        ...options
    });
};

/**
 * Retrieves the collaborator for an object entry folder.
 */
export const getScopeScopeKeyObjectEntryFolderByExternalReferenceCodeCollaboratorByTypeCollaborator = <ThrowOnError extends boolean = false>(options: Options<GetScopeScopeKeyObjectEntryFolderByExternalReferenceCodeCollaboratorByTypeCollaboratorData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetScopeScopeKeyObjectEntryFolderByExternalReferenceCodeCollaboratorByTypeCollaboratorResponses, unknown, ThrowOnError>({
        url: '/o/headless-object/v1.0/scopes/{scopeKey}/object-entry-folders/by-external-reference-code/{externalReferenceCode}/collaborators/by-type/{type}/{collaboratorId}',
        ...options
    });
};

/**
 * Add or update a collaborator received in the request.
 */
export const putScopeScopeKeyObjectEntryFolderByExternalReferenceCodeCollaboratorByTypeCollaborator = <ThrowOnError extends boolean = false>(options: Options<PutScopeScopeKeyObjectEntryFolderByExternalReferenceCodeCollaboratorByTypeCollaboratorData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutScopeScopeKeyObjectEntryFolderByExternalReferenceCodeCollaboratorByTypeCollaboratorResponses, unknown, ThrowOnError>({
        url: '/o/headless-object/v1.0/scopes/{scopeKey}/object-entry-folders/by-external-reference-code/{externalReferenceCode}/collaborators/by-type/{type}/{collaboratorId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the collaborators of an object entry folder.
 */
export const getObjectEntryFolderCollaboratorsPage = <ThrowOnError extends boolean = false>(options: Options<GetObjectEntryFolderCollaboratorsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetObjectEntryFolderCollaboratorsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-object/v1.0/object-entry-folders/{objectEntryFolderId}/collaborators',
        ...options
    });
};

/**
 * Add or update all the collaborators received in the request. Delete existing collaborators that are not included in the request. Send a notification for the new collaborators and those whose permissions are different.
 */
export const postObjectEntryFolderCollaboratorsPage = <ThrowOnError extends boolean = false>(options: Options<PostObjectEntryFolderCollaboratorsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostObjectEntryFolderCollaboratorsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-object/v1.0/object-entry-folders/{objectEntryFolderId}/collaborators',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the collaborators of an object entry.
 */
export const getScopeScopeKeyObjectEntryFolderByExternalReferenceCodeCollaboratorsPage = <ThrowOnError extends boolean = false>(options: Options<GetScopeScopeKeyObjectEntryFolderByExternalReferenceCodeCollaboratorsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetScopeScopeKeyObjectEntryFolderByExternalReferenceCodeCollaboratorsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-object/v1.0/scopes/{scopeKey}/object-entry-folders/by-external-reference-code/{externalReferenceCode}/collaborators',
        ...options
    });
};

/**
 * Add or update all the collaborators received in the request. Delete existing collaborators that are not included in the request. Send a notification for the new collaborators and those whose permissions are different.
 */
export const postScopeScopeKeyObjectEntryFolderByExternalReferenceCodeCollaboratorsPage = <ThrowOnError extends boolean = false>(options: Options<PostScopeScopeKeyObjectEntryFolderByExternalReferenceCodeCollaboratorsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostScopeScopeKeyObjectEntryFolderByExternalReferenceCodeCollaboratorsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-object/v1.0/scopes/{scopeKey}/object-entry-folders/by-external-reference-code/{externalReferenceCode}/collaborators',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postObjectEntryFolderCollaboratorsPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostObjectEntryFolderCollaboratorsPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostObjectEntryFolderCollaboratorsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-object/v1.0/object-entry-folders/{objectEntryFolderId}/collaborators/export-batch',
        ...options
    });
};

/**
 * Deletes the object entry folder and returns a 204 if the operation succeeds.
 */
export const deleteObjectEntryFolder = <ThrowOnError extends boolean = false>(options: Options<DeleteObjectEntryFolderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteObjectEntryFolderResponses, unknown, ThrowOnError>({
        url: '/o/headless-object/v1.0/object-entry-folders/{objectEntryFolderId}',
        ...options
    });
};

/**
 * Retrieves the object entry folder.
 */
export const getObjectEntryFolder = <ThrowOnError extends boolean = false>(options: Options<GetObjectEntryFolderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetObjectEntryFolderResponses, unknown, ThrowOnError>({
        url: '/o/headless-object/v1.0/object-entry-folders/{objectEntryFolderId}',
        ...options
    });
};

/**
 * Updates only the fields received in the request body, leaving any other fields untouched.
 */
export const patchObjectEntryFolder = <ThrowOnError extends boolean = false>(options: Options<PatchObjectEntryFolderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchObjectEntryFolderResponses, unknown, ThrowOnError>({
        url: '/o/headless-object/v1.0/object-entry-folders/{objectEntryFolderId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const putObjectEntryFolder = <ThrowOnError extends boolean = false>(options: Options<PutObjectEntryFolderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutObjectEntryFolderResponses, unknown, ThrowOnError>({
        url: '/o/headless-object/v1.0/object-entry-folders/{objectEntryFolderId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteObjectEntryFolderBatch = <ThrowOnError extends boolean = false>(options?: Options<DeleteObjectEntryFolderBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteObjectEntryFolderBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-object/v1.0/object-entry-folders/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const putObjectEntryFolderBatch = <ThrowOnError extends boolean = false>(options?: Options<PutObjectEntryFolderBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).put<PutObjectEntryFolderBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-object/v1.0/object-entry-folders/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const deleteScopeScopeKeyObjectEntryFolderByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteScopeScopeKeyObjectEntryFolderByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteScopeScopeKeyObjectEntryFolderByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-object/v1.0/scopes/{scopeKey}/object-entry-folder/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

export const getScopeScopeKeyObjectEntryFolderByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetScopeScopeKeyObjectEntryFolderByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetScopeScopeKeyObjectEntryFolderByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-object/v1.0/scopes/{scopeKey}/object-entry-folder/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

export const patchScopeScopeKeyObjectEntryFolderByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PatchScopeScopeKeyObjectEntryFolderByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchScopeScopeKeyObjectEntryFolderByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-object/v1.0/scopes/{scopeKey}/object-entry-folder/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const putScopeScopeKeyObjectEntryFolderByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PutScopeScopeKeyObjectEntryFolderByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutScopeScopeKeyObjectEntryFolderByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-object/v1.0/scopes/{scopeKey}/object-entry-folder/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getObjectEntryFolderPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetObjectEntryFolderPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetObjectEntryFolderPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-object/v1.0/object-entry-folders/{objectEntryFolderId}/permissions',
        ...options
    });
};

export const putObjectEntryFolderPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutObjectEntryFolderPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutObjectEntryFolderPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-object/v1.0/object-entry-folders/{objectEntryFolderId}/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getScopeScopeKeyObjectEntryFoldersPage = <ThrowOnError extends boolean = false>(options: Options<GetScopeScopeKeyObjectEntryFoldersPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetScopeScopeKeyObjectEntryFoldersPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-object/v1.0/scopes/{scopeKey}/object-entry-folders',
        ...options
    });
};

export const postScopeScopeKeyObjectEntryFolder = <ThrowOnError extends boolean = false>(options: Options<PostScopeScopeKeyObjectEntryFolderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostScopeScopeKeyObjectEntryFolderResponses, unknown, ThrowOnError>({
        url: '/o/headless-object/v1.0/scopes/{scopeKey}/object-entry-folders',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};