// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';
import type { GetFieldMappingInfosPageData, GetFieldMappingInfosPageResponses, PostFieldMappingInfosPageExportBatchData, PostFieldMappingInfosPageExportBatchResponses, GetKeywordQueryContributorsPageData, GetKeywordQueryContributorsPageResponses, PostKeywordQueryContributorsPageExportBatchData, PostKeywordQueryContributorsPageExportBatchResponses, GetModelPrefilterContributorsPageData, GetModelPrefilterContributorsPageResponses, PostModelPrefilterContributorsPageExportBatchData, PostModelPrefilterContributorsPageExportBatchResponses, GetQueryPrefilterContributorsPageData, GetQueryPrefilterContributorsPageResponses, PostQueryPrefilterContributorsPageExportBatchData, PostQueryPrefilterContributorsPageExportBatchResponses, DeleteSxpBlueprintData, DeleteSxpBlueprintResponses, GetSxpBlueprintData, GetSxpBlueprintResponses, PatchSxpBlueprintData, PatchSxpBlueprintResponses, PutSxpBlueprintData, PutSxpBlueprintResponses, DeleteSxpBlueprintBatchData, DeleteSxpBlueprintBatchResponses, PostSxpBlueprintBatchData, PostSxpBlueprintBatchResponses, PutSxpBlueprintBatchData, PutSxpBlueprintBatchResponses, GetSxpBlueprintByExternalReferenceCodeData, GetSxpBlueprintByExternalReferenceCodeResponses, PutSxpBlueprintByExternalReferenceCodeData, PutSxpBlueprintByExternalReferenceCodeResponses, GetSxpBlueprintExportData, GetSxpBlueprintExportResponses, GetSxpBlueprintsPageData, GetSxpBlueprintsPageResponses, PostSxpBlueprintData, PostSxpBlueprintResponses, PostSxpBlueprintCopyData, PostSxpBlueprintCopyResponses, PostSxpBlueprintValidateData, PostSxpBlueprintValidateResponses, PostSxpBlueprintsPageExportBatchData, PostSxpBlueprintsPageExportBatchResponses, DeleteSxpElementData, DeleteSxpElementResponses, GetSxpElementData, GetSxpElementResponses, PatchSxpElementData, PatchSxpElementResponses, PutSxpElementData, PutSxpElementResponses, DeleteSxpElementBatchData, DeleteSxpElementBatchResponses, PostSxpElementBatchData, PostSxpElementBatchResponses, PutSxpElementBatchData, PutSxpElementBatchResponses, GetSxpElementByExternalReferenceCodeData, GetSxpElementByExternalReferenceCodeResponses, PutSxpElementByExternalReferenceCodeData, PutSxpElementByExternalReferenceCodeResponses, GetSxpElementExportData, GetSxpElementExportResponses, GetSxpElementsPageData, GetSxpElementsPageResponses, PostSxpElementData, PostSxpElementResponses, PostSxpElementCopyData, PostSxpElementCopyResponses, PostSxpElementPreviewData, PostSxpElementPreviewResponses, PostSxpElementValidateData, PostSxpElementValidateResponses, PostSxpElementsPageExportBatchData, PostSxpElementsPageExportBatchResponses, GetSxpParameterContributorDefinitionsPageData, GetSxpParameterContributorDefinitionsPageResponses, PostSxpParameterContributorDefinitionsPageExportBatchData, PostSxpParameterContributorDefinitionsPageExportBatchResponses, GetSearchIndexesPageData, GetSearchIndexesPageResponses, PostSearchIndexesPageExportBatchData, PostSearchIndexesPageExportBatchResponses, PostSearchData, PostSearchResponses, GetSearchableAssetNameLanguagePageData, GetSearchableAssetNameLanguagePageResponses, GetSearchableAssetNamesPageData, GetSearchableAssetNamesPageResponses, PostSearchableAssetNamesPageExportBatchData, PostSearchableAssetNamesPageExportBatchResponses } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export const getFieldMappingInfosPage = <ThrowOnError extends boolean = false>(options?: Options<GetFieldMappingInfosPageData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetFieldMappingInfosPageResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/field-mapping-infos',
        ...options
    });
};

export const postFieldMappingInfosPageExportBatch = <ThrowOnError extends boolean = false>(options?: Options<PostFieldMappingInfosPageExportBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostFieldMappingInfosPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/field-mapping-infos/export-batch',
        ...options
    });
};

export const getKeywordQueryContributorsPage = <ThrowOnError extends boolean = false>(options?: Options<GetKeywordQueryContributorsPageData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetKeywordQueryContributorsPageResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/keyword-query-contributors',
        ...options
    });
};

export const postKeywordQueryContributorsPageExportBatch = <ThrowOnError extends boolean = false>(options?: Options<PostKeywordQueryContributorsPageExportBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostKeywordQueryContributorsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/keyword-query-contributors/export-batch',
        ...options
    });
};

export const getModelPrefilterContributorsPage = <ThrowOnError extends boolean = false>(options?: Options<GetModelPrefilterContributorsPageData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetModelPrefilterContributorsPageResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/model-prefilter-contributors',
        ...options
    });
};

export const postModelPrefilterContributorsPageExportBatch = <ThrowOnError extends boolean = false>(options?: Options<PostModelPrefilterContributorsPageExportBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostModelPrefilterContributorsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/model-prefilter-contributors/export-batch',
        ...options
    });
};

export const getQueryPrefilterContributorsPage = <ThrowOnError extends boolean = false>(options?: Options<GetQueryPrefilterContributorsPageData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetQueryPrefilterContributorsPageResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/query-prefilter-contributors',
        ...options
    });
};

export const postQueryPrefilterContributorsPageExportBatch = <ThrowOnError extends boolean = false>(options?: Options<PostQueryPrefilterContributorsPageExportBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostQueryPrefilterContributorsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/query-prefilter-contributors/export-batch',
        ...options
    });
};

export const deleteSxpBlueprint = <ThrowOnError extends boolean = false>(options: Options<DeleteSxpBlueprintData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSxpBlueprintResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/sxp-blueprints/{sxpBlueprintId}',
        ...options
    });
};

export const getSxpBlueprint = <ThrowOnError extends boolean = false>(options: Options<GetSxpBlueprintData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSxpBlueprintResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/sxp-blueprints/{sxpBlueprintId}',
        ...options
    });
};

export const patchSxpBlueprint = <ThrowOnError extends boolean = false>(options: Options<PatchSxpBlueprintData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchSxpBlueprintResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/sxp-blueprints/{sxpBlueprintId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const putSxpBlueprint = <ThrowOnError extends boolean = false>(options: Options<PutSxpBlueprintData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSxpBlueprintResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/sxp-blueprints/{sxpBlueprintId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteSxpBlueprintBatch = <ThrowOnError extends boolean = false>(options?: Options<DeleteSxpBlueprintBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteSxpBlueprintBatchResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/sxp-blueprints/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postSxpBlueprintBatch = <ThrowOnError extends boolean = false>(options?: Options<PostSxpBlueprintBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostSxpBlueprintBatchResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/sxp-blueprints/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const putSxpBlueprintBatch = <ThrowOnError extends boolean = false>(options?: Options<PutSxpBlueprintBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).put<PutSxpBlueprintBatchResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/sxp-blueprints/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const getSxpBlueprintByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetSxpBlueprintByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSxpBlueprintByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/sxp-blueprints/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

export const putSxpBlueprintByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PutSxpBlueprintByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSxpBlueprintByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/sxp-blueprints/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getSxpBlueprintExport = <ThrowOnError extends boolean = false>(options: Options<GetSxpBlueprintExportData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSxpBlueprintExportResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/sxp-blueprints/{sxpBlueprintId}/export',
        ...options
    });
};

export const getSxpBlueprintsPage = <ThrowOnError extends boolean = false>(options?: Options<GetSxpBlueprintsPageData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetSxpBlueprintsPageResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/sxp-blueprints',
        ...options
    });
};

export const postSxpBlueprint = <ThrowOnError extends boolean = false>(options?: Options<PostSxpBlueprintData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostSxpBlueprintResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/sxp-blueprints',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postSxpBlueprintCopy = <ThrowOnError extends boolean = false>(options: Options<PostSxpBlueprintCopyData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSxpBlueprintCopyResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/sxp-blueprints/{sxpBlueprintId}/copy',
        ...options
    });
};

export const postSxpBlueprintValidate = <ThrowOnError extends boolean = false>(options?: Options<PostSxpBlueprintValidateData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostSxpBlueprintValidateResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/sxp-blueprints/validate',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postSxpBlueprintsPageExportBatch = <ThrowOnError extends boolean = false>(options?: Options<PostSxpBlueprintsPageExportBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostSxpBlueprintsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/sxp-blueprints/export-batch',
        ...options
    });
};

export const deleteSxpElement = <ThrowOnError extends boolean = false>(options: Options<DeleteSxpElementData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSxpElementResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/sxp-elements/{sxpElementId}',
        ...options
    });
};

export const getSxpElement = <ThrowOnError extends boolean = false>(options: Options<GetSxpElementData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSxpElementResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/sxp-elements/{sxpElementId}',
        ...options
    });
};

export const patchSxpElement = <ThrowOnError extends boolean = false>(options: Options<PatchSxpElementData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchSxpElementResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/sxp-elements/{sxpElementId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const putSxpElement = <ThrowOnError extends boolean = false>(options: Options<PutSxpElementData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSxpElementResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/sxp-elements/{sxpElementId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteSxpElementBatch = <ThrowOnError extends boolean = false>(options?: Options<DeleteSxpElementBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteSxpElementBatchResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/sxp-elements/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postSxpElementBatch = <ThrowOnError extends boolean = false>(options?: Options<PostSxpElementBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostSxpElementBatchResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/sxp-elements/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const putSxpElementBatch = <ThrowOnError extends boolean = false>(options?: Options<PutSxpElementBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).put<PutSxpElementBatchResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/sxp-elements/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const getSxpElementByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetSxpElementByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSxpElementByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/sxp-elements/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

export const putSxpElementByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PutSxpElementByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSxpElementByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/sxp-elements/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getSxpElementExport = <ThrowOnError extends boolean = false>(options: Options<GetSxpElementExportData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSxpElementExportResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/sxp-elements/{sxpElementId}/export',
        ...options
    });
};

export const getSxpElementsPage = <ThrowOnError extends boolean = false>(options?: Options<GetSxpElementsPageData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetSxpElementsPageResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/sxp-elements',
        ...options
    });
};

export const postSxpElement = <ThrowOnError extends boolean = false>(options?: Options<PostSxpElementData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostSxpElementResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/sxp-elements',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postSxpElementCopy = <ThrowOnError extends boolean = false>(options: Options<PostSxpElementCopyData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSxpElementCopyResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/sxp-elements/{sxpElementId}/copy',
        ...options
    });
};

export const postSxpElementPreview = <ThrowOnError extends boolean = false>(options?: Options<PostSxpElementPreviewData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostSxpElementPreviewResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/sxp-elements/preview',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postSxpElementValidate = <ThrowOnError extends boolean = false>(options?: Options<PostSxpElementValidateData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostSxpElementValidateResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/sxp-elements/validate',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postSxpElementsPageExportBatch = <ThrowOnError extends boolean = false>(options?: Options<PostSxpElementsPageExportBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostSxpElementsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/sxp-elements/export-batch',
        ...options
    });
};

export const getSxpParameterContributorDefinitionsPage = <ThrowOnError extends boolean = false>(options?: Options<GetSxpParameterContributorDefinitionsPageData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetSxpParameterContributorDefinitionsPageResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/sxp-parameter-contributor-definitions',
        ...options
    });
};

export const postSxpParameterContributorDefinitionsPageExportBatch = <ThrowOnError extends boolean = false>(options?: Options<PostSxpParameterContributorDefinitionsPageExportBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostSxpParameterContributorDefinitionsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/sxp-parameter-contributor-definitions/export-batch',
        ...options
    });
};

export const getSearchIndexesPage = <ThrowOnError extends boolean = false>(options?: Options<GetSearchIndexesPageData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetSearchIndexesPageResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/search-indexes',
        ...options
    });
};

export const postSearchIndexesPageExportBatch = <ThrowOnError extends boolean = false>(options?: Options<PostSearchIndexesPageExportBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostSearchIndexesPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/search-indexes/export-batch',
        ...options
    });
};

/**
 * This API is only for the Blueprints application's preview. For a search API, use search/v1.0/search instead.
 */
export const postSearch = <ThrowOnError extends boolean = false>(options?: Options<PostSearchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostSearchResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/search',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const getSearchableAssetNameLanguagePage = <ThrowOnError extends boolean = false>(options: Options<GetSearchableAssetNameLanguagePageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSearchableAssetNameLanguagePageResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/searchable-asset-names/{languageId}',
        ...options
    });
};

export const getSearchableAssetNamesPage = <ThrowOnError extends boolean = false>(options?: Options<GetSearchableAssetNamesPageData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetSearchableAssetNamesPageResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/searchable-asset-names',
        ...options
    });
};

export const postSearchableAssetNamesPageExportBatch = <ThrowOnError extends boolean = false>(options?: Options<PostSearchableAssetNamesPageExportBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostSearchableAssetNamesPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/search-experiences-rest/v1.0/searchable-asset-names/export-batch',
        ...options
    });
};