// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';
import type { GetDispatchTriggersPageData, GetDispatchTriggersPageResponses, PostDispatchTriggerData, PostDispatchTriggerResponses, PostDispatchTriggerBatchData, PostDispatchTriggerBatchResponses, PostDispatchTriggerRunData, PostDispatchTriggerRunResponses, PostDispatchTriggersPageExportBatchData, PostDispatchTriggersPageExportBatchResponses } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export const getDispatchTriggersPage = <ThrowOnError extends boolean = false>(options?: Options<GetDispatchTriggersPageData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetDispatchTriggersPageResponses, unknown, ThrowOnError>({
        url: '/o/dispatch-rest/v1.0/dispatch-triggers',
        ...options
    });
};

export const postDispatchTrigger = <ThrowOnError extends boolean = false>(options?: Options<PostDispatchTriggerData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostDispatchTriggerResponses, unknown, ThrowOnError>({
        url: '/o/dispatch-rest/v1.0/dispatch-triggers',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postDispatchTriggerBatch = <ThrowOnError extends boolean = false>(options?: Options<PostDispatchTriggerBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostDispatchTriggerBatchResponses, unknown, ThrowOnError>({
        url: '/o/dispatch-rest/v1.0/dispatch-triggers/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postDispatchTriggerRun = <ThrowOnError extends boolean = false>(options: Options<PostDispatchTriggerRunData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostDispatchTriggerRunResponses, unknown, ThrowOnError>({
        url: '/o/dispatch-rest/v1.0/dispatch-triggers/{dispatchTriggerId}/run',
        ...options
    });
};

export const postDispatchTriggersPageExportBatch = <ThrowOnError extends boolean = false>(options?: Options<PostDispatchTriggersPageExportBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostDispatchTriggersPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/dispatch-rest/v1.0/dispatch-triggers/export-batch',
        ...options
    });
};