// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';
import type { PostApiAudienceManagerPvtAudienceData, PostApiAudienceManagerPvtAudienceResponses, PostApiAudienceManagerPvtAudienceErrors, DeleteApiPriceTableMapperPvtMappingByAudienceIdData, DeleteApiPriceTableMapperPvtMappingByAudienceIdResponses, DeleteApiPriceTableMapperPvtMappingByAudienceIdErrors, GetApiPriceTableMapperPvtMappingByAudienceIdData, GetApiPriceTableMapperPvtMappingByAudienceIdResponses, GetApiPriceTableMapperPvtMappingByAudienceIdErrors, PutApiPriceTableMapperPvtMappingByAudienceIdData, PutApiPriceTableMapperPvtMappingByAudienceIdResponses, PutApiPriceTableMapperPvtMappingByAudienceIdErrors } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Fetch audience
 * Fetch the audience ID based on the provided shopper email.
 *
 * ## Permissions
 *
 * This endpoint does not require [permissions](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3).
 */
export const postApiAudienceManagerPvtAudience = <ThrowOnError extends boolean = false>(options: Options<PostApiAudienceManagerPvtAudienceData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostApiAudienceManagerPvtAudienceResponses, PostApiAudienceManagerPvtAudienceErrors, ThrowOnError>({
        security: [
            {
                name: 'X-VTEX-API-AppKey',
                type: 'apiKey'
            },
            {
                name: 'X-VTEX-API-AppToken',
                type: 'apiKey'
            },
            {
                name: 'VtexIdclientAutCookie',
                type: 'apiKey'
            }
        ],
        url: '/api/audience-manager/pvt/audience',
        ...options
    });
};

/**
 * Delete price table mapping
 * Removes the price table mapping for the provided audience.
 *
 * ## Permissions
 *
 * This endpoint does not require [permissions](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3).
 */
export const deleteApiPriceTableMapperPvtMappingByAudienceId = <ThrowOnError extends boolean = false>(options: Options<DeleteApiPriceTableMapperPvtMappingByAudienceIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteApiPriceTableMapperPvtMappingByAudienceIdResponses, DeleteApiPriceTableMapperPvtMappingByAudienceIdErrors, ThrowOnError>({
        security: [
            {
                name: 'X-VTEX-API-AppKey',
                type: 'apiKey'
            },
            {
                name: 'X-VTEX-API-AppToken',
                type: 'apiKey'
            },
            {
                name: 'VtexIdclientAutCookie',
                type: 'apiKey'
            }
        ],
        url: '/api/price-table-mapper/pvt/mapping/{audienceId}',
        ...options
    });
};

/**
 * Get price table mapping
 * Fetches the price table mapping for a specific audience.
 *
 * ## Permissions
 *
 * This endpoint does not require [permissions](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3).
 */
export const getApiPriceTableMapperPvtMappingByAudienceId = <ThrowOnError extends boolean = false>(options: Options<GetApiPriceTableMapperPvtMappingByAudienceIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetApiPriceTableMapperPvtMappingByAudienceIdResponses, GetApiPriceTableMapperPvtMappingByAudienceIdErrors, ThrowOnError>({
        security: [
            {
                name: 'X-VTEX-API-AppKey',
                type: 'apiKey'
            },
            {
                name: 'X-VTEX-API-AppToken',
                type: 'apiKey'
            },
            {
                name: 'VtexIdclientAutCookie',
                type: 'apiKey'
            }
        ],
        url: '/api/price-table-mapper/pvt/mapping/{audienceId}',
        ...options
    });
};

/**
 * Set price table mapping
 * Sets one or more price table mappings for the specified audience. Each price table ID in the array defines a distinct price table that applies to the audience.
 *
 * ## Permissions
 *
 * This endpoint does not require [permissions](https://help.vtex.com/en/tutorial/license-manager-resources--3q6ztrC8YynQf6rdc6euk3).
 */
export const putApiPriceTableMapperPvtMappingByAudienceId = <ThrowOnError extends boolean = false>(options: Options<PutApiPriceTableMapperPvtMappingByAudienceIdData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutApiPriceTableMapperPvtMappingByAudienceIdResponses, PutApiPriceTableMapperPvtMappingByAudienceIdErrors, ThrowOnError>({
        security: [
            {
                name: 'X-VTEX-API-AppKey',
                type: 'apiKey'
            },
            {
                name: 'X-VTEX-API-AppToken',
                type: 'apiKey'
            },
            {
                name: 'VtexIdclientAutCookie',
                type: 'apiKey'
            }
        ],
        url: '/api/price-table-mapper/pvt/mapping/{audienceId}',
        ...options
    });
};