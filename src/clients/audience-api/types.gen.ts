// This file is auto-generated by @hey-api/openapi-ts

/**
 * Object containing the error message.
 */
export type ResponseError = {
    /**
     * Error message.
     */
    error?: string;
};

/**
 * Type of the content being sent.
 */
export type ContentType = string;

/**
 * Name of your VTEX account.
 */
export type An = string;

/**
 * HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.
 */
export type Accept = string;

/**
 * ID that represents an audience.
 */
export type AudienceId = string;

export type PostApiAudienceManagerPvtAudienceData = {
    /**
     * Object containing information about the shopper's email.
     */
    body?: {
        /**
         * Shopper's email.
         */
        email: string;
    };
    headers: {
        /**
         * Type of the content being sent.
         */
        'Content-Type': string;
        /**
         * HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.
         */
        Accept: string;
    };
    path?: never;
    query?: {
        /**
         * Name of your VTEX account.
         */
        an?: string;
    };
    url: '/api/audience-manager/pvt/audience';
};

export type PostApiAudienceManagerPvtAudienceErrors = {
    /**
     * Object containing the error message. This error occurs when the request body is empty, there are missing properties, or if the account is not identified from the context or query parameters.
     */
    400: {
        /**
         * Error message.
         */
        error?: string;
    };
};

export type PostApiAudienceManagerPvtAudienceError = PostApiAudienceManagerPvtAudienceErrors[keyof PostApiAudienceManagerPvtAudienceErrors];

export type PostApiAudienceManagerPvtAudienceResponses = {
    /**
     * Array of price table IDs.
     */
    200: Array<string>;
};

export type PostApiAudienceManagerPvtAudienceResponse = PostApiAudienceManagerPvtAudienceResponses[keyof PostApiAudienceManagerPvtAudienceResponses];

export type DeleteApiPriceTableMapperPvtMappingByAudienceIdData = {
    body?: never;
    headers: {
        /**
         * Type of the content being sent.
         */
        'Content-Type': string;
        /**
         * HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.
         */
        Accept: string;
    };
    path: {
        /**
         * ID that represents an audience.
         */
        audienceId: string;
    };
    query?: never;
    url: '/api/price-table-mapper/pvt/mapping/{audienceId}';
};

export type DeleteApiPriceTableMapperPvtMappingByAudienceIdErrors = {
    /**
     * Object containing the error message. This error occurs when the `audienceId` is not valid.
     */
    400: {
        /**
         * Error message.
         */
        error?: string;
    };
};

export type DeleteApiPriceTableMapperPvtMappingByAudienceIdError = DeleteApiPriceTableMapperPvtMappingByAudienceIdErrors[keyof DeleteApiPriceTableMapperPvtMappingByAudienceIdErrors];

export type DeleteApiPriceTableMapperPvtMappingByAudienceIdResponses = {
    /**
     * No Content
     */
    204: void;
};

export type DeleteApiPriceTableMapperPvtMappingByAudienceIdResponse = DeleteApiPriceTableMapperPvtMappingByAudienceIdResponses[keyof DeleteApiPriceTableMapperPvtMappingByAudienceIdResponses];

export type GetApiPriceTableMapperPvtMappingByAudienceIdData = {
    body?: never;
    headers: {
        /**
         * Type of the content being sent.
         */
        'Content-Type': string;
        /**
         * HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.
         */
        Accept: string;
    };
    path: {
        /**
         * ID that represents an audience.
         */
        audienceId: string;
    };
    query?: never;
    url: '/api/price-table-mapper/pvt/mapping/{audienceId}';
};

export type GetApiPriceTableMapperPvtMappingByAudienceIdErrors = {
    /**
     * Object containing the error message.
     */
    404: {
        /**
         * Error message.
         */
        error?: string;
    };
};

export type GetApiPriceTableMapperPvtMappingByAudienceIdError = GetApiPriceTableMapperPvtMappingByAudienceIdErrors[keyof GetApiPriceTableMapperPvtMappingByAudienceIdErrors];

export type GetApiPriceTableMapperPvtMappingByAudienceIdResponses = {
    /**
     * Array of price table IDs.
     */
    200: Array<string>;
};

export type GetApiPriceTableMapperPvtMappingByAudienceIdResponse = GetApiPriceTableMapperPvtMappingByAudienceIdResponses[keyof GetApiPriceTableMapperPvtMappingByAudienceIdResponses];

export type PutApiPriceTableMapperPvtMappingByAudienceIdData = {
    /**
     * Array of price table Ids.
     */
    body?: Array<string>;
    headers: {
        /**
         * Type of the content being sent.
         */
        'Content-Type': string;
        /**
         * HTTP Client Negotiation _Accept_ Header. Indicates the types of responses the client can understand.
         */
        Accept: string;
    };
    path: {
        /**
         * ID that represents an audience.
         */
        audienceId: string;
    };
    query?: never;
    url: '/api/price-table-mapper/pvt/mapping/{audienceId}';
};

export type PutApiPriceTableMapperPvtMappingByAudienceIdErrors = {
    /**
     * Object containing the error message. This error occurs when the request body is empty or if the account cannot be retrieved from the request context.
     */
    400: {
        /**
         * Error message.
         */
        error?: string;
    };
};

export type PutApiPriceTableMapperPvtMappingByAudienceIdError = PutApiPriceTableMapperPvtMappingByAudienceIdErrors[keyof PutApiPriceTableMapperPvtMappingByAudienceIdErrors];

export type PutApiPriceTableMapperPvtMappingByAudienceIdResponses = {
    /**
     * No Content
     */
    204: void;
};

export type PutApiPriceTableMapperPvtMappingByAudienceIdResponse = PutApiPriceTableMapperPvtMappingByAudienceIdResponses[keyof PutApiPriceTableMapperPvtMappingByAudienceIdResponses];

export type ClientOptions = {
    baseUrl: 'https://{accountName}.{environment}.com.br' | (string & {});
};