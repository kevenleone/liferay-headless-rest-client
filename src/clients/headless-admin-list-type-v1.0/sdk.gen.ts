// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';
import type { DeleteListTypeDefinitionData, DeleteListTypeDefinitionResponses, GetListTypeDefinitionData, GetListTypeDefinitionResponses, PatchListTypeDefinitionData, PatchListTypeDefinitionResponses, PutListTypeDefinitionData, PutListTypeDefinitionResponses, DeleteListTypeDefinitionBatchData, DeleteListTypeDefinitionBatchResponses, PostListTypeDefinitionBatchData, PostListTypeDefinitionBatchResponses, PutListTypeDefinitionBatchData, PutListTypeDefinitionBatchResponses, GetListTypeDefinitionByExternalReferenceCodeData, GetListTypeDefinitionByExternalReferenceCodeResponses, PutListTypeDefinitionByExternalReferenceCodeData, PutListTypeDefinitionByExternalReferenceCodeResponses, GetListTypeDefinitionsPageData, GetListTypeDefinitionsPageResponses, PostListTypeDefinitionData, PostListTypeDefinitionResponses, PostListTypeDefinitionsPageExportBatchData, PostListTypeDefinitionsPageExportBatchResponses, DeleteListTypeEntryData, DeleteListTypeEntryResponses, GetListTypeEntryData, GetListTypeEntryResponses, PutListTypeEntryData, PutListTypeEntryResponses, DeleteListTypeEntryBatchData, DeleteListTypeEntryBatchResponses, PutListTypeEntryBatchData, PutListTypeEntryBatchResponses, GetListTypeDefinitionByExternalReferenceCodeListTypeEntriesPageData, GetListTypeDefinitionByExternalReferenceCodeListTypeEntriesPageResponses, PostListTypeDefinitionByExternalReferenceCodeListTypeEntryData, PostListTypeDefinitionByExternalReferenceCodeListTypeEntryResponses, GetListTypeDefinitionListTypeEntriesPageData, GetListTypeDefinitionListTypeEntriesPageResponses, PostListTypeDefinitionListTypeEntryData, PostListTypeDefinitionListTypeEntryResponses, PostListTypeDefinitionListTypeEntriesPageExportBatchData, PostListTypeDefinitionListTypeEntriesPageExportBatchResponses, PostListTypeDefinitionListTypeEntryBatchData, PostListTypeDefinitionListTypeEntryBatchResponses } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export const deleteListTypeDefinition = <ThrowOnError extends boolean = false>(options: Options<DeleteListTypeDefinitionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteListTypeDefinitionResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-list-type/v1.0/list-type-definitions/{listTypeDefinitionId}',
        ...options
    });
};

export const getListTypeDefinition = <ThrowOnError extends boolean = false>(options: Options<GetListTypeDefinitionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetListTypeDefinitionResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-list-type/v1.0/list-type-definitions/{listTypeDefinitionId}',
        ...options
    });
};

export const patchListTypeDefinition = <ThrowOnError extends boolean = false>(options: Options<PatchListTypeDefinitionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchListTypeDefinitionResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-list-type/v1.0/list-type-definitions/{listTypeDefinitionId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const putListTypeDefinition = <ThrowOnError extends boolean = false>(options: Options<PutListTypeDefinitionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutListTypeDefinitionResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-list-type/v1.0/list-type-definitions/{listTypeDefinitionId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteListTypeDefinitionBatch = <ThrowOnError extends boolean = false>(options?: Options<DeleteListTypeDefinitionBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteListTypeDefinitionBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-list-type/v1.0/list-type-definitions/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postListTypeDefinitionBatch = <ThrowOnError extends boolean = false>(options?: Options<PostListTypeDefinitionBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostListTypeDefinitionBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-list-type/v1.0/list-type-definitions/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const putListTypeDefinitionBatch = <ThrowOnError extends boolean = false>(options?: Options<PutListTypeDefinitionBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).put<PutListTypeDefinitionBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-list-type/v1.0/list-type-definitions/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const getListTypeDefinitionByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetListTypeDefinitionByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetListTypeDefinitionByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-list-type/v1.0/list-type-definitions/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

export const putListTypeDefinitionByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PutListTypeDefinitionByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutListTypeDefinitionByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-list-type/v1.0/list-type-definitions/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getListTypeDefinitionsPage = <ThrowOnError extends boolean = false>(options?: Options<GetListTypeDefinitionsPageData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetListTypeDefinitionsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-list-type/v1.0/list-type-definitions',
        ...options
    });
};

export const postListTypeDefinition = <ThrowOnError extends boolean = false>(options?: Options<PostListTypeDefinitionData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostListTypeDefinitionResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-list-type/v1.0/list-type-definitions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postListTypeDefinitionsPageExportBatch = <ThrowOnError extends boolean = false>(options?: Options<PostListTypeDefinitionsPageExportBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostListTypeDefinitionsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-list-type/v1.0/list-type-definitions/export-batch',
        ...options
    });
};

export const deleteListTypeEntry = <ThrowOnError extends boolean = false>(options: Options<DeleteListTypeEntryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteListTypeEntryResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-list-type/v1.0/list-type-entries/{listTypeEntryId}',
        ...options
    });
};

export const getListTypeEntry = <ThrowOnError extends boolean = false>(options: Options<GetListTypeEntryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetListTypeEntryResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-list-type/v1.0/list-type-entries/{listTypeEntryId}',
        ...options
    });
};

export const putListTypeEntry = <ThrowOnError extends boolean = false>(options: Options<PutListTypeEntryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutListTypeEntryResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-list-type/v1.0/list-type-entries/{listTypeEntryId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteListTypeEntryBatch = <ThrowOnError extends boolean = false>(options?: Options<DeleteListTypeEntryBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteListTypeEntryBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-list-type/v1.0/list-type-entries/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const putListTypeEntryBatch = <ThrowOnError extends boolean = false>(options?: Options<PutListTypeEntryBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).put<PutListTypeEntryBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-list-type/v1.0/list-type-entries/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const getListTypeDefinitionByExternalReferenceCodeListTypeEntriesPage = <ThrowOnError extends boolean = false>(options: Options<GetListTypeDefinitionByExternalReferenceCodeListTypeEntriesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetListTypeDefinitionByExternalReferenceCodeListTypeEntriesPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-list-type/v1.0/list-type-definitions/by-external-reference-code/{externalReferenceCode}/list-type-entries',
        ...options
    });
};

export const postListTypeDefinitionByExternalReferenceCodeListTypeEntry = <ThrowOnError extends boolean = false>(options: Options<PostListTypeDefinitionByExternalReferenceCodeListTypeEntryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostListTypeDefinitionByExternalReferenceCodeListTypeEntryResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-list-type/v1.0/list-type-definitions/by-external-reference-code/{externalReferenceCode}/list-type-entries',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getListTypeDefinitionListTypeEntriesPage = <ThrowOnError extends boolean = false>(options: Options<GetListTypeDefinitionListTypeEntriesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetListTypeDefinitionListTypeEntriesPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-list-type/v1.0/list-type-definitions/{listTypeDefinitionId}/list-type-entries',
        ...options
    });
};

export const postListTypeDefinitionListTypeEntry = <ThrowOnError extends boolean = false>(options: Options<PostListTypeDefinitionListTypeEntryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostListTypeDefinitionListTypeEntryResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-list-type/v1.0/list-type-definitions/{listTypeDefinitionId}/list-type-entries',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postListTypeDefinitionListTypeEntriesPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostListTypeDefinitionListTypeEntriesPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostListTypeDefinitionListTypeEntriesPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-list-type/v1.0/list-type-definitions/{listTypeDefinitionId}/list-type-entries/export-batch',
        ...options
    });
};

export const postListTypeDefinitionListTypeEntryBatch = <ThrowOnError extends boolean = false>(options: Options<PostListTypeDefinitionListTypeEntryBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostListTypeDefinitionListTypeEntryBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-list-type/v1.0/list-type-definitions/{listTypeDefinitionId}/list-type-entries/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};