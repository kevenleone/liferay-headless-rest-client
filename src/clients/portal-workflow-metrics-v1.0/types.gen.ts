// This file is auto-generated by @hey-api/openapi-ts

export type Assignee = {
    /**
     * The user's ID.
     */
    readonly id?: number;
    /**
     * A relative URL to the user's profile image.
     */
    readonly image?: string;
    /**
     * The user's full name.
     */
    readonly name?: string;
    readonly reviewer?: boolean;
    readonly 'x-class-name'?: string;
};

export type AssigneeMetric = {
    assignee?: Assignee;
    durationTaskAvg?: number;
    onTimeTaskCount?: number;
    overdueTaskCount?: number;
    taskCount?: number;
    readonly 'x-class-name'?: string;
};

export type Facet = {
    facetCriteria?: string;
    facetValues?: Array<FacetValue>;
};

export type FacetValue = {
    numberOfOccurrences?: number;
    term?: string;
};

export type PageAssigneeMetric = {
    items?: Array<AssigneeMetric>;
    lastPage?: number;
    totalCount?: number;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    page?: number;
    facets?: Array<Facet>;
    pageSize?: number;
};

export type AssigneeMetricBulkSelection = {
    completed?: boolean;
    dateEnd?: string;
    dateStart?: string;
    instanceIds?: Array<number>;
    keywords?: string;
    roleIds?: Array<number>;
    taskNames?: Array<string>;
    readonly 'x-class-name'?: string;
};

export type PageAssignee = {
    items?: Array<Assignee>;
    lastPage?: number;
    totalCount?: number;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    page?: number;
    facets?: Array<Facet>;
    pageSize?: number;
};

export type AssigneeBulkSelection = {
    instanceIds?: Array<number>;
    readonly 'x-class-name'?: string;
};

export type Calendar = {
    defaultCalendar?: boolean;
    key?: string;
    title?: string;
    readonly 'x-class-name'?: string;
};

export type PageCalendar = {
    items?: Array<Calendar>;
    lastPage?: number;
    totalCount?: number;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    page?: number;
    facets?: Array<Facet>;
    pageSize?: number;
};

export type Histogram = {
    key?: string;
    value?: number;
    readonly 'x-class-name'?: string;
};

export type HistogramMetric = {
    histograms?: Array<Histogram>;
    value?: number;
    readonly 'x-class-name'?: string;
    unit?: 'Days' | 'Hours' | 'Months' | 'Weeks' | 'Years';
};

export type Index = {
    key?: string;
    readonly label?: string;
    readonly 'x-class-name'?: string;
    group?: 'All' | 'Metric' | 'SLA';
};

export type PageIndex = {
    items?: Array<Index>;
    lastPage?: number;
    totalCount?: number;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    page?: number;
    facets?: Array<Facet>;
    pageSize?: number;
};

export type Creator = {
    /**
     * The user's ID.
     */
    id?: number;
    /**
     * The user's full name.
     */
    name?: string;
    readonly 'x-class-name'?: string;
};

export type Instance = {
    active?: boolean;
    readonly assetTitle?: string;
    assetTitle_i18n?: {
        [key: string]: string;
    };
    readonly assetType?: string;
    assetType_i18n?: {
        [key: string]: string;
    };
    readonly assignees?: Array<Assignee>;
    className?: string;
    classPK?: number;
    completed?: boolean;
    creator?: Creator;
    dateCompletion?: string;
    dateCreated?: string;
    dateModified?: string;
    duration?: number;
    id?: number;
    processId?: number;
    processVersion?: string;
    readonly slaResults?: Array<SlaResult>;
    slaStatus?: 'OnTime' | 'Overdue' | 'Untracked';
    readonly taskNames?: Array<string>;
    transitions?: Array<Transition>;
    readonly 'x-class-name'?: string;
};

export type SlaResult = {
    dateModified?: string;
    dateOverdue?: string;
    id?: number;
    name?: string;
    onTime?: boolean;
    remainingTime?: number;
    readonly 'x-class-name'?: string;
    status?: 'NEW' | 'PAUSED' | 'RUNNING' | 'STOPPED';
};

export type Transition = {
    readonly label?: string;
    readonly name?: string;
    readonly 'x-class-name'?: string;
};

export type PageInstance = {
    items?: Array<Instance>;
    lastPage?: number;
    totalCount?: number;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    page?: number;
    facets?: Array<Facet>;
    pageSize?: number;
};

export type Node = {
    dateCreated?: string;
    dateModified?: string;
    id?: number;
    initial?: boolean;
    readonly label?: string;
    name?: string;
    processId?: number;
    processVersion?: string;
    terminal?: boolean;
    type?: string;
    readonly 'x-class-name'?: string;
};

export type NodeMetric = {
    breachedInstanceCount?: number;
    breachedInstancePercentage?: number;
    durationAvg?: number;
    instanceCount?: number;
    node?: Node;
    onTimeInstanceCount?: number;
    overdueInstanceCount?: number;
    readonly 'x-class-name'?: string;
};

export type PageNodeMetric = {
    items?: Array<NodeMetric>;
    lastPage?: number;
    totalCount?: number;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    page?: number;
    facets?: Array<Facet>;
    pageSize?: number;
};

export type PageNode = {
    items?: Array<Node>;
    lastPage?: number;
    totalCount?: number;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    page?: number;
    facets?: Array<Facet>;
    pageSize?: number;
};

export type Process = {
    active?: boolean;
    dateCreated?: string;
    dateModified?: string;
    description?: string;
    id?: number;
    name?: string;
    readonly title?: string;
    title_i18n?: {
        [key: string]: string;
    };
    version?: string;
    readonly 'x-class-name'?: string;
};

export type ProcessMetric = {
    instanceCount?: number;
    onTimeInstanceCount?: number;
    overdueInstanceCount?: number;
    process?: Process;
    untrackedInstanceCount?: number;
    readonly 'x-class-name'?: string;
};

export type PageProcessMetric = {
    items?: Array<ProcessMetric>;
    lastPage?: number;
    totalCount?: number;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    page?: number;
    facets?: Array<Facet>;
    pageSize?: number;
};

export type PageProcessVersion = {
    items?: Array<ProcessVersion>;
    lastPage?: number;
    totalCount?: number;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    page?: number;
    facets?: Array<Facet>;
    pageSize?: number;
};

export type ProcessVersion = {
    name?: string;
    readonly 'x-class-name'?: string;
};

export type PageReindexStatus = {
    items?: Array<ReindexStatus>;
    lastPage?: number;
    totalCount?: number;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    page?: number;
    facets?: Array<Facet>;
    pageSize?: number;
};

export type ReindexStatus = {
    readonly completionPercentage?: number;
    readonly key?: string;
    readonly 'x-class-name'?: string;
};

export type PageRole = {
    items?: Array<Role>;
    lastPage?: number;
    totalCount?: number;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    page?: number;
    facets?: Array<Facet>;
    pageSize?: number;
};

export type Role = {
    /**
     * The role's ID.
     */
    readonly id?: number;
    /**
     * The role's name.
     */
    readonly name?: string;
    readonly 'x-class-name'?: string;
};

export type NodeKey = {
    executionType?: string;
    id?: string;
    readonly 'x-class-name'?: string;
};

export type PageSla = {
    items?: Array<Sla>;
    lastPage?: number;
    totalCount?: number;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    page?: number;
    facets?: Array<Facet>;
    pageSize?: number;
};

export type PauseNodeKeys = {
    nodeKeys?: Array<NodeKey>;
    status?: number;
    readonly 'x-class-name'?: string;
};

export type Sla = {
    calendarKey?: string;
    dateModified?: string;
    description?: string;
    duration?: number;
    id?: number;
    name?: string;
    pauseNodeKeys?: PauseNodeKeys;
    processId?: number;
    startNodeKeys?: StartNodeKeys;
    status?: number;
    stopNodeKeys?: StopNodeKeys;
    readonly 'x-class-name'?: string;
};

export type StartNodeKeys = {
    nodeKeys?: Array<NodeKey>;
    status?: number;
    readonly 'x-class-name'?: string;
};

export type StopNodeKeys = {
    nodeKeys?: Array<NodeKey>;
    status?: number;
    readonly 'x-class-name'?: string;
};

export type Task = {
    readonly assetTitle?: string;
    assetTitle_i18n?: {
        [key: string]: string;
    };
    readonly assetType?: string;
    assetType_i18n?: {
        [key: string]: string;
    };
    assignee?: Assignee;
    className?: string;
    classPK?: number;
    completed?: boolean;
    completionUserId?: number;
    dateCompletion?: string;
    dateCreated?: string;
    dateModified?: string;
    duration?: number;
    id?: number;
    instanceId?: number;
    readonly label?: string;
    name?: string;
    nodeId?: number;
    processId?: number;
    processVersion?: string;
    readonly 'x-class-name'?: string;
};

export type PageTask = {
    items?: Array<Task>;
    lastPage?: number;
    totalCount?: number;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    page?: number;
    facets?: Array<Facet>;
    pageSize?: number;
};

export type TaskBulkSelection = {
    assigneeIds?: Array<number>;
    instanceIds?: Array<number>;
    processId?: number;
    slaStatuses?: Array<string>;
    taskNames?: Array<string>;
    readonly 'x-class-name'?: string;
};

export type PageTimeRange = {
    items?: Array<TimeRange>;
    lastPage?: number;
    totalCount?: number;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    page?: number;
    facets?: Array<Facet>;
    pageSize?: number;
};

export type TimeRange = {
    dateEnd?: string;
    dateStart?: string;
    defaultTimeRange?: boolean;
    id?: number;
    name?: string;
    readonly 'x-class-name'?: string;
};

export type PostProcessAssigneeMetricsPageData = {
    body?: AssigneeMetricBulkSelection;
    path: {
        processId: string;
    };
    query?: {
        page?: string;
        pageSize?: string;
        sort?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/assignees/metrics';
};

export type PostProcessAssigneeMetricsPageResponses = {
    /**
     * default response
     */
    default: PageAssigneeMetric;
};

export type PostProcessAssigneeMetricsPageResponse = PostProcessAssigneeMetricsPageResponses[keyof PostProcessAssigneeMetricsPageResponses];

export type PostProcessAssigneesPageData = {
    body?: AssigneeBulkSelection;
    path: {
        processId: string;
    };
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/assignees';
};

export type PostProcessAssigneesPageResponses = {
    /**
     * default response
     */
    default: PageAssignee;
};

export type PostProcessAssigneesPageResponse = PostProcessAssigneesPageResponses[keyof PostProcessAssigneesPageResponses];

export type GetCalendarsPageData = {
    body?: never;
    path?: never;
    query?: {
        nestedFields?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/calendars';
};

export type GetCalendarsPageResponses = {
    /**
     * default response
     */
    default: PageCalendar;
};

export type GetCalendarsPageResponse = GetCalendarsPageResponses[keyof GetCalendarsPageResponses];

export type PostCalendarsPageExportBatchData = {
    body?: never;
    path?: never;
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/calendars/export-batch';
};

export type PostCalendarsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetProcessHistogramMetricData = {
    body?: never;
    path: {
        processId: string;
    };
    query?: {
        dateEnd?: string;
        dateStart?: string;
        unit?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/histograms/metrics';
};

export type GetProcessHistogramMetricResponses = {
    /**
     * default response
     */
    default: HistogramMetric;
};

export type GetProcessHistogramMetricResponse = GetProcessHistogramMetricResponses[keyof GetProcessHistogramMetricResponses];

export type GetIndexesPageData = {
    body?: never;
    path?: never;
    query?: {
        nestedFields?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/indexes';
};

export type GetIndexesPageResponses = {
    /**
     * default response
     */
    default: PageIndex;
};

export type GetIndexesPageResponse = GetIndexesPageResponses[keyof GetIndexesPageResponses];

export type PatchIndexRefreshData = {
    body?: Index;
    path?: never;
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/indexes/refresh';
};

export type PatchIndexRefreshResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PatchIndexReindexData = {
    body?: Index;
    path?: never;
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/indexes/reindex';
};

export type PatchIndexReindexResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostIndexesPageExportBatchData = {
    body?: never;
    path?: never;
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/indexes/export-batch';
};

export type PostIndexesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteProcessInstanceData = {
    body?: never;
    path: {
        processId: string;
        instanceId: string;
    };
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/instances/{instanceId}';
};

export type DeleteProcessInstanceResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetProcessInstanceData = {
    body?: never;
    path: {
        processId: string;
        instanceId: string;
    };
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/instances/{instanceId}';
};

export type GetProcessInstanceResponses = {
    /**
     * default response
     */
    default: Instance;
};

export type GetProcessInstanceResponse = GetProcessInstanceResponses[keyof GetProcessInstanceResponses];

export type PatchProcessInstanceData = {
    body?: Instance;
    path: {
        processId: string;
        instanceId: string;
    };
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/instances/{instanceId}';
};

export type PatchProcessInstanceResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetProcessInstancesPageData = {
    body?: never;
    path: {
        processId: string;
    };
    query?: {
        assigneeIds?: string;
        classPKs?: string;
        dateEnd?: string;
        dateStart?: string;
        page?: string;
        pageSize?: string;
        slaStatuses?: string;
        sort?: string;
        statuses?: string;
        taskNames?: string;
        nestedFields?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/instances';
};

export type GetProcessInstancesPageResponses = {
    /**
     * default response
     */
    default: PageInstance;
};

export type GetProcessInstancesPageResponse = GetProcessInstancesPageResponses[keyof GetProcessInstancesPageResponses];

export type PostProcessInstanceData = {
    body?: Instance;
    path: {
        processId: string;
    };
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/instances';
};

export type PostProcessInstanceResponses = {
    /**
     * default response
     */
    default: Instance;
};

export type PostProcessInstanceResponse = PostProcessInstanceResponses[keyof PostProcessInstanceResponses];

export type PatchProcessInstanceCompleteData = {
    body?: Instance;
    path: {
        processId: string;
        instanceId: string;
    };
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/instances/{instanceId}/complete';
};

export type PatchProcessInstanceCompleteResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostProcessInstanceBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        processId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/instances/batch';
};

export type PostProcessInstanceBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostProcessInstancesPageExportBatchData = {
    body?: never;
    path: {
        processId: string;
    };
    query?: {
        assigneeIds?: string;
        classPKs?: string;
        dateEnd?: string;
        dateStart?: string;
        slaStatuses?: string;
        sort?: string;
        statuses?: string;
        taskNames?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/instances/export-batch';
};

export type PostProcessInstancesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetProcessNodeMetricsPageData = {
    body?: never;
    path: {
        processId: string;
    };
    query?: {
        completed?: string;
        dateEnd?: string;
        dateStart?: string;
        key?: string;
        page?: string;
        pageSize?: string;
        processVersion?: string;
        sort?: string;
        nestedFields?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/nodes/metrics';
};

export type GetProcessNodeMetricsPageResponses = {
    /**
     * default response
     */
    default: PageNodeMetric;
};

export type GetProcessNodeMetricsPageResponse = GetProcessNodeMetricsPageResponses[keyof GetProcessNodeMetricsPageResponses];

export type DeleteProcessNodeData = {
    body?: never;
    path: {
        processId: string;
        nodeId: string;
    };
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/nodes/{nodeId}';
};

export type DeleteProcessNodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetProcessNodesPageData = {
    body?: never;
    path: {
        processId: string;
    };
    query?: {
        nestedFields?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/nodes';
};

export type GetProcessNodesPageResponses = {
    /**
     * default response
     */
    default: PageNode;
};

export type GetProcessNodesPageResponse = GetProcessNodesPageResponses[keyof GetProcessNodesPageResponses];

export type PostProcessNodeData = {
    body?: Node;
    path: {
        processId: string;
    };
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/nodes';
};

export type PostProcessNodeResponses = {
    /**
     * default response
     */
    default: Node;
};

export type PostProcessNodeResponse = PostProcessNodeResponses[keyof PostProcessNodeResponses];

export type PostProcessNodeBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        processId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/nodes/batch';
};

export type PostProcessNodeBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostProcessNodesPageExportBatchData = {
    body?: never;
    path: {
        processId: string;
    };
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/nodes/export-batch';
};

export type PostProcessNodesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetProcessMetricData = {
    body?: never;
    path: {
        processId: string;
    };
    query?: {
        completed?: string;
        dateEnd?: string;
        dateStart?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/metrics';
};

export type GetProcessMetricResponses = {
    /**
     * default response
     */
    default: ProcessMetric;
};

export type GetProcessMetricResponse = GetProcessMetricResponses[keyof GetProcessMetricResponses];

export type GetProcessMetricsPageData = {
    body?: never;
    path?: never;
    query?: {
        page?: string;
        pageSize?: string;
        sort?: string;
        title?: string;
        nestedFields?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/metrics';
};

export type GetProcessMetricsPageResponses = {
    /**
     * default response
     */
    default: PageProcessMetric;
};

export type GetProcessMetricsPageResponse = GetProcessMetricsPageResponses[keyof GetProcessMetricsPageResponses];

export type PostProcessMetricsPageExportBatchData = {
    body?: never;
    path?: never;
    query?: {
        sort?: string;
        title?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/metrics/export-batch';
};

export type PostProcessMetricsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteProcessData = {
    body?: never;
    path: {
        processId: string;
    };
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}';
};

export type DeleteProcessResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetProcessData = {
    body?: never;
    path: {
        processId: string;
    };
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}';
};

export type GetProcessResponses = {
    /**
     * default response
     */
    default: Process;
};

export type GetProcessResponse = GetProcessResponses[keyof GetProcessResponses];

export type PutProcessData = {
    body?: Process;
    path: {
        processId: string;
    };
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}';
};

export type PutProcessResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteProcessBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/batch';
};

export type DeleteProcessBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostProcessBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/batch';
};

export type PostProcessBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutProcessBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/batch';
};

export type PutProcessBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetProcessTitleData = {
    body?: never;
    path: {
        processId: string;
    };
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/title';
};

export type GetProcessTitleResponses = {
    /**
     * default response
     */
    default: string;
};

export type GetProcessTitleResponse = GetProcessTitleResponses[keyof GetProcessTitleResponses];

export type PostProcessData = {
    body?: Process;
    path?: never;
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/processes';
};

export type PostProcessResponses = {
    /**
     * default response
     */
    default: Process;
};

export type PostProcessResponse = PostProcessResponses[keyof PostProcessResponses];

export type GetProcessProcessVersionsPageData = {
    body?: never;
    path: {
        processId: string;
    };
    query?: {
        nestedFields?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/process-versions';
};

export type GetProcessProcessVersionsPageResponses = {
    /**
     * default response
     */
    default: PageProcessVersion;
};

export type GetProcessProcessVersionsPageResponse = GetProcessProcessVersionsPageResponses[keyof GetProcessProcessVersionsPageResponses];

export type PostProcessProcessVersionsPageExportBatchData = {
    body?: never;
    path: {
        processId: string;
    };
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/process-versions/export-batch';
};

export type PostProcessProcessVersionsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetReindexStatusesPageData = {
    body?: never;
    path?: never;
    query?: {
        nestedFields?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/reindex/statuses';
};

export type GetReindexStatusesPageResponses = {
    /**
     * default response
     */
    default: PageReindexStatus;
};

export type GetReindexStatusesPageResponse = GetReindexStatusesPageResponses[keyof GetReindexStatusesPageResponses];

export type PostReindexStatusesPageExportBatchData = {
    body?: never;
    path?: never;
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/reindex/statuses/export-batch';
};

export type PostReindexStatusesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetProcessRolesPageData = {
    body?: never;
    path: {
        processId: string;
    };
    query?: {
        completed?: string;
        nestedFields?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/roles';
};

export type GetProcessRolesPageResponses = {
    /**
     * default response
     */
    default: PageRole;
};

export type GetProcessRolesPageResponse = GetProcessRolesPageResponses[keyof GetProcessRolesPageResponses];

export type PostProcessRolesPageExportBatchData = {
    body?: never;
    path: {
        processId: string;
    };
    query?: {
        completed?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/roles/export-batch';
};

export type PostProcessRolesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteSlaData = {
    body?: never;
    path: {
        slaId: string;
    };
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/slas/{slaId}';
};

export type DeleteSlaResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSlaData = {
    body?: never;
    path: {
        slaId: string;
    };
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/slas/{slaId}';
};

export type GetSlaResponses = {
    /**
     * default response
     */
    default: Sla;
};

export type GetSlaResponse = GetSlaResponses[keyof GetSlaResponses];

export type PutSlaData = {
    body?: Sla;
    path: {
        slaId: string;
    };
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/slas/{slaId}';
};

export type PutSlaResponses = {
    /**
     * default response
     */
    default: Sla;
};

export type PutSlaResponse = PutSlaResponses[keyof PutSlaResponses];

export type DeleteSlaBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/slas/batch';
};

export type DeleteSlaBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutSlaBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/slas/batch';
};

export type PutSlaBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetProcessSlasPageData = {
    body?: never;
    path: {
        processId: string;
    };
    query?: {
        page?: string;
        pageSize?: string;
        status?: string;
        nestedFields?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/slas';
};

export type GetProcessSlasPageResponses = {
    /**
     * default response
     */
    default: PageSla;
};

export type GetProcessSlasPageResponse = GetProcessSlasPageResponses[keyof GetProcessSlasPageResponses];

export type PostProcessSlaData = {
    body?: Sla;
    path: {
        processId: string;
    };
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/slas';
};

export type PostProcessSlaResponses = {
    /**
     * default response
     */
    default: Sla;
};

export type PostProcessSlaResponse = PostProcessSlaResponses[keyof PostProcessSlaResponses];

export type PostProcessSlaBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        processId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/slas/batch';
};

export type PostProcessSlaBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostProcessSlasPageExportBatchData = {
    body?: never;
    path: {
        processId: string;
    };
    query?: {
        status?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/slas/export-batch';
};

export type PostProcessSlasPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetProcessLastSlaResultData = {
    body?: never;
    path: {
        processId: string;
    };
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/last-sla-result';
};

export type GetProcessLastSlaResultResponses = {
    /**
     * default response
     */
    default: SlaResult;
};

export type GetProcessLastSlaResultResponse = GetProcessLastSlaResultResponses[keyof GetProcessLastSlaResultResponses];

export type DeleteProcessTaskData = {
    body?: never;
    path: {
        processId: string;
        taskId: string;
    };
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/tasks/{taskId}';
};

export type DeleteProcessTaskResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetProcessTaskData = {
    body?: never;
    path: {
        processId: string;
        taskId: string;
    };
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/tasks/{taskId}';
};

export type GetProcessTaskResponses = {
    /**
     * default response
     */
    default: Task;
};

export type GetProcessTaskResponse = GetProcessTaskResponses[keyof GetProcessTaskResponses];

export type PatchProcessTaskData = {
    body?: Task;
    path: {
        processId: string;
        taskId: string;
    };
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/tasks/{taskId}';
};

export type PatchProcessTaskResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetProcessTasksPageData = {
    body?: never;
    path: {
        processId: string;
    };
    query?: {
        nestedFields?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/tasks';
};

export type GetProcessTasksPageResponses = {
    /**
     * default response
     */
    default: PageTask;
};

export type GetProcessTasksPageResponse = GetProcessTasksPageResponses[keyof GetProcessTasksPageResponses];

export type PostProcessTaskData = {
    body?: Task;
    path: {
        processId: string;
    };
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/tasks';
};

export type PostProcessTaskResponses = {
    /**
     * default response
     */
    default: Task;
};

export type PostProcessTaskResponse = PostProcessTaskResponses[keyof PostProcessTaskResponses];

export type PatchProcessTaskCompleteData = {
    body?: Task;
    path: {
        processId: string;
        taskId: string;
    };
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/tasks/{taskId}/complete';
};

export type PatchProcessTaskCompleteResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostProcessTaskBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        processId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/tasks/batch';
};

export type PostProcessTaskBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostProcessTasksPageExportBatchData = {
    body?: never;
    path: {
        processId: string;
    };
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/tasks/export-batch';
};

export type PostProcessTasksPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostTasksPageData = {
    body?: TaskBulkSelection;
    path?: never;
    query?: {
        page?: string;
        pageSize?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/tasks';
};

export type PostTasksPageResponses = {
    /**
     * default response
     */
    default: PageTask;
};

export type PostTasksPageResponse = PostTasksPageResponses[keyof PostTasksPageResponses];

export type GetTimeRangesPageData = {
    body?: never;
    path?: never;
    query?: {
        nestedFields?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/time-ranges';
};

export type GetTimeRangesPageResponses = {
    /**
     * default response
     */
    default: PageTimeRange;
};

export type GetTimeRangesPageResponse = GetTimeRangesPageResponses[keyof GetTimeRangesPageResponses];

export type PostTimeRangesPageExportBatchData = {
    body?: never;
    path?: never;
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/time-ranges/export-batch';
};

export type PostTimeRangesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type ClientOptions = {
    baseUrl: 'http://localhost:8080' | (string & {});
};