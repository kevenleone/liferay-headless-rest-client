// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';
import type { DeleteCtCollectionData, DeleteCtCollectionResponses, GetCtCollectionData, GetCtCollectionResponses, PatchCtCollectionData, PatchCtCollectionResponses, PutCtCollectionData, PutCtCollectionResponses, DeleteCtCollectionBatchData, DeleteCtCollectionBatchResponses, PostCtCollectionBatchData, PostCtCollectionBatchResponses, PutCtCollectionBatchData, PutCtCollectionBatchResponses, DeleteCtCollectionByExternalReferenceCodeData, DeleteCtCollectionByExternalReferenceCodeResponses, GetCtCollectionByExternalReferenceCodeData, GetCtCollectionByExternalReferenceCodeResponses, PatchCtCollectionByExternalReferenceCodeData, PatchCtCollectionByExternalReferenceCodeResponses, GetCtCollectionByExternalReferenceCodeShareLinkData, GetCtCollectionByExternalReferenceCodeShareLinkResponses, GetCtCollectionShareLinkData, GetCtCollectionShareLinkResponses, GetCtCollectionsPageData, GetCtCollectionsPageResponses, PostCtCollectionData, PostCtCollectionResponses, PostCtCollectionByExternalReferenceCodePublishData, PostCtCollectionByExternalReferenceCodePublishResponses, PostCtCollectionByExternalReferenceCodeSchedulePublishData, PostCtCollectionByExternalReferenceCodeSchedulePublishResponses, PostCtCollectionCheckoutData, PostCtCollectionCheckoutResponses, PostCtCollectionPublishData, PostCtCollectionPublishResponses, PostCtCollectionSchedulePublishData, PostCtCollectionSchedulePublishResponses, PostCtCollectionsPageExportBatchData, PostCtCollectionsPageExportBatchResponses, GetCtEntriesHistoryPageData, GetCtEntriesHistoryPageResponses, GetCtEntryData, GetCtEntryResponses, GetCtCollectionCtEntriesPageData, GetCtCollectionCtEntriesPageResponses, GetCtCollectionCtEntryByModelClassNameByModelClassPkModelClassPkData, GetCtCollectionCtEntryByModelClassNameByModelClassPkModelClassPkResponses, DeleteCtProcessData, DeleteCtProcessResponses, GetCtProcessData, GetCtProcessResponses, DeleteCtProcessBatchData, DeleteCtProcessBatchResponses, GetCtProcessesPageData, GetCtProcessesPageResponses, PostCtProcessRevertData, PostCtProcessRevertResponses, PostCtProcessesPageExportBatchData, PostCtProcessesPageExportBatchResponses, DeleteCtRemoteData, DeleteCtRemoteResponses, GetCtRemoteData, GetCtRemoteResponses, PatchCtRemoteData, PatchCtRemoteResponses, PutCtRemoteData, PutCtRemoteResponses, DeleteCtRemoteBatchData, DeleteCtRemoteBatchResponses, PostCtRemoteBatchData, PostCtRemoteBatchResponses, PutCtRemoteBatchData, PutCtRemoteBatchResponses, GetCtRemotesPageData, GetCtRemotesPageResponses, PostCtRemoteData, PostCtRemoteResponses, PostCtRemotesPageExportBatchData, PostCtRemotesPageExportBatchResponses } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export const deleteCtCollection = <ThrowOnError extends boolean = false>(options: Options<DeleteCtCollectionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteCtCollectionResponses, unknown, ThrowOnError>({
        url: '/o/change-tracking-rest/v1.0/ct-collections/{ctCollectionId}',
        ...options
    });
};

export const getCtCollection = <ThrowOnError extends boolean = false>(options: Options<GetCtCollectionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCtCollectionResponses, unknown, ThrowOnError>({
        url: '/o/change-tracking-rest/v1.0/ct-collections/{ctCollectionId}',
        ...options
    });
};

export const patchCtCollection = <ThrowOnError extends boolean = false>(options: Options<PatchCtCollectionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchCtCollectionResponses, unknown, ThrowOnError>({
        url: '/o/change-tracking-rest/v1.0/ct-collections/{ctCollectionId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const putCtCollection = <ThrowOnError extends boolean = false>(options: Options<PutCtCollectionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutCtCollectionResponses, unknown, ThrowOnError>({
        url: '/o/change-tracking-rest/v1.0/ct-collections/{ctCollectionId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteCtCollectionBatch = <ThrowOnError extends boolean = false>(options?: Options<DeleteCtCollectionBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteCtCollectionBatchResponses, unknown, ThrowOnError>({
        url: '/o/change-tracking-rest/v1.0/ct-collections/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postCtCollectionBatch = <ThrowOnError extends boolean = false>(options?: Options<PostCtCollectionBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostCtCollectionBatchResponses, unknown, ThrowOnError>({
        url: '/o/change-tracking-rest/v1.0/ct-collections/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const putCtCollectionBatch = <ThrowOnError extends boolean = false>(options?: Options<PutCtCollectionBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).put<PutCtCollectionBatchResponses, unknown, ThrowOnError>({
        url: '/o/change-tracking-rest/v1.0/ct-collections/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const deleteCtCollectionByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteCtCollectionByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteCtCollectionByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/change-tracking-rest/v1.0/ct-collections/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

export const getCtCollectionByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetCtCollectionByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCtCollectionByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/change-tracking-rest/v1.0/ct-collections/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

export const patchCtCollectionByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PatchCtCollectionByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchCtCollectionByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/change-tracking-rest/v1.0/ct-collections/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getCtCollectionByExternalReferenceCodeShareLink = <ThrowOnError extends boolean = false>(options: Options<GetCtCollectionByExternalReferenceCodeShareLinkData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCtCollectionByExternalReferenceCodeShareLinkResponses, unknown, ThrowOnError>({
        url: '/o/change-tracking-rest/v1.0/ct-collections/by-external-reference-code/{externalReferenceCode}/share-link',
        ...options
    });
};

export const getCtCollectionShareLink = <ThrowOnError extends boolean = false>(options: Options<GetCtCollectionShareLinkData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCtCollectionShareLinkResponses, unknown, ThrowOnError>({
        url: '/o/change-tracking-rest/v1.0/ct-collections/b{ctCollectionId}/share-link',
        ...options
    });
};

export const getCtCollectionsPage = <ThrowOnError extends boolean = false>(options?: Options<GetCtCollectionsPageData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetCtCollectionsPageResponses, unknown, ThrowOnError>({
        url: '/o/change-tracking-rest/v1.0/ct-collections',
        ...options
    });
};

export const postCtCollection = <ThrowOnError extends boolean = false>(options?: Options<PostCtCollectionData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostCtCollectionResponses, unknown, ThrowOnError>({
        url: '/o/change-tracking-rest/v1.0/ct-collections',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postCtCollectionByExternalReferenceCodePublish = <ThrowOnError extends boolean = false>(options: Options<PostCtCollectionByExternalReferenceCodePublishData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostCtCollectionByExternalReferenceCodePublishResponses, unknown, ThrowOnError>({
        url: '/o/change-tracking-rest/v1.0/ct-collections/by-external-reference-code/{externalReferenceCode}/publish',
        ...options
    });
};

export const postCtCollectionByExternalReferenceCodeSchedulePublish = <ThrowOnError extends boolean = false>(options: Options<PostCtCollectionByExternalReferenceCodeSchedulePublishData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostCtCollectionByExternalReferenceCodeSchedulePublishResponses, unknown, ThrowOnError>({
        url: '/o/change-tracking-rest/v1.0/ct-collections/by-external-reference-code/{externalReferenceCode}/schedule-publish',
        ...options
    });
};

export const postCtCollectionCheckout = <ThrowOnError extends boolean = false>(options: Options<PostCtCollectionCheckoutData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostCtCollectionCheckoutResponses, unknown, ThrowOnError>({
        url: '/o/change-tracking-rest/v1.0/ct-collections/{ctCollectionId}/checkout',
        ...options
    });
};

export const postCtCollectionPublish = <ThrowOnError extends boolean = false>(options: Options<PostCtCollectionPublishData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostCtCollectionPublishResponses, unknown, ThrowOnError>({
        url: '/o/change-tracking-rest/v1.0/ct-collections/{ctCollectionId}/publish',
        ...options
    });
};

export const postCtCollectionSchedulePublish = <ThrowOnError extends boolean = false>(options: Options<PostCtCollectionSchedulePublishData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostCtCollectionSchedulePublishResponses, unknown, ThrowOnError>({
        url: '/o/change-tracking-rest/v1.0/ct-collections/{ctCollectionId}/schedule-publish',
        ...options
    });
};

export const postCtCollectionsPageExportBatch = <ThrowOnError extends boolean = false>(options?: Options<PostCtCollectionsPageExportBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostCtCollectionsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/change-tracking-rest/v1.0/ct-collections/export-batch',
        ...options
    });
};

export const getCtEntriesHistoryPage = <ThrowOnError extends boolean = false>(options?: Options<GetCtEntriesHistoryPageData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetCtEntriesHistoryPageResponses, unknown, ThrowOnError>({
        url: '/o/change-tracking-rest/v1.0/ct-entries/history',
        ...options
    });
};

export const getCtEntry = <ThrowOnError extends boolean = false>(options: Options<GetCtEntryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCtEntryResponses, unknown, ThrowOnError>({
        url: '/o/change-tracking-rest/v1.0/ct-entries/{ctEntryId}',
        ...options
    });
};

export const getCtCollectionCtEntriesPage = <ThrowOnError extends boolean = false>(options: Options<GetCtCollectionCtEntriesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCtCollectionCtEntriesPageResponses, unknown, ThrowOnError>({
        url: '/o/change-tracking-rest/v1.0/ct-collections/{ctCollectionId}/ct-entries',
        ...options
    });
};

export const getCtCollectionCtEntryByModelClassNameByModelClassPkModelClassPk = <ThrowOnError extends boolean = false>(options: Options<GetCtCollectionCtEntryByModelClassNameByModelClassPkModelClassPkData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCtCollectionCtEntryByModelClassNameByModelClassPkModelClassPkResponses, unknown, ThrowOnError>({
        url: '/o/change-tracking-rest/v1.0/ct-collections/{ctCollectionId}/ct-entries/by-model-class-name-id/{modelClassNameId}/by-model-class-pk/{modelClassPK}',
        ...options
    });
};

export const deleteCtProcess = <ThrowOnError extends boolean = false>(options: Options<DeleteCtProcessData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteCtProcessResponses, unknown, ThrowOnError>({
        url: '/o/change-tracking-rest/v1.0/ct-processes/{ctProcessId}',
        ...options
    });
};

export const getCtProcess = <ThrowOnError extends boolean = false>(options: Options<GetCtProcessData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCtProcessResponses, unknown, ThrowOnError>({
        url: '/o/change-tracking-rest/v1.0/ct-processes/{ctProcessId}',
        ...options
    });
};

export const deleteCtProcessBatch = <ThrowOnError extends boolean = false>(options?: Options<DeleteCtProcessBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteCtProcessBatchResponses, unknown, ThrowOnError>({
        url: '/o/change-tracking-rest/v1.0/ct-processes/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const getCtProcessesPage = <ThrowOnError extends boolean = false>(options?: Options<GetCtProcessesPageData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetCtProcessesPageResponses, unknown, ThrowOnError>({
        url: '/o/change-tracking-rest/v1.0/ct-processes',
        ...options
    });
};

export const postCtProcessRevert = <ThrowOnError extends boolean = false>(options: Options<PostCtProcessRevertData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostCtProcessRevertResponses, unknown, ThrowOnError>({
        url: '/o/change-tracking-rest/v1.0/ct-processes/{ctProcessId}/revert',
        ...options
    });
};

export const postCtProcessesPageExportBatch = <ThrowOnError extends boolean = false>(options?: Options<PostCtProcessesPageExportBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostCtProcessesPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/change-tracking-rest/v1.0/ct-processes/export-batch',
        ...options
    });
};

export const deleteCtRemote = <ThrowOnError extends boolean = false>(options: Options<DeleteCtRemoteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteCtRemoteResponses, unknown, ThrowOnError>({
        url: '/o/change-tracking-rest/v1.0/ct-remotes/{id}',
        ...options
    });
};

export const getCtRemote = <ThrowOnError extends boolean = false>(options: Options<GetCtRemoteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCtRemoteResponses, unknown, ThrowOnError>({
        url: '/o/change-tracking-rest/v1.0/ct-remotes/{id}',
        ...options
    });
};

export const patchCtRemote = <ThrowOnError extends boolean = false>(options: Options<PatchCtRemoteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchCtRemoteResponses, unknown, ThrowOnError>({
        url: '/o/change-tracking-rest/v1.0/ct-remotes/{id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const putCtRemote = <ThrowOnError extends boolean = false>(options: Options<PutCtRemoteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutCtRemoteResponses, unknown, ThrowOnError>({
        url: '/o/change-tracking-rest/v1.0/ct-remotes/{id}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteCtRemoteBatch = <ThrowOnError extends boolean = false>(options?: Options<DeleteCtRemoteBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteCtRemoteBatchResponses, unknown, ThrowOnError>({
        url: '/o/change-tracking-rest/v1.0/ct-remotes/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postCtRemoteBatch = <ThrowOnError extends boolean = false>(options?: Options<PostCtRemoteBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostCtRemoteBatchResponses, unknown, ThrowOnError>({
        url: '/o/change-tracking-rest/v1.0/ct-remotes/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const putCtRemoteBatch = <ThrowOnError extends boolean = false>(options?: Options<PutCtRemoteBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).put<PutCtRemoteBatchResponses, unknown, ThrowOnError>({
        url: '/o/change-tracking-rest/v1.0/ct-remotes/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const getCtRemotesPage = <ThrowOnError extends boolean = false>(options?: Options<GetCtRemotesPageData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetCtRemotesPageResponses, unknown, ThrowOnError>({
        url: '/o/change-tracking-rest/v1.0/ct-remotes',
        ...options
    });
};

export const postCtRemote = <ThrowOnError extends boolean = false>(options?: Options<PostCtRemoteData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostCtRemoteResponses, unknown, ThrowOnError>({
        url: '/o/change-tracking-rest/v1.0/ct-remotes',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postCtRemotesPageExportBatch = <ThrowOnError extends boolean = false>(options?: Options<PostCtRemotesPageExportBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostCtRemotesPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/change-tracking-rest/v1.0/ct-remotes/export-batch',
        ...options
    });
};