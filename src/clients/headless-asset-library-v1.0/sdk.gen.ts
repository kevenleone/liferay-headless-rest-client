// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';
import type { DeleteAssetLibraryData, DeleteAssetLibraryResponses, GetAssetLibraryData, GetAssetLibraryResponses, PatchAssetLibraryData, PatchAssetLibraryResponses, DeleteAssetLibraryByExternalReferenceCodeData, DeleteAssetLibraryByExternalReferenceCodeResponses, GetAssetLibraryByExternalReferenceCodeData, GetAssetLibraryByExternalReferenceCodeResponses, PatchAssetLibraryByExternalReferenceCodeData, PatchAssetLibraryByExternalReferenceCodeResponses, PutAssetLibraryByExternalReferenceCodeData, PutAssetLibraryByExternalReferenceCodeResponses, GetAssetLibrariesPageData, GetAssetLibrariesPageResponses, PostAssetLibraryData, PostAssetLibraryResponses, DeleteAssetLibraryByExternalReferenceCodeAssetLibraryExternalReferenceCodeSiteByExternalReferenceCodeSiteExternalReferenceCodeData, DeleteAssetLibraryByExternalReferenceCodeAssetLibraryExternalReferenceCodeSiteByExternalReferenceCodeSiteExternalReferenceCodeResponses, GetAssetLibraryByExternalReferenceCodeAssetLibraryExternalReferenceCodeSiteByExternalReferenceCodeSiteExternalReferenceCodeData, GetAssetLibraryByExternalReferenceCodeAssetLibraryExternalReferenceCodeSiteByExternalReferenceCodeSiteExternalReferenceCodeResponses, PutAssetLibraryByExternalReferenceCodeAssetLibraryExternalReferenceCodeSiteByExternalReferenceCodeSiteExternalReferenceCodeData, PutAssetLibraryByExternalReferenceCodeAssetLibraryExternalReferenceCodeSiteByExternalReferenceCodeSiteExternalReferenceCodeResponses, DeleteAssetLibrarySiteData, DeleteAssetLibrarySiteResponses, GetAssetLibrarySiteData, GetAssetLibrarySiteResponses, PutAssetLibrarySiteData, PutAssetLibrarySiteResponses, GetAssetLibraryByExternalReferenceCodeSitesPageData, GetAssetLibraryByExternalReferenceCodeSitesPageResponses, GetAssetLibrarySitesPageData, GetAssetLibrarySitesPageResponses, DeleteAssetLibraryByExternalReferenceCodeAssetLibraryExternalReferenceCodeUserAccountByExternalReferenceCodeUserExternalReferenceCodeData, DeleteAssetLibraryByExternalReferenceCodeAssetLibraryExternalReferenceCodeUserAccountByExternalReferenceCodeUserExternalReferenceCodeResponses, GetAssetLibraryByExternalReferenceCodeAssetLibraryExternalReferenceCodeUserAccountByExternalReferenceCodeUserExternalReferenceCodeData, GetAssetLibraryByExternalReferenceCodeAssetLibraryExternalReferenceCodeUserAccountByExternalReferenceCodeUserExternalReferenceCodeResponses, PutAssetLibraryByExternalReferenceCodeAssetLibraryExternalReferenceCodeUserAccountByExternalReferenceCodeUserExternalReferenceCodeData, PutAssetLibraryByExternalReferenceCodeAssetLibraryExternalReferenceCodeUserAccountByExternalReferenceCodeUserExternalReferenceCodeResponses, DeleteAssetLibraryUserAccountData, DeleteAssetLibraryUserAccountResponses, GetAssetLibraryUserAccountData, GetAssetLibraryUserAccountResponses, PutAssetLibraryUserAccountData, PutAssetLibraryUserAccountResponses, GetAssetLibraryByExternalReferenceCodeUserAccountsPageData, GetAssetLibraryByExternalReferenceCodeUserAccountsPageResponses, GetAssetLibraryUserAccountsPageData, GetAssetLibraryUserAccountsPageResponses, DeleteAssetLibraryByExternalReferenceCodeAssetLibraryExternalReferenceCodeUserGroupByExternalReferenceCodeUserGroupExternalReferenceCodeData, DeleteAssetLibraryByExternalReferenceCodeAssetLibraryExternalReferenceCodeUserGroupByExternalReferenceCodeUserGroupExternalReferenceCodeResponses, GetAssetLibraryByExternalReferenceCodeAssetLibraryExternalReferenceCodeUserGroupByExternalReferenceCodeUserGroupExternalReferenceCodeData, GetAssetLibraryByExternalReferenceCodeAssetLibraryExternalReferenceCodeUserGroupByExternalReferenceCodeUserGroupExternalReferenceCodeResponses, PutAssetLibraryByExternalReferenceCodeAssetLibraryExternalReferenceCodeUserGroupByExternalReferenceCodeUserGroupExternalReferenceCodeData, PutAssetLibraryByExternalReferenceCodeAssetLibraryExternalReferenceCodeUserGroupByExternalReferenceCodeUserGroupExternalReferenceCodeResponses, DeleteAssetLibraryUserGroupData, DeleteAssetLibraryUserGroupResponses, GetAssetLibraryUserGroupData, GetAssetLibraryUserGroupResponses, PutAssetLibraryUserGroupData, PutAssetLibraryUserGroupResponses, GetAssetLibraryByExternalReferenceCodeUserGroupsPageData, GetAssetLibraryByExternalReferenceCodeUserGroupsPageResponses, GetAssetLibraryUserGroupsPageData, GetAssetLibraryUserGroupsPageResponses } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Deletes the asset library.
 */
export const deleteAssetLibrary = <ThrowOnError extends boolean = false>(options: Options<DeleteAssetLibraryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteAssetLibraryResponses, unknown, ThrowOnError>({
        url: '/o/headless-asset-library/v1.0/asset-libraries/{assetLibraryId}',
        ...options
    });
};

/**
 * Retrieves the asset library.
 */
export const getAssetLibrary = <ThrowOnError extends boolean = false>(options: Options<GetAssetLibraryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAssetLibraryResponses, unknown, ThrowOnError>({
        url: '/o/headless-asset-library/v1.0/asset-libraries/{assetLibraryId}',
        ...options
    });
};

/**
 * Updates the asset library using only the fields received in the request body. Any other fields are left untouched.
 */
export const patchAssetLibrary = <ThrowOnError extends boolean = false>(options: Options<PatchAssetLibraryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchAssetLibraryResponses, unknown, ThrowOnError>({
        url: '/o/headless-asset-library/v1.0/asset-libraries/{assetLibraryId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Deletes the asset library by external reference code.
 */
export const deleteAssetLibraryByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteAssetLibraryByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteAssetLibraryByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-asset-library/v1.0/asset-libraries/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves the asset library by external reference code.
 */
export const getAssetLibraryByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetAssetLibraryByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAssetLibraryByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-asset-library/v1.0/asset-libraries/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Updates the asset library using only the fields received in the request body with the given external reference code. Any other fields are left untouched.
 */
export const patchAssetLibraryByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PatchAssetLibraryByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchAssetLibraryByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-asset-library/v1.0/asset-libraries/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Replaces the asset library with information sent in the request body with the given external reference code. Any missing fields are deleted unless they are required.
 */
export const putAssetLibraryByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PutAssetLibraryByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutAssetLibraryByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-asset-library/v1.0/asset-libraries/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the asset libraries. Results can be paginated, filtered, searched, and sorted.
 */
export const getAssetLibrariesPage = <ThrowOnError extends boolean = false>(options?: Options<GetAssetLibrariesPageData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetAssetLibrariesPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-asset-library/v1.0/asset-libraries',
        ...options
    });
};

/**
 * Adds a new asset library
 */
export const postAssetLibrary = <ThrowOnError extends boolean = false>(options?: Options<PostAssetLibraryData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostAssetLibraryResponses, unknown, ThrowOnError>({
        url: '/o/headless-asset-library/v1.0/asset-libraries',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Disconnects the site with the given external reference code from the asset library.
 */
export const deleteAssetLibraryByExternalReferenceCodeAssetLibraryExternalReferenceCodeSiteByExternalReferenceCodeSiteExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteAssetLibraryByExternalReferenceCodeAssetLibraryExternalReferenceCodeSiteByExternalReferenceCodeSiteExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteAssetLibraryByExternalReferenceCodeAssetLibraryExternalReferenceCodeSiteByExternalReferenceCodeSiteExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-asset-library/v1.0/asset-libraries/by-external-reference-code/{assetLibraryExternalReferenceCode}/sites/by-external-reference-code/{siteExternalReferenceCode}',
        ...options
    });
};

/**
 * Gets a site from the asset library using the provided external reference codes.
 */
export const getAssetLibraryByExternalReferenceCodeAssetLibraryExternalReferenceCodeSiteByExternalReferenceCodeSiteExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetAssetLibraryByExternalReferenceCodeAssetLibraryExternalReferenceCodeSiteByExternalReferenceCodeSiteExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAssetLibraryByExternalReferenceCodeAssetLibraryExternalReferenceCodeSiteByExternalReferenceCodeSiteExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-asset-library/v1.0/asset-libraries/by-external-reference-code/{assetLibraryExternalReferenceCode}/sites/by-external-reference-code/{siteExternalReferenceCode}',
        ...options
    });
};

/**
 * Connects the site with the given external reference code to the asset library.
 */
export const putAssetLibraryByExternalReferenceCodeAssetLibraryExternalReferenceCodeSiteByExternalReferenceCodeSiteExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PutAssetLibraryByExternalReferenceCodeAssetLibraryExternalReferenceCodeSiteByExternalReferenceCodeSiteExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutAssetLibraryByExternalReferenceCodeAssetLibraryExternalReferenceCodeSiteByExternalReferenceCodeSiteExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-asset-library/v1.0/asset-libraries/by-external-reference-code/{assetLibraryExternalReferenceCode}/sites/by-external-reference-code/{siteExternalReferenceCode}',
        ...options
    });
};

/**
 * Disconnects the site from the asset library.
 */
export const deleteAssetLibrarySite = <ThrowOnError extends boolean = false>(options: Options<DeleteAssetLibrarySiteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteAssetLibrarySiteResponses, unknown, ThrowOnError>({
        url: '/o/headless-asset-library/v1.0/asset-libraries/{assetLibraryId}/sites/{siteId}',
        ...options
    });
};

/**
 * Gets a site connected to the asset library.
 */
export const getAssetLibrarySite = <ThrowOnError extends boolean = false>(options: Options<GetAssetLibrarySiteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAssetLibrarySiteResponses, unknown, ThrowOnError>({
        url: '/o/headless-asset-library/v1.0/asset-libraries/{assetLibraryId}/sites/{siteId}',
        ...options
    });
};

/**
 * Connects the site to the asset library.
 */
export const putAssetLibrarySite = <ThrowOnError extends boolean = false>(options: Options<PutAssetLibrarySiteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutAssetLibrarySiteResponses, unknown, ThrowOnError>({
        url: '/o/headless-asset-library/v1.0/asset-libraries/{assetLibraryId}/sites/{siteId}',
        ...options
    });
};

/**
 * Get the asset library's with the provided external reference code connected sites. Results can be paginated.
 */
export const getAssetLibraryByExternalReferenceCodeSitesPage = <ThrowOnError extends boolean = false>(options: Options<GetAssetLibraryByExternalReferenceCodeSitesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAssetLibraryByExternalReferenceCodeSitesPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-asset-library/v1.0/asset-libraries/by-external-reference-code/{externalReferenceCode}/sites',
        ...options
    });
};

/**
 * Get the asset library's connected sites. Results can be paginated.
 */
export const getAssetLibrarySitesPage = <ThrowOnError extends boolean = false>(options: Options<GetAssetLibrarySitesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAssetLibrarySitesPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-asset-library/v1.0/asset-libraries/{assetLibraryId}/sites',
        ...options
    });
};

/**
 * Removes the user from the asset library using the provided external reference codes.
 */
export const deleteAssetLibraryByExternalReferenceCodeAssetLibraryExternalReferenceCodeUserAccountByExternalReferenceCodeUserExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteAssetLibraryByExternalReferenceCodeAssetLibraryExternalReferenceCodeUserAccountByExternalReferenceCodeUserExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteAssetLibraryByExternalReferenceCodeAssetLibraryExternalReferenceCodeUserAccountByExternalReferenceCodeUserExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-asset-library/v1.0/asset-libraries/by-external-reference-code/{assetLibraryExternalReferenceCode}/user-accounts/by-external-reference-code/{userExternalReferenceCode}',
        ...options
    });
};

/**
 * Gets a user connected to the asset library using the provided external reference codes.
 */
export const getAssetLibraryByExternalReferenceCodeAssetLibraryExternalReferenceCodeUserAccountByExternalReferenceCodeUserExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetAssetLibraryByExternalReferenceCodeAssetLibraryExternalReferenceCodeUserAccountByExternalReferenceCodeUserExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAssetLibraryByExternalReferenceCodeAssetLibraryExternalReferenceCodeUserAccountByExternalReferenceCodeUserExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-asset-library/v1.0/asset-libraries/by-external-reference-code/{assetLibraryExternalReferenceCode}/user-accounts/by-external-reference-code/{userExternalReferenceCode}',
        ...options
    });
};

/**
 * Adds the user to the asset library using the provided external reference codes.
 */
export const putAssetLibraryByExternalReferenceCodeAssetLibraryExternalReferenceCodeUserAccountByExternalReferenceCodeUserExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PutAssetLibraryByExternalReferenceCodeAssetLibraryExternalReferenceCodeUserAccountByExternalReferenceCodeUserExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutAssetLibraryByExternalReferenceCodeAssetLibraryExternalReferenceCodeUserAccountByExternalReferenceCodeUserExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-asset-library/v1.0/asset-libraries/by-external-reference-code/{assetLibraryExternalReferenceCode}/user-accounts/by-external-reference-code/{userExternalReferenceCode}',
        ...options
    });
};

/**
 * Removes the user from the asset library.
 */
export const deleteAssetLibraryUserAccount = <ThrowOnError extends boolean = false>(options: Options<DeleteAssetLibraryUserAccountData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteAssetLibraryUserAccountResponses, unknown, ThrowOnError>({
        url: '/o/headless-asset-library/v1.0/asset-libraries/{assetLibraryId}/user-accounts/{userId}',
        ...options
    });
};

/**
 * Gets a user connected to the asset library.
 */
export const getAssetLibraryUserAccount = <ThrowOnError extends boolean = false>(options: Options<GetAssetLibraryUserAccountData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAssetLibraryUserAccountResponses, unknown, ThrowOnError>({
        url: '/o/headless-asset-library/v1.0/asset-libraries/{assetLibraryId}/user-accounts/{userId}',
        ...options
    });
};

/**
 * Adds the user to the asset library.
 */
export const putAssetLibraryUserAccount = <ThrowOnError extends boolean = false>(options: Options<PutAssetLibraryUserAccountData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutAssetLibraryUserAccountResponses, unknown, ThrowOnError>({
        url: '/o/headless-asset-library/v1.0/asset-libraries/{assetLibraryId}/user-accounts/{userId}',
        ...options
    });
};

/**
 * Get the asset library with the provided external reference code associated users. Results can be paginated, filtered, searched, and sorted.
 */
export const getAssetLibraryByExternalReferenceCodeUserAccountsPage = <ThrowOnError extends boolean = false>(options: Options<GetAssetLibraryByExternalReferenceCodeUserAccountsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAssetLibraryByExternalReferenceCodeUserAccountsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-asset-library/v1.0/asset-libraries/by-external-reference-code/{externalReferenceCode}/user-accounts',
        ...options
    });
};

/**
 * Get the asset library associated users. Results can be paginated, filtered, searched, and sorted.
 */
export const getAssetLibraryUserAccountsPage = <ThrowOnError extends boolean = false>(options: Options<GetAssetLibraryUserAccountsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAssetLibraryUserAccountsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-asset-library/v1.0/asset-libraries/{assetLibraryId}/user-accounts',
        ...options
    });
};

/**
 * Removes a user group from the asset library using the provided external reference codes.
 */
export const deleteAssetLibraryByExternalReferenceCodeAssetLibraryExternalReferenceCodeUserGroupByExternalReferenceCodeUserGroupExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteAssetLibraryByExternalReferenceCodeAssetLibraryExternalReferenceCodeUserGroupByExternalReferenceCodeUserGroupExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteAssetLibraryByExternalReferenceCodeAssetLibraryExternalReferenceCodeUserGroupByExternalReferenceCodeUserGroupExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-asset-library/v1.0/asset-libraries/by-external-reference-code/{assetLibraryExternalReferenceCode}/user-groups/by-external-reference-code/{userGroupExternalReferenceCode}',
        ...options
    });
};

/**
 * Gets a user group from the asset library.
 */
export const getAssetLibraryByExternalReferenceCodeAssetLibraryExternalReferenceCodeUserGroupByExternalReferenceCodeUserGroupExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetAssetLibraryByExternalReferenceCodeAssetLibraryExternalReferenceCodeUserGroupByExternalReferenceCodeUserGroupExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAssetLibraryByExternalReferenceCodeAssetLibraryExternalReferenceCodeUserGroupByExternalReferenceCodeUserGroupExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-asset-library/v1.0/asset-libraries/by-external-reference-code/{assetLibraryExternalReferenceCode}/user-groups/by-external-reference-code/{userGroupExternalReferenceCode}',
        ...options
    });
};

/**
 * Associates the user group with the given external reference code to the asset library.
 */
export const putAssetLibraryByExternalReferenceCodeAssetLibraryExternalReferenceCodeUserGroupByExternalReferenceCodeUserGroupExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PutAssetLibraryByExternalReferenceCodeAssetLibraryExternalReferenceCodeUserGroupByExternalReferenceCodeUserGroupExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutAssetLibraryByExternalReferenceCodeAssetLibraryExternalReferenceCodeUserGroupByExternalReferenceCodeUserGroupExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-asset-library/v1.0/asset-libraries/by-external-reference-code/{assetLibraryExternalReferenceCode}/user-groups/by-external-reference-code/{userGroupExternalReferenceCode}',
        ...options
    });
};

/**
 * Removes a user group from the asset library.
 */
export const deleteAssetLibraryUserGroup = <ThrowOnError extends boolean = false>(options: Options<DeleteAssetLibraryUserGroupData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteAssetLibraryUserGroupResponses, unknown, ThrowOnError>({
        url: '/o/headless-asset-library/v1.0/asset-libraries/{assetLibraryId}/user-groups/{userGroupId}',
        ...options
    });
};

/**
 * Gets a user group from the asset library.
 */
export const getAssetLibraryUserGroup = <ThrowOnError extends boolean = false>(options: Options<GetAssetLibraryUserGroupData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAssetLibraryUserGroupResponses, unknown, ThrowOnError>({
        url: '/o/headless-asset-library/v1.0/asset-libraries/{assetLibraryId}/user-groups/{userGroupId}',
        ...options
    });
};

/**
 * Associates the user group to the asset library.
 */
export const putAssetLibraryUserGroup = <ThrowOnError extends boolean = false>(options: Options<PutAssetLibraryUserGroupData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutAssetLibraryUserGroupResponses, unknown, ThrowOnError>({
        url: '/o/headless-asset-library/v1.0/asset-libraries/{assetLibraryId}/user-groups/{userGroupId}',
        ...options
    });
};

/**
 * Get the asset library associated with the provided external reference code user groups. Results can be paginated, filtered, searched, and sorted.
 */
export const getAssetLibraryByExternalReferenceCodeUserGroupsPage = <ThrowOnError extends boolean = false>(options: Options<GetAssetLibraryByExternalReferenceCodeUserGroupsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAssetLibraryByExternalReferenceCodeUserGroupsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-asset-library/v1.0/asset-libraries/by-external-reference-code/{externalReferenceCode}/user-groups',
        ...options
    });
};

/**
 * Get the asset library associated user groups. Results can be paginated, filtered, searched, and sorted.
 */
export const getAssetLibraryUserGroupsPage = <ThrowOnError extends boolean = false>(options: Options<GetAssetLibraryUserGroupsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAssetLibraryUserGroupsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-asset-library/v1.0/asset-libraries/{assetLibraryId}/user-groups',
        ...options
    });
};