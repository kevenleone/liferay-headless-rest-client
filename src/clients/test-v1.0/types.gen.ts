// This file is auto-generated by @hey-api/openapi-ts

export type CompanyTestEntity = {
    dateCreated?: string;
    dateModified?: string;
    description?: string;
    externalReferenceCode?: string;
    readonly id?: number;
    permissions?: Array<Permission>;
    readonly 'x-class-name'?: string;
};

export type Facet = {
    facetCriteria?: string;
    facetValues?: Array<FacetValue>;
};

export type FacetValue = {
    numberOfOccurrences?: number;
    term?: string;
};

export type PageCompanyTestEntity = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<CompanyTestEntity>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type Permission = {
    actionIds?: Array<string>;
    roleExternalReferenceCode?: string;
    roleName?: string;
    roleType?: string;
};

export type PagePermission = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<Permission>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type ErcAssetLibraryTestEntity = {
    assetLibraryExternalReferenceCode?: string;
    dateCreated?: string;
    dateModified?: string;
    description?: string;
    externalReferenceCode?: string;
    permissions?: Array<Permission>;
    readonly 'x-class-name'?: string;
};

export type PageErcAssetLibraryTestEntity = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<ErcAssetLibraryTestEntity>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type ErcSiteTestEntity = {
    dateCreated?: string;
    dateModified?: string;
    description?: string;
    externalReferenceCode?: string;
    permissions?: Array<Permission>;
    siteExternalReferenceCode?: string;
    readonly 'x-class-name'?: string;
};

export type PageErcSiteTestEntity = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<ErcSiteTestEntity>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type EntityModelResourceTestEntity1 = {
    id?: number;
    name?: string;
    readonly 'x-class-name'?: string;
};

export type PageEntityModelResourceTestEntity1 = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<EntityModelResourceTestEntity1>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type EntityModelResourceTestEntity2 = {
    id?: number;
    name?: string;
    readonly 'x-class-name'?: string;
};

export type Filter = {
    readonly maxResults?: number;
    readonly supported?: boolean;
    readonly 'x-class-name'?: string;
};

export type PageFilter = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<Filter>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type MultipartTestEntity = {
    name?: string;
    readonly 'x-class-name'?: string;
};

export type MultipartBody = {
    values?: {
        [key: string]: string;
    };
};

export type PageSchema = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<Schema>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type Schema = {
    property1?: string;
    readonly 'x-class-name'?: string;
};

export type PageSiteTestEntity = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<SiteTestEntity>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type SiteTestEntity = {
    dateCreated?: string;
    dateModified?: string;
    description?: string;
    externalReferenceCode?: string;
    readonly id?: number;
    permissions?: Array<Permission>;
    readonly siteId?: number;
    readonly 'x-class-name'?: string;
};

export type PageSort = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<Sort>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type Sort = {
    readonly supported?: boolean;
    readonly 'x-class-name'?: string;
};

export type TestEntityAddress = {
    dateCreated?: string;
    dateModified?: string;
    description?: string;
    documentId?: number;
    readonly id?: number;
    jsonProperty?: string;
    name?: string;
    readonly 'x-class-name'?: string;
};

export type ChildTestEntity1 = TestEntity & {
    type?: 'ChildTestEntity1';
} & {
    readonly 'x-class-name'?: string;
    property1?: string;
};

export type ChildTestEntity2 = TestEntity & {
    type?: 'ChildTestEntity2';
} & {
    readonly 'x-class-name'?: string;
    property2?: string;
};

export type ChildTestEntity3 = TestEntity & {
    type?: 'ChildTestEntity3';
} & {
    readonly 'x-class-name'?: string;
};

export type NestedTestEntity = {
    dateCreated?: string;
    dateModified?: string;
    description?: string;
    id?: number;
    name?: string;
    testEntity?: TestEntity;
    readonly 'x-class-name'?: string;
};

export type PageTestEntity = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<TestEntity>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type TestEntity = {
    dateCreated?: string;
    dateModified?: string;
    description?: string;
    documentId?: number;
    readonly id?: number;
    jsonProperty?: string;
    name?: string;
    nestedTestEntity?: NestedTestEntity;
    self?: string;
    stringTestEntities?: Array<'value'>;
    stringTestEntity?: 'value';
    testEntities?: TestEntity;
    readonly 'x-class-name'?: string;
    type?: 'ChildTestEntity1' | 'ChildTestEntity2' | 'ChildTestEntity3';
};

export type PostTestEntityMultipartBulkRequestBody = {
    testEntities?: Array<TestEntity>;
};

export type GetCompanyTestEntitiesPageData = {
    body?: never;
    path?: never;
    query?: {
        nestedFields?: string;
    };
    url: '/o/test/v1.0/company-test-entities';
};

export type GetCompanyTestEntitiesPageResponses = {
    /**
     * default response
     */
    default: PageCompanyTestEntity;
};

export type GetCompanyTestEntitiesPageResponse = GetCompanyTestEntitiesPageResponses[keyof GetCompanyTestEntitiesPageResponses];

export type PostCompanyTestEntityData = {
    body?: CompanyTestEntity;
    path?: never;
    query?: never;
    url: '/o/test/v1.0/company-test-entities';
};

export type PostCompanyTestEntityResponses = {
    /**
     * default response
     */
    default: CompanyTestEntity;
};

export type PostCompanyTestEntityResponse = PostCompanyTestEntityResponses[keyof PostCompanyTestEntityResponses];

export type GetCompanyTestEntityData = {
    body?: never;
    path: {
        companyTestEntityId: string;
    };
    query?: never;
    url: '/o/test/v1.0/company-test-entities/{companyTestEntityId}';
};

export type GetCompanyTestEntityResponses = {
    /**
     * default response
     */
    default: CompanyTestEntity;
};

export type GetCompanyTestEntityResponse = GetCompanyTestEntityResponses[keyof GetCompanyTestEntityResponses];

export type PatchCompanyTestEntityData = {
    body?: CompanyTestEntity;
    path: {
        companyTestEntityId: string;
    };
    query?: never;
    url: '/o/test/v1.0/company-test-entities/{companyTestEntityId}';
};

export type PatchCompanyTestEntityResponses = {
    /**
     * default response
     */
    default: CompanyTestEntity;
};

export type PatchCompanyTestEntityResponse = PatchCompanyTestEntityResponses[keyof PatchCompanyTestEntityResponses];

export type PutCompanyTestEntityData = {
    body?: CompanyTestEntity;
    path: {
        companyTestEntityId: string;
    };
    query?: never;
    url: '/o/test/v1.0/company-test-entities/{companyTestEntityId}';
};

export type PutCompanyTestEntityResponses = {
    /**
     * default response
     */
    default: CompanyTestEntity;
};

export type PutCompanyTestEntityResponse = PutCompanyTestEntityResponses[keyof PutCompanyTestEntityResponses];

export type GetCompanyTestEntityByExternalReferenceCodeData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/test/v1.0/company-test-entities/by-external-reference-code/{externalReferenceCode}';
};

export type GetCompanyTestEntityByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: CompanyTestEntity;
};

export type GetCompanyTestEntityByExternalReferenceCodeResponse = GetCompanyTestEntityByExternalReferenceCodeResponses[keyof GetCompanyTestEntityByExternalReferenceCodeResponses];

export type PutCompanyTestEntityByExternalReferenceCodeData = {
    body?: CompanyTestEntity;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/test/v1.0/company-test-entities/by-external-reference-code/{externalReferenceCode}';
};

export type PutCompanyTestEntityByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: CompanyTestEntity;
};

export type PutCompanyTestEntityByExternalReferenceCodeResponse = PutCompanyTestEntityByExternalReferenceCodeResponses[keyof PutCompanyTestEntityByExternalReferenceCodeResponses];

export type GetCompanyTestEntityPermissionsPageData = {
    body?: never;
    path: {
        companyTestEntityId: string;
    };
    query?: {
        roleNames?: string;
        nestedFields?: string;
    };
    url: '/o/test/v1.0/company-test-entities/{companyTestEntityId}/permissions';
};

export type GetCompanyTestEntityPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type GetCompanyTestEntityPermissionsPageResponse = GetCompanyTestEntityPermissionsPageResponses[keyof GetCompanyTestEntityPermissionsPageResponses];

export type PutCompanyTestEntityPermissionsPageData = {
    body?: Array<Permission>;
    path: {
        companyTestEntityId: string;
    };
    query?: never;
    url: '/o/test/v1.0/company-test-entities/{companyTestEntityId}/permissions';
};

export type PutCompanyTestEntityPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type PutCompanyTestEntityPermissionsPageResponse = PutCompanyTestEntityPermissionsPageResponses[keyof PutCompanyTestEntityPermissionsPageResponses];

export type PostCompanyTestEntitiesPageExportBatchData = {
    body?: never;
    path?: never;
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/test/v1.0/company-test-entities/export-batch';
};

export type PostCompanyTestEntitiesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostCompanyTestEntityBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/test/v1.0/company-test-entities/batch';
};

export type PostCompanyTestEntityBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutCompanyTestEntityBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/test/v1.0/company-test-entities/batch';
};

export type PutCompanyTestEntityBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetAssetLibraryErcAssetLibraryTestEntitiesPageData = {
    body?: never;
    path: {
        assetLibraryExternalReferenceCode: string;
    };
    query?: {
        nestedFields?: string;
    };
    url: '/o/test/v1.0/asset-libraries/{assetLibraryExternalReferenceCode}/erc-asset-library-test-entities';
};

export type GetAssetLibraryErcAssetLibraryTestEntitiesPageResponses = {
    /**
     * default response
     */
    default: PageErcAssetLibraryTestEntity;
};

export type GetAssetLibraryErcAssetLibraryTestEntitiesPageResponse = GetAssetLibraryErcAssetLibraryTestEntitiesPageResponses[keyof GetAssetLibraryErcAssetLibraryTestEntitiesPageResponses];

export type PostAssetLibraryErcAssetLibraryTestEntityData = {
    body?: ErcAssetLibraryTestEntity;
    path: {
        assetLibraryExternalReferenceCode: string;
    };
    query?: never;
    url: '/o/test/v1.0/asset-libraries/{assetLibraryExternalReferenceCode}/erc-asset-library-test-entities';
};

export type PostAssetLibraryErcAssetLibraryTestEntityResponses = {
    /**
     * default response
     */
    default: ErcAssetLibraryTestEntity;
};

export type PostAssetLibraryErcAssetLibraryTestEntityResponse = PostAssetLibraryErcAssetLibraryTestEntityResponses[keyof PostAssetLibraryErcAssetLibraryTestEntityResponses];

export type GetAssetLibraryErcAssetLibraryTestEntityErcAssetLibraryTestEntityExternalReferenceCodeData = {
    body?: never;
    path: {
        assetLibraryExternalReferenceCode: string;
        ercAssetLibraryTestEntityExternalReferenceCode: string;
    };
    query?: never;
    url: '/o/test/v1.0/asset-libraries/{assetLibraryExternalReferenceCode}/erc-asset-library-test-entities/{ercAssetLibraryTestEntityExternalReferenceCode}';
};

export type GetAssetLibraryErcAssetLibraryTestEntityErcAssetLibraryTestEntityExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: ErcAssetLibraryTestEntity;
};

export type GetAssetLibraryErcAssetLibraryTestEntityErcAssetLibraryTestEntityExternalReferenceCodeResponse = GetAssetLibraryErcAssetLibraryTestEntityErcAssetLibraryTestEntityExternalReferenceCodeResponses[keyof GetAssetLibraryErcAssetLibraryTestEntityErcAssetLibraryTestEntityExternalReferenceCodeResponses];

export type PutAssetLibraryErcAssetLibraryTestEntityErcAssetLibraryTestEntityExternalReferenceCodeData = {
    body?: ErcAssetLibraryTestEntity;
    path: {
        assetLibraryExternalReferenceCode: string;
        ercAssetLibraryTestEntityExternalReferenceCode: string;
    };
    query?: never;
    url: '/o/test/v1.0/asset-libraries/{assetLibraryExternalReferenceCode}/erc-asset-library-test-entities/{ercAssetLibraryTestEntityExternalReferenceCode}';
};

export type PutAssetLibraryErcAssetLibraryTestEntityErcAssetLibraryTestEntityExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: ErcAssetLibraryTestEntity;
};

export type PutAssetLibraryErcAssetLibraryTestEntityErcAssetLibraryTestEntityExternalReferenceCodeResponse = PutAssetLibraryErcAssetLibraryTestEntityErcAssetLibraryTestEntityExternalReferenceCodeResponses[keyof PutAssetLibraryErcAssetLibraryTestEntityErcAssetLibraryTestEntityExternalReferenceCodeResponses];

export type PostAssetLibraryErcAssetLibraryTestEntitiesPageExportBatchData = {
    body?: never;
    path: {
        assetLibraryExternalReferenceCode: string;
    };
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/test/v1.0/asset-libraries/{assetLibraryExternalReferenceCode}/erc-asset-library-test-entities/export-batch';
};

export type PostAssetLibraryErcAssetLibraryTestEntitiesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostAssetLibraryErcAssetLibraryTestEntityBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        assetLibraryExternalReferenceCode: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/test/v1.0/asset-libraries/{assetLibraryExternalReferenceCode}/erc-asset-library-test-entities/batch';
};

export type PostAssetLibraryErcAssetLibraryTestEntityBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSiteErcSiteTestEntitiesPageData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
    };
    query?: {
        nestedFields?: string;
    };
    url: '/o/test/v1.0/sites/{siteExternalReferenceCode}/erc-site-test-entities';
};

export type GetSiteErcSiteTestEntitiesPageResponses = {
    /**
     * default response
     */
    default: PageErcSiteTestEntity;
};

export type GetSiteErcSiteTestEntitiesPageResponse = GetSiteErcSiteTestEntitiesPageResponses[keyof GetSiteErcSiteTestEntitiesPageResponses];

export type PostSiteErcSiteTestEntityData = {
    body?: ErcSiteTestEntity;
    path: {
        siteExternalReferenceCode: string;
    };
    query?: never;
    url: '/o/test/v1.0/sites/{siteExternalReferenceCode}/erc-site-test-entities';
};

export type PostSiteErcSiteTestEntityResponses = {
    /**
     * default response
     */
    default: ErcSiteTestEntity;
};

export type PostSiteErcSiteTestEntityResponse = PostSiteErcSiteTestEntityResponses[keyof PostSiteErcSiteTestEntityResponses];

export type GetSiteErcSiteTestEntityErcSiteTestEntityExternalReferenceCodeData = {
    body?: never;
    path: {
        ercSiteTestEntityExternalReferenceCode: string;
        siteExternalReferenceCode: string;
    };
    query?: never;
    url: '/o/test/v1.0/sites/{siteExternalReferenceCode}/erc-site-test-entities/{ercSiteTestEntityExternalReferenceCode}';
};

export type GetSiteErcSiteTestEntityErcSiteTestEntityExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: ErcSiteTestEntity;
};

export type GetSiteErcSiteTestEntityErcSiteTestEntityExternalReferenceCodeResponse = GetSiteErcSiteTestEntityErcSiteTestEntityExternalReferenceCodeResponses[keyof GetSiteErcSiteTestEntityErcSiteTestEntityExternalReferenceCodeResponses];

export type PutSiteErcSiteTestEntityErcSiteTestEntityExternalReferenceCodeData = {
    body?: ErcSiteTestEntity;
    path: {
        ercSiteTestEntityExternalReferenceCode: string;
        siteExternalReferenceCode: string;
    };
    query?: never;
    url: '/o/test/v1.0/sites/{siteExternalReferenceCode}/erc-site-test-entities/{ercSiteTestEntityExternalReferenceCode}';
};

export type PutSiteErcSiteTestEntityErcSiteTestEntityExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: ErcSiteTestEntity;
};

export type PutSiteErcSiteTestEntityErcSiteTestEntityExternalReferenceCodeResponse = PutSiteErcSiteTestEntityErcSiteTestEntityExternalReferenceCodeResponses[keyof PutSiteErcSiteTestEntityErcSiteTestEntityExternalReferenceCodeResponses];

export type PostSiteErcSiteTestEntitiesPageExportBatchData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
    };
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/test/v1.0/sites/{siteExternalReferenceCode}/erc-site-test-entities/export-batch';
};

export type PostSiteErcSiteTestEntitiesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostSiteErcSiteTestEntityBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        siteExternalReferenceCode: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/test/v1.0/sites/{siteExternalReferenceCode}/erc-site-test-entities/batch';
};

export type PostSiteErcSiteTestEntityBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetEntityModelResourceTestEntities1PageData = {
    body?: never;
    path?: never;
    query?: {
        nestedFields?: string;
    };
    url: '/o/test/v1.0/entity-model-resource-test-entities1';
};

export type GetEntityModelResourceTestEntities1PageResponses = {
    /**
     * default response
     */
    default: PageEntityModelResourceTestEntity1;
};

export type GetEntityModelResourceTestEntities1PageResponse = GetEntityModelResourceTestEntities1PageResponses[keyof GetEntityModelResourceTestEntities1PageResponses];

export type GetEntityModelResourceTestEntities2EntityModelResourceTestEntity2Data = {
    body?: never;
    path: {
        entityModelResourceTestEntity2Id: string;
    };
    query?: never;
    url: '/o/test/v1.0/entity-model-resource-test-entities2/{entityModelResourceTestEntity2Id}';
};

export type GetEntityModelResourceTestEntities2EntityModelResourceTestEntity2Responses = {
    /**
     * default response
     */
    default: EntityModelResourceTestEntity2;
};

export type GetEntityModelResourceTestEntities2EntityModelResourceTestEntity2Response = GetEntityModelResourceTestEntities2EntityModelResourceTestEntity2Responses[keyof GetEntityModelResourceTestEntities2EntityModelResourceTestEntity2Responses];

export type GetFiltersPageData = {
    body?: never;
    path?: never;
    query?: {
        nestedFields?: string;
    };
    url: '/o/test/v1.0/filters';
};

export type GetFiltersPageResponses = {
    /**
     * default response
     */
    default: PageFilter;
};

export type GetFiltersPageResponse = GetFiltersPageResponses[keyof GetFiltersPageResponses];

export type PostFiltersPageExportBatchData = {
    body?: never;
    path?: never;
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/test/v1.0/filters/export-batch';
};

export type PostFiltersPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetMultipartTestEntityData = {
    body?: never;
    path: {
        multipartTestEntityId: string;
    };
    query?: never;
    url: '/o/test/v1.0/multipart-test-entities/{multipartTestEntityId}';
};

export type GetMultipartTestEntityResponses = {
    /**
     * default response
     */
    default: MultipartTestEntity;
};

export type GetMultipartTestEntityResponse = GetMultipartTestEntityResponses[keyof GetMultipartTestEntityResponses];

export type PatchMultipartTestEntityData = {
    body?: MultipartTestEntity;
    path: {
        multipartTestEntityId: string;
    };
    query?: never;
    url: '/o/test/v1.0/multipart-test-entities/{multipartTestEntityId}';
};

export type PatchMultipartTestEntityResponses = {
    /**
     * default response
     */
    default: MultipartTestEntity;
};

export type PatchMultipartTestEntityResponse = PatchMultipartTestEntityResponses[keyof PatchMultipartTestEntityResponses];

export type PutMultipartTestEntityData = {
    body?: MultipartBody;
    path: {
        multipartTestEntityId: string;
    };
    query?: never;
    url: '/o/test/v1.0/multipart-test-entities/{multipartTestEntityId}';
};

export type PutMultipartTestEntityResponses = {
    /**
     * default response
     */
    default: MultipartTestEntity;
};

export type PutMultipartTestEntityResponse = PutMultipartTestEntityResponses[keyof PutMultipartTestEntityResponses];

export type PutMultipartTestEntityBatchData = {
    body?: MultipartBody;
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/test/v1.0/multipart-test-entities/batch';
};

export type PutMultipartTestEntityBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSchemasPageData = {
    body?: never;
    path?: never;
    query?: {
        nestedFields?: string;
    };
    url: '/o/test/v1.0/schemas';
};

export type GetSchemasPageResponses = {
    /**
     * default response
     */
    default: PageSchema;
};

export type GetSchemasPageResponse = GetSchemasPageResponses[keyof GetSchemasPageResponses];

export type PostSchemasPageExportBatchData = {
    body?: never;
    path?: never;
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/test/v1.0/schemas/export-batch';
};

export type PostSchemasPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSiteSiteTestEntitiesPageData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        nestedFields?: string;
    };
    url: '/o/test/v1.0/sites/{siteId}/site-test-entities';
};

export type GetSiteSiteTestEntitiesPageResponses = {
    /**
     * default response
     */
    default: PageSiteTestEntity;
};

export type GetSiteSiteTestEntitiesPageResponse = GetSiteSiteTestEntitiesPageResponses[keyof GetSiteSiteTestEntitiesPageResponses];

export type PostSiteSiteTestEntityData = {
    body?: SiteTestEntity;
    path: {
        siteId: string;
    };
    query?: never;
    url: '/o/test/v1.0/sites/{siteId}/site-test-entities';
};

export type PostSiteSiteTestEntityResponses = {
    /**
     * default response
     */
    default: SiteTestEntity;
};

export type PostSiteSiteTestEntityResponse = PostSiteSiteTestEntityResponses[keyof PostSiteSiteTestEntityResponses];

export type GetSiteSiteTestEntityByExternalReferenceCodeData = {
    body?: never;
    path: {
        externalReferenceCode: string;
        siteId: string;
    };
    query?: never;
    url: '/o/test/v1.0/sites/{siteId}/site-test-entities/by-external-reference-code/{externalReferenceCode}';
};

export type GetSiteSiteTestEntityByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: SiteTestEntity;
};

export type GetSiteSiteTestEntityByExternalReferenceCodeResponse = GetSiteSiteTestEntityByExternalReferenceCodeResponses[keyof GetSiteSiteTestEntityByExternalReferenceCodeResponses];

export type PutSiteSiteTestEntityByExternalReferenceCodeData = {
    body?: SiteTestEntity;
    path: {
        externalReferenceCode: string;
        siteId: string;
    };
    query?: never;
    url: '/o/test/v1.0/sites/{siteId}/site-test-entities/by-external-reference-code/{externalReferenceCode}';
};

export type PutSiteSiteTestEntityByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: SiteTestEntity;
};

export type PutSiteSiteTestEntityByExternalReferenceCodeResponse = PutSiteSiteTestEntityByExternalReferenceCodeResponses[keyof PutSiteSiteTestEntityByExternalReferenceCodeResponses];

export type GetSiteTestEntityData = {
    body?: never;
    path: {
        siteTestEntityId: string;
    };
    query?: never;
    url: '/o/test/v1.0/site-test-entities/{siteTestEntityId}';
};

export type GetSiteTestEntityResponses = {
    /**
     * default response
     */
    default: SiteTestEntity;
};

export type GetSiteTestEntityResponse = GetSiteTestEntityResponses[keyof GetSiteTestEntityResponses];

export type PatchSiteTestEntityData = {
    body?: SiteTestEntity;
    path: {
        siteTestEntityId: string;
    };
    query?: never;
    url: '/o/test/v1.0/site-test-entities/{siteTestEntityId}';
};

export type PatchSiteTestEntityResponses = {
    /**
     * default response
     */
    default: SiteTestEntity;
};

export type PatchSiteTestEntityResponse = PatchSiteTestEntityResponses[keyof PatchSiteTestEntityResponses];

export type PutSiteTestEntityData = {
    body?: SiteTestEntity;
    path: {
        siteTestEntityId: string;
    };
    query?: never;
    url: '/o/test/v1.0/site-test-entities/{siteTestEntityId}';
};

export type PutSiteTestEntityResponses = {
    /**
     * default response
     */
    default: SiteTestEntity;
};

export type PutSiteTestEntityResponse = PutSiteTestEntityResponses[keyof PutSiteTestEntityResponses];

export type GetSiteTestEntityPermissionsPageData = {
    body?: never;
    path: {
        siteTestEntityId: string;
    };
    query?: {
        roleNames?: string;
        nestedFields?: string;
    };
    url: '/o/test/v1.0/site-test-entities/{siteTestEntityId}/permissions';
};

export type GetSiteTestEntityPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type GetSiteTestEntityPermissionsPageResponse = GetSiteTestEntityPermissionsPageResponses[keyof GetSiteTestEntityPermissionsPageResponses];

export type PutSiteTestEntityPermissionsPageData = {
    body?: Array<Permission>;
    path: {
        siteTestEntityId: string;
    };
    query?: never;
    url: '/o/test/v1.0/site-test-entities/{siteTestEntityId}/permissions';
};

export type PutSiteTestEntityPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type PutSiteTestEntityPermissionsPageResponse = PutSiteTestEntityPermissionsPageResponses[keyof PutSiteTestEntityPermissionsPageResponses];

export type PostSiteSiteTestEntitiesPageExportBatchData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/test/v1.0/sites/{siteId}/site-test-entities/export-batch';
};

export type PostSiteSiteTestEntitiesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostSiteSiteTestEntityBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        siteId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/test/v1.0/sites/{siteId}/site-test-entities/batch';
};

export type PostSiteSiteTestEntityBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutSiteTestEntityBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/test/v1.0/site-test-entities/batch';
};

export type PutSiteTestEntityBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSortsPageData = {
    body?: never;
    path?: never;
    query?: {
        nestedFields?: string;
    };
    url: '/o/test/v1.0/sorts';
};

export type GetSortsPageResponses = {
    /**
     * default response
     */
    default: PageSort;
};

export type GetSortsPageResponse = GetSortsPageResponses[keyof GetSortsPageResponses];

export type PostSortsPageExportBatchData = {
    body?: never;
    path?: never;
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/test/v1.0/sorts/export-batch';
};

export type PostSortsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetTestEntityTestEntityAddressData = {
    body?: never;
    path: {
        testEntityId: string;
    };
    query?: never;
    url: '/o/test/v1.0/test-entities/{testEntityId}/test-entity-address';
};

export type GetTestEntityTestEntityAddressResponses = {
    /**
     * default response
     */
    default: TestEntityAddress;
};

export type GetTestEntityTestEntityAddressResponse = GetTestEntityTestEntityAddressResponses[keyof GetTestEntityTestEntityAddressResponses];

export type DeleteTestEntityData = {
    body?: never;
    path: {
        testEntityId: string;
    };
    query?: {
        permanent?: string;
    };
    url: '/o/test/v1.0/test-entities/{testEntityId}';
};

export type DeleteTestEntityResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetTestEntityData = {
    body?: never;
    path: {
        testEntityId: string;
    };
    query?: never;
    url: '/o/test/v1.0/test-entities/{testEntityId}';
};

export type GetTestEntityResponses = {
    /**
     * default response
     */
    default: TestEntity;
};

export type GetTestEntityResponse = GetTestEntityResponses[keyof GetTestEntityResponses];

export type PatchTestEntityData = {
    body?: TestEntity;
    path: {
        testEntityId: string;
    };
    query?: {
        optionalParameter?: string;
    };
    url: '/o/test/v1.0/test-entities/{testEntityId}';
};

export type PatchTestEntityResponses = {
    /**
     * default response
     */
    default: TestEntity;
};

export type PatchTestEntityResponse = PatchTestEntityResponses[keyof PatchTestEntityResponses];

export type PutTestEntityData = {
    body?: TestEntity;
    path: {
        testEntityId: string;
    };
    query?: {
        optionalParameter?: string;
    };
    url: '/o/test/v1.0/test-entities/{testEntityId}';
};

export type PutTestEntityResponses = {
    /**
     * default response
     */
    default: TestEntity;
};

export type PutTestEntityResponse = PutTestEntityResponses[keyof PutTestEntityResponses];

export type DeleteTestEntityBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        permanent?: string;
        callbackURL?: string;
    };
    url: '/o/test/v1.0/test-entities/batch';
};

export type DeleteTestEntityBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostTestEntityBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/test/v1.0/test-entities/batch';
};

export type PostTestEntityBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutTestEntityBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        optionalParameter?: string;
        callbackURL?: string;
    };
    url: '/o/test/v1.0/test-entities/batch';
};

export type PutTestEntityBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetTestEntitiesPageData = {
    body?: never;
    path?: never;
    query?: {
        nestedFields?: string;
    };
    url: '/o/test/v1.0/test-entities';
};

export type GetTestEntitiesPageResponses = {
    /**
     * default response
     */
    default: PageTestEntity;
};

export type GetTestEntitiesPageResponse = GetTestEntitiesPageResponses[keyof GetTestEntitiesPageResponses];

export type PostTestEntityData = {
    body?: TestEntity;
    path?: never;
    query?: never;
    url: '/o/test/v1.0/test-entities';
};

export type PostTestEntityResponses = {
    /**
     * default response
     */
    default: TestEntity;
};

export type PostTestEntityResponse = PostTestEntityResponses[keyof PostTestEntityResponses];

export type GetTestEntityCountData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/o/test/v1.0/test-entities/count';
};

export type GetTestEntityCountResponses = {
    /**
     * default response
     */
    default: number;
};

export type GetTestEntityCountResponse = GetTestEntityCountResponses[keyof GetTestEntityCountResponses];

export type PostReservedWordData = {
    body?: boolean;
    path?: never;
    query?: never;
    url: '/o/test/v1.0/reserved-word';
};

export type PostReservedWordResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostTestEntitiesPageExportBatchData = {
    body?: never;
    path?: never;
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/test/v1.0/test-entities/export-batch';
};

export type PostTestEntitiesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostTestEntityMultipartBulkData = {
    body?: PostTestEntityMultipartBulkRequestBody;
    path?: never;
    query?: never;
    url: '/o/test/v1.0/test-entities/multipart/bulk';
};

export type PostTestEntityMultipartBulkResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type ClientOptions = {
    baseUrl: 'http://localhost:8080' | (string & {});
};