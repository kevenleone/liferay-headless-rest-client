// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';
import type { DeleteSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderData, DeleteSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderResponses, GetSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderData, GetSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderResponses, PatchSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderData, PatchSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderResponses, PutSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderData, PutSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderResponses, GetSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderPermissionsPageData, GetSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderPermissionsPageResponses, PutSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderPermissionsPageData, PutSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderPermissionsPageResponses, GetSiteSiteByExternalReferenceCodeDisplayPageTemplateFoldersPageData, GetSiteSiteByExternalReferenceCodeDisplayPageTemplateFoldersPageResponses, PostSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderData, PostSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderResponses, GetSiteSiteExternalReferenceCodeDisplayPageTemplateFolderPermissionsPageData, GetSiteSiteExternalReferenceCodeDisplayPageTemplateFolderPermissionsPageResponses, PutSiteSiteExternalReferenceCodeDisplayPageTemplateFolderPermissionsPageData, PutSiteSiteExternalReferenceCodeDisplayPageTemplateFolderPermissionsPageResponses, DeleteSiteSiteByExternalReferenceCodeDisplayPageTemplateData, DeleteSiteSiteByExternalReferenceCodeDisplayPageTemplateResponses, GetSiteSiteByExternalReferenceCodeDisplayPageTemplateData, GetSiteSiteByExternalReferenceCodeDisplayPageTemplateResponses, PatchSiteSiteByExternalReferenceCodeDisplayPageTemplateData, PatchSiteSiteByExternalReferenceCodeDisplayPageTemplateResponses, PutSiteSiteByExternalReferenceCodeDisplayPageTemplateData, PutSiteSiteByExternalReferenceCodeDisplayPageTemplateResponses, GetSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderDisplayPageTemplatesPageData, GetSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderDisplayPageTemplatesPageResponses, PostSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderDisplayPageTemplateData, PostSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderDisplayPageTemplateResponses, GetSiteSiteByExternalReferenceCodeDisplayPageTemplatePermissionsPageData, GetSiteSiteByExternalReferenceCodeDisplayPageTemplatePermissionsPageResponses, PutSiteSiteByExternalReferenceCodeDisplayPageTemplatePermissionsPageData, PutSiteSiteByExternalReferenceCodeDisplayPageTemplatePermissionsPageResponses, GetSiteSiteByExternalReferenceCodeDisplayPageTemplatesPageData, GetSiteSiteByExternalReferenceCodeDisplayPageTemplatesPageResponses, PostSiteSiteByExternalReferenceCodeDisplayPageTemplateData, PostSiteSiteByExternalReferenceCodeDisplayPageTemplateResponses, GetSiteSiteExternalReferenceCodeDisplayPageTemplatePermissionsPageData, GetSiteSiteExternalReferenceCodeDisplayPageTemplatePermissionsPageResponses, PutSiteSiteExternalReferenceCodeDisplayPageTemplatePermissionsPageData, PutSiteSiteExternalReferenceCodeDisplayPageTemplatePermissionsPageResponses, GetSiteSiteByExternalReferenceCodeDisplayPageTemplatePageSpecificationsPageData, GetSiteSiteByExternalReferenceCodeDisplayPageTemplatePageSpecificationsPageResponses, PostSiteSiteByExternalReferenceCodeDisplayPageTemplatePageSpecificationData, PostSiteSiteByExternalReferenceCodeDisplayPageTemplatePageSpecificationResponses, DeleteSiteSiteByExternalReferenceCodeFragmentCompositionData, DeleteSiteSiteByExternalReferenceCodeFragmentCompositionResponses, GetSiteSiteByExternalReferenceCodeFragmentCompositionData, GetSiteSiteByExternalReferenceCodeFragmentCompositionResponses, PatchSiteSiteByExternalReferenceCodeFragmentCompositionData, PatchSiteSiteByExternalReferenceCodeFragmentCompositionResponses, PutSiteSiteByExternalReferenceCodeFragmentCompositionData, PutSiteSiteByExternalReferenceCodeFragmentCompositionResponses, GetSiteSiteByExternalReferenceCodeFragmentCompositionsPageData, GetSiteSiteByExternalReferenceCodeFragmentCompositionsPageResponses, PostSiteSiteByExternalReferenceCodeFragmentCompositionData, PostSiteSiteByExternalReferenceCodeFragmentCompositionResponses, GetSiteSiteByExternalReferenceCodeDisplayPageTemplateFriendlyUrlHistoryData, GetSiteSiteByExternalReferenceCodeDisplayPageTemplateFriendlyUrlHistoryResponses, GetSiteSiteByExternalReferenceCodeSitePageFriendlyUrlHistoryData, GetSiteSiteByExternalReferenceCodeSitePageFriendlyUrlHistoryResponses, GetSiteSiteByExternalReferenceCodeUtilityPageFriendlyUrlHistoryData, GetSiteSiteByExternalReferenceCodeUtilityPageFriendlyUrlHistoryResponses, DeleteSiteSiteByExternalReferenceCodeMasterPageData, DeleteSiteSiteByExternalReferenceCodeMasterPageResponses, GetSiteSiteByExternalReferenceCodeMasterPageData, GetSiteSiteByExternalReferenceCodeMasterPageResponses, PatchSiteSiteByExternalReferenceCodeMasterPageData, PatchSiteSiteByExternalReferenceCodeMasterPageResponses, PutSiteSiteByExternalReferenceCodeMasterPageData, PutSiteSiteByExternalReferenceCodeMasterPageResponses, GetSiteSiteByExternalReferenceCodeMasterPagePermissionsPageData, GetSiteSiteByExternalReferenceCodeMasterPagePermissionsPageResponses, PutSiteSiteByExternalReferenceCodeMasterPagePermissionsPageData, PutSiteSiteByExternalReferenceCodeMasterPagePermissionsPageResponses, GetSiteSiteByExternalReferenceCodeMasterPagesPageData, GetSiteSiteByExternalReferenceCodeMasterPagesPageResponses, PostSiteSiteByExternalReferenceCodeMasterPageData, PostSiteSiteByExternalReferenceCodeMasterPageResponses, GetSiteSiteExternalReferenceCodeMasterPagePermissionsPageData, GetSiteSiteExternalReferenceCodeMasterPagePermissionsPageResponses, PutSiteSiteExternalReferenceCodeMasterPagePermissionsPageData, PutSiteSiteExternalReferenceCodeMasterPagePermissionsPageResponses, GetSiteSiteByExternalReferenceCodeMasterPagePageSpecificationsPageData, GetSiteSiteByExternalReferenceCodeMasterPagePageSpecificationsPageResponses, PostSiteSiteByExternalReferenceCodeMasterPagePageSpecificationData, PostSiteSiteByExternalReferenceCodeMasterPagePageSpecificationResponses, DeleteSiteSiteByExternalReferenceCodePageElementData, DeleteSiteSiteByExternalReferenceCodePageElementResponses, GetSiteSiteByExternalReferenceCodePageElementData, GetSiteSiteByExternalReferenceCodePageElementResponses, PatchSiteSiteByExternalReferenceCodePageElementData, PatchSiteSiteByExternalReferenceCodePageElementResponses, PutSiteSiteByExternalReferenceCodePageElementData, PutSiteSiteByExternalReferenceCodePageElementResponses, GetSiteSiteByExternalReferenceCodePageElementPageElementsPageData, GetSiteSiteByExternalReferenceCodePageElementPageElementsPageResponses, GetSiteSiteByExternalReferenceCodePageExperiencePageElementsPageData, GetSiteSiteByExternalReferenceCodePageExperiencePageElementsPageResponses, PostSiteSiteByExternalReferenceCodePageExperiencePageElementData, PostSiteSiteByExternalReferenceCodePageExperiencePageElementResponses, PostSiteSiteByExternalReferenceCodePageElementFragmentCompositionData, PostSiteSiteByExternalReferenceCodePageElementFragmentCompositionResponses, DeleteSiteSiteByExternalReferenceCodePageExperienceData, DeleteSiteSiteByExternalReferenceCodePageExperienceResponses, GetSiteSiteByExternalReferenceCodePageExperienceData, GetSiteSiteByExternalReferenceCodePageExperienceResponses, PatchSiteSiteByExternalReferenceCodePageExperienceData, PatchSiteSiteByExternalReferenceCodePageExperienceResponses, PutSiteSiteByExternalReferenceCodePageExperienceData, PutSiteSiteByExternalReferenceCodePageExperienceResponses, GetSiteSiteByExternalReferenceCodePageSpecificationPageExperiencesPageData, GetSiteSiteByExternalReferenceCodePageSpecificationPageExperiencesPageResponses, PostSiteSiteByExternalReferenceCodePageSpecificationPageExperienceData, PostSiteSiteByExternalReferenceCodePageSpecificationPageExperienceResponses, DeleteSiteSiteByExternalReferenceCodePageRuleActionData, DeleteSiteSiteByExternalReferenceCodePageRuleActionResponses, GetSiteSiteByExternalReferenceCodePageRuleActionData, GetSiteSiteByExternalReferenceCodePageRuleActionResponses, PatchSiteSiteByExternalReferenceCodePageRuleActionData, PatchSiteSiteByExternalReferenceCodePageRuleActionResponses, PutSiteSiteByExternalReferenceCodePageRuleActionData, PutSiteSiteByExternalReferenceCodePageRuleActionResponses, GetSiteSiteByExternalReferenceCodePageRulePageRuleActionsPageData, GetSiteSiteByExternalReferenceCodePageRulePageRuleActionsPageResponses, PostSiteSiteByExternalReferenceCodePageRulePageRuleActionData, PostSiteSiteByExternalReferenceCodePageRulePageRuleActionResponses, DeleteSiteSiteByExternalReferenceCodePageRuleConditionData, DeleteSiteSiteByExternalReferenceCodePageRuleConditionResponses, GetSiteSiteByExternalReferenceCodePageRuleConditionData, GetSiteSiteByExternalReferenceCodePageRuleConditionResponses, PatchSiteSiteByExternalReferenceCodePageRuleConditionData, PatchSiteSiteByExternalReferenceCodePageRuleConditionResponses, PutSiteSiteByExternalReferenceCodePageRuleConditionData, PutSiteSiteByExternalReferenceCodePageRuleConditionResponses, GetSiteSiteByExternalReferenceCodePageRulePageRuleConditionsPageData, GetSiteSiteByExternalReferenceCodePageRulePageRuleConditionsPageResponses, PostSiteSiteByExternalReferenceCodePageRulePageRuleConditionData, PostSiteSiteByExternalReferenceCodePageRulePageRuleConditionResponses, DeleteSiteSiteByExternalReferenceCodePageRuleData, DeleteSiteSiteByExternalReferenceCodePageRuleResponses, GetSiteSiteByExternalReferenceCodePageRuleData, GetSiteSiteByExternalReferenceCodePageRuleResponses, PatchSiteSiteByExternalReferenceCodePageRuleData, PatchSiteSiteByExternalReferenceCodePageRuleResponses, PutSiteSiteByExternalReferenceCodePageRuleData, PutSiteSiteByExternalReferenceCodePageRuleResponses, GetSiteSiteByExternalReferenceCodePageExperiencePageRulesPageData, GetSiteSiteByExternalReferenceCodePageExperiencePageRulesPageResponses, PostSiteSiteByExternalReferenceCodePageExperiencePageRuleData, PostSiteSiteByExternalReferenceCodePageExperiencePageRuleResponses, DeleteSiteSiteByExternalReferenceCodePageSpecificationData, DeleteSiteSiteByExternalReferenceCodePageSpecificationResponses, GetSiteSiteByExternalReferenceCodePageSpecificationData, GetSiteSiteByExternalReferenceCodePageSpecificationResponses, PatchSiteSiteByExternalReferenceCodePageSpecificationData, PatchSiteSiteByExternalReferenceCodePageSpecificationResponses, PutSiteSiteByExternalReferenceCodePageSpecificationData, PutSiteSiteByExternalReferenceCodePageSpecificationResponses, GetSiteSiteByExternalReferenceCodePageTemplatePageSpecificationsPageData, GetSiteSiteByExternalReferenceCodePageTemplatePageSpecificationsPageResponses, PostSiteSiteByExternalReferenceCodePageTemplatePageSpecificationData, PostSiteSiteByExternalReferenceCodePageTemplatePageSpecificationResponses, GetSiteSiteByExternalReferenceCodeSitePagePageSpecificationsPageData, GetSiteSiteByExternalReferenceCodeSitePagePageSpecificationsPageResponses, PostSiteSiteByExternalReferenceCodeSitePagePageSpecificationData, PostSiteSiteByExternalReferenceCodeSitePagePageSpecificationResponses, GetSiteSiteByExternalReferenceCodeUtilityPagePageSpecificationsPageData, GetSiteSiteByExternalReferenceCodeUtilityPagePageSpecificationsPageResponses, PostSiteSiteByExternalReferenceCodeUtilityPagePageSpecificationData, PostSiteSiteByExternalReferenceCodeUtilityPagePageSpecificationResponses, PostSiteSiteByExternalReferenceCodePageSpecificationPublishData, PostSiteSiteByExternalReferenceCodePageSpecificationPublishResponses, DeleteSiteSiteByExternalReferenceCodePageTemplateData, DeleteSiteSiteByExternalReferenceCodePageTemplateResponses, GetSiteSiteByExternalReferenceCodePageTemplateData, GetSiteSiteByExternalReferenceCodePageTemplateResponses, PatchSiteSiteByExternalReferenceCodePageTemplateData, PatchSiteSiteByExternalReferenceCodePageTemplateResponses, PutSiteSiteByExternalReferenceCodePageTemplateData, PutSiteSiteByExternalReferenceCodePageTemplateResponses, GetSiteSiteByExternalReferenceCodePageTemplatePermissionsPageData, GetSiteSiteByExternalReferenceCodePageTemplatePermissionsPageResponses, PutSiteSiteByExternalReferenceCodePageTemplatePermissionsPageData, PutSiteSiteByExternalReferenceCodePageTemplatePermissionsPageResponses, GetSiteSiteByExternalReferenceCodePageTemplateSetPageTemplatesPageData, GetSiteSiteByExternalReferenceCodePageTemplateSetPageTemplatesPageResponses, PostSiteSiteByExternalReferenceCodePageTemplateSetPageTemplateData, PostSiteSiteByExternalReferenceCodePageTemplateSetPageTemplateResponses, GetSiteSiteByExternalReferenceCodePageTemplatesPageData, GetSiteSiteByExternalReferenceCodePageTemplatesPageResponses, PostSiteSiteByExternalReferenceCodePageTemplateData, PostSiteSiteByExternalReferenceCodePageTemplateResponses, GetSiteSiteExternalReferenceCodePageTemplatePermissionsPageData, GetSiteSiteExternalReferenceCodePageTemplatePermissionsPageResponses, PutSiteSiteExternalReferenceCodePageTemplatePermissionsPageData, PutSiteSiteExternalReferenceCodePageTemplatePermissionsPageResponses, DeleteSiteSiteByExternalReferenceCodePageTemplateSetData, DeleteSiteSiteByExternalReferenceCodePageTemplateSetResponses, GetSiteSiteByExternalReferenceCodePageTemplateSetData, GetSiteSiteByExternalReferenceCodePageTemplateSetResponses, PatchSiteSiteByExternalReferenceCodePageTemplateSetData, PatchSiteSiteByExternalReferenceCodePageTemplateSetResponses, PutSiteSiteByExternalReferenceCodePageTemplateSetData, PutSiteSiteByExternalReferenceCodePageTemplateSetResponses, GetSiteSiteByExternalReferenceCodePageTemplateSetPermissionsPageData, GetSiteSiteByExternalReferenceCodePageTemplateSetPermissionsPageResponses, PutSiteSiteByExternalReferenceCodePageTemplateSetPermissionsPageData, PutSiteSiteByExternalReferenceCodePageTemplateSetPermissionsPageResponses, GetSiteSiteByExternalReferenceCodePageTemplateSetsPageData, GetSiteSiteByExternalReferenceCodePageTemplateSetsPageResponses, PostSiteSiteByExternalReferenceCodePageTemplateSetData, PostSiteSiteByExternalReferenceCodePageTemplateSetResponses, GetSiteSiteExternalReferenceCodePageTemplateSetPermissionsPageData, GetSiteSiteExternalReferenceCodePageTemplateSetPermissionsPageResponses, PutSiteSiteExternalReferenceCodePageTemplateSetPermissionsPageData, PutSiteSiteExternalReferenceCodePageTemplateSetPermissionsPageResponses, DeleteSiteSiteByExternalReferenceCodeSitePageData, DeleteSiteSiteByExternalReferenceCodeSitePageResponses, GetSiteSiteByExternalReferenceCodeSitePageData, GetSiteSiteByExternalReferenceCodeSitePageResponses, PatchSiteSiteByExternalReferenceCodeSitePageData, PatchSiteSiteByExternalReferenceCodeSitePageResponses, PutSiteSiteByExternalReferenceCodeSitePageData, PutSiteSiteByExternalReferenceCodeSitePageResponses, GetSiteSiteByExternalReferenceCodeSitePagePermissionsPageData, GetSiteSiteByExternalReferenceCodeSitePagePermissionsPageResponses, PutSiteSiteByExternalReferenceCodeSitePagePermissionsPageData, PutSiteSiteByExternalReferenceCodeSitePagePermissionsPageResponses, GetSiteSiteByExternalReferenceCodeSitePagesPageData, GetSiteSiteByExternalReferenceCodeSitePagesPageResponses, PostByExternalReferenceCodeSitePageData, PostByExternalReferenceCodeSitePageResponses, GetSiteSiteExternalReferenceCodeSitePagePermissionsPageData, GetSiteSiteExternalReferenceCodeSitePagePermissionsPageResponses, PutSiteSiteExternalReferenceCodeSitePagePermissionsPageData, PutSiteSiteExternalReferenceCodeSitePagePermissionsPageResponses, DeleteSiteSiteByExternalReferenceCodeUtilityPageData, DeleteSiteSiteByExternalReferenceCodeUtilityPageResponses, GetSiteSiteByExternalReferenceCodeUtilityPageData, GetSiteSiteByExternalReferenceCodeUtilityPageResponses, PatchSiteSiteByExternalReferenceCodeUtilityPageData, PatchSiteSiteByExternalReferenceCodeUtilityPageResponses, PutSiteSiteByExternalReferenceCodeUtilityPageData, PutSiteSiteByExternalReferenceCodeUtilityPageResponses, GetSiteSiteByExternalReferenceCodeUtilityPagePermissionsPageData, GetSiteSiteByExternalReferenceCodeUtilityPagePermissionsPageResponses, PutSiteSiteByExternalReferenceCodeUtilityPagePermissionsPageData, PutSiteSiteByExternalReferenceCodeUtilityPagePermissionsPageResponses, GetSiteSiteByExternalReferenceCodeUtilityPagesPageData, GetSiteSiteByExternalReferenceCodeUtilityPagesPageResponses, PostSiteSiteByExternalReferenceCodeUtilityPageData, PostSiteSiteByExternalReferenceCodeUtilityPageResponses, GetSiteSiteExternalReferenceCodeUtilityPagePermissionsPageData, GetSiteSiteExternalReferenceCodeUtilityPagePermissionsPageResponses, PutSiteSiteExternalReferenceCodeUtilityPagePermissionsPageData, PutSiteSiteExternalReferenceCodeUtilityPagePermissionsPageResponses, DeleteSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCodeData, DeleteSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCodeResponses, GetSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCodeData, GetSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCodeResponses, PatchSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCodeData, PatchSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCodeResponses, PutSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCodeData, PutSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCodeResponses, GetSiteSiteByExternalReferenceCodeSitePageWidgetInstancesPageData, GetSiteSiteByExternalReferenceCodeSitePageWidgetInstancesPageResponses, PostSiteSiteByExternalReferenceCodeSitePageWidgetInstanceData, PostSiteSiteByExternalReferenceCodeSitePageWidgetInstanceResponses } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Deletes a specific display page template folder of a site.
 */
export const deleteSiteSiteByExternalReferenceCodeDisplayPageTemplateFolder = <ThrowOnError extends boolean = false>(options: Options<DeleteSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-template-folders/{displayPageTemplateFolderExternalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves a specific display page template folder of a site.
 */
export const getSiteSiteByExternalReferenceCodeDisplayPageTemplateFolder = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-template-folders/{displayPageTemplateFolderExternalReferenceCode}',
        ...options
    });
};

/**
 * Updates only the fields received in the request body, leaving any other fields untouched.
 */
export const patchSiteSiteByExternalReferenceCodeDisplayPageTemplateFolder = <ThrowOnError extends boolean = false>(options: Options<PatchSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-template-folders/{displayPageTemplateFolderExternalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Updates the display page template folder with the given external reference code, or creates it if it does not exist.
 */
export const putSiteSiteByExternalReferenceCodeDisplayPageTemplateFolder = <ThrowOnError extends boolean = false>(options: Options<PutSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-template-folders/{displayPageTemplateFolderExternalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-template-folders/permissions',
        ...options
    });
};

export const putSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-template-folders/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the display page template folders of the site.
 */
export const getSiteSiteByExternalReferenceCodeDisplayPageTemplateFoldersPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodeDisplayPageTemplateFoldersPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodeDisplayPageTemplateFoldersPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-template-folders',
        ...options
    });
};

/**
 * Adds a new display page template folder.
 */
export const postSiteSiteByExternalReferenceCodeDisplayPageTemplateFolder = <ThrowOnError extends boolean = false>(options: Options<PostSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-template-folders',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getSiteSiteExternalReferenceCodeDisplayPageTemplateFolderPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteExternalReferenceCodeDisplayPageTemplateFolderPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteExternalReferenceCodeDisplayPageTemplateFolderPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-template-folders/{displayPageTemplateFolderExternalReferenceCode}/permissions',
        ...options
    });
};

export const putSiteSiteExternalReferenceCodeDisplayPageTemplateFolderPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutSiteSiteExternalReferenceCodeDisplayPageTemplateFolderPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteSiteExternalReferenceCodeDisplayPageTemplateFolderPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-template-folders/{displayPageTemplateFolderExternalReferenceCode}/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Deletes a specific display page template of a site.
 */
export const deleteSiteSiteByExternalReferenceCodeDisplayPageTemplate = <ThrowOnError extends boolean = false>(options: Options<DeleteSiteSiteByExternalReferenceCodeDisplayPageTemplateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSiteSiteByExternalReferenceCodeDisplayPageTemplateResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-templates/{displayPageTemplateExternalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves a specific display page template of a site.
 */
export const getSiteSiteByExternalReferenceCodeDisplayPageTemplate = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodeDisplayPageTemplateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodeDisplayPageTemplateResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-templates/{displayPageTemplateExternalReferenceCode}',
        ...options
    });
};

/**
 * Updates only the fields received in the request body, leaving any other fields untouched.
 */
export const patchSiteSiteByExternalReferenceCodeDisplayPageTemplate = <ThrowOnError extends boolean = false>(options: Options<PatchSiteSiteByExternalReferenceCodeDisplayPageTemplateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchSiteSiteByExternalReferenceCodeDisplayPageTemplateResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-templates/{displayPageTemplateExternalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Updates the display page template with the given external reference code, or creates it if it does not exist.
 */
export const putSiteSiteByExternalReferenceCodeDisplayPageTemplate = <ThrowOnError extends boolean = false>(options: Options<PutSiteSiteByExternalReferenceCodeDisplayPageTemplateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteSiteByExternalReferenceCodeDisplayPageTemplateResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-templates/{displayPageTemplateExternalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves all the display page templates within a display page template folder of a site page.
 */
export const getSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderDisplayPageTemplatesPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderDisplayPageTemplatesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderDisplayPageTemplatesPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-template-folders/{displayPageTemplateFolderExternalReferenceCode}/display-page-templates',
        ...options
    });
};

/**
 * Adds a new display page template in draft status to a display page template folder.
 */
export const postSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderDisplayPageTemplate = <ThrowOnError extends boolean = false>(options: Options<PostSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderDisplayPageTemplateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderDisplayPageTemplateResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-template-folders/{displayPageTemplateFolderExternalReferenceCode}/display-page-templates',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getSiteSiteByExternalReferenceCodeDisplayPageTemplatePermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodeDisplayPageTemplatePermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodeDisplayPageTemplatePermissionsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-templates/permissions',
        ...options
    });
};

export const putSiteSiteByExternalReferenceCodeDisplayPageTemplatePermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutSiteSiteByExternalReferenceCodeDisplayPageTemplatePermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteSiteByExternalReferenceCodeDisplayPageTemplatePermissionsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-templates/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the display page templates of the site
 */
export const getSiteSiteByExternalReferenceCodeDisplayPageTemplatesPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodeDisplayPageTemplatesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodeDisplayPageTemplatesPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-templates',
        ...options
    });
};

/**
 * Adds a new display page template
 */
export const postSiteSiteByExternalReferenceCodeDisplayPageTemplate = <ThrowOnError extends boolean = false>(options: Options<PostSiteSiteByExternalReferenceCodeDisplayPageTemplateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteSiteByExternalReferenceCodeDisplayPageTemplateResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-templates',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getSiteSiteExternalReferenceCodeDisplayPageTemplatePermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteExternalReferenceCodeDisplayPageTemplatePermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteExternalReferenceCodeDisplayPageTemplatePermissionsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-templates/{displayPageTemplateExternalReferenceCode}/permissions',
        ...options
    });
};

export const putSiteSiteExternalReferenceCodeDisplayPageTemplatePermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutSiteSiteExternalReferenceCodeDisplayPageTemplatePermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteSiteExternalReferenceCodeDisplayPageTemplatePermissionsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-templates/{displayPageTemplateExternalReferenceCode}/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves all the page specifications of a display page template.
 */
export const getSiteSiteByExternalReferenceCodeDisplayPageTemplatePageSpecificationsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodeDisplayPageTemplatePageSpecificationsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodeDisplayPageTemplatePageSpecificationsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-templates/{displayPageTemplateExternalReferenceCode}/page-specifications',
        ...options
    });
};

/**
 * Adds a new page specification in draft status to a display page template.
 */
export const postSiteSiteByExternalReferenceCodeDisplayPageTemplatePageSpecification = <ThrowOnError extends boolean = false>(options: Options<PostSiteSiteByExternalReferenceCodeDisplayPageTemplatePageSpecificationData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteSiteByExternalReferenceCodeDisplayPageTemplatePageSpecificationResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-templates/{displayPageTemplateExternalReferenceCode}/page-specifications',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Deletes a specific fragment composition of a site.
 */
export const deleteSiteSiteByExternalReferenceCodeFragmentComposition = <ThrowOnError extends boolean = false>(options: Options<DeleteSiteSiteByExternalReferenceCodeFragmentCompositionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSiteSiteByExternalReferenceCodeFragmentCompositionResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/fragment-compositions/{fragmentCompositionExternalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves a specific fragment composition of a site.
 */
export const getSiteSiteByExternalReferenceCodeFragmentComposition = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodeFragmentCompositionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodeFragmentCompositionResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/fragment-compositions/{fragmentCompositionExternalReferenceCode}',
        ...options
    });
};

/**
 * Updates only the fields received in the request body, leaving any other fields untouched.
 */
export const patchSiteSiteByExternalReferenceCodeFragmentComposition = <ThrowOnError extends boolean = false>(options: Options<PatchSiteSiteByExternalReferenceCodeFragmentCompositionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchSiteSiteByExternalReferenceCodeFragmentCompositionResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/fragment-compositions/{fragmentCompositionExternalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Updates the fragment composition with the given external reference code, or creates it if it does not exist.
 */
export const putSiteSiteByExternalReferenceCodeFragmentComposition = <ThrowOnError extends boolean = false>(options: Options<PutSiteSiteByExternalReferenceCodeFragmentCompositionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteSiteByExternalReferenceCodeFragmentCompositionResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/fragment-compositions/{fragmentCompositionExternalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the fragment compositions of the site.
 */
export const getSiteSiteByExternalReferenceCodeFragmentCompositionsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodeFragmentCompositionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodeFragmentCompositionsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/fragment-compositions',
        ...options
    });
};

/**
 * Adds a new fragment composition. If the page element of the fragment composition does not contain a definition property and contains an external reference code, the page element will be retrieved based on the externalReferenceCode and used for creating the fragment composition.
 */
export const postSiteSiteByExternalReferenceCodeFragmentComposition = <ThrowOnError extends boolean = false>(options: Options<PostSiteSiteByExternalReferenceCodeFragmentCompositionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteSiteByExternalReferenceCodeFragmentCompositionResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/fragment-compositions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the history of previously used URLs for a display page template.
 */
export const getSiteSiteByExternalReferenceCodeDisplayPageTemplateFriendlyUrlHistory = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodeDisplayPageTemplateFriendlyUrlHistoryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodeDisplayPageTemplateFriendlyUrlHistoryResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-templates/{displayPageTemplateExternalReferenceCode}/friendly-url-history',
        ...options
    });
};

/**
 * Retrieves the history of previously used URLs for a page.
 */
export const getSiteSiteByExternalReferenceCodeSitePageFriendlyUrlHistory = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodeSitePageFriendlyUrlHistoryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodeSitePageFriendlyUrlHistoryResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}/friendly-url-history',
        ...options
    });
};

/**
 * Retrieves the history of previously used URLs for a utility page.
 */
export const getSiteSiteByExternalReferenceCodeUtilityPageFriendlyUrlHistory = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodeUtilityPageFriendlyUrlHistoryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodeUtilityPageFriendlyUrlHistoryResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/utility-pages/{utilityPageExternalReferenceCode}/friendly-url-history',
        ...options
    });
};

/**
 * Deletes a specific master page of a site.
 */
export const deleteSiteSiteByExternalReferenceCodeMasterPage = <ThrowOnError extends boolean = false>(options: Options<DeleteSiteSiteByExternalReferenceCodeMasterPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSiteSiteByExternalReferenceCodeMasterPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/master-pages/{masterPageExternalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves a specific master page of a site.
 */
export const getSiteSiteByExternalReferenceCodeMasterPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodeMasterPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodeMasterPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/master-pages/{masterPageExternalReferenceCode}',
        ...options
    });
};

/**
 * Updates only the fields received in the request body, leaving any other fields untouched.
 */
export const patchSiteSiteByExternalReferenceCodeMasterPage = <ThrowOnError extends boolean = false>(options: Options<PatchSiteSiteByExternalReferenceCodeMasterPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchSiteSiteByExternalReferenceCodeMasterPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/master-pages/{masterPageExternalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Updates the master page with the given external reference code, or creates it if it does not exist.
 */
export const putSiteSiteByExternalReferenceCodeMasterPage = <ThrowOnError extends boolean = false>(options: Options<PutSiteSiteByExternalReferenceCodeMasterPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteSiteByExternalReferenceCodeMasterPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/master-pages/{masterPageExternalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getSiteSiteByExternalReferenceCodeMasterPagePermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodeMasterPagePermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodeMasterPagePermissionsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/master-pages/permissions',
        ...options
    });
};

export const putSiteSiteByExternalReferenceCodeMasterPagePermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutSiteSiteByExternalReferenceCodeMasterPagePermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteSiteByExternalReferenceCodeMasterPagePermissionsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/master-pages/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the master pages of the site.
 */
export const getSiteSiteByExternalReferenceCodeMasterPagesPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodeMasterPagesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodeMasterPagesPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/master-pages',
        ...options
    });
};

/**
 * Adds a new master page.
 */
export const postSiteSiteByExternalReferenceCodeMasterPage = <ThrowOnError extends boolean = false>(options: Options<PostSiteSiteByExternalReferenceCodeMasterPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteSiteByExternalReferenceCodeMasterPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/master-pages',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getSiteSiteExternalReferenceCodeMasterPagePermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteExternalReferenceCodeMasterPagePermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteExternalReferenceCodeMasterPagePermissionsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/master-pages/{masterPageExternalReferenceCode}/permissions',
        ...options
    });
};

export const putSiteSiteExternalReferenceCodeMasterPagePermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutSiteSiteExternalReferenceCodeMasterPagePermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteSiteExternalReferenceCodeMasterPagePermissionsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/master-pages/{masterPageExternalReferenceCode}/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves all the page specifications of a master page.
 */
export const getSiteSiteByExternalReferenceCodeMasterPagePageSpecificationsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodeMasterPagePageSpecificationsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodeMasterPagePageSpecificationsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/master-pages/{masterPageExternalReferenceCode}/page-specifications',
        ...options
    });
};

/**
 * Adds a new page specification in draft status to a master page.
 */
export const postSiteSiteByExternalReferenceCodeMasterPagePageSpecification = <ThrowOnError extends boolean = false>(options: Options<PostSiteSiteByExternalReferenceCodeMasterPagePageSpecificationData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteSiteByExternalReferenceCodeMasterPagePageSpecificationResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/master-pages/{masterPageExternalReferenceCode}/page-specifications',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Deletes a page element within an experience of a specific page specification of a site page within a site.
 */
export const deleteSiteSiteByExternalReferenceCodePageElement = <ThrowOnError extends boolean = false>(options: Options<DeleteSiteSiteByExternalReferenceCodePageElementData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSiteSiteByExternalReferenceCodePageElementResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}/page-elements/{pageElementExternalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves a page element within an experience of a specific page specification of a site page within a site.
 */
export const getSiteSiteByExternalReferenceCodePageElement = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodePageElementData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodePageElementResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}/page-elements/{pageElementExternalReferenceCode}',
        ...options
    });
};

/**
 * Updates a page element within an experience of a specific page specification of a site page within a site. Updates only the fields received in the request body, leaving any other fields untouched.
 */
export const patchSiteSiteByExternalReferenceCodePageElement = <ThrowOnError extends boolean = false>(options: Options<PatchSiteSiteByExternalReferenceCodePageElementData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchSiteSiteByExternalReferenceCodePageElementResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}/page-elements/{pageElementExternalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Updates a page element within an experience of a specific page specification of a site page within a site.
 */
export const putSiteSiteByExternalReferenceCodePageElement = <ThrowOnError extends boolean = false>(options: Options<PutSiteSiteByExternalReferenceCodePageElementData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteSiteByExternalReferenceCodePageElementResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}/page-elements/{pageElementExternalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves all the descendant page elements of a page element within an experience in a page specification of a site page.
 */
export const getSiteSiteByExternalReferenceCodePageElementPageElementsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodePageElementPageElementsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodePageElementPageElementsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}/page-elements/{pageElementExternalReferenceCode}/page-elements',
        ...options
    });
};

/**
 * Retrieves all the page elements within an experience in a page specification of a site page.
 */
export const getSiteSiteByExternalReferenceCodePageExperiencePageElementsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodePageExperiencePageElementsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodePageExperiencePageElementsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}/page-elements',
        ...options
    });
};

/**
 * Adds a new page element to an experience in a page specification in draft status of a site page.
 */
export const postSiteSiteByExternalReferenceCodePageExperiencePageElement = <ThrowOnError extends boolean = false>(options: Options<PostSiteSiteByExternalReferenceCodePageExperiencePageElementData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteSiteByExternalReferenceCodePageExperiencePageElementResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}/page-elements',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Adds a new fragment composition under a page element of an experience in a page specification of a site page. If successful, the response will contain the page element in which the fragment composition is converted.
 */
export const postSiteSiteByExternalReferenceCodePageElementFragmentComposition = <ThrowOnError extends boolean = false>(options: Options<PostSiteSiteByExternalReferenceCodePageElementFragmentCompositionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteSiteByExternalReferenceCodePageElementFragmentCompositionResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}/page-elements/{pageElementExternalReferenceCode}/fragment-compositions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Deletes an experience of a specific page specification of a site page within a site. The default experience cannot be deleted.
 */
export const deleteSiteSiteByExternalReferenceCodePageExperience = <ThrowOnError extends boolean = false>(options: Options<DeleteSiteSiteByExternalReferenceCodePageExperienceData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSiteSiteByExternalReferenceCodePageExperienceResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves an experience of a specific page specification of a site page within a site.
 */
export const getSiteSiteByExternalReferenceCodePageExperience = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodePageExperienceData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodePageExperienceResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}',
        ...options
    });
};

/**
 * Updates an experience of a specific page specification of a site page within a site. Updates only the fields received in the request body, leaving any other fields untouched.
 */
export const patchSiteSiteByExternalReferenceCodePageExperience = <ThrowOnError extends boolean = false>(options: Options<PatchSiteSiteByExternalReferenceCodePageExperienceData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchSiteSiteByExternalReferenceCodePageExperienceResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Updates an experience of a specific page specification of a site page within a site.
 */
export const putSiteSiteByExternalReferenceCodePageExperience = <ThrowOnError extends boolean = false>(options: Options<PutSiteSiteByExternalReferenceCodePageExperienceData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteSiteByExternalReferenceCodePageExperienceResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves all the experiences of a page specification.
 */
export const getSiteSiteByExternalReferenceCodePageSpecificationPageExperiencesPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodePageSpecificationPageExperiencesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodePageSpecificationPageExperiencesPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}/page-experiences',
        ...options
    });
};

/**
 * Adds a new experience to a page specification of a site page.
 */
export const postSiteSiteByExternalReferenceCodePageSpecificationPageExperience = <ThrowOnError extends boolean = false>(options: Options<PostSiteSiteByExternalReferenceCodePageSpecificationPageExperienceData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteSiteByExternalReferenceCodePageSpecificationPageExperienceResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}/page-experiences',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Deletes a page rule action within a page rule of an experience of a specific page specification of a site page within a site.
 */
export const deleteSiteSiteByExternalReferenceCodePageRuleAction = <ThrowOnError extends boolean = false>(options: Options<DeleteSiteSiteByExternalReferenceCodePageRuleActionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSiteSiteByExternalReferenceCodePageRuleActionResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rule-actions/{pageRuleActionExternalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves a page rule action within a page rule of an experience of a specific page specification of a site page within a site.
 */
export const getSiteSiteByExternalReferenceCodePageRuleAction = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodePageRuleActionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodePageRuleActionResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rule-actions/{pageRuleActionExternalReferenceCode}',
        ...options
    });
};

/**
 * Updates a page rule action within a page rule of an experience of a specific page specification of a site page within a site. Updates only the fields received in the request body, leaving any other fields untouched.
 */
export const patchSiteSiteByExternalReferenceCodePageRuleAction = <ThrowOnError extends boolean = false>(options: Options<PatchSiteSiteByExternalReferenceCodePageRuleActionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchSiteSiteByExternalReferenceCodePageRuleActionResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rule-actions/{pageRuleActionExternalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Updates a page rule action within a page rule of an experience of a specific page specification of a site page within a site.
 */
export const putSiteSiteByExternalReferenceCodePageRuleAction = <ThrowOnError extends boolean = false>(options: Options<PutSiteSiteByExternalReferenceCodePageRuleActionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteSiteByExternalReferenceCodePageRuleActionResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rule-actions/{pageRuleActionExternalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves all the page rule action actions within an experience in a page specification of a site page.
 */
export const getSiteSiteByExternalReferenceCodePageRulePageRuleActionsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodePageRulePageRuleActionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodePageRulePageRuleActionsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rules/{pageRuleExternalReferenceCode}/page-rule-actions',
        ...options
    });
};

/**
 * Adds a new page rule action to a page rule in an experience in a page specification in draft status of a site page.
 */
export const postSiteSiteByExternalReferenceCodePageRulePageRuleAction = <ThrowOnError extends boolean = false>(options: Options<PostSiteSiteByExternalReferenceCodePageRulePageRuleActionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteSiteByExternalReferenceCodePageRulePageRuleActionResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rules/{pageRuleExternalReferenceCode}/page-rule-actions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Deletes a page rule condition within a page rule of an experience of a specific page specification of a site page within a site.
 */
export const deleteSiteSiteByExternalReferenceCodePageRuleCondition = <ThrowOnError extends boolean = false>(options: Options<DeleteSiteSiteByExternalReferenceCodePageRuleConditionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSiteSiteByExternalReferenceCodePageRuleConditionResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rule-conditions/{pageRuleConditionExternalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves a page rule condition within a page rule of an experience of a specific page specification of a site page within a site.
 */
export const getSiteSiteByExternalReferenceCodePageRuleCondition = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodePageRuleConditionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodePageRuleConditionResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rule-conditions/{pageRuleConditionExternalReferenceCode}',
        ...options
    });
};

/**
 * Updates a page rule condition within a page rule of an experience of a specific page specification of a site page within a site. Updates only the fields received in the request body, leaving any other fields untouched.
 */
export const patchSiteSiteByExternalReferenceCodePageRuleCondition = <ThrowOnError extends boolean = false>(options: Options<PatchSiteSiteByExternalReferenceCodePageRuleConditionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchSiteSiteByExternalReferenceCodePageRuleConditionResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rule-conditions/{pageRuleConditionExternalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Updates a page rule condition within a page rule of an experience of a specific page specification of a site page within a site.
 */
export const putSiteSiteByExternalReferenceCodePageRuleCondition = <ThrowOnError extends boolean = false>(options: Options<PutSiteSiteByExternalReferenceCodePageRuleConditionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteSiteByExternalReferenceCodePageRuleConditionResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rule-conditions/{pageRuleConditionExternalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves all the page rule condition conditions within an experience in a page specification of a site page.
 */
export const getSiteSiteByExternalReferenceCodePageRulePageRuleConditionsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodePageRulePageRuleConditionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodePageRulePageRuleConditionsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rules/{pageRuleExternalReferenceCode}/page-rule-conditions',
        ...options
    });
};

/**
 * Adds a new page rule condition to a page rule in an experience in a page specification in draft status of a site page.
 */
export const postSiteSiteByExternalReferenceCodePageRulePageRuleCondition = <ThrowOnError extends boolean = false>(options: Options<PostSiteSiteByExternalReferenceCodePageRulePageRuleConditionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteSiteByExternalReferenceCodePageRulePageRuleConditionResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rules/{pageRuleExternalReferenceCode}/page-rule-conditions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Deletes a page rule within an experience of a specific page specification of a site page within a site.
 */
export const deleteSiteSiteByExternalReferenceCodePageRule = <ThrowOnError extends boolean = false>(options: Options<DeleteSiteSiteByExternalReferenceCodePageRuleData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSiteSiteByExternalReferenceCodePageRuleResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rules/{pageRuleExternalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves page rule within an experience of a specific page specification of a site page within a site.
 */
export const getSiteSiteByExternalReferenceCodePageRule = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodePageRuleData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodePageRuleResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rules/{pageRuleExternalReferenceCode}',
        ...options
    });
};

/**
 * Updates a page rule within an experience of a specific page specification of a site page within a site. Updates only the fields received in the request body, leaving any other fields untouched.
 */
export const patchSiteSiteByExternalReferenceCodePageRule = <ThrowOnError extends boolean = false>(options: Options<PatchSiteSiteByExternalReferenceCodePageRuleData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchSiteSiteByExternalReferenceCodePageRuleResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rules/{pageRuleExternalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Updates a page rule within an experience of a specific page specification of a site page within a site.
 */
export const putSiteSiteByExternalReferenceCodePageRule = <ThrowOnError extends boolean = false>(options: Options<PutSiteSiteByExternalReferenceCodePageRuleData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteSiteByExternalReferenceCodePageRuleResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rules/{pageRuleExternalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves all the page rules within an experience in a page specification of a site page.
 */
export const getSiteSiteByExternalReferenceCodePageExperiencePageRulesPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodePageExperiencePageRulesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodePageExperiencePageRulesPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}/page-rules',
        ...options
    });
};

/**
 * Adds a new page rule to an experience in a page specification in draft status of a site page.
 */
export const postSiteSiteByExternalReferenceCodePageExperiencePageRule = <ThrowOnError extends boolean = false>(options: Options<PostSiteSiteByExternalReferenceCodePageExperiencePageRuleData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteSiteByExternalReferenceCodePageExperiencePageRuleResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}/page-rules',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Deletes a page specification of a site page.
 */
export const deleteSiteSiteByExternalReferenceCodePageSpecification = <ThrowOnError extends boolean = false>(options: Options<DeleteSiteSiteByExternalReferenceCodePageSpecificationData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSiteSiteByExternalReferenceCodePageSpecificationResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves a page specification of a site page.
 */
export const getSiteSiteByExternalReferenceCodePageSpecification = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodePageSpecificationData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodePageSpecificationResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}',
        ...options
    });
};

/**
 * Updates a page specification of a site page. Updates only the fields received in the request body, leaving any other fields untouched.
 */
export const patchSiteSiteByExternalReferenceCodePageSpecification = <ThrowOnError extends boolean = false>(options: Options<PatchSiteSiteByExternalReferenceCodePageSpecificationData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchSiteSiteByExternalReferenceCodePageSpecificationResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Updates a page specification of a site page.
 */
export const putSiteSiteByExternalReferenceCodePageSpecification = <ThrowOnError extends boolean = false>(options: Options<PutSiteSiteByExternalReferenceCodePageSpecificationData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteSiteByExternalReferenceCodePageSpecificationResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves all the page specifications of a page template.
 */
export const getSiteSiteByExternalReferenceCodePageTemplatePageSpecificationsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodePageTemplatePageSpecificationsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodePageTemplatePageSpecificationsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-templates/{pageTemplateExternalReferenceCode}/page-specifications',
        ...options
    });
};

/**
 * Adds a new page specification in draft status to a page template.
 */
export const postSiteSiteByExternalReferenceCodePageTemplatePageSpecification = <ThrowOnError extends boolean = false>(options: Options<PostSiteSiteByExternalReferenceCodePageTemplatePageSpecificationData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteSiteByExternalReferenceCodePageTemplatePageSpecificationResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-templates/{pageTemplateExternalReferenceCode}/page-specifications',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves all the page specifications of a site page.
 */
export const getSiteSiteByExternalReferenceCodeSitePagePageSpecificationsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodeSitePagePageSpecificationsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodeSitePagePageSpecificationsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}/page-specifications',
        ...options
    });
};

/**
 * Adds a new page specification to a site page.
 */
export const postSiteSiteByExternalReferenceCodeSitePagePageSpecification = <ThrowOnError extends boolean = false>(options: Options<PostSiteSiteByExternalReferenceCodeSitePagePageSpecificationData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteSiteByExternalReferenceCodeSitePagePageSpecificationResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}/page-specifications',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves all the page specifications of a utility page.
 */
export const getSiteSiteByExternalReferenceCodeUtilityPagePageSpecificationsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodeUtilityPagePageSpecificationsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodeUtilityPagePageSpecificationsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/utility-pages/{utilityPageExternalReferenceCode}/page-specifications',
        ...options
    });
};

/**
 * Adds a new page specification to a utility page.
 */
export const postSiteSiteByExternalReferenceCodeUtilityPagePageSpecification = <ThrowOnError extends boolean = false>(options: Options<PostSiteSiteByExternalReferenceCodeUtilityPagePageSpecificationData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteSiteByExternalReferenceCodeUtilityPagePageSpecificationResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/utility-pages/{utilityPageExternalReferenceCode}/page-specifications',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Publishes a page specification in draft status of a site page.
 */
export const postSiteSiteByExternalReferenceCodePageSpecificationPublish = <ThrowOnError extends boolean = false>(options: Options<PostSiteSiteByExternalReferenceCodePageSpecificationPublishData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteSiteByExternalReferenceCodePageSpecificationPublishResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}/publish',
        ...options
    });
};

/**
 * Deletes a specific page template of a site.
 */
export const deleteSiteSiteByExternalReferenceCodePageTemplate = <ThrowOnError extends boolean = false>(options: Options<DeleteSiteSiteByExternalReferenceCodePageTemplateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSiteSiteByExternalReferenceCodePageTemplateResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-templates/{pageTemplateExternalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves a specific page template of a site.
 */
export const getSiteSiteByExternalReferenceCodePageTemplate = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodePageTemplateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodePageTemplateResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-templates/{pageTemplateExternalReferenceCode}',
        ...options
    });
};

/**
 * Updates only the fields received in the request body, leaving any other fields untouched.
 */
export const patchSiteSiteByExternalReferenceCodePageTemplate = <ThrowOnError extends boolean = false>(options: Options<PatchSiteSiteByExternalReferenceCodePageTemplateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchSiteSiteByExternalReferenceCodePageTemplateResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-templates/{pageTemplateExternalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Updates the page template with the given external reference code, or creates it if it does not exist.
 */
export const putSiteSiteByExternalReferenceCodePageTemplate = <ThrowOnError extends boolean = false>(options: Options<PutSiteSiteByExternalReferenceCodePageTemplateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteSiteByExternalReferenceCodePageTemplateResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-templates/{pageTemplateExternalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getSiteSiteByExternalReferenceCodePageTemplatePermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodePageTemplatePermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodePageTemplatePermissionsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-templates/permissions',
        ...options
    });
};

export const putSiteSiteByExternalReferenceCodePageTemplatePermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutSiteSiteByExternalReferenceCodePageTemplatePermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteSiteByExternalReferenceCodePageTemplatePermissionsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-templates/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves all the page templates within a page template set of a site page.
 */
export const getSiteSiteByExternalReferenceCodePageTemplateSetPageTemplatesPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodePageTemplateSetPageTemplatesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodePageTemplateSetPageTemplatesPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-template-sets/{pageTemplateSetExternalReferenceCode}/page-templates',
        ...options
    });
};

/**
 * Adds a new page template in draft status to a page template set.
 */
export const postSiteSiteByExternalReferenceCodePageTemplateSetPageTemplate = <ThrowOnError extends boolean = false>(options: Options<PostSiteSiteByExternalReferenceCodePageTemplateSetPageTemplateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteSiteByExternalReferenceCodePageTemplateSetPageTemplateResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-template-sets/{pageTemplateSetExternalReferenceCode}/page-templates',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the page templates of the site
 */
export const getSiteSiteByExternalReferenceCodePageTemplatesPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodePageTemplatesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodePageTemplatesPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-templates',
        ...options
    });
};

/**
 * Adds a new page template
 */
export const postSiteSiteByExternalReferenceCodePageTemplate = <ThrowOnError extends boolean = false>(options: Options<PostSiteSiteByExternalReferenceCodePageTemplateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteSiteByExternalReferenceCodePageTemplateResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-templates',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getSiteSiteExternalReferenceCodePageTemplatePermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteExternalReferenceCodePageTemplatePermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteExternalReferenceCodePageTemplatePermissionsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-templates/{pageTemplateExternalReferenceCode}/permissions',
        ...options
    });
};

export const putSiteSiteExternalReferenceCodePageTemplatePermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutSiteSiteExternalReferenceCodePageTemplatePermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteSiteExternalReferenceCodePageTemplatePermissionsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-templates/{pageTemplateExternalReferenceCode}/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Deletes a specific page template set of a site.
 */
export const deleteSiteSiteByExternalReferenceCodePageTemplateSet = <ThrowOnError extends boolean = false>(options: Options<DeleteSiteSiteByExternalReferenceCodePageTemplateSetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSiteSiteByExternalReferenceCodePageTemplateSetResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-template-sets/{pageTemplateSetExternalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves a specific page template set of a site.
 */
export const getSiteSiteByExternalReferenceCodePageTemplateSet = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodePageTemplateSetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodePageTemplateSetResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-template-sets/{pageTemplateSetExternalReferenceCode}',
        ...options
    });
};

/**
 * Updates only the fields received in the request body, leaving any other fields untouched.
 */
export const patchSiteSiteByExternalReferenceCodePageTemplateSet = <ThrowOnError extends boolean = false>(options: Options<PatchSiteSiteByExternalReferenceCodePageTemplateSetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchSiteSiteByExternalReferenceCodePageTemplateSetResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-template-sets/{pageTemplateSetExternalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Updates the page template set with the given external reference code, or creates it if it does not exist.
 */
export const putSiteSiteByExternalReferenceCodePageTemplateSet = <ThrowOnError extends boolean = false>(options: Options<PutSiteSiteByExternalReferenceCodePageTemplateSetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteSiteByExternalReferenceCodePageTemplateSetResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-template-sets/{pageTemplateSetExternalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getSiteSiteByExternalReferenceCodePageTemplateSetPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodePageTemplateSetPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodePageTemplateSetPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-template-sets/permissions',
        ...options
    });
};

export const putSiteSiteByExternalReferenceCodePageTemplateSetPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutSiteSiteByExternalReferenceCodePageTemplateSetPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteSiteByExternalReferenceCodePageTemplateSetPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-template-sets/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the page template sets of the site
 */
export const getSiteSiteByExternalReferenceCodePageTemplateSetsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodePageTemplateSetsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodePageTemplateSetsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-template-sets',
        ...options
    });
};

/**
 * Adds a new page template set
 */
export const postSiteSiteByExternalReferenceCodePageTemplateSet = <ThrowOnError extends boolean = false>(options: Options<PostSiteSiteByExternalReferenceCodePageTemplateSetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteSiteByExternalReferenceCodePageTemplateSetResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-template-sets',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getSiteSiteExternalReferenceCodePageTemplateSetPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteExternalReferenceCodePageTemplateSetPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteExternalReferenceCodePageTemplateSetPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-template-sets/{pageTemplateSetExternalReferenceCode}/permissions',
        ...options
    });
};

export const putSiteSiteExternalReferenceCodePageTemplateSetPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutSiteSiteExternalReferenceCodePageTemplateSetPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteSiteExternalReferenceCodePageTemplateSetPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-template-sets/{pageTemplateSetExternalReferenceCode}/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Deletes a specific public page of a site.
 */
export const deleteSiteSiteByExternalReferenceCodeSitePage = <ThrowOnError extends boolean = false>(options: Options<DeleteSiteSiteByExternalReferenceCodeSitePageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSiteSiteByExternalReferenceCodeSitePageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves a specific public page of a site.
 */
export const getSiteSiteByExternalReferenceCodeSitePage = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodeSitePageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodeSitePageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}',
        ...options
    });
};

/**
 * Updates only the fields received in the request body, leaving any other fields untouched.
 */
export const patchSiteSiteByExternalReferenceCodeSitePage = <ThrowOnError extends boolean = false>(options: Options<PatchSiteSiteByExternalReferenceCodeSitePageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchSiteSiteByExternalReferenceCodeSitePageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Updates the site page with the given external reference code, or creates it if it does not exist.
 */
export const putSiteSiteByExternalReferenceCodeSitePage = <ThrowOnError extends boolean = false>(options: Options<PutSiteSiteByExternalReferenceCodeSitePageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteSiteByExternalReferenceCodeSitePageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getSiteSiteByExternalReferenceCodeSitePagePermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodeSitePagePermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodeSitePagePermissionsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/permissions',
        ...options
    });
};

export const putSiteSiteByExternalReferenceCodeSitePagePermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutSiteSiteByExternalReferenceCodeSitePagePermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteSiteByExternalReferenceCodeSitePagePermissionsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the public pages of the site
 */
export const getSiteSiteByExternalReferenceCodeSitePagesPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodeSitePagesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodeSitePagesPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages',
        ...options
    });
};

/**
 * Adds a new site page
 */
export const postByExternalReferenceCodeSitePage = <ThrowOnError extends boolean = false>(options: Options<PostByExternalReferenceCodeSitePageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostByExternalReferenceCodeSitePageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getSiteSiteExternalReferenceCodeSitePagePermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteExternalReferenceCodeSitePagePermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteExternalReferenceCodeSitePagePermissionsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}/permissions',
        ...options
    });
};

export const putSiteSiteExternalReferenceCodeSitePagePermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutSiteSiteExternalReferenceCodeSitePagePermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteSiteExternalReferenceCodeSitePagePermissionsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Deletes a specific utility page of a site.
 */
export const deleteSiteSiteByExternalReferenceCodeUtilityPage = <ThrowOnError extends boolean = false>(options: Options<DeleteSiteSiteByExternalReferenceCodeUtilityPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSiteSiteByExternalReferenceCodeUtilityPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/utility-pages/{utilityPageExternalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves a specific utility page of a site.
 */
export const getSiteSiteByExternalReferenceCodeUtilityPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodeUtilityPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodeUtilityPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/utility-pages/{utilityPageExternalReferenceCode}',
        ...options
    });
};

/**
 * Updates only the fields received in the request body, leaving any other fields untouched.
 */
export const patchSiteSiteByExternalReferenceCodeUtilityPage = <ThrowOnError extends boolean = false>(options: Options<PatchSiteSiteByExternalReferenceCodeUtilityPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchSiteSiteByExternalReferenceCodeUtilityPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/utility-pages/{utilityPageExternalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Updates the utility page with the given external reference code, or creates it if it does not exist.
 */
export const putSiteSiteByExternalReferenceCodeUtilityPage = <ThrowOnError extends boolean = false>(options: Options<PutSiteSiteByExternalReferenceCodeUtilityPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteSiteByExternalReferenceCodeUtilityPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/utility-pages/{utilityPageExternalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getSiteSiteByExternalReferenceCodeUtilityPagePermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodeUtilityPagePermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodeUtilityPagePermissionsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/utility-pages/permissions',
        ...options
    });
};

export const putSiteSiteByExternalReferenceCodeUtilityPagePermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutSiteSiteByExternalReferenceCodeUtilityPagePermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteSiteByExternalReferenceCodeUtilityPagePermissionsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/utility-pages/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the utility pages of the site.
 */
export const getSiteSiteByExternalReferenceCodeUtilityPagesPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodeUtilityPagesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodeUtilityPagesPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/utility-pages',
        ...options
    });
};

/**
 * Adds a new utility page
 */
export const postSiteSiteByExternalReferenceCodeUtilityPage = <ThrowOnError extends boolean = false>(options: Options<PostSiteSiteByExternalReferenceCodeUtilityPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteSiteByExternalReferenceCodeUtilityPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/utility-pages',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getSiteSiteExternalReferenceCodeUtilityPagePermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteExternalReferenceCodeUtilityPagePermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteExternalReferenceCodeUtilityPagePermissionsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/utility-pages/{utilityPageExternalReferenceCode}/permissions',
        ...options
    });
};

export const putSiteSiteExternalReferenceCodeUtilityPagePermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutSiteSiteExternalReferenceCodeUtilityPagePermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteSiteExternalReferenceCodeUtilityPagePermissionsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/utility-pages/{utilityPageExternalReferenceCode}/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Deletes a widget instance of a specific widget page or widget page template within a site.
 */
export const deleteSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}/widget-instances/{widgetInstanceExternalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves a widget instance of a widget page or widget page template within a site.
 */
export const getSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}/widget-instances/{widgetInstanceExternalReferenceCode}',
        ...options
    });
};

/**
 * Updates a widget instance of a widget page or widget page template within a site. Updates only the fields received in the request body, leaving any other fields untouched.
 */
export const patchSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PatchSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}/widget-instances/{widgetInstanceExternalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Updates a widget instance of a widget page or widget page template within a site.
 */
export const putSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PutSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}/widget-instances/{widgetInstanceExternalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves all the widget instances of a widget page.
 */
export const getSiteSiteByExternalReferenceCodeSitePageWidgetInstancesPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteSiteByExternalReferenceCodeSitePageWidgetInstancesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSiteByExternalReferenceCodeSitePageWidgetInstancesPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}/widget-instances',
        ...options
    });
};

/**
 * Adds a new widget instance to a widget page.
 */
export const postSiteSiteByExternalReferenceCodeSitePageWidgetInstance = <ThrowOnError extends boolean = false>(options: Options<PostSiteSiteByExternalReferenceCodeSitePageWidgetInstanceData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteSiteByExternalReferenceCodeSitePageWidgetInstanceResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}/widget-instances',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};