// This file is auto-generated by @hey-api/openapi-ts

export type Facet = {
    facetCriteria?: string;
    facetValues?: Array<FacetValue>;
};

export type FacetValue = {
    numberOfOccurrences?: number;
    term?: string;
};

export type PagePermission = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<Permission>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type Permission = {
    actionIds?: Array<string>;
    roleExternalReferenceCode?: string;
    roleName?: string;
    roleType?: string;
};

/**
 * The utility page's creator. It is not returned by default. It can be embedded via nestedFields.
 */
export type Creator = {
    /**
     * The user's additional name, which can be used as a middle name.
     */
    readonly additionalName?: string;
    /**
     * The type of the content.
     */
    readonly contentType?: string;
    /**
     * The user's surname (last name).
     */
    readonly familyName?: string;
    /**
     * The user's first name.
     */
    readonly givenName?: string;
    /**
     * The user's ID.
     */
    readonly id?: number;
    /**
     * A relative URL to the user's profile image.
     */
    readonly image?: string;
    /**
     * The user's full name.
     */
    readonly name?: string;
    /**
     * A relative URL to the user's profile.
     */
    readonly profileURL?: string;
    readonly 'x-class-name'?: string;
};

/**
 * The display page template's parent folder.
 */
export type DisplayPageTemplateFolder = {
    creator?: Creator;
    /**
     * The display page template folder's creator external reference code.
     */
    creatorExternalReferenceCode?: string;
    /**
     * The display page template folder's creation date.
     */
    dateCreated?: string;
    /**
     * The last time any field of the display page template folder was changed.
     */
    dateModified?: string;
    /**
     * The display page template folder's description.
     */
    description?: string;
    /**
     * The display page template folder's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The display page template folder's key.
     */
    key?: string;
    /**
     * The display page template folder's name.
     */
    name?: string;
    /**
     * The parent display page template folder's external reference code.
     */
    parentDisplayPageTemplateFolderExternalReferenceCode?: string;
    /**
     * A valid external identifier to reference this page template folder.
     */
    uuid?: string;
    readonly 'x-class-name'?: string;
};

export type PageDisplayPageTemplateFolder = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<DisplayPageTemplateFolder>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

/**
 * A reference specifying the class name.
 */
export type ClassNameReference = CollectionReference & {
    collectionType?: 'ClassNameReference';
} & {
    readonly 'x-class-name'?: string;
    className: string;
};

/**
 * A reference specifying the class name and an optional subtype.
 */
export type ClassSubtypeReference = {
    className: string;
    subTypeExternalReference?: ItemExternalReference;
    readonly 'x-class-name'?: string;
};

/**
 * The client extension for the theme spritemap of a page specification.
 */
export type ClientExtension = {
    /**
     * The configuration keys and values of the client extension.
     */
    clientExtensionConfig?: {
        [key: string]: string;
    };
    /**
     * The client extension's external reference code.
     */
    externalReferenceCode?: string;
    readonly 'x-class-name'?: string;
};

export type CollectionItemExternalReference = CollectionReference & {
    collectionType?: 'CollectionItemExternalReference';
} & {
    readonly 'x-class-name'?: string;
    className?: string;
    externalReferenceCode?: string;
    scope?: Scope;
};

export type CollectionItemPageElementDefinition = PageElementDefinition & {
    type?: 'CollectionItemPageElementDefinition';
} & {
    readonly 'x-class-name'?: string;
    /**
     * The collection item page element's configuration.
     */
    collectionItemConfig?: {
        [key: string]: unknown;
    };
};

export type CollectionPageElementDefinition = PageElementDefinition & {
    type?: 'CollectionPageElementDefinition';
} & {
    readonly 'x-class-name'?: string;
    collectionReference?: CollectionReference;
    /**
     * A list of viewports of the collection page element.
     */
    collectionViewports?: Array<CollectionViewport>;
    /**
     * Whether to show all items when pagination is disabled.
     */
    displayAllItems?: boolean;
    /**
     * Whether to show all pages when pagination is enabled.
     */
    displayAllPages?: boolean;
    emptyCollectionConfig?: EmptyCollectionConfig;
    fragmentStyle?: FragmentStyle;
    /**
     * The fragment viewports of the collection page element.
     */
    fragmentViewports?: Array<FragmentViewport>;
    layout?: Layout;
    /**
     * The style of a list of items in the collection page element.
     */
    listItemStyle?: string;
    /**
     * The style of a list in the collection page element.
     */
    listStyle?: string;
    /**
     * The custom name of a collection page element.
     */
    name?: string;
    /**
     * The number of columns in the collection page element.
     */
    numberOfColumns?: number;
    /**
     * The maximum number of items to display in the collection page element when pagination is disabled.
     */
    numberOfItems?: number;
    /**
     * The number of items per page in the collection page element.
     */
    numberOfItemsPerPage?: number;
    /**
     * The maximum number of pages to show when pagination is enabled.
     */
    numberOfPages?: number;
    /**
     * The collection page element's template key.
     */
    templateKey?: string;
    /**
     * The type of pagination.
     */
    paginationType?: 'None' | 'Numeric' | 'Regular' | 'Simple';
};

export type CollectionReference = {
    readonly 'x-class-name'?: string;
    /**
     * The collection's type (Collection, CollectionProvider).
     */
    collectionType?: 'Collection' | 'CollectionProvider';
};

/**
 * A collection viewport.
 */
export type CollectionViewport = {
    collectionViewportDefinition: CollectionViewportDefinition;
    /**
     * The collection viewport's ID.
     */
    id: string;
    readonly 'x-class-name'?: string;
};

/**
 * The definition of the collection viewport.
 */
export type CollectionViewportDefinition = {
    /**
     * The number of columns of the collection viewport.
     */
    numberOfColumns?: number;
    readonly 'x-class-name'?: string;
};

export type ColumnPageElementDefinition = PageElementDefinition & {
    type?: 'ColumnPageElementDefinition';
} & {
    readonly 'x-class-name'?: string;
    /**
     * A list of column viewports of the column page element.
     */
    columnViewports?: Array<ColumnViewport>;
    /**
     * The page column's size.
     */
    size?: number;
};

/**
 * A column in a viewport.
 */
export type ColumnViewport = {
    columnViewportDefinition: ColumnViewportDefinition;
    id: string;
    readonly 'x-class-name'?: string;
};

export type ColumnViewportDefinition = {
    size?: number;
    readonly 'x-class-name'?: string;
};

/**
 * Represents the Adaptive Media fragment image configuration for different viewports.
 */
export type Config = {
    /**
     * The landscape mobile configuration of the fragment image.
     */
    landscapeMobile?: string;
    /**
     * The portrait mobile configuration of the fragment image.
     */
    portraitMobile?: string;
    /**
     * The tablet configuration of the fragment image.
     */
    tablet?: string;
    readonly 'x-class-name'?: string;
};

export type ContainerPageElementDefinition = PageElementDefinition & {
    type?: 'ContainerPageElementDefinition';
} & {
    readonly 'x-class-name'?: string;
    backgroundFragmentImage?: FragmentImage;
    /**
     * The content visibility of the container.
     */
    contentVisibility?: string;
    /**
     * A list of CSS Classes that are applied to the element.
     */
    cssClasses?: Array<string>;
    /**
     * Custom CSS that is applied on the container page element.
     */
    customCSS?: string;
    /**
     * The custom CSS viewports of the container page element.
     */
    customCSSViewports?: Array<CustomCssViewport>;
    fragmentLink?: FragmentLink;
    fragmentStyle?: FragmentStyle;
    /**
     * A list of fragment viewports of the container page element.
     */
    fragmentViewports?: Array<FragmentViewport>;
    htmlProperties?: HtmlProperties;
    /**
     * A flag that indicates whether the container page element is indexed or not.
     */
    indexed?: boolean;
    layout?: Layout;
    /**
     * The custom name of a container page element.
     */
    name?: string;
};

export type ContentPageSpecification = PageSpecification & {
    type?: 'ContentPageSpecification';
} & {
    readonly 'x-class-name'?: string;
    /**
     * The draft content page specification external reference code or null if it is a draft content page specification.
     */
    draftContentPageSpecificationExternalReferenceCode?: string;
    pageExperiences?: Array<PageExperience>;
};

/**
 * A custom CSS viewport.
 */
export type CustomCssViewport = {
    /**
     * The definition of the custom CSS viewport.
     */
    customCSS: string;
    /**
     * The custom CSS viewport's ID.
     */
    id: string;
    readonly 'x-class-name'?: string;
};

export type DisplayPageTemplate = {
    contentTypeReference?: ClassSubtypeReference;
    creator?: Creator;
    /**
     * The display page template's creator external reference code.
     */
    creatorExternalReferenceCode?: string;
    /**
     * The display page template's creation date.
     */
    dateCreated?: string;
    /**
     * The last time any field of the display page template was changed.
     */
    dateModified?: string;
    /**
     * The display page template's most recent publication date.
     */
    datePublished?: string;
    displayPageTemplateSettings?: DisplayPageTemplateSettings;
    /**
     * The display page template's external reference code.
     */
    externalReferenceCode?: string;
    friendlyUrlHistory?: FriendlyUrlHistory;
    /**
     * The localized relative URLs to the display page template's rendered content.
     */
    friendlyUrlPath_i18n?: {
        [key: string]: string;
    };
    /**
     * The display page template's key.
     */
    key?: string;
    /**
     * Whether the display page template is the default one for the given content type/subtype.
     */
    markedAsDefault?: boolean;
    /**
     * The display page template's name.
     */
    name?: string;
    /**
     * The display page template's specifications. A display page template will contain 1 page specifications for its draft layout and 1 page specifications for its published layout. This field is not returned by default. It can be requested via nestedFields.
     */
    pageSpecifications?: Array<PageSpecification>;
    parentFolder?: DisplayPageTemplateFolder;
    thumbnail?: ItemExternalReference;
    /**
     * A valid external identifier to reference this display page template.
     */
    uuid?: string;
    readonly 'x-class-name'?: string;
};

/**
 * The display page template's Open Graph settings.
 */
export type DisplayPageTemplateOpenGraphSettings = {
    /**
     * The Open Graph's description template.
     */
    descriptionTemplate?: string;
    /**
     * The Open Graph's image alt template.
     */
    imageAltTemplate?: string;
    /**
     * The Open Graph's image template.
     */
    imageTemplate?: string;
    /**
     * The Open Graph's title template.
     */
    titleTemplate?: string;
    readonly 'x-class-name'?: string;
};

/**
 * The display page template's SEO settings.
 */
export type DisplayPageTemplateSeoSettings = {
    /**
     * The description template of the display page template to be used as summary for search engines.
     */
    descriptionTemplate?: string;
    /**
     * The main title template of the display page template to be used by search engines.
     */
    htmlTitleTemplate?: string;
    /**
     * A localized tag telling search engines if and how they should crawl the display page template.
     */
    robots_i18n?: {
        [key: string]: string;
    };
    sitemapSettings?: SitemapSettings;
    readonly 'x-class-name'?: string;
};

/**
 * Settings of the display page template, such as SEO or OpenGraph.
 */
export type DisplayPageTemplateSettings = {
    openGraphSettings?: DisplayPageTemplateOpenGraphSettings;
    seoSettings?: DisplayPageTemplateSeoSettings;
    readonly 'x-class-name'?: string;
};

export type DropZonePageElementDefinition = PageElementDefinition & {
    type?: 'DropZonePageElementDefinition';
} & {
    readonly 'x-class-name'?: string;
    /**
     * The drop zone page element's allowed or unallowed fragments.
     */
    fragmentSettings?: {
        [key: string]: unknown;
    };
};

export type EmptyCollectionConfig = {
    /**
     * Whether to display a message when the collection is empty or no results match the applied filters (true by default).
     */
    displayMessage?: boolean;
    /**
     * The localized message to display when the collection is empty or no results match the applied filters ('No Results Found' by default).
     */
    message_i18n?: {
        [key: string]: string;
    };
    readonly 'x-class-name'?: string;
};

export type FormConfig = {
    /**
     * The form reference.
     */
    formReference?: {
        [key: string]: unknown;
    };
    /**
     * The form page element's number of steps.
     */
    numberOfSteps?: number;
    /**
     * The definition of the result when a form submission is successful.
     */
    successFormSubmissionResult?: {
        [key: string]: unknown;
    };
    readonly 'x-class-name'?: string;
    formType?: 'Multistep' | 'Simple';
};

export type FormPageElementDefinition = PageElementDefinition & {
    type?: 'FormPageElementDefinition';
} & {
    readonly 'x-class-name'?: string;
    /**
     * A list of CSS classes that are applied to the form page element.
     */
    cssClasses?: Array<string>;
    /**
     * Custom CSS that is applied on the form page element.
     */
    customCSS?: string;
    /**
     * The custom CSS viewports of the page form.
     */
    customCSSViewports?: Array<CustomCssViewport>;
    formConfig?: FormConfig;
    fragmentStyle?: FragmentStyle;
    /**
     * A list of fragment viewports of a form page element.
     */
    fragmentViewports?: Array<FragmentViewport>;
    /**
     * A flag that indicates whether the page fragment instance is indexed or not.
     */
    indexed?: boolean;
    layout?: Layout;
    /**
     * The custom name of a form page element.
     */
    name?: string;
};

export type FormStepContainerPageElementDefinition = PageElementDefinition & {
    type?: 'FormStepContainerPageElementDefinition';
} & {
    readonly 'x-class-name'?: string;
    /**
     * A list of CSS classes that are applied to the form step container page element.
     */
    cssClasses?: Array<string>;
    /**
     * Custom CSS that is applied on the form step container page element.
     */
    customCSS?: string;
    /**
     * The custom CSS viewports of the form step container page element.
     */
    customCSSViewports?: Array<CustomCssViewport>;
    fragmentStyle?: FragmentStyle;
    /**
     * A list of fragment viewports of a form step container page element.
     */
    fragmentViewports?: Array<FragmentViewport>;
    layout?: Layout;
    /**
     * The custom name of a form step container page element.
     */
    name?: string;
};

export type FormStepPageElementDefinition = PageElementDefinition & {
    type?: 'FormStepPageElementDefinition';
} & {
    readonly 'x-class-name'?: string;
    /**
     * The form step's configuration.
     */
    formStepConfig?: {
        [key: string]: unknown;
    };
};

export type FragmentCompositionInstancePageElementDefinition = PageElementDefinition & {
    type?: 'FragmentCompositionInstancePageElementDefinition';
} & {
    readonly 'x-class-name'?: string;
    fragmentComposition?: ItemExternalReference;
};

export type FragmentDropZonePageElementDefinition = PageElementDefinition & {
    type?: 'FragmentDropZonePageElementDefinition';
} & {
    readonly 'x-class-name'?: string;
    /**
     * The id of the fragment drop zone
     */
    fragmentDropZoneId?: string;
};

/**
 * The fragment field values of the the fragment instance.
 */
export type FragmentField = {
    /**
     * The fragment field's ID.
     */
    id?: string;
    /**
     * The fragment field's value.
     */
    value?: {
        [key: string]: unknown;
    };
    readonly 'x-class-name'?: string;
};

/**
 * The background fragment image of the container page element.
 */
export type FragmentImage = {
    config?: Config;
    /**
     * The fragment image's description.
     */
    description?: {
        [key: string]: unknown;
    };
    itemExternalReference?: ItemExternalReference;
    /**
     * The fragment image's title.
     */
    title?: {
        [key: string]: unknown;
    };
    /**
     * The fragment image's url. Can be inline or mapped to an external value.
     */
    url?: {
        [key: string]: unknown;
    };
    readonly 'x-class-name'?: string;
};

export type FragmentInstancePageElementDefinition = PageElementDefinition & {
    type?: 'FragmentInstancePageElementDefinition';
} & {
    readonly 'x-class-name'?: string;
    /**
     * A list of CSS classes that are applied to the fragment instance.
     */
    cssClasses?: Array<string>;
    /**
     * Custom CSS that is applied on the fragment instance.
     */
    customCSS?: string;
    /**
     * The custom CSS viewports of the fragment instance.
     */
    customCSSViewports?: Array<CustomCssViewport>;
    /**
     * The fragment instance's most recent propagation date.
     */
    datePropagated?: string;
    /**
     * The fragment instance's most recent publication date.
     */
    datePublished?: string;
    /**
     * The external reference code of the corresponding page element in the draft of the page. Available only in the published page specification.
     */
    draftPageElementExternalReferenceCode?: string;
    /**
     * The configuration values of the fragment instance.
     */
    fragmentConfig?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    /**
     * The fragment field values of the the fragment instance.
     */
    fragmentFields?: Array<FragmentField>;
    /**
     * An external reference to the fragment.
     */
    fragmentReference?: {
        [key: string]: unknown;
    };
    fragmentStyle?: FragmentStyle;
    /**
     * A list of fragment viewports of the fragment instance page element.
     */
    fragmentViewports?: Array<FragmentViewport>;
    /**
     * A flag that indicates whether the fragment instance page element is indexed or not.
     */
    indexed?: boolean;
    /**
     * The custom name of a fragment instance page element.
     */
    name?: string;
    /**
     * The fragment instance page element's namespace.
     */
    namespace?: string;
    /**
     * A valid external identifier to reference this fragment instance page element.
     */
    uuid?: string;
    /**
     * A list of widget instances within the fragment instance page element.
     */
    widgetInstances?: Array<WidgetInstance>;
};

/**
 * The fragment link of the container page element.
 */
export type FragmentLink = {
    /**
     * The localized fragment link's values.
     */
    value_i18n?: {
        [key: string]: FragmentLinkValue;
    };
    readonly 'x-class-name'?: string;
};

/**
 * The localized fragment link's values.
 */
export type FragmentLinkValue = {
    /**
     * The fragment link value's hypertext reference. Can be an inline value or mapped to an external value.
     */
    href?: {
        [key: string]: unknown;
    };
    readonly 'x-class-name'?: string;
    /**
     * The fragment link value's target (blank, parent, self, top).
     */
    target?: 'Blank' | 'Parent' | 'Self' | 'Top';
};

/**
 * The fragment style of the widget instance page element.
 */
export type FragmentStyle = {
    /**
     * The fragment's background color.
     */
    backgroundColor?: string;
    backgroundFragmentImage?: FragmentImage;
    /**
     * The fragment's border color.
     */
    borderColor?: string;
    /**
     * The fragment's background radius.
     */
    borderRadius?: string;
    /**
     * The fragment's border width.
     */
    borderWidth?: string;
    /**
     * The fragment's font family.
     */
    fontFamily?: string;
    /**
     * The fragment's font size.
     */
    fontSize?: string;
    /**
     * The fragment's font weight.
     */
    fontWeight?: string;
    /**
     * The fragment's height.
     */
    height?: string;
    /**
     * Specifies if the fragment is hidden to the user.
     */
    hidden?: boolean;
    /**
     * The fragment's margin bottom.
     */
    marginBottom?: string;
    /**
     * The fragment's margin left.
     */
    marginLeft?: string;
    /**
     * The fragment's margin right.
     */
    marginRight?: string;
    /**
     * The fragment's margin top.
     */
    marginTop?: string;
    /**
     * The fragment's max height.
     */
    maxHeight?: string;
    /**
     * The fragment's max width.
     */
    maxWidth?: string;
    /**
     * The fragment's min height.
     */
    minHeight?: string;
    /**
     * The fragment's min width.
     */
    minWidth?: string;
    /**
     * The fragment's opacity.
     */
    opacity?: string;
    /**
     * The fragment's overflow behavior.
     */
    overflow?: string;
    /**
     * The fragment's padding bottom.
     */
    paddingBottom?: string;
    /**
     * The fragment's padding left.
     */
    paddingLeft?: string;
    /**
     * The fragment's padding right.
     */
    paddingRight?: string;
    /**
     * The fragment's padding top.
     */
    paddingTop?: string;
    /**
     * The fragment's shadow effect.
     */
    shadow?: string;
    /**
     * The fragment's text align.
     */
    textAlign?: string;
    /**
     * The fragment's text color.
     */
    textColor?: string;
    /**
     * The fragment's width.
     */
    width?: string;
    readonly 'x-class-name'?: string;
};

/**
 * A fragment viewport.
 */
export type FragmentViewport = {
    fragmentViewportStyle: FragmentViewportStyle;
    /**
     * The fragment viewport's ID.
     */
    id: string;
    readonly 'x-class-name'?: string;
};

/**
 * The fragment's viewport style.
 */
export type FragmentViewportStyle = {
    /**
     * The fragment viewport's background color.
     */
    backgroundColor?: string;
    /**
     * The fragment viewport's border color.
     */
    borderColor?: string;
    /**
     * The fragment viewport's background radius.
     */
    borderRadius?: string;
    /**
     * The fragment viewport's border width.
     */
    borderWidth?: string;
    /**
     * The fragment viewport's font family.
     */
    fontFamily?: string;
    /**
     * The fragment viewport's font size.
     */
    fontSize?: string;
    /**
     * The fragment viewport's font weight.
     */
    fontWeight?: string;
    /**
     * The fragment viewport's height.
     */
    height?: string;
    /**
     * Specifies if the fragment's viewport is hidden to the user.
     */
    hidden?: boolean;
    /**
     * The fragment viewport's margin bottom.
     */
    marginBottom?: string;
    /**
     * The fragment viewport's margin left.
     */
    marginLeft?: string;
    /**
     * The fragment viewport's margin right.
     */
    marginRight?: string;
    /**
     * The fragment viewport's margin top.
     */
    marginTop?: string;
    /**
     * The fragment viewport's max height.
     */
    maxHeight?: string;
    /**
     * The fragment viewport's max width.
     */
    maxWidth?: string;
    /**
     * The fragment viewport's min height.
     */
    minHeight?: string;
    /**
     * The fragment viewport's min width.
     */
    minWidth?: string;
    /**
     * The fragment viewport's opacity.
     */
    opacity?: string;
    /**
     * The fragment viewport's overflow behavior.
     */
    overflow?: string;
    /**
     * The fragment viewport's padding bottom.
     */
    paddingBottom?: string;
    /**
     * The fragment viewport's padding left.
     */
    paddingLeft?: string;
    /**
     * The fragment viewport's padding right.
     */
    paddingRight?: string;
    /**
     * The fragment viewport's padding top.
     */
    paddingTop?: string;
    /**
     * The fragment viewport's shadow effect.
     */
    shadow?: string;
    /**
     * The fragment viewport's text align.
     */
    textAlign?: string;
    /**
     * The fragment viewport's text color.
     */
    textColor?: string;
    /**
     * The fragment viewport's width.
     */
    width?: string;
    readonly 'x-class-name'?: string;
};

/**
 * The history of previously used URLs to the utility page's rendered content. This field is not returned by default. It can be requested via nestedFields.
 */
export type FriendlyUrlHistory = {
    /**
     * The old localized relative URLs to the page's rendered content.
     */
    friendlyUrlPath_i18n?: {
        [key: string]: unknown;
    };
    readonly 'x-class-name'?: string;
};

export type HtmlProperties = {
    readonly 'x-class-name'?: string;
    htmlTag?: 'Article' | 'Aside' | 'Div' | 'Footer' | 'Header' | 'Nav' | 'Section';
};

/**
 * A unique reference to an entity which remains constant across environments.
 */
export type ItemExternalReference = {
    className?: string;
    externalReferenceCode: string;
    scope?: Scope;
    readonly 'x-class-name'?: string;
};

/**
 * The form step container page element's layout.
 */
export type Layout = {
    readonly 'x-class-name'?: string;
    /**
     * The container's type (fixed or fluid).
     */
    containerType?: 'Fixed' | 'Fluid';
    flexWrap?: 'NoWrap' | 'Wrap' | 'WrapReverse';
    /**
     * The width's type (fixed or fluid).
     */
    widthType?: 'Fixed' | 'Fluid';
};

/**
 * The page elements in the experience.
 */
export type PageElement = {
    /**
     * The page element's external reference code. Unique within the site.
     */
    externalReferenceCode?: string;
    pageElementDefinition?: PageElementDefinition;
    /**
     * A list of the page elements this page element has.
     */
    pageElements?: Array<PageElement>;
    /**
     * The parent's page element's external reference code. Unique within the site.
     */
    parentExternalReferenceCode?: string;
    /**
     * The 0-based position this page element occupies with respect to its siblings (0 for first child, 1 for second child, ...). If not specified when creating a page element the page element will be added at the last valid position.
     */
    position?: number;
    readonly 'x-class-name'?: string;
};

/**
 * The page element's definition.
 */
export type PageElementDefinition = {
    readonly 'x-class-name'?: string;
    /**
     * The page element definition's type (collection, collection item, column, container, drop zone, form, form step, form step container, fragment, fragment composition, fragment drop zone, row or widget).
     */
    type?: 'Collection' | 'CollectionItem' | 'Column' | 'Container' | 'DropZone' | 'Form' | 'FormStep' | 'FormStepContainer' | 'Fragment' | 'FragmentComposition' | 'FragmentDropZone' | 'Row' | 'Widget';
};

export type PageExperience = {
    /**
     * The experience's external reference code, unique per site.
     */
    externalReferenceCode?: string;
    /**
     * The experience's key.
     */
    key?: string;
    /**
     * The localized experience's names.
     */
    name_i18n?: {
        [key: string]: string;
    };
    /**
     * The page elements in the experience.
     */
    pageElements?: Array<PageElement>;
    /**
     * The page rules in the experience.
     */
    pageRules?: Array<PageRule>;
    /**
     * The page specification's external reference code.
     */
    pageSpecificationExternalReferenceCode?: string;
    /**
     * the experience's priority. It must be a unique value within the page specification. The default experience will always be assigned priority 0. A priority higher than 0 will result in an experience being active and a priority lower than 0 will result in an experience being inactive.
     */
    priority?: number;
    /**
     * The segment's external reference code.
     */
    segmentExternalReferenceCode?: string;
    readonly 'x-class-name'?: string;
};

/**
 * The page rules in the experience.
 */
export type PageRule = {
    /**
     * The page rule external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The custom name of a page rule.
     */
    name?: string;
    /**
     * A list of actions of a page rule.
     */
    pageRuleActions?: Array<PageRuleAction>;
    /**
     * A list of conditions of a page rule.
     */
    pageRuleConditions?: Array<PageRuleCondition>;
    readonly 'x-class-name'?: string;
    /**
     * The custom name of a Page rule.
     */
    conditionType?: 'All' | 'Any';
};

/**
 * A list of actions of a page rule.
 */
export type PageRuleAction = {
    /**
     * The page rule action's action.
     */
    action?: string;
    /**
     * The page rule action's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The page rule action's item ID.
     */
    itemId?: string;
    /**
     * The page rule action's type.
     */
    type?: string;
    readonly 'x-class-name'?: string;
};

/**
 * A list of conditions of a page rule.
 */
export type PageRuleCondition = {
    /**
     * The page rule condition's description.
     */
    condition?: string;
    /**
     * The page rule condition's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The page rule condition's type.
     */
    type?: string;
    /**
     * The page rule condition's value.
     */
    value?: string;
    readonly 'x-class-name'?: string;
};

/**
 * The utility page's specifications. A utility page will contain 1 page specifications for its draft layout and 1 page specifications for its published layout. This field is not returned by default. It can be requested via nestedFields.
 */
export type PageSpecification = {
    /**
     * The page specification's external reference code, unique per site.
     */
    externalReferenceCode?: string;
    settings?: Settings;
    readonly 'x-class-name'?: string;
    /**
     * The status of the page specification.
     */
    status?: 'Approved' | 'Draft';
    /**
     * The type of the page specification.
     */
    type?: 'ContentPageSpecification' | 'WidgetPageSpecification';
};

export type RowPageElementDefinition = PageElementDefinition & {
    type?: 'RowPageElementDefinition';
} & {
    readonly 'x-class-name'?: string;
    /**
     * A list of CSS classes that are applied to the row page element.
     */
    cssClasses?: Array<string>;
    /**
     * Custom CSS that is applied on the row page element.
     */
    customCSS?: string;
    /**
     * The custom CSS viewports of the row page element.
     */
    customCSSViewports?: Array<CustomCssViewport>;
    fragmentStyle?: FragmentStyle;
    /**
     * A list of fragment viewports of a row page element.
     */
    fragmentViewports?: Array<FragmentViewport>;
    /**
     * A flag that indicates whether the row page element has gutters.
     */
    gutters?: boolean;
    /**
     * A flag that indicates whether the row page element is indexed or not.
     */
    indexed?: boolean;
    /**
     * The row page element's modules per row.
     */
    modulesPerRow?: number;
    /**
     * The custom name of a row page element.
     */
    name?: string;
    /**
     * The row page element's number of columns.
     */
    numberOfColumns?: number;
    /**
     * A flag that indicates whether the row page element has reverse order.
     */
    reverseOrder?: boolean;
    /**
     * A list of viewports of the row page element.
     */
    rowViewports?: Array<RowViewport>;
    /**
     * The vertical alignment property of the row page element.
     */
    verticalAlignment?: string;
};

/**
 * A row viewport.
 */
export type RowViewport = {
    /**
     * The row viewport's ID.
     */
    id: string;
    rowViewportDefinition: RowViewportDefinition;
    readonly 'x-class-name'?: string;
};

/**
 * The definition of the row viewport.
 */
export type RowViewportDefinition = {
    /**
     * The number of modules per row.
     */
    modulesPerRow?: number;
    /**
     * A flag that indicates whether the row viewport has reverse order.
     */
    reverseOrder?: boolean;
    /**
     * The vertical alignment property of the row viewport.
     */
    verticalAlignment?: string;
    readonly 'x-class-name'?: string;
};

export type Scope = {
    externalReferenceCode: string;
    readonly 'x-class-name'?: string;
    type: 'AssetLibrary' | 'Site';
};

export type Settings = {
    /**
     * The page specification's color scheme name.
     */
    colorSchemeName?: string;
    /**
     * The page specification's CSS.
     */
    css?: string;
    /**
     * The FavIcon of the page specification.
     */
    favIcon?: {
        [key: string]: unknown;
    };
    /**
     * The client extensions for global CSS associated to the page.
     */
    globalCSSClientExtensions?: Array<ClientExtension>;
    /**
     * The client extensions for global JS associated to the page.
     */
    globalJSClientExtensions?: Array<ClientExtension>;
    /**
     * The page specification's JavaScript.
     */
    javascript?: string;
    masterPageItemExternalReference?: ItemExternalReference;
    styleBookItemExternalReference?: ItemExternalReference;
    themeCSSClientExtension?: ClientExtension;
    /**
     * The page specification's theme name.
     */
    themeName?: string;
    /**
     * The page specification's theme settings.
     */
    themeSettings?: {
        [key: string]: string;
    };
    themeSpritemapClientExtension?: ClientExtension;
    readonly 'x-class-name'?: string;
};

/**
 * Represents settings related with the site map.
 */
export type SitemapSettings = {
    /**
     * Whether search engines should crawl and index the page.
     */
    include?: boolean;
    /**
     * Whether search engines should crawl and index the child pages.
     */
    includeChildSitePages?: boolean;
    /**
     * How the page should be prioritized relative to other pages.
     */
    pagePriority?: number;
    readonly 'x-class-name'?: string;
    /**
     * Indicates how often a page is updated.
     */
    changeFrequency?: 'Always' | 'Hourly' | 'Daily' | 'Weekly' | 'Monthly' | 'Yearly' | 'Never';
};

/**
 * The widget instance.
 */
export type WidgetInstance = {
    /**
     * The configuration keys and values of the widget instance.
     */
    widgetConfig?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    /**
     * The widget instance's ID.
     */
    widgetInstanceId?: string;
    /**
     * The widget instance's name.
     */
    widgetName?: string;
    /**
     * The widget instance's permissions.
     */
    widgetPermissions?: Array<WidgetPermission>;
    readonly 'x-class-name'?: string;
};

export type WidgetInstancePageElementDefinition = PageElementDefinition & {
    type?: 'WidgetInstancePageElementDefinition';
} & {
    readonly 'x-class-name'?: string;
    /**
     * A list of CSS classes that are applied to the widget instance page element.
     */
    cssClasses?: Array<string>;
    /**
     * Custom CSS that is applied on the widget instance page element.
     */
    customCSS?: string;
    /**
     * The custom CSS viewports of the widget instance page element.
     */
    customCSSViewports?: Array<CustomCssViewport>;
    fragmentStyle?: FragmentStyle;
    /**
     * A list of fragment viewports of the widget instance page element.
     */
    fragmentViewports?: Array<FragmentViewport>;
    /**
     * The custom name of a widget instance page element.
     */
    name?: string;
    widgetInstance?: WidgetInstance;
};

/**
 * The widget instance's look and feel configuration.
 */
export type WidgetLookAndFeelConfig = {
    advancedStylingConfig?: {
        [key: string]: unknown;
    };
    backgroundStylesConfig?: {
        [key: string]: unknown;
    };
    borderStylesConfig?: {
        [key: string]: unknown;
    };
    generalConfig?: {
        [key: string]: unknown;
    };
    marginAndPaddingConfig?: {
        [key: string]: unknown;
    };
    textStylesConfig?: {
        [key: string]: unknown;
    };
    readonly 'x-class-name'?: string;
};

/**
 * The sections of a widget page.
 */
export type WidgetPageSection = {
    /**
     * A flag that indicates whether the widget page section is customizable or not.
     */
    customizable?: boolean;
    /**
     * The widget page section's id.
     */
    id?: string;
    /**
     * A list of the widget instances within this page section.
     */
    widgetPageWidgetInstances?: Array<WidgetPageWidgetInstance>;
    readonly 'x-class-name'?: string;
};

export type WidgetPageSpecification = PageSpecification & {
    type?: 'WidgetPageSpecification';
} & {
    readonly 'x-class-name'?: string;
    /**
     * The sections of a widget page.
     */
    widgetPageSections?: Array<WidgetPageSection>;
};

export type WidgetPageWidgetInstance = {
    /**
     * The external reference code of the widget instance.
     */
    externalReferenceCode?: string;
    /**
     * The section's ID of the widget page or the nested application widget instance this widget belongs to.
     */
    parentSectionId?: string;
    /**
     * The external reference code of the parent widget instance. Only available if this widget instance is within a nested applications widget instance.
     */
    parentWidgetInstanceExternalReferenceCode?: string;
    /**
     * The 0-based position this widget instance occupies with respect to its siblings (0 for first child, 1 for second child, ...). If not specified when creating a widget instance the widget instance will be added at the last valid position.
     */
    position?: number;
    /**
     * The configuration keys and values of the widget instance.
     */
    widgetConfig?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    /**
     * The widget instance's ID.
     */
    widgetInstanceId?: string;
    /**
     * The widget instance's look and feel configuration.
     */
    widgetLookAndFeelConfig?: Array<WidgetLookAndFeelConfig>;
    /**
     * The widget instance's name.
     */
    widgetName?: string;
    /**
     * The widget instance's permissions.
     */
    widgetPermissions?: Array<WidgetPermission>;
    readonly 'x-class-name'?: string;
};

/**
 * The widget instance's permissions.
 */
export type WidgetPermission = {
    /**
     * The IDs of the actions the role has permission for.
     */
    actionIds?: Array<string>;
    /**
     * The role's name.
     */
    roleName?: string;
    readonly 'x-class-name'?: string;
};

export type PageDisplayPageTemplate = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<DisplayPageTemplate>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type FragmentComposition = {
    creator?: Creator;
    /**
     * The page's creator external reference code.
     */
    creatorExternalReferenceCode?: string;
    /**
     * The structured content's creation date.
     */
    dateCreated?: string;
    /**
     * The last time any field of the structured content was changed.
     */
    dateModified?: string;
    /**
     * The structured content's most recent publication date.
     */
    datePublished?: string;
    /**
     * The description of this fragment composition.
     */
    description?: string;
    /**
     * The external reference code of this fragment composition.
     */
    externalReferenceCode?: string;
    /**
     * The external reference code of the fragment set this fragment composition belongs to.
     */
    fragmentSetExternalReferenceCode?: string;
    /**
     * The fragment composition's key.
     */
    key?: string;
    /**
     * The fragment composition's name.
     */
    name?: string;
    pageElement?: PageElement;
    thumbnail?: ItemExternalReference;
    readonly 'x-class-name'?: string;
};

export type PageFragmentComposition = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<FragmentComposition>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

/**
 * A list of asset libraries that are associated with this keyword.
 */
export type AssetLibrary = {
    /**
     * The asset library's site ID.
     */
    id?: number;
    /**
     * The asset library's name.
     */
    readonly name?: string;
    /**
     * The localized asset library's name.
     */
    readonly name_i18n?: {
        [key: string]: string;
    };
    readonly 'x-class-name'?: string;
};

/**
 * Represents a keyword that describes content. Properties follow the [keywords](https://schema.org/keywords) specification.
 */
export type Keyword = {
    readonly actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    /**
     * A list of asset libraries that are associated with this keyword.
     */
    assetLibraries?: Array<AssetLibrary>;
    readonly assetLibraryKey?: string;
    creator?: Creator;
    /**
     * The keyword's creation date.
     */
    readonly dateCreated?: string;
    /**
     * The keyword's most recent modification date.
     */
    readonly dateModified?: string;
    /**
     * The keyword's external reference code
     */
    externalReferenceCode?: string;
    /**
     * The keyword's ID.
     */
    readonly id?: number;
    /**
     * The number of times this keyword has been used with other assets.
     */
    readonly keywordUsageCount?: number;
    /**
     * The keyword's name.
     */
    name: string;
    /**
     * The external reference code of the site to which this keyword is scoped.
     */
    readonly siteExternalReferenceCode?: string;
    /**
     * The ID of the site to which this keyword is scoped.
     */
    readonly siteId?: number;
    /**
     * A flag that indicates whether the user making the requests is subscribed to this keyword.
     */
    readonly subscribed?: boolean;
    readonly 'x-class-name'?: string;
};

export type MasterPage = {
    creator?: Creator;
    /**
     * The page's creator external reference code.
     */
    creatorExternalReferenceCode?: string;
    /**
     * The master page's creation date.
     */
    dateCreated?: string;
    /**
     * The last time any field of the master page was changed.
     */
    dateModified?: string;
    /**
     * The master page's most recent publication date.
     */
    datePublished?: string;
    /**
     * The master page's external reference code, unique per site.
     */
    externalReferenceCode?: string;
    /**
     * The master page's key.
     */
    key?: string;
    /**
     * The external references to the associated keywords.
     */
    keywordItemExternalReferences?: Array<ItemExternalReference>;
    /**
     * The associated keywords. They are not returned by default. They can be embedded via nestedFields.
     */
    readonly keywords?: Array<Keyword>;
    /**
     * Whether the master page is the default one.
     */
    markedAsDefault?: boolean;
    /**
     * The master page's name.
     */
    name?: string;
    /**
     * The master page's specifications. A master page will contain 1 page specifications for its draft layout and 1 page specifications for its published layout. This field is not returned by default. It can be requested via nestedFields.
     */
    pageSpecifications?: Array<PageSpecification>;
    /**
     * The associated categories. They are not returned by default. They can be embedded via nestedFields.
     */
    readonly taxonomyCategories?: Array<TaxonomyCategory>;
    /**
     * The external references to the associated categories.
     */
    taxonomyCategoryItemExternalReferences?: Array<ItemExternalReference>;
    thumbnail?: ItemExternalReference;
    /**
     * A valid external identifier to reference this page.
     */
    uuid?: string;
    readonly 'x-class-name'?: string;
};

/**
 * The category's parent category, if it exists.
 */
export type ParentTaxonomyCategory = {
    /**
     * The parent taxonomy category's external reference code.
     */
    externalReferenceCode?: string;
    id?: number;
    name?: string;
    name_i18n?: {
        [key: string]: string;
    };
    readonly 'x-class-name'?: string;
};

/**
 * The parent category's `TaxonomyVocabulary`, if such a parent category exists.
 */
export type ParentTaxonomyVocabulary = {
    /**
     * The parent category's `TaxonomyVocabulary` external reference code.
     */
    externalReferenceCode?: string;
    id?: number;
    name?: string;
    name_i18n?: {
        [key: string]: string;
    };
    readonly 'x-class-name'?: string;
};

/**
 * Represents a category, which is a hierarchical classification that can be associated with particular asset types. Properties follow the [category](https://schema.org/category) specification.
 */
export type TaxonomyCategory = {
    readonly actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    /**
     * A list of languages the category has a translation for.
     */
    readonly availableLanguages?: Array<string>;
    creator?: Creator;
    /**
     * The category's creation date.
     */
    readonly dateCreated?: string;
    /**
     * The category's most recent modification date.
     */
    readonly dateModified?: string;
    /**
     * The category's text description.
     */
    description?: string;
    description_i18n?: {
        [key: string]: string;
    };
    /**
     * The category's external reference code
     */
    externalReferenceCode?: string;
    /**
     * The category's ID.
     */
    readonly id?: string;
    /**
     * The category's name.
     */
    name: string;
    name_i18n?: {
        [key: string]: string;
    };
    /**
     * The number of times this category has been used in other assets.
     */
    readonly numberOfTaxonomyCategories?: number;
    parentTaxonomyCategory?: ParentTaxonomyCategory;
    parentTaxonomyVocabulary?: ParentTaxonomyVocabulary;
    permissions?: Array<Permission>;
    /**
     * The external reference code of the site to which this category is scoped.
     */
    readonly siteExternalReferenceCode?: string;
    /**
     * The ID of the site to which this category is scoped.
     */
    readonly siteId?: number;
    /**
     * The category's properties.
     */
    taxonomyCategoryProperties?: Array<TaxonomyCategoryProperty>;
    readonly taxonomyCategoryUsageCount?: number;
    /**
     * The `TaxonomyVocabulary` id, only if the category does not have a parent category.
     */
    taxonomyVocabularyId?: number;
    viewableBy?: 'Anyone' | 'Members' | 'Owner';
    readonly 'x-class-name'?: string;
};

/**
 * Key value pair to associate detailed information with a category.
 */
export type TaxonomyCategoryProperty = {
    /**
     * The taxonomy category's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The taxonomy category property's key.
     */
    key: string;
    /**
     * The taxonomy category property's value.
     */
    value?: string;
    readonly 'x-class-name'?: string;
};

export type PageMasterPage = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<MasterPage>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PagePageElement = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<PageElement>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PagePageExperience = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<PageExperience>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PagePageRuleAction = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<PageRuleAction>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PagePageRuleCondition = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<PageRuleCondition>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PagePageRule = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<PageRule>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PagePageSpecification = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<PageSpecification>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type ContentPageTemplate = PageTemplate & {
    type?: 'ContentPageTemplate';
} & {
    readonly 'x-class-name'?: string;
};

export type ContentPageTemplateSettings = PageTemplateSettings & {
    type?: 'ContentPageTemplateSettings';
} & {
    readonly 'x-class-name'?: string;
};

/**
 * The page's site navigation menu settings.
 */
export type NavigationMenuSettings = {
    /**
     * The page's description to be used as summary for search engines.
     */
    target?: string;
    readonly 'x-class-name'?: string;
    /**
     * The target's type (specific frame or new tab).
     */
    targetType?: 'SpecificFrame' | 'NewTab';
};

export type PageTemplate = {
    creator?: Creator;
    /**
     * The page's creator external reference code.
     */
    creatorExternalReferenceCode?: string;
    /**
     * The page template's creation date.
     */
    dateCreated?: string;
    /**
     * The last time the page template changed.
     */
    dateModified?: string;
    /**
     * The last time the page template was published.
     */
    datePublished?: string;
    /**
     * The page template's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The page template's key.
     */
    key?: string;
    /**
     * The external references to the associated keywords.
     */
    keywordItemExternalReferences?: Array<ItemExternalReference>;
    /**
     * The associated keywords. They are not returned by default. They can be embedded via nestedFields.
     */
    readonly keywords?: Array<Keyword>;
    /**
     * The page template's name.
     */
    name?: string;
    /**
     * The page template's specifications. A page template of type content will contain 1 page specifications for its draft layout and 1 page specifications for its published layout. A page template of type widget contains only 1 page specification for its published layout. This field is not returned by default. It can be requested via nestedFields.
     */
    pageSpecifications?: Array<PageSpecification>;
    pageTemplateSet?: PageTemplateSet;
    pageTemplateSettings?: PageTemplateSettings;
    /**
     * The associated categories. They are not returned by default. They can be embedded via nestedFields.
     */
    readonly taxonomyCategories?: Array<TaxonomyCategory>;
    /**
     * The external references to the associated categories.
     */
    taxonomyCategoryItemExternalReferences?: Array<ItemExternalReference>;
    /**
     * A valid external identifier to reference this page template.
     */
    uuid?: string;
    readonly 'x-class-name'?: string;
    /**
     * The type of the page template.
     */
    type?: 'ContentPageTemplate' | 'WidgetPageTemplate';
};

export type PageTemplateSet = {
    creator?: Creator;
    /**
     * The page template set's creator external reference code.
     */
    creatorExternalReferenceCode?: string;
    /**
     * The page template set's creation date.
     */
    dateCreated?: string;
    /**
     * The last time the page template set changed.
     */
    dateModified?: string;
    /**
     * The page template set's description.
     */
    description?: string;
    /**
     * The page template set's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The page template set's key.
     */
    key?: string;
    /**
     * The page template set's name.
     */
    name?: string;
    /**
     * A valid external identifier to reference this page template set.
     */
    uuid?: string;
    readonly 'x-class-name'?: string;
};

/**
 * The settings of the page template.
 */
export type PageTemplateSettings = {
    readonly 'x-class-name'?: string;
    type?: 'ContentPageTemplateSettings' | 'WidgetPageTemplateSettings';
};

export type WidgetPageTemplate = PageTemplate & {
    type?: 'WidgetPageTemplate';
} & {
    readonly 'x-class-name'?: string;
    /**
     * A flag that indicates whether the widget page template is active.
     */
    active?: boolean;
    /**
     * The localized descriptions of the widget page template.
     */
    description_i18n?: {
        [key: string]: string;
    };
    /**
     * The localized relative URLs to the page's rendered content.
     */
    friendlyUrlPath_i18n?: {
        [key: string]: string;
    };
    /**
     * A flag that indicates whether the page created based on this page template is hidden from navigation.
     */
    hiddenFromNavigation?: boolean;
    /**
     * The localized names of the widget page template.
     */
    name_i18n?: {
        [key: string]: string;
    };
};

export type WidgetPageTemplateSettings = PageTemplateSettings & {
    type?: 'WidgetPageTemplateSettings';
} & {
    readonly 'x-class-name'?: string;
    /**
     * The identifier of the layout template.
     */
    layoutTemplateId?: string;
    navigationMenuSettings?: NavigationMenuSettings;
};

export type PagePageTemplate = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<PageTemplate>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PagePageTemplateSet = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<PageTemplateSet>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type ContentPageSettings = PageSettings & {
    type?: 'ContentPageSettings';
} & {
    readonly 'x-class-name'?: string;
};

/**
 * Custom fields associated with the page.
 */
export type CustomField = {
    readonly 'x-class-name'?: string;
    customValue?: CustomValue;
    /**
     * The field type (e.g., image, text, etc.).
     */
    readonly dataType?: string;
    /**
     * The field's internal name. This is valid for comparisons and unique in the structured content.
     */
    name?: string;
};

/**
 * A list of custom meta tags this page has.
 */
export type CustomMetaTag = {
    /**
     * The custom meta tag's key.
     */
    key?: string;
    /**
     * The localized custom meta tag's values.
     */
    value_i18n?: {
        [key: string]: string;
    };
    readonly 'x-class-name'?: string;
};

/**
 * The field's value.
 */
export type CustomValue = {
    readonly 'x-class-name'?: string;
    /**
     * The field's content value for simple types.
     */
    data?: {
        [key: string]: unknown;
    };
    /**
     * The localized field's content values for simple types.
     */
    data_i18n?: {
        [key: string]: string;
    };
    geo?: Geo;
};

/**
 * A point determined by latitude and longitude.
 */
export type Geo = {
    readonly 'x-class-name'?: string;
    /**
     * The latitude of a point in space.
     */
    latitude?: number;
    /**
     * The longitude of a point in space.
     */
    longitude?: number;
};

/**
 * The page's Open Graph settings.
 */
export type OpenGraphSettings = {
    /**
     * The localized Open Graph's descriptions.
     */
    description_i18n?: {
        [key: string]: string;
    };
    image?: ItemExternalReference;
    /**
     * The localized Open Graph's image alts.
     */
    imageAlt_i18n?: {
        [key: string]: string;
    };
    /**
     * The localized Open Graph's titles.
     */
    title_i18n?: {
        [key: string]: string;
    };
    readonly 'x-class-name'?: string;
};

/**
 * Settings of the page, such as SEO or OpenGraph.
 */
export type PageSettings = {
    /**
     * A list of custom meta tags this page has.
     */
    customMetaTags?: Array<CustomMetaTag>;
    /**
     * A flag that indicates whether the page is hidden from navigation.
     */
    hiddenFromNavigation?: boolean;
    navigationMenuSettings?: NavigationMenuSettings;
    openGraphSettings?: OpenGraphSettings;
    seoSettings?: SeoSettings;
    readonly 'x-class-name'?: string;
    type?: 'ContentPageSettings' | 'WidgetPageSettings';
};

/**
 * The page's SEO settings.
 */
export type SeoSettings = {
    /**
     * The localized canonical URL of the page, if it exists.
     */
    customCanonicalURL_i18n?: {
        [key: string]: string;
    };
    /**
     * The localized descriptions of the page to be used as summary for search engines.
     */
    description_i18n?: {
        [key: string]: string;
    };
    /**
     * The localized main titles of the page to be used by search engines.
     */
    htmlTitle_i18n?: {
        [key: string]: string;
    };
    /**
     * A localized tag telling search engines if and how they should crawl the page.
     */
    robots_i18n?: {
        [key: string]: string;
    };
    /**
     * A list of localized target keywords of the page to be used by search engines.
     */
    seoKeywords_i18n?: {
        [key: string]: string;
    };
    sitemapSettings?: SitemapSettings;
    readonly 'x-class-name'?: string;
};

export type SitePage = {
    /**
     * The list of languages the page has a translation for.
     */
    readonly availableLanguages?: Array<string>;
    creator?: Creator;
    /**
     * The page's creator external reference code.
     */
    creatorExternalReferenceCode?: string;
    /**
     * Custom fields associated with the page.
     */
    customFields?: Array<CustomField>;
    /**
     * The page's creation date.
     */
    dateCreated?: string;
    /**
     * The last time any field of the page was changed.
     */
    dateModified?: string;
    /**
     * The page's most recent publication date.
     */
    datePublished?: string;
    /**
     * The page's external reference code.
     */
    externalReferenceCode?: string;
    friendlyUrlHistory?: FriendlyUrlHistory;
    /**
     * The localized relative URLs to the page's rendered content.
     */
    friendlyUrlPath_i18n?: {
        [key: string]: string;
    };
    /**
     * The external references to the associated keywords.
     */
    keywordItemExternalReferences?: Array<ItemExternalReference>;
    /**
     * The associated keywords. They are not returned by default. They can be embedded via nestedFields.
     */
    readonly keywords?: Array<Keyword>;
    /**
     * The localized page's names.
     */
    name_i18n?: {
        [key: string]: string;
    };
    pageSettings?: PageSettings;
    /**
     * The page's specifications. A page of type content will contain 1 page specifications for its draft layout and 1 page specifications for its published layout. A page of type widget contains only 1 page specification for its published layout. This field is not returned by default. It can be requested via nestedFields.
     */
    pageSpecifications?: Array<PageSpecification>;
    /**
     * The parent page external reference code or null if it is a top level page.
     */
    parentSitePageExternalReferenceCode?: string;
    /**
     * The associated categories. They are not returned by default. They can be embedded via nestedFields.
     */
    readonly taxonomyCategories?: Array<TaxonomyCategory>;
    /**
     * The external references to the associated categories.
     */
    taxonomyCategoryItemExternalReferences?: Array<ItemExternalReference>;
    /**
     * A valid external identifier to reference this page.
     */
    uuid?: string;
    viewableBy?: 'Anyone' | 'Members' | 'Owner';
    readonly 'x-class-name'?: string;
    type?: 'ContentPage' | 'WidgetPage';
};

export type WidgetPageSettings = PageSettings & {
    type?: 'WidgetPageSettings';
} & {
    readonly 'x-class-name'?: string;
    /**
     * A flag that indicates whether the widget page is customizable.
     */
    customizable?: boolean;
    /**
     * The IDs of the customizable sections.
     */
    customizableSectionIds?: Array<string>;
    /**
     * Whether this widget page will inherit changes made to the associated widget page template.
     */
    inheritChanges?: boolean;
    /**
     * The ID of the layout template.
     */
    layoutTemplateId?: string;
    widgetPageTemplateReference?: ItemExternalReference;
};

export type PageSitePage = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<SitePage>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type UtilityPage = {
    creator?: Creator;
    /**
     * The utility page's creator external reference code.
     */
    creatorExternalReferenceCode?: string;
    /**
     * The utility page's creation date.
     */
    dateCreated?: string;
    /**
     * The last time the utility page changed.
     */
    dateModified?: string;
    /**
     * The last time the utility page changed.
     */
    datePublished?: string;
    /**
     * The utility page's external reference code.
     */
    externalReferenceCode?: string;
    friendlyUrlHistory?: FriendlyUrlHistory;
    /**
     * The localized relative URLs to the utility page's rendered content.
     */
    friendlyUrlPath_i18n?: {
        [key: string]: string;
    };
    /**
     * Specifies if the utility page should be the default for the given type.
     */
    markedAsDefault?: boolean;
    /**
     * The utility page's name.
     */
    name?: string;
    /**
     * The utility page's specifications. A utility page will contain 1 page specifications for its draft layout and 1 page specifications for its published layout. This field is not returned by default. It can be requested via nestedFields.
     */
    pageSpecifications?: Array<PageSpecification>;
    thumbnail?: ItemExternalReference;
    utilityPageSettings?: UtilityPageSettings;
    /**
     * A valid external identifier to reference this utility page.
     */
    uuid?: string;
    readonly 'x-class-name'?: string;
    /**
     * The utility page's type.
     */
    type?: 'CookiePolicy' | 'CreateAccount' | 'Error' | 'ErrorCode404' | 'ErrorCode500' | 'ForgotPassword' | 'Login' | 'TermsOfUse';
};

/**
 * The utility page's SEO settings.
 */
export type UtilityPageSeoSettings = {
    /**
     * The localized descriptions of the utility page to be used as summary for search engines.
     */
    description_i18n?: {
        [key: string]: string;
    };
    /**
     * The localized main titles of the utility page to be used by search engines.
     */
    htmlTitle_i18n?: {
        [key: string]: string;
    };
    readonly 'x-class-name'?: string;
};

/**
 * Settings of the utility page.
 */
export type UtilityPageSettings = {
    seoSettings?: UtilityPageSeoSettings;
    readonly 'x-class-name'?: string;
};

export type PageUtilityPage = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<UtilityPage>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageWidgetPageWidgetInstance = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<WidgetPageWidgetInstance>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type DeleteSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        displayPageTemplateFolderExternalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-template-folders/{displayPageTemplateFolderExternalReferenceCode}';
};

export type DeleteSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        displayPageTemplateFolderExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-template-folders/{displayPageTemplateFolderExternalReferenceCode}';
};

export type GetSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderResponses = {
    /**
     * default response
     */
    default: DisplayPageTemplateFolder;
};

export type GetSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderResponse = GetSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderResponses[keyof GetSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderResponses];

export type PatchSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderData = {
    body?: DisplayPageTemplateFolder;
    path: {
        siteExternalReferenceCode: string;
        displayPageTemplateFolderExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-template-folders/{displayPageTemplateFolderExternalReferenceCode}';
};

export type PatchSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderResponses = {
    /**
     * default response
     */
    default: DisplayPageTemplateFolder;
};

export type PatchSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderResponse = PatchSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderResponses[keyof PatchSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderResponses];

export type PutSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderData = {
    body?: DisplayPageTemplateFolder;
    path: {
        siteExternalReferenceCode: string;
        displayPageTemplateFolderExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-template-folders/{displayPageTemplateFolderExternalReferenceCode}';
};

export type PutSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderResponses = {
    /**
     * default response
     */
    default: DisplayPageTemplateFolder;
};

export type PutSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderResponse = PutSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderResponses[keyof PutSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderResponses];

export type GetSiteDisplayPageTemplateFolderPermissionsPageData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        displayPageTemplateFolderExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        restrictFields?: string;
        roleNames?: string;
        nestedFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-template-folders/{displayPageTemplateFolderExternalReferenceCode}/permissions';
};

export type GetSiteDisplayPageTemplateFolderPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type GetSiteDisplayPageTemplateFolderPermissionsPageResponse = GetSiteDisplayPageTemplateFolderPermissionsPageResponses[keyof GetSiteDisplayPageTemplateFolderPermissionsPageResponses];

export type PutSiteDisplayPageTemplateFolderPermissionsPageData = {
    body?: Array<Permission>;
    path: {
        siteExternalReferenceCode: string;
        displayPageTemplateFolderExternalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-template-folders/{displayPageTemplateFolderExternalReferenceCode}/permissions';
};

export type PutSiteDisplayPageTemplateFolderPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type PutSiteDisplayPageTemplateFolderPermissionsPageResponse = PutSiteDisplayPageTemplateFolderPermissionsPageResponses[keyof PutSiteDisplayPageTemplateFolderPermissionsPageResponses];

export type GetSiteSiteByExternalReferenceCodeDisplayPageTemplateFoldersPageData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-template-folders';
};

export type GetSiteSiteByExternalReferenceCodeDisplayPageTemplateFoldersPageResponses = {
    /**
     * default response
     */
    default: PageDisplayPageTemplateFolder;
};

export type GetSiteSiteByExternalReferenceCodeDisplayPageTemplateFoldersPageResponse = GetSiteSiteByExternalReferenceCodeDisplayPageTemplateFoldersPageResponses[keyof GetSiteSiteByExternalReferenceCodeDisplayPageTemplateFoldersPageResponses];

export type PostSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderData = {
    body?: DisplayPageTemplateFolder;
    path: {
        siteExternalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-template-folders';
};

export type PostSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderResponses = {
    /**
     * default response
     */
    default: DisplayPageTemplateFolder;
};

export type PostSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderResponse = PostSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderResponses[keyof PostSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderResponses];

export type DeleteSiteSiteByExternalReferenceCodeDisplayPageTemplateData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        displayPageTemplateExternalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-templates/{displayPageTemplateExternalReferenceCode}';
};

export type DeleteSiteSiteByExternalReferenceCodeDisplayPageTemplateResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSiteSiteByExternalReferenceCodeDisplayPageTemplateData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        displayPageTemplateExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-templates/{displayPageTemplateExternalReferenceCode}';
};

export type GetSiteSiteByExternalReferenceCodeDisplayPageTemplateResponses = {
    /**
     * default response
     */
    default: DisplayPageTemplate;
};

export type GetSiteSiteByExternalReferenceCodeDisplayPageTemplateResponse = GetSiteSiteByExternalReferenceCodeDisplayPageTemplateResponses[keyof GetSiteSiteByExternalReferenceCodeDisplayPageTemplateResponses];

export type PatchSiteSiteByExternalReferenceCodeDisplayPageTemplateData = {
    body?: DisplayPageTemplate;
    path: {
        siteExternalReferenceCode: string;
        displayPageTemplateExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-templates/{displayPageTemplateExternalReferenceCode}';
};

export type PatchSiteSiteByExternalReferenceCodeDisplayPageTemplateResponses = {
    /**
     * default response
     */
    default: DisplayPageTemplate;
};

export type PatchSiteSiteByExternalReferenceCodeDisplayPageTemplateResponse = PatchSiteSiteByExternalReferenceCodeDisplayPageTemplateResponses[keyof PatchSiteSiteByExternalReferenceCodeDisplayPageTemplateResponses];

export type PutSiteSiteByExternalReferenceCodeDisplayPageTemplateData = {
    body?: DisplayPageTemplate;
    path: {
        siteExternalReferenceCode: string;
        displayPageTemplateExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-templates/{displayPageTemplateExternalReferenceCode}';
};

export type PutSiteSiteByExternalReferenceCodeDisplayPageTemplateResponses = {
    /**
     * default response
     */
    default: DisplayPageTemplate;
};

export type PutSiteSiteByExternalReferenceCodeDisplayPageTemplateResponse = PutSiteSiteByExternalReferenceCodeDisplayPageTemplateResponses[keyof PutSiteSiteByExternalReferenceCodeDisplayPageTemplateResponses];

export type GetSiteDisplayPageTemplatePermissionsPageData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        displayPageTemplateExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        restrictFields?: string;
        roleNames?: string;
        nestedFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-templates/{displayPageTemplateExternalReferenceCode}/permissions';
};

export type GetSiteDisplayPageTemplatePermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type GetSiteDisplayPageTemplatePermissionsPageResponse = GetSiteDisplayPageTemplatePermissionsPageResponses[keyof GetSiteDisplayPageTemplatePermissionsPageResponses];

export type PutSiteDisplayPageTemplatePermissionsPageData = {
    body?: Array<Permission>;
    path: {
        siteExternalReferenceCode: string;
        displayPageTemplateExternalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-templates/{displayPageTemplateExternalReferenceCode}/permissions';
};

export type PutSiteDisplayPageTemplatePermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type PutSiteDisplayPageTemplatePermissionsPageResponse = PutSiteDisplayPageTemplatePermissionsPageResponses[keyof PutSiteDisplayPageTemplatePermissionsPageResponses];

export type GetSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderDisplayPageTemplatesPageData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        displayPageTemplateFolderExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        flatten?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-template-folders/{displayPageTemplateFolderExternalReferenceCode}/display-page-templates';
};

export type GetSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderDisplayPageTemplatesPageResponses = {
    /**
     * default response
     */
    default: PageDisplayPageTemplate;
};

export type GetSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderDisplayPageTemplatesPageResponse = GetSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderDisplayPageTemplatesPageResponses[keyof GetSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderDisplayPageTemplatesPageResponses];

export type PostSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderDisplayPageTemplateData = {
    body?: DisplayPageTemplate;
    path: {
        siteExternalReferenceCode: string;
        displayPageTemplateFolderExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-template-folders/{displayPageTemplateFolderExternalReferenceCode}/display-page-templates';
};

export type PostSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderDisplayPageTemplateResponses = {
    /**
     * default response
     */
    default: DisplayPageTemplate;
};

export type PostSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderDisplayPageTemplateResponse = PostSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderDisplayPageTemplateResponses[keyof PostSiteSiteByExternalReferenceCodeDisplayPageTemplateFolderDisplayPageTemplateResponses];

export type GetSiteSiteByExternalReferenceCodeDisplayPageTemplatesPageData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-templates';
};

export type GetSiteSiteByExternalReferenceCodeDisplayPageTemplatesPageResponses = {
    /**
     * default response
     */
    default: PageDisplayPageTemplate;
};

export type GetSiteSiteByExternalReferenceCodeDisplayPageTemplatesPageResponse = GetSiteSiteByExternalReferenceCodeDisplayPageTemplatesPageResponses[keyof GetSiteSiteByExternalReferenceCodeDisplayPageTemplatesPageResponses];

export type PostSiteSiteByExternalReferenceCodeDisplayPageTemplateData = {
    body?: DisplayPageTemplate;
    path: {
        siteExternalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-templates';
};

export type PostSiteSiteByExternalReferenceCodeDisplayPageTemplateResponses = {
    /**
     * default response
     */
    default: DisplayPageTemplate;
};

export type PostSiteSiteByExternalReferenceCodeDisplayPageTemplateResponse = PostSiteSiteByExternalReferenceCodeDisplayPageTemplateResponses[keyof PostSiteSiteByExternalReferenceCodeDisplayPageTemplateResponses];

export type GetSiteSiteByExternalReferenceCodeDisplayPageTemplatePageSpecificationsPageData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        displayPageTemplateExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-templates/{displayPageTemplateExternalReferenceCode}/page-specifications';
};

export type GetSiteSiteByExternalReferenceCodeDisplayPageTemplatePageSpecificationsPageResponses = {
    /**
     * default response
     */
    default: PagePageSpecification;
};

export type GetSiteSiteByExternalReferenceCodeDisplayPageTemplatePageSpecificationsPageResponse = GetSiteSiteByExternalReferenceCodeDisplayPageTemplatePageSpecificationsPageResponses[keyof GetSiteSiteByExternalReferenceCodeDisplayPageTemplatePageSpecificationsPageResponses];

export type PostSiteSiteByExternalReferenceCodeDisplayPageTemplatePageSpecificationData = {
    body?: ContentPageSpecification;
    path: {
        siteExternalReferenceCode: string;
        displayPageTemplateExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-templates/{displayPageTemplateExternalReferenceCode}/page-specifications';
};

export type PostSiteSiteByExternalReferenceCodeDisplayPageTemplatePageSpecificationResponses = {
    /**
     * default response
     */
    default: ContentPageSpecification;
};

export type PostSiteSiteByExternalReferenceCodeDisplayPageTemplatePageSpecificationResponse = PostSiteSiteByExternalReferenceCodeDisplayPageTemplatePageSpecificationResponses[keyof PostSiteSiteByExternalReferenceCodeDisplayPageTemplatePageSpecificationResponses];

export type DeleteSiteSiteByExternalReferenceCodeFragmentCompositionData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        fragmentCompositionExternalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/fragment-compositions/{fragmentCompositionExternalReferenceCode}';
};

export type DeleteSiteSiteByExternalReferenceCodeFragmentCompositionResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSiteSiteByExternalReferenceCodeFragmentCompositionData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        fragmentCompositionExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/fragment-compositions/{fragmentCompositionExternalReferenceCode}';
};

export type GetSiteSiteByExternalReferenceCodeFragmentCompositionResponses = {
    /**
     * default response
     */
    default: FragmentComposition;
};

export type GetSiteSiteByExternalReferenceCodeFragmentCompositionResponse = GetSiteSiteByExternalReferenceCodeFragmentCompositionResponses[keyof GetSiteSiteByExternalReferenceCodeFragmentCompositionResponses];

export type PatchSiteSiteByExternalReferenceCodeFragmentCompositionData = {
    body?: FragmentComposition;
    path: {
        siteExternalReferenceCode: string;
        fragmentCompositionExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/fragment-compositions/{fragmentCompositionExternalReferenceCode}';
};

export type PatchSiteSiteByExternalReferenceCodeFragmentCompositionResponses = {
    /**
     * default response
     */
    default: FragmentComposition;
};

export type PatchSiteSiteByExternalReferenceCodeFragmentCompositionResponse = PatchSiteSiteByExternalReferenceCodeFragmentCompositionResponses[keyof PatchSiteSiteByExternalReferenceCodeFragmentCompositionResponses];

export type PutSiteSiteByExternalReferenceCodeFragmentCompositionData = {
    body?: FragmentComposition;
    path: {
        siteExternalReferenceCode: string;
        fragmentCompositionExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/fragment-compositions/{fragmentCompositionExternalReferenceCode}';
};

export type PutSiteSiteByExternalReferenceCodeFragmentCompositionResponses = {
    /**
     * default response
     */
    default: FragmentComposition;
};

export type PutSiteSiteByExternalReferenceCodeFragmentCompositionResponse = PutSiteSiteByExternalReferenceCodeFragmentCompositionResponses[keyof PutSiteSiteByExternalReferenceCodeFragmentCompositionResponses];

export type GetSiteSiteByExternalReferenceCodeFragmentCompositionsPageData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        filter?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/fragment-compositions';
};

export type GetSiteSiteByExternalReferenceCodeFragmentCompositionsPageResponses = {
    /**
     * default response
     */
    default: PageFragmentComposition;
};

export type GetSiteSiteByExternalReferenceCodeFragmentCompositionsPageResponse = GetSiteSiteByExternalReferenceCodeFragmentCompositionsPageResponses[keyof GetSiteSiteByExternalReferenceCodeFragmentCompositionsPageResponses];

export type PostSiteSiteByExternalReferenceCodeFragmentCompositionData = {
    body?: FragmentComposition;
    path: {
        siteExternalReferenceCode: string;
    };
    query?: {
        saveInlineContent?: string;
        saveMapping?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/fragment-compositions';
};

export type PostSiteSiteByExternalReferenceCodeFragmentCompositionResponses = {
    /**
     * default response
     */
    default: FragmentComposition;
};

export type PostSiteSiteByExternalReferenceCodeFragmentCompositionResponse = PostSiteSiteByExternalReferenceCodeFragmentCompositionResponses[keyof PostSiteSiteByExternalReferenceCodeFragmentCompositionResponses];

export type GetSiteSiteByExternalReferenceCodeDisplayPageTemplateFriendlyUrlHistoryData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        displayPageTemplateExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/display-page-templates/{displayPageTemplateExternalReferenceCode}/friendly-url-history';
};

export type GetSiteSiteByExternalReferenceCodeDisplayPageTemplateFriendlyUrlHistoryResponses = {
    /**
     * default response
     */
    default: FriendlyUrlHistory;
};

export type GetSiteSiteByExternalReferenceCodeDisplayPageTemplateFriendlyUrlHistoryResponse = GetSiteSiteByExternalReferenceCodeDisplayPageTemplateFriendlyUrlHistoryResponses[keyof GetSiteSiteByExternalReferenceCodeDisplayPageTemplateFriendlyUrlHistoryResponses];

export type GetSiteSiteByExternalReferenceCodeSitePageFriendlyUrlHistoryData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        sitePageExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}/friendly-url-history';
};

export type GetSiteSiteByExternalReferenceCodeSitePageFriendlyUrlHistoryResponses = {
    /**
     * default response
     */
    default: FriendlyUrlHistory;
};

export type GetSiteSiteByExternalReferenceCodeSitePageFriendlyUrlHistoryResponse = GetSiteSiteByExternalReferenceCodeSitePageFriendlyUrlHistoryResponses[keyof GetSiteSiteByExternalReferenceCodeSitePageFriendlyUrlHistoryResponses];

export type GetSiteSiteByExternalReferenceCodeUtilityPageFriendlyUrlHistoryData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        utilityPageExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/utility-pages/{utilityPageExternalReferenceCode}/friendly-url-history';
};

export type GetSiteSiteByExternalReferenceCodeUtilityPageFriendlyUrlHistoryResponses = {
    /**
     * default response
     */
    default: FriendlyUrlHistory;
};

export type GetSiteSiteByExternalReferenceCodeUtilityPageFriendlyUrlHistoryResponse = GetSiteSiteByExternalReferenceCodeUtilityPageFriendlyUrlHistoryResponses[keyof GetSiteSiteByExternalReferenceCodeUtilityPageFriendlyUrlHistoryResponses];

export type DeleteSiteSiteByExternalReferenceCodeMasterPageData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        masterPageExternalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/master-pages/{masterPageExternalReferenceCode}';
};

export type DeleteSiteSiteByExternalReferenceCodeMasterPageResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSiteSiteByExternalReferenceCodeMasterPageData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        masterPageExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/master-pages/{masterPageExternalReferenceCode}';
};

export type GetSiteSiteByExternalReferenceCodeMasterPageResponses = {
    /**
     * default response
     */
    default: MasterPage;
};

export type GetSiteSiteByExternalReferenceCodeMasterPageResponse = GetSiteSiteByExternalReferenceCodeMasterPageResponses[keyof GetSiteSiteByExternalReferenceCodeMasterPageResponses];

export type PatchSiteSiteByExternalReferenceCodeMasterPageData = {
    body?: MasterPage;
    path: {
        siteExternalReferenceCode: string;
        masterPageExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/master-pages/{masterPageExternalReferenceCode}';
};

export type PatchSiteSiteByExternalReferenceCodeMasterPageResponses = {
    /**
     * default response
     */
    default: MasterPage;
};

export type PatchSiteSiteByExternalReferenceCodeMasterPageResponse = PatchSiteSiteByExternalReferenceCodeMasterPageResponses[keyof PatchSiteSiteByExternalReferenceCodeMasterPageResponses];

export type PutSiteSiteByExternalReferenceCodeMasterPageData = {
    body?: MasterPage;
    path: {
        siteExternalReferenceCode: string;
        masterPageExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/master-pages/{masterPageExternalReferenceCode}';
};

export type PutSiteSiteByExternalReferenceCodeMasterPageResponses = {
    /**
     * default response
     */
    default: MasterPage;
};

export type PutSiteSiteByExternalReferenceCodeMasterPageResponse = PutSiteSiteByExternalReferenceCodeMasterPageResponses[keyof PutSiteSiteByExternalReferenceCodeMasterPageResponses];

export type GetSiteMasterPagePermissionsPageData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        masterPageExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        restrictFields?: string;
        roleNames?: string;
        nestedFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/master-pages/{masterPageExternalReferenceCode}/permissions';
};

export type GetSiteMasterPagePermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type GetSiteMasterPagePermissionsPageResponse = GetSiteMasterPagePermissionsPageResponses[keyof GetSiteMasterPagePermissionsPageResponses];

export type PutSiteMasterPagePermissionsPageData = {
    body?: Array<Permission>;
    path: {
        siteExternalReferenceCode: string;
        masterPageExternalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/master-pages/{masterPageExternalReferenceCode}/permissions';
};

export type PutSiteMasterPagePermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type PutSiteMasterPagePermissionsPageResponse = PutSiteMasterPagePermissionsPageResponses[keyof PutSiteMasterPagePermissionsPageResponses];

export type GetSiteSiteByExternalReferenceCodeMasterPagesPageData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/master-pages';
};

export type GetSiteSiteByExternalReferenceCodeMasterPagesPageResponses = {
    /**
     * default response
     */
    default: PageMasterPage;
};

export type GetSiteSiteByExternalReferenceCodeMasterPagesPageResponse = GetSiteSiteByExternalReferenceCodeMasterPagesPageResponses[keyof GetSiteSiteByExternalReferenceCodeMasterPagesPageResponses];

export type PostSiteSiteByExternalReferenceCodeMasterPageData = {
    body?: MasterPage;
    path: {
        siteExternalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/master-pages';
};

export type PostSiteSiteByExternalReferenceCodeMasterPageResponses = {
    /**
     * default response
     */
    default: MasterPage;
};

export type PostSiteSiteByExternalReferenceCodeMasterPageResponse = PostSiteSiteByExternalReferenceCodeMasterPageResponses[keyof PostSiteSiteByExternalReferenceCodeMasterPageResponses];

export type GetSiteSiteByExternalReferenceCodeMasterPagePageSpecificationsPageData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        masterPageExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/master-pages/{masterPageExternalReferenceCode}/page-specifications';
};

export type GetSiteSiteByExternalReferenceCodeMasterPagePageSpecificationsPageResponses = {
    /**
     * default response
     */
    default: PagePageSpecification;
};

export type GetSiteSiteByExternalReferenceCodeMasterPagePageSpecificationsPageResponse = GetSiteSiteByExternalReferenceCodeMasterPagePageSpecificationsPageResponses[keyof GetSiteSiteByExternalReferenceCodeMasterPagePageSpecificationsPageResponses];

export type PostSiteSiteByExternalReferenceCodeMasterPagePageSpecificationData = {
    body?: ContentPageSpecification;
    path: {
        siteExternalReferenceCode: string;
        masterPageExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/master-pages/{masterPageExternalReferenceCode}/page-specifications';
};

export type PostSiteSiteByExternalReferenceCodeMasterPagePageSpecificationResponses = {
    /**
     * default response
     */
    default: ContentPageSpecification;
};

export type PostSiteSiteByExternalReferenceCodeMasterPagePageSpecificationResponse = PostSiteSiteByExternalReferenceCodeMasterPagePageSpecificationResponses[keyof PostSiteSiteByExternalReferenceCodeMasterPagePageSpecificationResponses];

export type DeleteSiteSiteByExternalReferenceCodePageElementData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        pageSpecificationExternalReferenceCode: string;
        pageExperienceExternalReferenceCode: string;
        pageElementExternalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}/page-elements/{pageElementExternalReferenceCode}';
};

export type DeleteSiteSiteByExternalReferenceCodePageElementResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSiteSiteByExternalReferenceCodePageElementData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        pageSpecificationExternalReferenceCode: string;
        pageExperienceExternalReferenceCode: string;
        pageElementExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}/page-elements/{pageElementExternalReferenceCode}';
};

export type GetSiteSiteByExternalReferenceCodePageElementResponses = {
    /**
     * default response
     */
    default: PageElement;
};

export type GetSiteSiteByExternalReferenceCodePageElementResponse = GetSiteSiteByExternalReferenceCodePageElementResponses[keyof GetSiteSiteByExternalReferenceCodePageElementResponses];

export type PatchSiteSiteByExternalReferenceCodePageElementData = {
    body?: PageElement;
    path: {
        siteExternalReferenceCode: string;
        pageSpecificationExternalReferenceCode: string;
        pageExperienceExternalReferenceCode: string;
        pageElementExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}/page-elements/{pageElementExternalReferenceCode}';
};

export type PatchSiteSiteByExternalReferenceCodePageElementResponses = {
    /**
     * default response
     */
    default: PageElement;
};

export type PatchSiteSiteByExternalReferenceCodePageElementResponse = PatchSiteSiteByExternalReferenceCodePageElementResponses[keyof PatchSiteSiteByExternalReferenceCodePageElementResponses];

export type PutSiteSiteByExternalReferenceCodePageElementData = {
    body?: PageElement;
    path: {
        siteExternalReferenceCode: string;
        pageSpecificationExternalReferenceCode: string;
        pageExperienceExternalReferenceCode: string;
        pageElementExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}/page-elements/{pageElementExternalReferenceCode}';
};

export type PutSiteSiteByExternalReferenceCodePageElementResponses = {
    /**
     * default response
     */
    default: PageElement;
};

export type PutSiteSiteByExternalReferenceCodePageElementResponse = PutSiteSiteByExternalReferenceCodePageElementResponses[keyof PutSiteSiteByExternalReferenceCodePageElementResponses];

export type GetSiteSiteByExternalReferenceCodePageElementPageElementsPageData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        pageSpecificationExternalReferenceCode: string;
        pageExperienceExternalReferenceCode: string;
        pageElementExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        flatten?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}/page-elements/{pageElementExternalReferenceCode}/page-elements';
};

export type GetSiteSiteByExternalReferenceCodePageElementPageElementsPageResponses = {
    /**
     * default response
     */
    default: PagePageElement;
};

export type GetSiteSiteByExternalReferenceCodePageElementPageElementsPageResponse = GetSiteSiteByExternalReferenceCodePageElementPageElementsPageResponses[keyof GetSiteSiteByExternalReferenceCodePageElementPageElementsPageResponses];

export type GetSiteSiteByExternalReferenceCodePageExperiencePageElementsPageData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        pageSpecificationExternalReferenceCode: string;
        pageExperienceExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        flatten?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}/page-elements';
};

export type GetSiteSiteByExternalReferenceCodePageExperiencePageElementsPageResponses = {
    /**
     * default response
     */
    default: PagePageElement;
};

export type GetSiteSiteByExternalReferenceCodePageExperiencePageElementsPageResponse = GetSiteSiteByExternalReferenceCodePageExperiencePageElementsPageResponses[keyof GetSiteSiteByExternalReferenceCodePageExperiencePageElementsPageResponses];

export type PostSiteSiteByExternalReferenceCodePageExperiencePageElementData = {
    body?: PageElement;
    path: {
        siteExternalReferenceCode: string;
        pageSpecificationExternalReferenceCode: string;
        pageExperienceExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}/page-elements';
};

export type PostSiteSiteByExternalReferenceCodePageExperiencePageElementResponses = {
    /**
     * default response
     */
    default: PageElement;
};

export type PostSiteSiteByExternalReferenceCodePageExperiencePageElementResponse = PostSiteSiteByExternalReferenceCodePageExperiencePageElementResponses[keyof PostSiteSiteByExternalReferenceCodePageExperiencePageElementResponses];

export type PostSiteSiteByExternalReferenceCodePageElementFragmentCompositionData = {
    body?: FragmentComposition;
    path: {
        siteExternalReferenceCode: string;
        pageSpecificationExternalReferenceCode: string;
        pageExperienceExternalReferenceCode: string;
        pageElementExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        position?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}/page-elements/{pageElementExternalReferenceCode}/fragment-compositions';
};

export type PostSiteSiteByExternalReferenceCodePageElementFragmentCompositionResponses = {
    /**
     * default response
     */
    default: PageElement;
};

export type PostSiteSiteByExternalReferenceCodePageElementFragmentCompositionResponse = PostSiteSiteByExternalReferenceCodePageElementFragmentCompositionResponses[keyof PostSiteSiteByExternalReferenceCodePageElementFragmentCompositionResponses];

export type DeleteSiteSiteByExternalReferenceCodePageExperienceData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        pageExperienceExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}';
};

export type DeleteSiteSiteByExternalReferenceCodePageExperienceResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSiteSiteByExternalReferenceCodePageExperienceData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        pageExperienceExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}';
};

export type GetSiteSiteByExternalReferenceCodePageExperienceResponses = {
    /**
     * default response
     */
    default: PageExperience;
};

export type GetSiteSiteByExternalReferenceCodePageExperienceResponse = GetSiteSiteByExternalReferenceCodePageExperienceResponses[keyof GetSiteSiteByExternalReferenceCodePageExperienceResponses];

export type PatchSiteSiteByExternalReferenceCodePageExperienceData = {
    body?: PageExperience;
    path: {
        siteExternalReferenceCode: string;
        pageExperienceExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}';
};

export type PatchSiteSiteByExternalReferenceCodePageExperienceResponses = {
    /**
     * default response
     */
    default: PageExperience;
};

export type PatchSiteSiteByExternalReferenceCodePageExperienceResponse = PatchSiteSiteByExternalReferenceCodePageExperienceResponses[keyof PatchSiteSiteByExternalReferenceCodePageExperienceResponses];

export type PutSiteSiteByExternalReferenceCodePageExperienceData = {
    body?: PageExperience;
    path: {
        siteExternalReferenceCode: string;
        pageExperienceExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}';
};

export type PutSiteSiteByExternalReferenceCodePageExperienceResponses = {
    /**
     * default response
     */
    default: PageExperience;
};

export type PutSiteSiteByExternalReferenceCodePageExperienceResponse = PutSiteSiteByExternalReferenceCodePageExperienceResponses[keyof PutSiteSiteByExternalReferenceCodePageExperienceResponses];

export type GetSiteSiteByExternalReferenceCodePageSpecificationPageExperiencesPageData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        pageSpecificationExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}/page-experiences';
};

export type GetSiteSiteByExternalReferenceCodePageSpecificationPageExperiencesPageResponses = {
    /**
     * default response
     */
    default: PagePageExperience;
};

export type GetSiteSiteByExternalReferenceCodePageSpecificationPageExperiencesPageResponse = GetSiteSiteByExternalReferenceCodePageSpecificationPageExperiencesPageResponses[keyof GetSiteSiteByExternalReferenceCodePageSpecificationPageExperiencesPageResponses];

export type PostSiteSiteByExternalReferenceCodePageSpecificationPageExperienceData = {
    body?: PageExperience;
    path: {
        siteExternalReferenceCode: string;
        pageSpecificationExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}/page-experiences';
};

export type PostSiteSiteByExternalReferenceCodePageSpecificationPageExperienceResponses = {
    /**
     * default response
     */
    default: PageExperience;
};

export type PostSiteSiteByExternalReferenceCodePageSpecificationPageExperienceResponse = PostSiteSiteByExternalReferenceCodePageSpecificationPageExperienceResponses[keyof PostSiteSiteByExternalReferenceCodePageSpecificationPageExperienceResponses];

export type DeleteSiteSiteByExternalReferenceCodePageRuleActionData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        pageRuleActionExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rule-actions/{pageRuleActionExternalReferenceCode}';
};

export type DeleteSiteSiteByExternalReferenceCodePageRuleActionResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSiteSiteByExternalReferenceCodePageRuleActionData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        pageRuleActionExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rule-actions/{pageRuleActionExternalReferenceCode}';
};

export type GetSiteSiteByExternalReferenceCodePageRuleActionResponses = {
    /**
     * default response
     */
    default: PageRuleAction;
};

export type GetSiteSiteByExternalReferenceCodePageRuleActionResponse = GetSiteSiteByExternalReferenceCodePageRuleActionResponses[keyof GetSiteSiteByExternalReferenceCodePageRuleActionResponses];

export type PatchSiteSiteByExternalReferenceCodePageRuleActionData = {
    body?: PageRuleAction;
    path: {
        siteExternalReferenceCode: string;
        pageRuleActionExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rule-actions/{pageRuleActionExternalReferenceCode}';
};

export type PatchSiteSiteByExternalReferenceCodePageRuleActionResponses = {
    /**
     * default response
     */
    default: PageRuleAction;
};

export type PatchSiteSiteByExternalReferenceCodePageRuleActionResponse = PatchSiteSiteByExternalReferenceCodePageRuleActionResponses[keyof PatchSiteSiteByExternalReferenceCodePageRuleActionResponses];

export type PutSiteSiteByExternalReferenceCodePageRuleActionData = {
    body?: PageRuleAction;
    path: {
        siteExternalReferenceCode: string;
        pageRuleActionExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rule-actions/{pageRuleActionExternalReferenceCode}';
};

export type PutSiteSiteByExternalReferenceCodePageRuleActionResponses = {
    /**
     * default response
     */
    default: PageRuleAction;
};

export type PutSiteSiteByExternalReferenceCodePageRuleActionResponse = PutSiteSiteByExternalReferenceCodePageRuleActionResponses[keyof PutSiteSiteByExternalReferenceCodePageRuleActionResponses];

export type GetSiteSiteByExternalReferenceCodePageRulePageRuleActionsPageData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        pageRuleExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        flatten?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rules/{pageRuleExternalReferenceCode}/page-rule-actions';
};

export type GetSiteSiteByExternalReferenceCodePageRulePageRuleActionsPageResponses = {
    /**
     * default response
     */
    default: PagePageRuleAction;
};

export type GetSiteSiteByExternalReferenceCodePageRulePageRuleActionsPageResponse = GetSiteSiteByExternalReferenceCodePageRulePageRuleActionsPageResponses[keyof GetSiteSiteByExternalReferenceCodePageRulePageRuleActionsPageResponses];

export type PostSiteSiteByExternalReferenceCodePageRulePageRuleActionData = {
    body?: PageRuleAction;
    path: {
        siteExternalReferenceCode: string;
        pageRuleExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rules/{pageRuleExternalReferenceCode}/page-rule-actions';
};

export type PostSiteSiteByExternalReferenceCodePageRulePageRuleActionResponses = {
    /**
     * default response
     */
    default: PageRuleAction;
};

export type PostSiteSiteByExternalReferenceCodePageRulePageRuleActionResponse = PostSiteSiteByExternalReferenceCodePageRulePageRuleActionResponses[keyof PostSiteSiteByExternalReferenceCodePageRulePageRuleActionResponses];

export type DeleteSiteSiteByExternalReferenceCodePageRuleConditionData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        pageRuleConditionExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rule-conditions/{pageRuleConditionExternalReferenceCode}';
};

export type DeleteSiteSiteByExternalReferenceCodePageRuleConditionResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSiteSiteByExternalReferenceCodePageRuleConditionData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        pageRuleConditionExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rule-conditions/{pageRuleConditionExternalReferenceCode}';
};

export type GetSiteSiteByExternalReferenceCodePageRuleConditionResponses = {
    /**
     * default response
     */
    default: PageRuleCondition;
};

export type GetSiteSiteByExternalReferenceCodePageRuleConditionResponse = GetSiteSiteByExternalReferenceCodePageRuleConditionResponses[keyof GetSiteSiteByExternalReferenceCodePageRuleConditionResponses];

export type PatchSiteSiteByExternalReferenceCodePageRuleConditionData = {
    body?: PageRuleCondition;
    path: {
        siteExternalReferenceCode: string;
        pageRuleConditionExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rule-conditions/{pageRuleConditionExternalReferenceCode}';
};

export type PatchSiteSiteByExternalReferenceCodePageRuleConditionResponses = {
    /**
     * default response
     */
    default: PageRuleCondition;
};

export type PatchSiteSiteByExternalReferenceCodePageRuleConditionResponse = PatchSiteSiteByExternalReferenceCodePageRuleConditionResponses[keyof PatchSiteSiteByExternalReferenceCodePageRuleConditionResponses];

export type PutSiteSiteByExternalReferenceCodePageRuleConditionData = {
    body?: PageRuleCondition;
    path: {
        siteExternalReferenceCode: string;
        pageRuleConditionExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rule-conditions/{pageRuleConditionExternalReferenceCode}';
};

export type PutSiteSiteByExternalReferenceCodePageRuleConditionResponses = {
    /**
     * default response
     */
    default: PageRuleCondition;
};

export type PutSiteSiteByExternalReferenceCodePageRuleConditionResponse = PutSiteSiteByExternalReferenceCodePageRuleConditionResponses[keyof PutSiteSiteByExternalReferenceCodePageRuleConditionResponses];

export type GetSiteSiteByExternalReferenceCodePageRulePageRuleConditionsPageData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        pageRuleExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        flatten?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rules/{pageRuleExternalReferenceCode}/page-rule-conditions';
};

export type GetSiteSiteByExternalReferenceCodePageRulePageRuleConditionsPageResponses = {
    /**
     * default response
     */
    default: PagePageRuleCondition;
};

export type GetSiteSiteByExternalReferenceCodePageRulePageRuleConditionsPageResponse = GetSiteSiteByExternalReferenceCodePageRulePageRuleConditionsPageResponses[keyof GetSiteSiteByExternalReferenceCodePageRulePageRuleConditionsPageResponses];

export type PostSiteSiteByExternalReferenceCodePageRulePageRuleConditionData = {
    body?: PageRuleCondition;
    path: {
        siteExternalReferenceCode: string;
        pageRuleExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rules/{pageRuleExternalReferenceCode}/page-rule-conditions';
};

export type PostSiteSiteByExternalReferenceCodePageRulePageRuleConditionResponses = {
    /**
     * default response
     */
    default: PageRuleCondition;
};

export type PostSiteSiteByExternalReferenceCodePageRulePageRuleConditionResponse = PostSiteSiteByExternalReferenceCodePageRulePageRuleConditionResponses[keyof PostSiteSiteByExternalReferenceCodePageRulePageRuleConditionResponses];

export type DeleteSiteSiteByExternalReferenceCodePageRuleData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        pageRuleExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rules/{pageRuleExternalReferenceCode}';
};

export type DeleteSiteSiteByExternalReferenceCodePageRuleResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSiteSiteByExternalReferenceCodePageRuleData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        pageRuleExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rules/{pageRuleExternalReferenceCode}';
};

export type GetSiteSiteByExternalReferenceCodePageRuleResponses = {
    /**
     * default response
     */
    default: PageRule;
};

export type GetSiteSiteByExternalReferenceCodePageRuleResponse = GetSiteSiteByExternalReferenceCodePageRuleResponses[keyof GetSiteSiteByExternalReferenceCodePageRuleResponses];

export type PatchSiteSiteByExternalReferenceCodePageRuleData = {
    body?: PageRule;
    path: {
        siteExternalReferenceCode: string;
        pageRuleExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rules/{pageRuleExternalReferenceCode}';
};

export type PatchSiteSiteByExternalReferenceCodePageRuleResponses = {
    /**
     * default response
     */
    default: PageRule;
};

export type PatchSiteSiteByExternalReferenceCodePageRuleResponse = PatchSiteSiteByExternalReferenceCodePageRuleResponses[keyof PatchSiteSiteByExternalReferenceCodePageRuleResponses];

export type PutSiteSiteByExternalReferenceCodePageRuleData = {
    body?: PageRule;
    path: {
        siteExternalReferenceCode: string;
        pageRuleExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-rules/{pageRuleExternalReferenceCode}';
};

export type PutSiteSiteByExternalReferenceCodePageRuleResponses = {
    /**
     * default response
     */
    default: PageRule;
};

export type PutSiteSiteByExternalReferenceCodePageRuleResponse = PutSiteSiteByExternalReferenceCodePageRuleResponses[keyof PutSiteSiteByExternalReferenceCodePageRuleResponses];

export type GetSiteSiteByExternalReferenceCodePageExperiencePageRulesPageData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        pageExperienceExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        flatten?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}/page-rules';
};

export type GetSiteSiteByExternalReferenceCodePageExperiencePageRulesPageResponses = {
    /**
     * default response
     */
    default: PagePageRule;
};

export type GetSiteSiteByExternalReferenceCodePageExperiencePageRulesPageResponse = GetSiteSiteByExternalReferenceCodePageExperiencePageRulesPageResponses[keyof GetSiteSiteByExternalReferenceCodePageExperiencePageRulesPageResponses];

export type PostSiteSiteByExternalReferenceCodePageExperiencePageRuleData = {
    body?: PageRule;
    path: {
        siteExternalReferenceCode: string;
        pageExperienceExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-experiences/{pageExperienceExternalReferenceCode}/page-rules';
};

export type PostSiteSiteByExternalReferenceCodePageExperiencePageRuleResponses = {
    /**
     * default response
     */
    default: PageRule;
};

export type PostSiteSiteByExternalReferenceCodePageExperiencePageRuleResponse = PostSiteSiteByExternalReferenceCodePageExperiencePageRuleResponses[keyof PostSiteSiteByExternalReferenceCodePageExperiencePageRuleResponses];

export type DeleteSiteSiteByExternalReferenceCodePageSpecificationData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        pageSpecificationExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}';
};

export type DeleteSiteSiteByExternalReferenceCodePageSpecificationResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSiteSiteByExternalReferenceCodePageSpecificationData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        pageSpecificationExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}';
};

export type GetSiteSiteByExternalReferenceCodePageSpecificationResponses = {
    /**
     * default response
     */
    default: PageSpecification;
};

export type GetSiteSiteByExternalReferenceCodePageSpecificationResponse = GetSiteSiteByExternalReferenceCodePageSpecificationResponses[keyof GetSiteSiteByExternalReferenceCodePageSpecificationResponses];

export type PatchSiteSiteByExternalReferenceCodePageSpecificationData = {
    body?: PageSpecification;
    path: {
        siteExternalReferenceCode: string;
        pageSpecificationExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}';
};

export type PatchSiteSiteByExternalReferenceCodePageSpecificationResponses = {
    /**
     * default response
     */
    default: PageSpecification;
};

export type PatchSiteSiteByExternalReferenceCodePageSpecificationResponse = PatchSiteSiteByExternalReferenceCodePageSpecificationResponses[keyof PatchSiteSiteByExternalReferenceCodePageSpecificationResponses];

export type PutSiteSiteByExternalReferenceCodePageSpecificationData = {
    body?: PageSpecification;
    path: {
        siteExternalReferenceCode: string;
        pageSpecificationExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}';
};

export type PutSiteSiteByExternalReferenceCodePageSpecificationResponses = {
    /**
     * default response
     */
    default: PageSpecification;
};

export type PutSiteSiteByExternalReferenceCodePageSpecificationResponse = PutSiteSiteByExternalReferenceCodePageSpecificationResponses[keyof PutSiteSiteByExternalReferenceCodePageSpecificationResponses];

export type GetSiteSiteByExternalReferenceCodePageTemplatePageSpecificationsPageData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        pageTemplateExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-templates/{pageTemplateExternalReferenceCode}/page-specifications';
};

export type GetSiteSiteByExternalReferenceCodePageTemplatePageSpecificationsPageResponses = {
    /**
     * default response
     */
    default: PagePageSpecification;
};

export type GetSiteSiteByExternalReferenceCodePageTemplatePageSpecificationsPageResponse = GetSiteSiteByExternalReferenceCodePageTemplatePageSpecificationsPageResponses[keyof GetSiteSiteByExternalReferenceCodePageTemplatePageSpecificationsPageResponses];

export type PostSiteSiteByExternalReferenceCodePageTemplatePageSpecificationData = {
    body?: ContentPageSpecification;
    path: {
        siteExternalReferenceCode: string;
        pageTemplateExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-templates/{pageTemplateExternalReferenceCode}/page-specifications';
};

export type PostSiteSiteByExternalReferenceCodePageTemplatePageSpecificationResponses = {
    /**
     * default response
     */
    default: ContentPageSpecification;
};

export type PostSiteSiteByExternalReferenceCodePageTemplatePageSpecificationResponse = PostSiteSiteByExternalReferenceCodePageTemplatePageSpecificationResponses[keyof PostSiteSiteByExternalReferenceCodePageTemplatePageSpecificationResponses];

export type GetSiteSiteByExternalReferenceCodeSitePagePageSpecificationsPageData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        sitePageExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}/page-specifications';
};

export type GetSiteSiteByExternalReferenceCodeSitePagePageSpecificationsPageResponses = {
    /**
     * default response
     */
    default: PagePageSpecification;
};

export type GetSiteSiteByExternalReferenceCodeSitePagePageSpecificationsPageResponse = GetSiteSiteByExternalReferenceCodeSitePagePageSpecificationsPageResponses[keyof GetSiteSiteByExternalReferenceCodeSitePagePageSpecificationsPageResponses];

export type PostSiteSiteByExternalReferenceCodeSitePagePageSpecificationData = {
    body?: ContentPageSpecification;
    path: {
        siteExternalReferenceCode: string;
        sitePageExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}/page-specifications';
};

export type PostSiteSiteByExternalReferenceCodeSitePagePageSpecificationResponses = {
    /**
     * default response
     */
    default: ContentPageSpecification;
};

export type PostSiteSiteByExternalReferenceCodeSitePagePageSpecificationResponse = PostSiteSiteByExternalReferenceCodeSitePagePageSpecificationResponses[keyof PostSiteSiteByExternalReferenceCodeSitePagePageSpecificationResponses];

export type GetSiteSiteByExternalReferenceCodeUtilityPagePageSpecificationsPageData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        utilityPageExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/utility-pages/{utilityPageExternalReferenceCode}/page-specifications';
};

export type GetSiteSiteByExternalReferenceCodeUtilityPagePageSpecificationsPageResponses = {
    /**
     * default response
     */
    default: PagePageSpecification;
};

export type GetSiteSiteByExternalReferenceCodeUtilityPagePageSpecificationsPageResponse = GetSiteSiteByExternalReferenceCodeUtilityPagePageSpecificationsPageResponses[keyof GetSiteSiteByExternalReferenceCodeUtilityPagePageSpecificationsPageResponses];

export type PostSiteSiteByExternalReferenceCodeUtilityPagePageSpecificationData = {
    body?: ContentPageSpecification;
    path: {
        siteExternalReferenceCode: string;
        utilityPageExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/utility-pages/{utilityPageExternalReferenceCode}/page-specifications';
};

export type PostSiteSiteByExternalReferenceCodeUtilityPagePageSpecificationResponses = {
    /**
     * default response
     */
    default: ContentPageSpecification;
};

export type PostSiteSiteByExternalReferenceCodeUtilityPagePageSpecificationResponse = PostSiteSiteByExternalReferenceCodeUtilityPagePageSpecificationResponses[keyof PostSiteSiteByExternalReferenceCodeUtilityPagePageSpecificationResponses];

export type PostSiteSiteByExternalReferenceCodePageSpecificationPublishData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        pageSpecificationExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-specifications/{pageSpecificationExternalReferenceCode}/publish';
};

export type PostSiteSiteByExternalReferenceCodePageSpecificationPublishResponses = {
    /**
     * default response
     */
    default: PageSpecification;
};

export type PostSiteSiteByExternalReferenceCodePageSpecificationPublishResponse = PostSiteSiteByExternalReferenceCodePageSpecificationPublishResponses[keyof PostSiteSiteByExternalReferenceCodePageSpecificationPublishResponses];

export type DeleteSiteSiteByExternalReferenceCodePageTemplateData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        pageTemplateExternalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-templates/{pageTemplateExternalReferenceCode}';
};

export type DeleteSiteSiteByExternalReferenceCodePageTemplateResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSiteSiteByExternalReferenceCodePageTemplateData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        pageTemplateExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-templates/{pageTemplateExternalReferenceCode}';
};

export type GetSiteSiteByExternalReferenceCodePageTemplateResponses = {
    /**
     * default response
     */
    default: PageTemplate;
};

export type GetSiteSiteByExternalReferenceCodePageTemplateResponse = GetSiteSiteByExternalReferenceCodePageTemplateResponses[keyof GetSiteSiteByExternalReferenceCodePageTemplateResponses];

export type PatchSiteSiteByExternalReferenceCodePageTemplateData = {
    body?: PageTemplate;
    path: {
        siteExternalReferenceCode: string;
        pageTemplateExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-templates/{pageTemplateExternalReferenceCode}';
};

export type PatchSiteSiteByExternalReferenceCodePageTemplateResponses = {
    /**
     * default response
     */
    default: PageTemplate;
};

export type PatchSiteSiteByExternalReferenceCodePageTemplateResponse = PatchSiteSiteByExternalReferenceCodePageTemplateResponses[keyof PatchSiteSiteByExternalReferenceCodePageTemplateResponses];

export type PutSiteSiteByExternalReferenceCodePageTemplateData = {
    body?: PageTemplate;
    path: {
        siteExternalReferenceCode: string;
        pageTemplateExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-templates/{pageTemplateExternalReferenceCode}';
};

export type PutSiteSiteByExternalReferenceCodePageTemplateResponses = {
    /**
     * default response
     */
    default: PageTemplate;
};

export type PutSiteSiteByExternalReferenceCodePageTemplateResponse = PutSiteSiteByExternalReferenceCodePageTemplateResponses[keyof PutSiteSiteByExternalReferenceCodePageTemplateResponses];

export type GetSitePageTemplatePermissionsPageData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        pageTemplateExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        restrictFields?: string;
        roleNames?: string;
        nestedFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-templates/{pageTemplateExternalReferenceCode}/permissions';
};

export type GetSitePageTemplatePermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type GetSitePageTemplatePermissionsPageResponse = GetSitePageTemplatePermissionsPageResponses[keyof GetSitePageTemplatePermissionsPageResponses];

export type PutSitePageTemplatePermissionsPageData = {
    body?: Array<Permission>;
    path: {
        siteExternalReferenceCode: string;
        pageTemplateExternalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-templates/{pageTemplateExternalReferenceCode}/permissions';
};

export type PutSitePageTemplatePermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type PutSitePageTemplatePermissionsPageResponse = PutSitePageTemplatePermissionsPageResponses[keyof PutSitePageTemplatePermissionsPageResponses];

export type GetSiteSiteByExternalReferenceCodePageTemplateSetPageTemplatesPageData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        pageTemplateSetExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        flatten?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-template-sets/{pageTemplateSetExternalReferenceCode}/page-templates';
};

export type GetSiteSiteByExternalReferenceCodePageTemplateSetPageTemplatesPageResponses = {
    /**
     * default response
     */
    default: PagePageTemplate;
};

export type GetSiteSiteByExternalReferenceCodePageTemplateSetPageTemplatesPageResponse = GetSiteSiteByExternalReferenceCodePageTemplateSetPageTemplatesPageResponses[keyof GetSiteSiteByExternalReferenceCodePageTemplateSetPageTemplatesPageResponses];

export type PostSiteSiteByExternalReferenceCodePageTemplateSetPageTemplateData = {
    body?: PageTemplate;
    path: {
        siteExternalReferenceCode: string;
        pageTemplateSetExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-template-sets/{pageTemplateSetExternalReferenceCode}/page-templates';
};

export type PostSiteSiteByExternalReferenceCodePageTemplateSetPageTemplateResponses = {
    /**
     * default response
     */
    default: PageTemplate;
};

export type PostSiteSiteByExternalReferenceCodePageTemplateSetPageTemplateResponse = PostSiteSiteByExternalReferenceCodePageTemplateSetPageTemplateResponses[keyof PostSiteSiteByExternalReferenceCodePageTemplateSetPageTemplateResponses];

export type GetSiteSiteByExternalReferenceCodePageTemplatesPageData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-templates';
};

export type GetSiteSiteByExternalReferenceCodePageTemplatesPageResponses = {
    /**
     * default response
     */
    default: PagePageTemplate;
};

export type GetSiteSiteByExternalReferenceCodePageTemplatesPageResponse = GetSiteSiteByExternalReferenceCodePageTemplatesPageResponses[keyof GetSiteSiteByExternalReferenceCodePageTemplatesPageResponses];

export type PostSiteSiteByExternalReferenceCodePageTemplateData = {
    body?: PageTemplate;
    path: {
        siteExternalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-templates';
};

export type PostSiteSiteByExternalReferenceCodePageTemplateResponses = {
    /**
     * default response
     */
    default: PageTemplate;
};

export type PostSiteSiteByExternalReferenceCodePageTemplateResponse = PostSiteSiteByExternalReferenceCodePageTemplateResponses[keyof PostSiteSiteByExternalReferenceCodePageTemplateResponses];

export type DeleteSiteSiteByExternalReferenceCodePageTemplateSetData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        pageTemplateSetExternalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-template-sets/{pageTemplateSetExternalReferenceCode}';
};

export type DeleteSiteSiteByExternalReferenceCodePageTemplateSetResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSiteSiteByExternalReferenceCodePageTemplateSetData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        pageTemplateSetExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-template-sets/{pageTemplateSetExternalReferenceCode}';
};

export type GetSiteSiteByExternalReferenceCodePageTemplateSetResponses = {
    /**
     * default response
     */
    default: PageTemplateSet;
};

export type GetSiteSiteByExternalReferenceCodePageTemplateSetResponse = GetSiteSiteByExternalReferenceCodePageTemplateSetResponses[keyof GetSiteSiteByExternalReferenceCodePageTemplateSetResponses];

export type PatchSiteSiteByExternalReferenceCodePageTemplateSetData = {
    body?: PageTemplateSet;
    path: {
        siteExternalReferenceCode: string;
        pageTemplateSetExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-template-sets/{pageTemplateSetExternalReferenceCode}';
};

export type PatchSiteSiteByExternalReferenceCodePageTemplateSetResponses = {
    /**
     * default response
     */
    default: PageTemplateSet;
};

export type PatchSiteSiteByExternalReferenceCodePageTemplateSetResponse = PatchSiteSiteByExternalReferenceCodePageTemplateSetResponses[keyof PatchSiteSiteByExternalReferenceCodePageTemplateSetResponses];

export type PutSiteSiteByExternalReferenceCodePageTemplateSetData = {
    body?: PageTemplateSet;
    path: {
        siteExternalReferenceCode: string;
        pageTemplateSetExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-template-sets/{pageTemplateSetExternalReferenceCode}';
};

export type PutSiteSiteByExternalReferenceCodePageTemplateSetResponses = {
    /**
     * default response
     */
    default: PageTemplateSet;
};

export type PutSiteSiteByExternalReferenceCodePageTemplateSetResponse = PutSiteSiteByExternalReferenceCodePageTemplateSetResponses[keyof PutSiteSiteByExternalReferenceCodePageTemplateSetResponses];

export type GetSitePageTemplateSetPermissionsPageData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        pageTemplateSetExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        restrictFields?: string;
        roleNames?: string;
        nestedFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-template-sets/{pageTemplateSetExternalReferenceCode}/permissions';
};

export type GetSitePageTemplateSetPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type GetSitePageTemplateSetPermissionsPageResponse = GetSitePageTemplateSetPermissionsPageResponses[keyof GetSitePageTemplateSetPermissionsPageResponses];

export type PutSitePageTemplateSetPermissionsPageData = {
    body?: Array<Permission>;
    path: {
        siteExternalReferenceCode: string;
        pageTemplateSetExternalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-template-sets/{pageTemplateSetExternalReferenceCode}/permissions';
};

export type PutSitePageTemplateSetPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type PutSitePageTemplateSetPermissionsPageResponse = PutSitePageTemplateSetPermissionsPageResponses[keyof PutSitePageTemplateSetPermissionsPageResponses];

export type GetSiteSiteByExternalReferenceCodePageTemplateSetsPageData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-template-sets';
};

export type GetSiteSiteByExternalReferenceCodePageTemplateSetsPageResponses = {
    /**
     * default response
     */
    default: PagePageTemplateSet;
};

export type GetSiteSiteByExternalReferenceCodePageTemplateSetsPageResponse = GetSiteSiteByExternalReferenceCodePageTemplateSetsPageResponses[keyof GetSiteSiteByExternalReferenceCodePageTemplateSetsPageResponses];

export type PostSiteSiteByExternalReferenceCodePageTemplateSetData = {
    body?: PageTemplateSet;
    path: {
        siteExternalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/page-template-sets';
};

export type PostSiteSiteByExternalReferenceCodePageTemplateSetResponses = {
    /**
     * default response
     */
    default: PageTemplateSet;
};

export type PostSiteSiteByExternalReferenceCodePageTemplateSetResponse = PostSiteSiteByExternalReferenceCodePageTemplateSetResponses[keyof PostSiteSiteByExternalReferenceCodePageTemplateSetResponses];

export type DeleteSiteSiteByExternalReferenceCodeSitePageData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        sitePageExternalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}';
};

export type DeleteSiteSiteByExternalReferenceCodeSitePageResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSiteSiteByExternalReferenceCodeSitePageData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        sitePageExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}';
};

export type GetSiteSiteByExternalReferenceCodeSitePageResponses = {
    /**
     * default response
     */
    default: SitePage;
};

export type GetSiteSiteByExternalReferenceCodeSitePageResponse = GetSiteSiteByExternalReferenceCodeSitePageResponses[keyof GetSiteSiteByExternalReferenceCodeSitePageResponses];

export type PatchSiteSiteByExternalReferenceCodeSitePageData = {
    body?: SitePage;
    path: {
        siteExternalReferenceCode: string;
        sitePageExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}';
};

export type PatchSiteSiteByExternalReferenceCodeSitePageResponses = {
    /**
     * default response
     */
    default: SitePage;
};

export type PatchSiteSiteByExternalReferenceCodeSitePageResponse = PatchSiteSiteByExternalReferenceCodeSitePageResponses[keyof PatchSiteSiteByExternalReferenceCodeSitePageResponses];

export type PutSiteSiteByExternalReferenceCodeSitePageData = {
    body?: SitePage;
    path: {
        siteExternalReferenceCode: string;
        sitePageExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}';
};

export type PutSiteSiteByExternalReferenceCodeSitePageResponses = {
    /**
     * default response
     */
    default: SitePage;
};

export type PutSiteSiteByExternalReferenceCodeSitePageResponse = PutSiteSiteByExternalReferenceCodeSitePageResponses[keyof PutSiteSiteByExternalReferenceCodeSitePageResponses];

export type GetSiteSiteByExternalReferenceCodeSitePagesPageData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages';
};

export type GetSiteSiteByExternalReferenceCodeSitePagesPageResponses = {
    /**
     * default response
     */
    default: PageSitePage;
};

export type GetSiteSiteByExternalReferenceCodeSitePagesPageResponse = GetSiteSiteByExternalReferenceCodeSitePagesPageResponses[keyof GetSiteSiteByExternalReferenceCodeSitePagesPageResponses];

export type PostByExternalReferenceCodeSitePageData = {
    body?: SitePage;
    path: {
        siteExternalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages';
};

export type PostByExternalReferenceCodeSitePageResponses = {
    /**
     * default response
     */
    default: SitePage;
};

export type PostByExternalReferenceCodeSitePageResponse = PostByExternalReferenceCodeSitePageResponses[keyof PostByExternalReferenceCodeSitePageResponses];

export type GetSiteSitePagePermissionsPageData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        sitePageExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        restrictFields?: string;
        roleNames?: string;
        nestedFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}/permissions';
};

export type GetSiteSitePagePermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type GetSiteSitePagePermissionsPageResponse = GetSiteSitePagePermissionsPageResponses[keyof GetSiteSitePagePermissionsPageResponses];

export type PutSiteSitePagePermissionsPageData = {
    body?: Array<Permission>;
    path: {
        siteExternalReferenceCode: string;
        sitePageExternalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}/permissions';
};

export type PutSiteSitePagePermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type PutSiteSitePagePermissionsPageResponse = PutSiteSitePagePermissionsPageResponses[keyof PutSiteSitePagePermissionsPageResponses];

export type DeleteSiteSiteByExternalReferenceCodeUtilityPageData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        utilityPageExternalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/utility-pages/{utilityPageExternalReferenceCode}';
};

export type DeleteSiteSiteByExternalReferenceCodeUtilityPageResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSiteSiteByExternalReferenceCodeUtilityPageData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        utilityPageExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/utility-pages/{utilityPageExternalReferenceCode}';
};

export type GetSiteSiteByExternalReferenceCodeUtilityPageResponses = {
    /**
     * default response
     */
    default: UtilityPage;
};

export type GetSiteSiteByExternalReferenceCodeUtilityPageResponse = GetSiteSiteByExternalReferenceCodeUtilityPageResponses[keyof GetSiteSiteByExternalReferenceCodeUtilityPageResponses];

export type PatchSiteSiteByExternalReferenceCodeUtilityPageData = {
    body?: UtilityPage;
    path: {
        siteExternalReferenceCode: string;
        utilityPageExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/utility-pages/{utilityPageExternalReferenceCode}';
};

export type PatchSiteSiteByExternalReferenceCodeUtilityPageResponses = {
    /**
     * default response
     */
    default: UtilityPage;
};

export type PatchSiteSiteByExternalReferenceCodeUtilityPageResponse = PatchSiteSiteByExternalReferenceCodeUtilityPageResponses[keyof PatchSiteSiteByExternalReferenceCodeUtilityPageResponses];

export type PutSiteSiteByExternalReferenceCodeUtilityPageData = {
    body?: UtilityPage;
    path: {
        siteExternalReferenceCode: string;
        utilityPageExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/utility-pages/{utilityPageExternalReferenceCode}';
};

export type PutSiteSiteByExternalReferenceCodeUtilityPageResponses = {
    /**
     * default response
     */
    default: UtilityPage;
};

export type PutSiteSiteByExternalReferenceCodeUtilityPageResponse = PutSiteSiteByExternalReferenceCodeUtilityPageResponses[keyof PutSiteSiteByExternalReferenceCodeUtilityPageResponses];

export type GetSiteSiteByExternalReferenceCodeUtilityPagesPageData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/utility-pages';
};

export type GetSiteSiteByExternalReferenceCodeUtilityPagesPageResponses = {
    /**
     * default response
     */
    default: PageUtilityPage;
};

export type GetSiteSiteByExternalReferenceCodeUtilityPagesPageResponse = GetSiteSiteByExternalReferenceCodeUtilityPagesPageResponses[keyof GetSiteSiteByExternalReferenceCodeUtilityPagesPageResponses];

export type PostSiteSiteByExternalReferenceCodeUtilityPageData = {
    body?: UtilityPage;
    path: {
        siteExternalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/utility-pages';
};

export type PostSiteSiteByExternalReferenceCodeUtilityPageResponses = {
    /**
     * default response
     */
    default: UtilityPage;
};

export type PostSiteSiteByExternalReferenceCodeUtilityPageResponse = PostSiteSiteByExternalReferenceCodeUtilityPageResponses[keyof PostSiteSiteByExternalReferenceCodeUtilityPageResponses];

export type GetSiteUtilityPagePermissionsPageData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        utilityPageExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        restrictFields?: string;
        roleNames?: string;
        nestedFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/utility-pages/{utilityPageExternalReferenceCode}/permissions';
};

export type GetSiteUtilityPagePermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type GetSiteUtilityPagePermissionsPageResponse = GetSiteUtilityPagePermissionsPageResponses[keyof GetSiteUtilityPagePermissionsPageResponses];

export type PutSiteUtilityPagePermissionsPageData = {
    body?: Array<Permission>;
    path: {
        siteExternalReferenceCode: string;
        utilityPageExternalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/utility-pages/{utilityPageExternalReferenceCode}/permissions';
};

export type PutSiteUtilityPagePermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type PutSiteUtilityPagePermissionsPageResponse = PutSiteUtilityPagePermissionsPageResponses[keyof PutSiteUtilityPagePermissionsPageResponses];

export type DeleteSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCodeData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        sitePageExternalReferenceCode: string;
        widgetInstanceExternalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}/widget-instances/{widgetInstanceExternalReferenceCode}';
};

export type DeleteSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCodeData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        sitePageExternalReferenceCode: string;
        widgetInstanceExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}/widget-instances/{widgetInstanceExternalReferenceCode}';
};

export type GetSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: WidgetPageWidgetInstance;
};

export type GetSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCodeResponse = GetSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCodeResponses[keyof GetSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCodeResponses];

export type PatchSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCodeData = {
    body?: WidgetPageWidgetInstance;
    path: {
        siteExternalReferenceCode: string;
        sitePageExternalReferenceCode: string;
        widgetInstanceExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}/widget-instances/{widgetInstanceExternalReferenceCode}';
};

export type PatchSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: WidgetPageWidgetInstance;
};

export type PatchSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCodeResponse = PatchSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCodeResponses[keyof PatchSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCodeResponses];

export type PutSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCodeData = {
    body?: WidgetPageWidgetInstance;
    path: {
        siteExternalReferenceCode: string;
        sitePageExternalReferenceCode: string;
        widgetInstanceExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}/widget-instances/{widgetInstanceExternalReferenceCode}';
};

export type PutSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: WidgetPageWidgetInstance;
};

export type PutSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCodeResponse = PutSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCodeResponses[keyof PutSiteSiteByExternalReferenceCodeWidgetInstanceWidgetInstanceExternalReferenceCodeResponses];

export type GetSiteSiteByExternalReferenceCodeSitePageWidgetInstancesPageData = {
    body?: never;
    path: {
        siteExternalReferenceCode: string;
        sitePageExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}/widget-instances';
};

export type GetSiteSiteByExternalReferenceCodeSitePageWidgetInstancesPageResponses = {
    /**
     * default response
     */
    default: PageWidgetPageWidgetInstance;
};

export type GetSiteSiteByExternalReferenceCodeSitePageWidgetInstancesPageResponse = GetSiteSiteByExternalReferenceCodeSitePageWidgetInstancesPageResponses[keyof GetSiteSiteByExternalReferenceCodeSitePageWidgetInstancesPageResponses];

export type PostSiteSiteByExternalReferenceCodeSitePageWidgetInstanceData = {
    body?: WidgetPageWidgetInstance;
    path: {
        siteExternalReferenceCode: string;
        sitePageExternalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-admin-site/v1.0/sites/{siteExternalReferenceCode}/site-pages/{sitePageExternalReferenceCode}/widget-instances';
};

export type PostSiteSiteByExternalReferenceCodeSitePageWidgetInstanceResponses = {
    /**
     * default response
     */
    default: WidgetPageWidgetInstance;
};

export type PostSiteSiteByExternalReferenceCodeSitePageWidgetInstanceResponse = PostSiteSiteByExternalReferenceCodeSitePageWidgetInstanceResponses[keyof PostSiteSiteByExternalReferenceCodeSitePageWidgetInstanceResponses];

export type ClientOptions = {
    baseUrl: 'http://localhost:8080' | (string & {});
};