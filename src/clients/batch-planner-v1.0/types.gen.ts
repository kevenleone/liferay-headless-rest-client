// This file is auto-generated by @hey-api/openapi-ts

export type Facet = {
    facetCriteria?: string;
    facetValues?: Array<FacetValue>;
};

export type FacetValue = {
    numberOfOccurrences?: number;
    term?: string;
};

export type Field = {
    anyOfGroup?: string;
    description?: string;
    name?: string;
    required?: boolean;
    type?: string;
    unsupportedFormats?: Array<string>;
    readonly 'x-class-name'?: string;
};

export type PageField = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<Field>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type Mapping = {
    externalFieldName?: string;
    externalFieldType?: string;
    id?: number;
    internalFieldName?: string;
    internalFieldType?: string;
    planId?: number;
    script?: string;
    readonly 'x-class-name'?: string;
};

export type Plan = {
    active?: boolean;
    export?: boolean;
    externalType?: string;
    externalURL?: string;
    id?: number;
    internalClassName?: string;
    readonly internalClassNameKey?: string;
    mappings?: Array<Mapping>;
    name?: string;
    policies?: Array<Policy>;
    size?: number;
    status?: number;
    taskItemDelegateName?: string;
    template?: boolean;
    total?: number;
    readonly 'x-class-name'?: string;
};

export type Policy = {
    id?: number;
    name?: string;
    planId?: number;
    value?: string;
    readonly 'x-class-name'?: string;
};

export type PagePlan = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<Plan>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageSiteScope = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<SiteScope>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type SiteScope = {
    label?: string;
    value?: number;
    readonly 'x-class-name'?: string;
};

export type PageStrategy = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<Strategy>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type Strategy = {
    name?: string;
    type?: string;
    readonly 'x-class-name'?: string;
};

export type GetPlanInternalClassNameKeyFieldsPageData = {
    body?: never;
    path: {
        internalClassNameKey: string;
    };
    query?: {
        export?: string;
        nestedFields?: string;
    };
    url: '/o/batch-planner/v1.0/plans/{internalClassNameKey}/fields';
};

export type GetPlanInternalClassNameKeyFieldsPageResponses = {
    /**
     * default response
     */
    default: PageField;
};

export type GetPlanInternalClassNameKeyFieldsPageResponse = GetPlanInternalClassNameKeyFieldsPageResponses[keyof GetPlanInternalClassNameKeyFieldsPageResponses];

export type DeletePlanData = {
    body?: never;
    path: {
        planId: string;
    };
    query?: never;
    url: '/o/batch-planner/v1.0/plans/{planId}';
};

export type DeletePlanResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetPlanData = {
    body?: never;
    path: {
        planId: string;
    };
    query?: never;
    url: '/o/batch-planner/v1.0/plans/{planId}';
};

export type GetPlanResponses = {
    /**
     * default response
     */
    default: Plan;
};

export type GetPlanResponse = GetPlanResponses[keyof GetPlanResponses];

export type PatchPlanData = {
    body?: Plan;
    path: {
        planId: string;
    };
    query?: never;
    url: '/o/batch-planner/v1.0/plans/{planId}';
};

export type PatchPlanResponses = {
    /**
     * default response
     */
    default: Plan;
};

export type PatchPlanResponse = PatchPlanResponses[keyof PatchPlanResponses];

export type GetPlanTemplateData = {
    body?: never;
    path: {
        internalClassNameKey: string;
    };
    query?: never;
    url: '/o/batch-planner/v1.0/plans/{internalClassNameKey}/template';
};

export type GetPlanTemplateResponses = {
    /**
     * default response
     */
    default: Blob | File;
};

export type GetPlanTemplateResponse = GetPlanTemplateResponses[keyof GetPlanTemplateResponses];

export type GetPlansPageData = {
    body?: never;
    path?: never;
    query?: {
        page?: string;
        pageSize?: string;
        nestedFields?: string;
    };
    url: '/o/batch-planner/v1.0/plans';
};

export type GetPlansPageResponses = {
    /**
     * default response
     */
    default: PagePlan;
};

export type GetPlansPageResponse = GetPlansPageResponses[keyof GetPlansPageResponses];

export type PostPlanData = {
    body?: Plan;
    path?: never;
    query?: never;
    url: '/o/batch-planner/v1.0/plans';
};

export type PostPlanResponses = {
    /**
     * default response
     */
    default: Plan;
};

export type PostPlanResponse = PostPlanResponses[keyof PostPlanResponses];

export type GetPlanInternalClassNameKeySiteScopesPageData = {
    body?: never;
    path: {
        internalClassNameKey: string;
    };
    query?: {
        export?: string;
        nestedFields?: string;
    };
    url: '/o/batch-planner/v1.0/plans/{internalClassNameKey}/site-scopes';
};

export type GetPlanInternalClassNameKeySiteScopesPageResponses = {
    /**
     * default response
     */
    default: PageSiteScope;
};

export type GetPlanInternalClassNameKeySiteScopesPageResponse = GetPlanInternalClassNameKeySiteScopesPageResponses[keyof GetPlanInternalClassNameKeySiteScopesPageResponses];

export type GetPlanInternalClassNameKeyStrategiesPageData = {
    body?: never;
    path: {
        internalClassNameKey: string;
    };
    query?: {
        nestedFields?: string;
    };
    url: '/o/batch-planner/v1.0/plans/{internalClassNameKey}/strategies';
};

export type GetPlanInternalClassNameKeyStrategiesPageResponses = {
    /**
     * default response
     */
    default: PageStrategy;
};

export type GetPlanInternalClassNameKeyStrategiesPageResponse = GetPlanInternalClassNameKeyStrategiesPageResponses[keyof GetPlanInternalClassNameKeyStrategiesPageResponses];

export type ClientOptions = {
    baseUrl: 'http://localhost:8080' | (string & {});
};