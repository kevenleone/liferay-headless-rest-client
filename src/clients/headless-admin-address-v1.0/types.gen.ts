// This file is auto-generated by @hey-api/openapi-ts

export type Country = {
    a2: string;
    a3: string;
    active?: boolean;
    billingAllowed?: boolean;
    groupFilterEnabled?: boolean;
    readonly id?: number;
    idd?: number;
    name: string;
    number: number;
    position?: number;
    readonly regions?: Array<Region>;
    shippingAllowed?: boolean;
    subjectToVAT?: boolean;
    title_i18n?: {
        [key: string]: string;
    };
    zipRequired?: boolean;
    readonly 'x-class-name'?: string;
};

export type Facet = {
    facetCriteria?: string;
    facetValues?: Array<FacetValue>;
};

export type FacetValue = {
    numberOfOccurrences?: number;
    term?: string;
};

export type PageCountry = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<Country>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type Region = {
    active?: boolean;
    readonly countryId?: number;
    readonly id?: number;
    name: string;
    position?: number;
    regionCode: string;
    title_i18n?: {
        [key: string]: string;
    };
    readonly 'x-class-name'?: string;
};

export type PageRegion = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<Region>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type DeleteCountryData = {
    body?: never;
    path: {
        countryId: string;
    };
    query?: never;
    url: '/o/headless-admin-address/v1.0/countries/{countryId}';
};

export type DeleteCountryResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetCountryData = {
    body?: never;
    path: {
        countryId: string;
    };
    query?: never;
    url: '/o/headless-admin-address/v1.0/countries/{countryId}';
};

export type GetCountryResponses = {
    /**
     * default response
     */
    default: Country;
};

export type GetCountryResponse = GetCountryResponses[keyof GetCountryResponses];

export type PatchCountryData = {
    body?: Country;
    path: {
        countryId: string;
    };
    query?: never;
    url: '/o/headless-admin-address/v1.0/countries/{countryId}';
};

export type PatchCountryResponses = {
    /**
     * default response
     */
    default: Country;
};

export type PatchCountryResponse = PatchCountryResponses[keyof PatchCountryResponses];

export type PutCountryData = {
    body?: Country;
    path: {
        countryId: string;
    };
    query?: never;
    url: '/o/headless-admin-address/v1.0/countries/{countryId}';
};

export type PutCountryResponses = {
    /**
     * default response
     */
    default: Country;
};

export type PutCountryResponse = PutCountryResponses[keyof PutCountryResponses];

export type DeleteCountryBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-admin-address/v1.0/countries/batch';
};

export type DeleteCountryBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostCountryBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-admin-address/v1.0/countries/batch';
};

export type PostCountryBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutCountryBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-admin-address/v1.0/countries/batch';
};

export type PutCountryBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetCountriesPageData = {
    body?: never;
    path?: never;
    query?: {
        active?: string;
        page?: string;
        pageSize?: string;
        search?: string;
        sort?: string;
        nestedFields?: string;
    };
    url: '/o/headless-admin-address/v1.0/countries';
};

export type GetCountriesPageResponses = {
    /**
     * default response
     */
    default: PageCountry;
};

export type GetCountriesPageResponse = GetCountriesPageResponses[keyof GetCountriesPageResponses];

export type PostCountryData = {
    body?: Country;
    path?: never;
    query?: never;
    url: '/o/headless-admin-address/v1.0/countries';
};

export type PostCountryResponses = {
    /**
     * default response
     */
    default: Country;
};

export type PostCountryResponse = PostCountryResponses[keyof PostCountryResponses];

export type GetCountryByA2Data = {
    body?: never;
    path: {
        a2: string;
    };
    query?: never;
    url: '/o/headless-admin-address/v1.0/countries/by-a2/{a2}';
};

export type GetCountryByA2Responses = {
    /**
     * default response
     */
    default: Country;
};

export type GetCountryByA2Response = GetCountryByA2Responses[keyof GetCountryByA2Responses];

export type GetCountryByA3Data = {
    body?: never;
    path: {
        a3: string;
    };
    query?: never;
    url: '/o/headless-admin-address/v1.0/countries/by-a3/{a3}';
};

export type GetCountryByA3Responses = {
    /**
     * default response
     */
    default: Country;
};

export type GetCountryByA3Response = GetCountryByA3Responses[keyof GetCountryByA3Responses];

export type GetCountryByNameData = {
    body?: never;
    path: {
        name: string;
    };
    query?: never;
    url: '/o/headless-admin-address/v1.0/countries/by-name/{name}';
};

export type GetCountryByNameResponses = {
    /**
     * default response
     */
    default: Country;
};

export type GetCountryByNameResponse = GetCountryByNameResponses[keyof GetCountryByNameResponses];

export type GetCountryByNumberData = {
    body?: never;
    path: {
        number: string;
    };
    query?: never;
    url: '/o/headless-admin-address/v1.0/countries/by-number/{number}';
};

export type GetCountryByNumberResponses = {
    /**
     * default response
     */
    default: Country;
};

export type GetCountryByNumberResponse = GetCountryByNumberResponses[keyof GetCountryByNumberResponses];

export type PostCountriesPageExportBatchData = {
    body?: never;
    path?: never;
    query?: {
        active?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-admin-address/v1.0/countries/export-batch';
};

export type PostCountriesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteRegionData = {
    body?: never;
    path: {
        regionId: string;
    };
    query?: never;
    url: '/o/headless-admin-address/v1.0/regions/{regionId}';
};

export type DeleteRegionResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetRegionData = {
    body?: never;
    path: {
        regionId: string;
    };
    query?: never;
    url: '/o/headless-admin-address/v1.0/regions/{regionId}';
};

export type GetRegionResponses = {
    /**
     * default response
     */
    default: Region;
};

export type GetRegionResponse = GetRegionResponses[keyof GetRegionResponses];

export type PatchRegionData = {
    body?: Region;
    path: {
        regionId: string;
    };
    query?: never;
    url: '/o/headless-admin-address/v1.0/regions/{regionId}';
};

export type PatchRegionResponses = {
    /**
     * default response
     */
    default: Region;
};

export type PatchRegionResponse = PatchRegionResponses[keyof PatchRegionResponses];

export type PutRegionData = {
    body?: Region;
    path: {
        regionId: string;
    };
    query?: never;
    url: '/o/headless-admin-address/v1.0/regions/{regionId}';
};

export type PutRegionResponses = {
    /**
     * default response
     */
    default: Region;
};

export type PutRegionResponse = PutRegionResponses[keyof PutRegionResponses];

export type DeleteRegionBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-admin-address/v1.0/regions/batch';
};

export type DeleteRegionBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutRegionBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-admin-address/v1.0/regions/batch';
};

export type PutRegionBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetCountryRegionByRegionCodeData = {
    body?: never;
    path: {
        countryId: string;
        regionCode: string;
    };
    query?: never;
    url: '/o/headless-admin-address/v1.0/countries/{countryId}/regions/by-region-code/{regionCode}';
};

export type GetCountryRegionByRegionCodeResponses = {
    /**
     * default response
     */
    default: Region;
};

export type GetCountryRegionByRegionCodeResponse = GetCountryRegionByRegionCodeResponses[keyof GetCountryRegionByRegionCodeResponses];

export type GetCountryRegionsPageData = {
    body?: never;
    path: {
        countryId: string;
    };
    query?: {
        active?: string;
        page?: string;
        pageSize?: string;
        search?: string;
        sort?: string;
        nestedFields?: string;
    };
    url: '/o/headless-admin-address/v1.0/countries/{countryId}/regions';
};

export type GetCountryRegionsPageResponses = {
    /**
     * default response
     */
    default: PageRegion;
};

export type GetCountryRegionsPageResponse = GetCountryRegionsPageResponses[keyof GetCountryRegionsPageResponses];

export type PostCountryRegionData = {
    body?: Region;
    path: {
        countryId: string;
    };
    query?: never;
    url: '/o/headless-admin-address/v1.0/countries/{countryId}/regions';
};

export type PostCountryRegionResponses = {
    /**
     * default response
     */
    default: Region;
};

export type PostCountryRegionResponse = PostCountryRegionResponses[keyof PostCountryRegionResponses];

export type GetRegionsPageData = {
    body?: never;
    path?: never;
    query?: {
        active?: string;
        page?: string;
        pageSize?: string;
        search?: string;
        sort?: string;
        nestedFields?: string;
    };
    url: '/o/headless-admin-address/v1.0/regions';
};

export type GetRegionsPageResponses = {
    /**
     * default response
     */
    default: PageRegion;
};

export type GetRegionsPageResponse = GetRegionsPageResponses[keyof GetRegionsPageResponses];

export type PostCountryRegionBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        countryId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-admin-address/v1.0/countries/{countryId}/regions/batch';
};

export type PostCountryRegionBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostCountryRegionsPageExportBatchData = {
    body?: never;
    path: {
        countryId: string;
    };
    query?: {
        active?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-admin-address/v1.0/countries/{countryId}/regions/export-batch';
};

export type PostCountryRegionsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostRegionsPageExportBatchData = {
    body?: never;
    path?: never;
    query?: {
        active?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-admin-address/v1.0/regions/export-batch';
};

export type PostRegionsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type ClientOptions = {
    baseUrl: 'http://localhost:8080' | (string & {});
};