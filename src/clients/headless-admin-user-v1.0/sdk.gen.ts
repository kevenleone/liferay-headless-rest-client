// This file is auto-generated by @hey-api/openapi-ts

import { type Options as ClientOptions, type TDataShape, type Client, formDataBodySerializer } from '@hey-api/client-fetch';
import type { DeleteAccountGroupData, DeleteAccountGroupResponses, GetAccountGroupData, GetAccountGroupResponses, PatchAccountGroupData, PatchAccountGroupResponses, PutAccountGroupData, PutAccountGroupResponses, DeleteAccountGroupBatchData, DeleteAccountGroupBatchResponses, PostAccountGroupBatchData, PostAccountGroupBatchResponses, PutAccountGroupBatchData, PutAccountGroupBatchResponses, DeleteAccountGroupByExternalReferenceCodeData, DeleteAccountGroupByExternalReferenceCodeResponses, GetAccountGroupByExternalReferenceCodeData, GetAccountGroupByExternalReferenceCodeResponses, PatchAccountGroupByExternalReferenceCodeData, PatchAccountGroupByExternalReferenceCodeResponses, PutAccountGroupByExternalReferenceCodeData, PutAccountGroupByExternalReferenceCodeResponses, DeleteAccountGroupByExternalReferenceCodeAccountByExternalReferenceCodeData, DeleteAccountGroupByExternalReferenceCodeAccountByExternalReferenceCodeResponses, PostAccountGroupByExternalReferenceCodeAccountByExternalReferenceCodeData, PostAccountGroupByExternalReferenceCodeAccountByExternalReferenceCodeResponses, GetAccountAccountGroupsPageData, GetAccountAccountGroupsPageResponses, GetAccountByExternalReferenceCodeAccountExternalReferenceCodeAccountGroupsPageData, GetAccountByExternalReferenceCodeAccountExternalReferenceCodeAccountGroupsPageResponses, GetAccountGroupsPageData, GetAccountGroupsPageResponses, PostAccountGroupData, PostAccountGroupResponses, PostAccountAccountGroupsPageExportBatchData, PostAccountAccountGroupsPageExportBatchResponses, PostAccountGroupsPageExportBatchData, PostAccountGroupsPageExportBatchResponses, DeleteAccountData, DeleteAccountResponses, GetAccountData, GetAccountResponses, PatchAccountData, PatchAccountResponses, PutAccountData, PutAccountResponses, DeleteAccountBatchData, DeleteAccountBatchResponses, PostAccountBatchData, PostAccountBatchResponses, PutAccountBatchData, PutAccountBatchResponses, DeleteAccountByExternalReferenceCodeData, DeleteAccountByExternalReferenceCodeResponses, GetAccountByExternalReferenceCodeData, GetAccountByExternalReferenceCodeResponses, PatchAccountByExternalReferenceCodeData, PatchAccountByExternalReferenceCodeResponses, PutAccountByExternalReferenceCodeData, PutAccountByExternalReferenceCodeResponses, DeleteOrganizationAccountsData, DeleteOrganizationAccountsResponses, GetOrganizationAccountsPageData, GetOrganizationAccountsPageResponses, PostOrganizationAccountsData, PostOrganizationAccountsResponses, DeleteOrganizationAccountsByExternalReferenceCodeData, DeleteOrganizationAccountsByExternalReferenceCodeResponses, PostOrganizationAccountsByExternalReferenceCodeData, PostOrganizationAccountsByExternalReferenceCodeResponses, DeleteOrganizationByExternalReferenceCodeAccountsData, DeleteOrganizationByExternalReferenceCodeAccountsResponses, GetOrganizationByExternalReferenceCodeAccountsPageData, GetOrganizationByExternalReferenceCodeAccountsPageResponses, PostOrganizationByExternalReferenceCodeAccountsData, PostOrganizationByExternalReferenceCodeAccountsResponses, DeleteOrganizationByExternalReferenceCodeOrganizationExternalReferenceCodeAccountByExternalReferenceCodeData, DeleteOrganizationByExternalReferenceCodeOrganizationExternalReferenceCodeAccountByExternalReferenceCodeResponses, GetOrganizationByExternalReferenceCodeOrganizationExternalReferenceCodeAccountsByExternalReferenceCodePageData, GetOrganizationByExternalReferenceCodeOrganizationExternalReferenceCodeAccountsByExternalReferenceCodePageResponses, PostOrganizationByExternalReferenceCodeOrganizationExternalReferenceCodeAccountByExternalReferenceCodeData, PostOrganizationByExternalReferenceCodeOrganizationExternalReferenceCodeAccountByExternalReferenceCodeResponses, GetAccountGroupAccountsPageData, GetAccountGroupAccountsPageResponses, GetAccountGroupByExternalReferenceCodeAccountsPageData, GetAccountGroupByExternalReferenceCodeAccountsPageResponses, GetAccountsPageData, GetAccountsPageResponses, PostAccountData, PostAccountResponses, PatchOrganizationMoveAccountsData, PatchOrganizationMoveAccountsResponses, PatchOrganizationMoveAccountsByExternalReferenceCodeData, PatchOrganizationMoveAccountsByExternalReferenceCodeResponses, PostAccountGroupAccountsPageExportBatchData, PostAccountGroupAccountsPageExportBatchResponses, PostAccountsPageExportBatchData, PostAccountsPageExportBatchResponses, PostOrganizationAccountsPageExportBatchData, PostOrganizationAccountsPageExportBatchResponses, DeleteAccountAccountRoleUserAccountAssociationData, DeleteAccountAccountRoleUserAccountAssociationResponses, PostAccountAccountRoleUserAccountAssociationData, PostAccountAccountRoleUserAccountAssociationResponses, DeleteAccountByExternalReferenceCodeAccountRoleByExternalReferenceCodeUserAccountByEmailAddressData, DeleteAccountByExternalReferenceCodeAccountRoleByExternalReferenceCodeUserAccountByEmailAddressResponses, PostAccountByExternalReferenceCodeAccountRoleByExternalReferenceCodeUserAccountByEmailAddressData, PostAccountByExternalReferenceCodeAccountRoleByExternalReferenceCodeUserAccountByEmailAddressResponses, DeleteAccountByExternalReferenceCodeAccountRoleByExternalReferenceCodeUserAccountByExternalReferenceCodeData, DeleteAccountByExternalReferenceCodeAccountRoleByExternalReferenceCodeUserAccountByExternalReferenceCodeResponses, PostAccountByExternalReferenceCodeAccountRoleByExternalReferenceCodeUserAccountByExternalReferenceCodeData, PostAccountByExternalReferenceCodeAccountRoleByExternalReferenceCodeUserAccountByExternalReferenceCodeResponses, DeleteAccountByExternalReferenceCodeAccountRoleUserAccountByEmailAddressData, DeleteAccountByExternalReferenceCodeAccountRoleUserAccountByEmailAddressResponses, PostAccountByExternalReferenceCodeAccountRoleUserAccountByEmailAddressData, PostAccountByExternalReferenceCodeAccountRoleUserAccountByEmailAddressResponses, DeleteAccountByExternalReferenceCodeAccountRoleUserAccountByExternalReferenceCodeData, DeleteAccountByExternalReferenceCodeAccountRoleUserAccountByExternalReferenceCodeResponses, PostAccountByExternalReferenceCodeAccountRoleUserAccountByExternalReferenceCodeData, PostAccountByExternalReferenceCodeAccountRoleUserAccountByExternalReferenceCodeResponses, GetAccountAccountRolesByExternalReferenceCodePageData, GetAccountAccountRolesByExternalReferenceCodePageResponses, PostAccountAccountRoleByExternalReferenceCodeData, PostAccountAccountRoleByExternalReferenceCodeResponses, GetAccountAccountRolesPageData, GetAccountAccountRolesPageResponses, PostAccountAccountRoleData, PostAccountAccountRoleResponses, GetAccountByExternalReferenceCodeUserAccountByEmailAddressAccountRolesPageData, GetAccountByExternalReferenceCodeUserAccountByEmailAddressAccountRolesPageResponses, GetAccountByExternalReferenceCodeUserAccountByExternalReferenceCodeAccountRolesPageData, GetAccountByExternalReferenceCodeUserAccountByExternalReferenceCodeAccountRolesPageResponses, PostAccountAccountRoleBatchData, PostAccountAccountRoleBatchResponses, PostAccountAccountRolesPageExportBatchData, PostAccountAccountRolesPageExportBatchResponses, DeleteEmailAddressData, DeleteEmailAddressResponses, GetEmailAddressData, GetEmailAddressResponses, PatchEmailAddressData, PatchEmailAddressResponses, DeleteEmailAddressBatchData, DeleteEmailAddressBatchResponses, DeleteEmailAddressByExternalReferenceCodeData, DeleteEmailAddressByExternalReferenceCodeResponses, GetEmailAddressByExternalReferenceCodeData, GetEmailAddressByExternalReferenceCodeResponses, PatchEmailAddressByExternalReferenceCodeData, PatchEmailAddressByExternalReferenceCodeResponses, GetAccountByExternalReferenceCodeEmailAddressesPageData, GetAccountByExternalReferenceCodeEmailAddressesPageResponses, GetAccountEmailAddressesPageData, GetAccountEmailAddressesPageResponses, GetOrganizationByExternalReferenceCodeEmailAddressesPageData, GetOrganizationByExternalReferenceCodeEmailAddressesPageResponses, GetOrganizationEmailAddressesPageData, GetOrganizationEmailAddressesPageResponses, GetUserAccountByExternalReferenceCodeEmailAddressesPageData, GetUserAccountByExternalReferenceCodeEmailAddressesPageResponses, GetUserAccountEmailAddressesPageData, GetUserAccountEmailAddressesPageResponses, PostAccountEmailAddressesPageExportBatchData, PostAccountEmailAddressesPageExportBatchResponses, PostOrganizationEmailAddressesPageExportBatchData, PostOrganizationEmailAddressesPageExportBatchResponses, PostUserAccountEmailAddressesPageExportBatchData, PostUserAccountEmailAddressesPageExportBatchResponses, DeleteAccountByExternalReferenceCodeOrganizationData, DeleteAccountByExternalReferenceCodeOrganizationResponses, GetAccountByExternalReferenceCodeOrganizationData, GetAccountByExternalReferenceCodeOrganizationResponses, PostAccountByExternalReferenceCodeOrganizationData, PostAccountByExternalReferenceCodeOrganizationResponses, DeleteAccountOrganizationData, DeleteAccountOrganizationResponses, GetAccountOrganizationData, GetAccountOrganizationResponses, PostAccountOrganizationData, PostAccountOrganizationResponses, DeleteOrganizationData, DeleteOrganizationResponses, GetOrganizationData, GetOrganizationResponses, PatchOrganizationData, PatchOrganizationResponses, PutOrganizationData, PutOrganizationResponses, DeleteOrganizationBatchData, DeleteOrganizationBatchResponses, PostOrganizationBatchData, PostOrganizationBatchResponses, PutOrganizationBatchData, PutOrganizationBatchResponses, DeleteOrganizationByExternalReferenceCodeData, DeleteOrganizationByExternalReferenceCodeResponses, GetOrganizationByExternalReferenceCodeData, GetOrganizationByExternalReferenceCodeResponses, PatchOrganizationByExternalReferenceCodeData, PatchOrganizationByExternalReferenceCodeResponses, PutOrganizationByExternalReferenceCodeData, PutOrganizationByExternalReferenceCodeResponses, DeleteOrganizationByExternalReferenceCodeUserAccountByEmailAddressData, DeleteOrganizationByExternalReferenceCodeUserAccountByEmailAddressResponses, PostOrganizationByExternalReferenceCodeUserAccountByEmailAddressData, PostOrganizationByExternalReferenceCodeUserAccountByEmailAddressResponses, DeleteOrganizationByExternalReferenceCodeUserAccountsByEmailAddressData, DeleteOrganizationByExternalReferenceCodeUserAccountsByEmailAddressResponses, PostOrganizationByExternalReferenceCodeUserAccountsByEmailAddressData, PostOrganizationByExternalReferenceCodeUserAccountsByEmailAddressResponses, DeleteUserAccountByEmailAddressData, DeleteUserAccountByEmailAddressResponses, PostUserAccountByEmailAddressData, PostUserAccountByEmailAddressResponses, DeleteUserAccountsByEmailAddressData, DeleteUserAccountsByEmailAddressResponses, PostUserAccountsByEmailAddressData, PostUserAccountsByEmailAddressResponses, GetAccountByExternalReferenceCodeOrganizationsPageData, GetAccountByExternalReferenceCodeOrganizationsPageResponses, GetAccountOrganizationsPageData, GetAccountOrganizationsPageResponses, GetOrganizationByExternalReferenceCodeChildOrganizationsPageData, GetOrganizationByExternalReferenceCodeChildOrganizationsPageResponses, GetOrganizationChildOrganizationsPageData, GetOrganizationChildOrganizationsPageResponses, GetOrganizationOrganizationsPageData, GetOrganizationOrganizationsPageResponses, GetOrganizationsPageData, GetOrganizationsPageResponses, PostOrganizationData, PostOrganizationResponses, PostAccountOrganizationsPageExportBatchData, PostAccountOrganizationsPageExportBatchResponses, PostOrganizationsPageExportBatchData, PostOrganizationsPageExportBatchResponses, DeletePhoneData, DeletePhoneResponses, GetPhoneData, GetPhoneResponses, PatchPhoneData, PatchPhoneResponses, DeletePhoneBatchData, DeletePhoneBatchResponses, DeletePhoneByExternalReferenceCodeData, DeletePhoneByExternalReferenceCodeResponses, GetPhoneByExternalReferenceCodeData, GetPhoneByExternalReferenceCodeResponses, PatchPhoneByExternalReferenceCodeData, PatchPhoneByExternalReferenceCodeResponses, GetAccountByExternalReferenceCodePhonesPageData, GetAccountByExternalReferenceCodePhonesPageResponses, GetAccountPhonesPageData, GetAccountPhonesPageResponses, GetOrganizationByExternalReferenceCodePhonesPageData, GetOrganizationByExternalReferenceCodePhonesPageResponses, GetOrganizationPhonesPageData, GetOrganizationPhonesPageResponses, GetUserAccountByExternalReferenceCodePhonesPageData, GetUserAccountByExternalReferenceCodePhonesPageResponses, GetUserAccountPhonesPageData, GetUserAccountPhonesPageResponses, PostAccountPhonesPageExportBatchData, PostAccountPhonesPageExportBatchResponses, PostOrganizationPhonesPageExportBatchData, PostOrganizationPhonesPageExportBatchResponses, PostUserAccountPhonesPageExportBatchData, PostUserAccountPhonesPageExportBatchResponses, DeletePostalAddressData, DeletePostalAddressResponses, GetPostalAddressData, GetPostalAddressResponses, PatchPostalAddressData, PatchPostalAddressResponses, PutPostalAddressData, PutPostalAddressResponses, DeletePostalAddressBatchData, DeletePostalAddressBatchResponses, PutPostalAddressBatchData, PutPostalAddressBatchResponses, DeletePostalAddressByExternalReferenceCodeData, DeletePostalAddressByExternalReferenceCodeResponses, GetPostalAddressByExternalReferenceCodeData, GetPostalAddressByExternalReferenceCodeResponses, PatchPostalAddressByExternalReferenceCodeData, PatchPostalAddressByExternalReferenceCodeResponses, PutPostalAddressByExternalReferenceCodeData, PutPostalAddressByExternalReferenceCodeResponses, GetAccountByExternalReferenceCodePostalAddressesPageData, GetAccountByExternalReferenceCodePostalAddressesPageResponses, GetAccountPostalAddressesPageData, GetAccountPostalAddressesPageResponses, PostAccountPostalAddressData, PostAccountPostalAddressResponses, GetOrganizationByExternalReferenceCodePostalAddressesPageData, GetOrganizationByExternalReferenceCodePostalAddressesPageResponses, GetOrganizationPostalAddressesPageData, GetOrganizationPostalAddressesPageResponses, GetUserAccountByExternalReferenceCodePostalAddressesPageData, GetUserAccountByExternalReferenceCodePostalAddressesPageResponses, GetUserAccountPostalAddressesPageData, GetUserAccountPostalAddressesPageResponses, PostAccountPostalAddressBatchData, PostAccountPostalAddressBatchResponses, PostAccountPostalAddressesPageExportBatchData, PostAccountPostalAddressesPageExportBatchResponses, PostOrganizationPostalAddressesPageExportBatchData, PostOrganizationPostalAddressesPageExportBatchResponses, PostUserAccountPostalAddressesPageExportBatchData, PostUserAccountPostalAddressesPageExportBatchResponses, DeleteOrganizationRoleByExternalReferenceCodeUserAccountAssociationData, DeleteOrganizationRoleByExternalReferenceCodeUserAccountAssociationResponses, PostOrganizationRoleByExternalReferenceCodeUserAccountAssociationData, PostOrganizationRoleByExternalReferenceCodeUserAccountAssociationResponses, DeleteOrganizationRoleUserAccountAssociationData, DeleteOrganizationRoleUserAccountAssociationResponses, PostOrganizationRoleUserAccountAssociationData, PostOrganizationRoleUserAccountAssociationResponses, DeleteRoleData, DeleteRoleResponses, GetRoleData, GetRoleResponses, PatchRoleData, PatchRoleResponses, PutRoleData, PutRoleResponses, DeleteRoleBatchData, DeleteRoleBatchResponses, PostRoleBatchData, PostRoleBatchResponses, PutRoleBatchData, PutRoleBatchResponses, DeleteRoleByExternalReferenceCodeData, DeleteRoleByExternalReferenceCodeResponses, GetRoleByExternalReferenceCodeData, GetRoleByExternalReferenceCodeResponses, PatchRoleByExternalReferenceCodeData, PatchRoleByExternalReferenceCodeResponses, PutRoleByExternalReferenceCodeData, PutRoleByExternalReferenceCodeResponses, DeleteRoleByExternalReferenceCodeUserAccountAssociationData, DeleteRoleByExternalReferenceCodeUserAccountAssociationResponses, PostRoleByExternalReferenceCodeUserAccountAssociationData, PostRoleByExternalReferenceCodeUserAccountAssociationResponses, DeleteRoleUserAccountAssociationData, DeleteRoleUserAccountAssociationResponses, PostRoleUserAccountAssociationData, PostRoleUserAccountAssociationResponses, DeleteSiteRoleByExternalReferenceCodeUserAccountAssociationData, DeleteSiteRoleByExternalReferenceCodeUserAccountAssociationResponses, PostSiteRoleByExternalReferenceCodeUserAccountAssociationData, PostSiteRoleByExternalReferenceCodeUserAccountAssociationResponses, DeleteSiteRoleUserAccountAssociationData, DeleteSiteRoleUserAccountAssociationResponses, PostSiteRoleUserAccountAssociationData, PostSiteRoleUserAccountAssociationResponses, GetRolesPageData, GetRolesPageResponses, PostRoleData, PostRoleResponses, PostRolesPageExportBatchData, PostRolesPageExportBatchResponses, GetSiteSegmentsPageData, GetSiteSegmentsPageResponses, GetSiteUserAccountSegmentsPageData, GetSiteUserAccountSegmentsPageResponses, PostSiteSegmentsPageExportBatchData, PostSiteSegmentsPageExportBatchResponses, GetSegmentUserAccountsPageData, GetSegmentUserAccountsPageResponses, GetMyUserAccountSharedAssetsSharedByMePageData, GetMyUserAccountSharedAssetsSharedByMePageResponses, GetMyUserAccountSharedAssetsSharedWithMePageData, GetMyUserAccountSharedAssetsSharedWithMePageResponses, GetMyUserAccountSitesPageData, GetMyUserAccountSitesPageResponses, GetSiteData, GetSiteResponses, GetSiteByFriendlyUrlPathData, GetSiteByFriendlyUrlPathResponses, DeleteMyUserAccountSubscriptionData, DeleteMyUserAccountSubscriptionResponses, GetMyUserAccountSubscriptionData, GetMyUserAccountSubscriptionResponses, GetMyUserAccountSubscriptionsPageData, GetMyUserAccountSubscriptionsPageResponses, GetUserAccountEmailVerificationTicketData, GetUserAccountEmailVerificationTicketResponses, GetUserAccountPasswordResetTicketData, GetUserAccountPasswordResetTicketResponses, GetUserAccountFullNameDefinitionData, GetUserAccountFullNameDefinitionResponses, DeleteAccountByExternalReferenceCodeUserAccountByExternalReferenceCodeData, DeleteAccountByExternalReferenceCodeUserAccountByExternalReferenceCodeResponses, GetAccountByExternalReferenceCodeUserAccountByExternalReferenceCodeData, GetAccountByExternalReferenceCodeUserAccountByExternalReferenceCodeResponses, PostAccountByExternalReferenceCodeUserAccountByExternalReferenceCodeData, PostAccountByExternalReferenceCodeUserAccountByExternalReferenceCodeResponses, DeleteAccountUserAccountData, DeleteAccountUserAccountResponses, GetAccountUserAccountData, GetAccountUserAccountResponses, DeleteAccountUserAccountByEmailAddressData, DeleteAccountUserAccountByEmailAddressResponses, PostAccountUserAccountByEmailAddressData, PostAccountUserAccountByEmailAddressResponses, DeleteAccountUserAccountByExternalReferenceCodeByEmailAddressData, DeleteAccountUserAccountByExternalReferenceCodeByEmailAddressResponses, PostAccountUserAccountByExternalReferenceCodeByEmailAddressData, PostAccountUserAccountByExternalReferenceCodeByEmailAddressResponses, DeleteAccountUserAccountsByEmailAddressData, DeleteAccountUserAccountsByEmailAddressResponses, PostAccountUserAccountsByEmailAddressData, PostAccountUserAccountsByEmailAddressResponses, DeleteAccountUserAccountsByExternalReferenceCodeByEmailAddressData, DeleteAccountUserAccountsByExternalReferenceCodeByEmailAddressResponses, PostAccountUserAccountsByExternalReferenceCodeByEmailAddressData, PostAccountUserAccountsByExternalReferenceCodeByEmailAddressResponses, DeleteUserAccountData, DeleteUserAccountResponses, GetUserAccountData, GetUserAccountResponses, PatchUserAccountData, PatchUserAccountResponses, PutUserAccountData, PutUserAccountResponses, DeleteUserAccountBatchData, DeleteUserAccountBatchResponses, PostUserAccountBatchData, PostUserAccountBatchResponses, PutUserAccountBatchData, PutUserAccountBatchResponses, DeleteUserAccountByExternalReferenceCodeData, DeleteUserAccountByExternalReferenceCodeResponses, GetUserAccountByExternalReferenceCodeData, GetUserAccountByExternalReferenceCodeResponses, PatchUserAccountByExternalReferenceCodeData, PatchUserAccountByExternalReferenceCodeResponses, PutUserAccountByExternalReferenceCodeData, PutUserAccountByExternalReferenceCodeResponses, GetAccountUserAccountsByExternalReferenceCodePageData, GetAccountUserAccountsByExternalReferenceCodePageResponses, PostAccountUserAccountByExternalReferenceCodeData, PostAccountUserAccountByExternalReferenceCodeResponses, GetAccountUserAccountsPageData, GetAccountUserAccountsPageResponses, PostAccountUserAccountData, PostAccountUserAccountResponses, GetMyUserAccountData, GetMyUserAccountResponses, GetOrganizationByExternalReferenceCodeUserAccountsPageData, GetOrganizationByExternalReferenceCodeUserAccountsPageResponses, GetOrganizationUserAccountsPageData, GetOrganizationUserAccountsPageResponses, GetSiteAccountUserAccountSelectedData, GetSiteAccountUserAccountSelectedResponses, PatchSiteAccountUserAccountSelectedData, PatchSiteAccountUserAccountSelectedResponses, GetSiteByFriendlyUrlPathAccountByExternalReferenceCodeAccountExternalReferenceCodeUserAccountByExternalReferenceCodeUserAccountExternalReferenceCodeSelectedData, GetSiteByFriendlyUrlPathAccountByExternalReferenceCodeAccountExternalReferenceCodeUserAccountByExternalReferenceCodeUserAccountExternalReferenceCodeSelectedResponses, PatchSiteByFriendlyUrlPathAccountByExternalReferenceCodeAccountExternalReferenceCodeUserAccountByExternalReferenceCodeUserAccountExternalReferenceCodeSelectedData, PatchSiteByFriendlyUrlPathAccountByExternalReferenceCodeAccountExternalReferenceCodeUserAccountByExternalReferenceCodeUserAccountExternalReferenceCodeSelectedResponses, GetSiteUserAccountsPageData, GetSiteUserAccountsPageResponses, GetUserAccountByEmailAddressData, GetUserAccountByEmailAddressResponses, GetUserAccountsByStatusPageData, GetUserAccountsByStatusPageResponses, GetUserAccountsPageData, GetUserAccountsPageResponses, PostUserAccountData, PostUserAccountResponses, DeleteUserGroupByExternalReferenceCodeUsersData, DeleteUserGroupByExternalReferenceCodeUsersResponses, GetUserGroupByExternalReferenceCodeUsersPageData, GetUserGroupByExternalReferenceCodeUsersPageResponses, PostUserGroupByExternalReferenceCodeUsersData, PostUserGroupByExternalReferenceCodeUsersResponses, DeleteUserGroupUsersData, DeleteUserGroupUsersResponses, GetUserGroupUsersPageData, GetUserGroupUsersPageResponses, PostUserGroupUsersData, PostUserGroupUsersResponses, PostAccountUserAccountBatchData, PostAccountUserAccountBatchResponses, PostAccountUserAccountsPageExportBatchData, PostAccountUserAccountsPageExportBatchResponses, PostOrganizationUserAccountsPageExportBatchData, PostOrganizationUserAccountsPageExportBatchResponses, PostSiteUserAccountsPageExportBatchData, PostSiteUserAccountsPageExportBatchResponses, PostUserAccountImageData, PostUserAccountImageResponses, PostUserAccountsPageExportBatchData, PostUserAccountsPageExportBatchResponses, DeleteUserGroupData, DeleteUserGroupResponses, GetUserGroupData, GetUserGroupResponses, PatchUserGroupData, PatchUserGroupResponses, PutUserGroupData, PutUserGroupResponses, DeleteUserGroupBatchData, DeleteUserGroupBatchResponses, PostUserGroupBatchData, PostUserGroupBatchResponses, PutUserGroupBatchData, PutUserGroupBatchResponses, DeleteUserGroupByExternalReferenceCodeData, DeleteUserGroupByExternalReferenceCodeResponses, GetUserGroupByExternalReferenceCodeData, GetUserGroupByExternalReferenceCodeResponses, PatchUserGroupByExternalReferenceCodeData, PatchUserGroupByExternalReferenceCodeResponses, PutUserGroupByExternalReferenceCodeData, PutUserGroupByExternalReferenceCodeResponses, GetUserGroupsPageData, GetUserGroupsPageResponses, PostUserGroupData, PostUserGroupResponses, GetUserUserGroupsData, GetUserUserGroupsResponses, PostUserGroupsPageExportBatchData, PostUserGroupsPageExportBatchResponses, DeleteWebUrlData, DeleteWebUrlResponses, GetWebUrlData, GetWebUrlResponses, PatchWebUrlData, PatchWebUrlResponses, DeleteWebUrlBatchData, DeleteWebUrlBatchResponses, DeleteWebUrlByExternalReferenceCodeData, DeleteWebUrlByExternalReferenceCodeResponses, GetWebUrlByExternalReferenceCodeData, GetWebUrlByExternalReferenceCodeResponses, PatchWebUrlByExternalReferenceCodeData, PatchWebUrlByExternalReferenceCodeResponses, GetAccountByExternalReferenceCodeWebUrlsPageData, GetAccountByExternalReferenceCodeWebUrlsPageResponses, GetAccountWebUrlsPageData, GetAccountWebUrlsPageResponses, GetOrganizationByExternalReferenceCodeWebUrlsPageData, GetOrganizationByExternalReferenceCodeWebUrlsPageResponses, GetOrganizationWebUrlsPageData, GetOrganizationWebUrlsPageResponses, GetUserAccountByExternalReferenceCodeWebUrlsPageData, GetUserAccountByExternalReferenceCodeWebUrlsPageResponses, GetUserAccountWebUrlsPageData, GetUserAccountWebUrlsPageResponses, PostAccountWebUrlsPageExportBatchData, PostAccountWebUrlsPageExportBatchResponses, PostOrganizationWebUrlsPageExportBatchData, PostOrganizationWebUrlsPageExportBatchResponses, PostUserAccountWebUrlsPageExportBatchData, PostUserAccountWebUrlsPageExportBatchResponses, GetUserAccountUserToUserAddInfoPageData, GetUserAccountUserToUserAddInfoPageResponses, DeleteUserAccountUserToUserAddInfoData, DeleteUserAccountUserToUserAddInfoResponses, PutUserAccountUserToUserAddInfoData, PutUserAccountUserToUserAddInfoResponses, GetAccountAccountEntryToUserAdditionalInfoPageData, GetAccountAccountEntryToUserAdditionalInfoPageResponses, DeleteAccountAccountEntryToUserAdditionalInfoData, DeleteAccountAccountEntryToUserAdditionalInfoResponses, PutAccountAccountEntryToUserAdditionalInfoData, PutAccountAccountEntryToUserAdditionalInfoResponses, GetAccountAccountToOAuth2DxpAuthorizationPageData, GetAccountAccountToOAuth2DxpAuthorizationPageResponses, DeleteAccountAccountToOAuth2DxpAuthorizationData, DeleteAccountAccountToOAuth2DxpAuthorizationResponses, PutAccountAccountToOAuth2DxpAuthorizationData, PutAccountAccountToOAuth2DxpAuthorizationResponses, GetAccountAccountEntryToPublisherAssetsPageData, GetAccountAccountEntryToPublisherAssetsPageResponses, DeleteAccountAccountEntryToPublisherAssetsData, DeleteAccountAccountEntryToPublisherAssetsResponses, PutAccountAccountEntryToPublisherAssetsData, PutAccountAccountEntryToPublisherAssetsResponses } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Deletes an account group.
 */
export const deleteAccountGroup = <ThrowOnError extends boolean = false>(options: Options<DeleteAccountGroupData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteAccountGroupResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/account-groups/{accountGroupId}',
        ...options
    });
};

export const getAccountGroup = <ThrowOnError extends boolean = false>(options: Options<GetAccountGroupData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAccountGroupResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/account-groups/{accountGroupId}',
        ...options
    });
};

/**
 * Updates the account group with information sent in the request body. Only the provided fields are updated.
 */
export const patchAccountGroup = <ThrowOnError extends boolean = false>(options: Options<PatchAccountGroupData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchAccountGroupResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/account-groups/{accountGroupId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Replaces the account group with information sent in the request body. Any missing fields are deleted unless they are required.
 */
export const putAccountGroup = <ThrowOnError extends boolean = false>(options: Options<PutAccountGroupData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutAccountGroupResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/account-groups/{accountGroupId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteAccountGroupBatch = <ThrowOnError extends boolean = false>(options?: Options<DeleteAccountGroupBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteAccountGroupBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/account-groups/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postAccountGroupBatch = <ThrowOnError extends boolean = false>(options?: Options<PostAccountGroupBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostAccountGroupBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/account-groups/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const putAccountGroupBatch = <ThrowOnError extends boolean = false>(options?: Options<PutAccountGroupBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).put<PutAccountGroupBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/account-groups/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Deletes an account group.
 */
export const deleteAccountGroupByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteAccountGroupByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteAccountGroupByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/account-groups/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

export const getAccountGroupByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetAccountGroupByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAccountGroupByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/account-groups/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Updates the account with information sent in the request body. Only the provided fields are updated.
 */
export const patchAccountGroupByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PatchAccountGroupByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchAccountGroupByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/account-groups/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Replaces the account group with information sent in the request body. Any missing fields are deleted unless they are required.
 */
export const putAccountGroupByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PutAccountGroupByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutAccountGroupByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/account-groups/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Removes an account by their external reference code from an account group by external reference code
 */
export const deleteAccountGroupByExternalReferenceCodeAccountByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteAccountGroupByExternalReferenceCodeAccountByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteAccountGroupByExternalReferenceCodeAccountByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/account-groups/by-external-reference-code/{accountExternalReferenceCode}/accounts/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Assigns an account by its external reference code to an account group by external reference code
 */
export const postAccountGroupByExternalReferenceCodeAccountByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PostAccountGroupByExternalReferenceCodeAccountByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAccountGroupByExternalReferenceCodeAccountByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/account-groups/by-external-reference-code/{accountExternalReferenceCode}/accounts/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

export const getAccountAccountGroupsPage = <ThrowOnError extends boolean = false>(options: Options<GetAccountAccountGroupsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAccountAccountGroupsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/{accountId}/account-groups',
        ...options
    });
};

export const getAccountByExternalReferenceCodeAccountExternalReferenceCodeAccountGroupsPage = <ThrowOnError extends boolean = false>(options: Options<GetAccountByExternalReferenceCodeAccountExternalReferenceCodeAccountGroupsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAccountByExternalReferenceCodeAccountExternalReferenceCodeAccountGroupsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{accountExternalReferenceCode}/account-groups',
        ...options
    });
};

/**
 * Retrieves the account groups. Results can be paginated, filtered, searched, and sorted.
 */
export const getAccountGroupsPage = <ThrowOnError extends boolean = false>(options?: Options<GetAccountGroupsPageData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetAccountGroupsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/account-groups',
        ...options
    });
};

/**
 * Creates a new account group
 */
export const postAccountGroup = <ThrowOnError extends boolean = false>(options?: Options<PostAccountGroupData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostAccountGroupResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/account-groups',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postAccountAccountGroupsPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostAccountAccountGroupsPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAccountAccountGroupsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/{accountId}/account-groups/export-batch',
        ...options
    });
};

export const postAccountGroupsPageExportBatch = <ThrowOnError extends boolean = false>(options?: Options<PostAccountGroupsPageExportBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostAccountGroupsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/account-groups/export-batch',
        ...options
    });
};

/**
 * Deletes an account.
 */
export const deleteAccount = <ThrowOnError extends boolean = false>(options: Options<DeleteAccountData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteAccountResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/{accountId}',
        ...options
    });
};

export const getAccount = <ThrowOnError extends boolean = false>(options: Options<GetAccountData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAccountResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/{accountId}',
        ...options
    });
};

/**
 * Updates the account with information sent in the request body. Only the provided fields are updated.
 */
export const patchAccount = <ThrowOnError extends boolean = false>(options: Options<PatchAccountData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchAccountResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/{accountId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Replaces the account with information sent in the request body. Any missing fields are deleted unless they are required.
 */
export const putAccount = <ThrowOnError extends boolean = false>(options: Options<PutAccountData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutAccountResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/{accountId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteAccountBatch = <ThrowOnError extends boolean = false>(options?: Options<DeleteAccountBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteAccountBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postAccountBatch = <ThrowOnError extends boolean = false>(options?: Options<PostAccountBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostAccountBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const putAccountBatch = <ThrowOnError extends boolean = false>(options?: Options<PutAccountBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).put<PutAccountBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Deletes an account.
 */
export const deleteAccountByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteAccountByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteAccountByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

export const getAccountByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetAccountByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAccountByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Updates the account with information sent in the request body. Only the provided fields are updated.
 */
export const patchAccountByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PatchAccountByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchAccountByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Replaces the account with information sent in the request body. Any missing fields are deleted unless they are required.
 */
export const putAccountByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PutAccountByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutAccountByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteOrganizationAccounts = <ThrowOnError extends boolean = false>(options: Options<DeleteOrganizationAccountsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteOrganizationAccountsResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/{organizationId}/accounts',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the organization's members (accounts). Results can be paginated, filtered, searched, and sorted.
 */
export const getOrganizationAccountsPage = <ThrowOnError extends boolean = false>(options: Options<GetOrganizationAccountsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetOrganizationAccountsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/{organizationId}/accounts',
        ...options
    });
};

export const postOrganizationAccounts = <ThrowOnError extends boolean = false>(options: Options<PostOrganizationAccountsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostOrganizationAccountsResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/{organizationId}/accounts',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteOrganizationAccountsByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteOrganizationAccountsByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteOrganizationAccountsByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/{organizationId}/accounts/by-external-reference-code',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postOrganizationAccountsByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PostOrganizationAccountsByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostOrganizationAccountsByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/{organizationId}/accounts/by-external-reference-code',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteOrganizationByExternalReferenceCodeAccounts = <ThrowOnError extends boolean = false>(options: Options<DeleteOrganizationByExternalReferenceCodeAccountsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteOrganizationByExternalReferenceCodeAccountsResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/by-external-reference-code/{externalReferenceCode}/accounts',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the organization's members (accounts). Results can be paginated, filtered, searched, and sorted.
 */
export const getOrganizationByExternalReferenceCodeAccountsPage = <ThrowOnError extends boolean = false>(options: Options<GetOrganizationByExternalReferenceCodeAccountsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetOrganizationByExternalReferenceCodeAccountsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/by-external-reference-code/{externalReferenceCode}/accounts',
        ...options
    });
};

export const postOrganizationByExternalReferenceCodeAccounts = <ThrowOnError extends boolean = false>(options: Options<PostOrganizationByExternalReferenceCodeAccountsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostOrganizationByExternalReferenceCodeAccountsResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/by-external-reference-code/{externalReferenceCode}/accounts',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteOrganizationByExternalReferenceCodeOrganizationExternalReferenceCodeAccountByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteOrganizationByExternalReferenceCodeOrganizationExternalReferenceCodeAccountByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteOrganizationByExternalReferenceCodeOrganizationExternalReferenceCodeAccountByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/by-external-reference-code/{organizationExternalReferenceCode}/accounts/by-external-reference-code',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the organization's members (accounts) by external reference code. Results can be paginated, filtered, searched, and sorted.
 */
export const getOrganizationByExternalReferenceCodeOrganizationExternalReferenceCodeAccountsByExternalReferenceCodePage = <ThrowOnError extends boolean = false>(options: Options<GetOrganizationByExternalReferenceCodeOrganizationExternalReferenceCodeAccountsByExternalReferenceCodePageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetOrganizationByExternalReferenceCodeOrganizationExternalReferenceCodeAccountsByExternalReferenceCodePageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/by-external-reference-code/{organizationExternalReferenceCode}/accounts/by-external-reference-code',
        ...options
    });
};

export const postOrganizationByExternalReferenceCodeOrganizationExternalReferenceCodeAccountByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PostOrganizationByExternalReferenceCodeOrganizationExternalReferenceCodeAccountByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostOrganizationByExternalReferenceCodeOrganizationExternalReferenceCodeAccountByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/by-external-reference-code/{organizationExternalReferenceCode}/accounts/by-external-reference-code',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the list of accounts in an account group.
 */
export const getAccountGroupAccountsPage = <ThrowOnError extends boolean = false>(options: Options<GetAccountGroupAccountsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAccountGroupAccountsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/account-groups/{accountGroupId}/accounts',
        ...options
    });
};

/**
 * Retrieves the list of accounts in an account group.
 */
export const getAccountGroupByExternalReferenceCodeAccountsPage = <ThrowOnError extends boolean = false>(options: Options<GetAccountGroupByExternalReferenceCodeAccountsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAccountGroupByExternalReferenceCodeAccountsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/account-groups/by-external-reference-code/{accountGroupExternalReferenceCode}/accounts',
        ...options
    });
};

/**
 * Retrieves the accounts. Results can be paginated, filtered, searched, and sorted.
 */
export const getAccountsPage = <ThrowOnError extends boolean = false>(options?: Options<GetAccountsPageData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetAccountsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts',
        ...options
    });
};

/**
 * Creates a new account
 */
export const postAccount = <ThrowOnError extends boolean = false>(options?: Options<PostAccountData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostAccountResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const patchOrganizationMoveAccounts = <ThrowOnError extends boolean = false>(options: Options<PatchOrganizationMoveAccountsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchOrganizationMoveAccountsResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/move-accounts/{sourceOrganizationId}/{targetOrganizationId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const patchOrganizationMoveAccountsByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PatchOrganizationMoveAccountsByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchOrganizationMoveAccountsByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/move-accounts/{sourceOrganizationId}/{targetOrganizationId}/by-external-reference-code',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postAccountGroupAccountsPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostAccountGroupAccountsPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAccountGroupAccountsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/account-groups/{accountGroupId}/accounts/export-batch',
        ...options
    });
};

export const postAccountsPageExportBatch = <ThrowOnError extends boolean = false>(options?: Options<PostAccountsPageExportBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostAccountsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/export-batch',
        ...options
    });
};

export const postOrganizationAccountsPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostOrganizationAccountsPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostOrganizationAccountsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/{organizationId}/accounts/export-batch',
        ...options
    });
};

/**
 * Unassigns account users to the account role
 */
export const deleteAccountAccountRoleUserAccountAssociation = <ThrowOnError extends boolean = false>(options: Options<DeleteAccountAccountRoleUserAccountAssociationData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteAccountAccountRoleUserAccountAssociationResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/{accountId}/account-roles/{accountRoleId}/user-accounts/{userAccountId}',
        ...options
    });
};

/**
 * Assigns account users to the account role
 */
export const postAccountAccountRoleUserAccountAssociation = <ThrowOnError extends boolean = false>(options: Options<PostAccountAccountRoleUserAccountAssociationData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAccountAccountRoleUserAccountAssociationResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/{accountId}/account-roles/{accountRoleId}/user-accounts/{userAccountId}',
        ...options
    });
};

/**
 * Unassigns account users by email address from the account role
 */
export const deleteAccountByExternalReferenceCodeAccountRoleByExternalReferenceCodeUserAccountByEmailAddress = <ThrowOnError extends boolean = false>(options: Options<DeleteAccountByExternalReferenceCodeAccountRoleByExternalReferenceCodeUserAccountByEmailAddressData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteAccountByExternalReferenceCodeAccountRoleByExternalReferenceCodeUserAccountByEmailAddressResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/account-roles/by-external-reference-code/{accountRoleExternalReferenceCode}/user-accounts/by-email-address/{emailAddress}',
        ...options
    });
};

/**
 * Assigns account users by email address to the account role
 */
export const postAccountByExternalReferenceCodeAccountRoleByExternalReferenceCodeUserAccountByEmailAddress = <ThrowOnError extends boolean = false>(options: Options<PostAccountByExternalReferenceCodeAccountRoleByExternalReferenceCodeUserAccountByEmailAddressData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAccountByExternalReferenceCodeAccountRoleByExternalReferenceCodeUserAccountByEmailAddressResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/account-roles/by-external-reference-code/{accountRoleExternalReferenceCode}/user-accounts/by-email-address/{emailAddress}',
        ...options
    });
};

/**
 * Unassigns account users by external reference code from the account role
 */
export const deleteAccountByExternalReferenceCodeAccountRoleByExternalReferenceCodeUserAccountByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteAccountByExternalReferenceCodeAccountRoleByExternalReferenceCodeUserAccountByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteAccountByExternalReferenceCodeAccountRoleByExternalReferenceCodeUserAccountByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{accountExternalReferenceCode}/account-roles/by-external-reference-code/{accountRoleExternalReferenceCode}/user-accounts/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Assigns account users by external reference code to the account role
 */
export const postAccountByExternalReferenceCodeAccountRoleByExternalReferenceCodeUserAccountByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PostAccountByExternalReferenceCodeAccountRoleByExternalReferenceCodeUserAccountByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAccountByExternalReferenceCodeAccountRoleByExternalReferenceCodeUserAccountByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{accountExternalReferenceCode}/account-roles/by-external-reference-code/{accountRoleExternalReferenceCode}/user-accounts/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Unassigns account users by email address from the account role
 */
export const deleteAccountByExternalReferenceCodeAccountRoleUserAccountByEmailAddress = <ThrowOnError extends boolean = false>(options: Options<DeleteAccountByExternalReferenceCodeAccountRoleUserAccountByEmailAddressData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteAccountByExternalReferenceCodeAccountRoleUserAccountByEmailAddressResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/account-roles/{accountRoleId}/user-accounts/by-email-address/{emailAddress}',
        ...options
    });
};

/**
 * Assigns account users by email address to the account role
 */
export const postAccountByExternalReferenceCodeAccountRoleUserAccountByEmailAddress = <ThrowOnError extends boolean = false>(options: Options<PostAccountByExternalReferenceCodeAccountRoleUserAccountByEmailAddressData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAccountByExternalReferenceCodeAccountRoleUserAccountByEmailAddressResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/account-roles/{accountRoleId}/user-accounts/by-email-address/{emailAddress}',
        ...options
    });
};

/**
 * Unassigns account users by external reference code from the account role
 */
export const deleteAccountByExternalReferenceCodeAccountRoleUserAccountByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteAccountByExternalReferenceCodeAccountRoleUserAccountByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteAccountByExternalReferenceCodeAccountRoleUserAccountByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{accountExternalReferenceCode}/account-roles/{accountRoleId}/user-accounts/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Assigns account users by external reference code to the account role
 */
export const postAccountByExternalReferenceCodeAccountRoleUserAccountByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PostAccountByExternalReferenceCodeAccountRoleUserAccountByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAccountByExternalReferenceCodeAccountRoleUserAccountByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{accountExternalReferenceCode}/account-roles/{accountRoleId}/user-accounts/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Gets the account's roles
 */
export const getAccountAccountRolesByExternalReferenceCodePage = <ThrowOnError extends boolean = false>(options: Options<GetAccountAccountRolesByExternalReferenceCodePageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAccountAccountRolesByExternalReferenceCodePageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/account-roles',
        ...options
    });
};

/**
 * Adds a role for the account
 */
export const postAccountAccountRoleByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PostAccountAccountRoleByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAccountAccountRoleByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/account-roles',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Gets the account's roles
 */
export const getAccountAccountRolesPage = <ThrowOnError extends boolean = false>(options: Options<GetAccountAccountRolesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAccountAccountRolesPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/{accountId}/account-roles',
        ...options
    });
};

/**
 * Adds a role for the account
 */
export const postAccountAccountRole = <ThrowOnError extends boolean = false>(options: Options<PostAccountAccountRoleData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAccountAccountRoleResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/{accountId}/account-roles',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Gets a user's account roles by their email address from an account by external reference code
 */
export const getAccountByExternalReferenceCodeUserAccountByEmailAddressAccountRolesPage = <ThrowOnError extends boolean = false>(options: Options<GetAccountByExternalReferenceCodeUserAccountByEmailAddressAccountRolesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAccountByExternalReferenceCodeUserAccountByEmailAddressAccountRolesPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/user-accounts/by-email-address/{emailAddress}/account-roles',
        ...options
    });
};

/**
 * Gets a user's account roles by their external reference code from an account by external reference code
 */
export const getAccountByExternalReferenceCodeUserAccountByExternalReferenceCodeAccountRolesPage = <ThrowOnError extends boolean = false>(options: Options<GetAccountByExternalReferenceCodeUserAccountByExternalReferenceCodeAccountRolesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAccountByExternalReferenceCodeUserAccountByExternalReferenceCodeAccountRolesPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{accountExternalReferenceCode}/user-accounts/by-external-reference-code/{externalReferenceCode}/account-roles',
        ...options
    });
};

export const postAccountAccountRoleBatch = <ThrowOnError extends boolean = false>(options: Options<PostAccountAccountRoleBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAccountAccountRoleBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/{accountId}/account-roles/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postAccountAccountRolesPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostAccountAccountRolesPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAccountAccountRolesPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/{accountId}/account-roles/export-batch',
        ...options
    });
};

/**
 * Deletes an email address.
 */
export const deleteEmailAddress = <ThrowOnError extends boolean = false>(options: Options<DeleteEmailAddressData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteEmailAddressResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/email-addresses/{emailAddressId}',
        ...options
    });
};

/**
 * Retrieves the email address.
 */
export const getEmailAddress = <ThrowOnError extends boolean = false>(options: Options<GetEmailAddressData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetEmailAddressResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/email-addresses/{emailAddressId}',
        ...options
    });
};

/**
 * Updates the email address with the information sent in the request body. Fields not present in the request body are left unchanged.
 */
export const patchEmailAddress = <ThrowOnError extends boolean = false>(options: Options<PatchEmailAddressData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchEmailAddressResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/email-addresses/{emailAddressId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteEmailAddressBatch = <ThrowOnError extends boolean = false>(options?: Options<DeleteEmailAddressBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteEmailAddressBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/email-addresses/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Deletes an email address.
 */
export const deleteEmailAddressByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteEmailAddressByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteEmailAddressByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/email-addresses/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves the email address.
 */
export const getEmailAddressByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetEmailAddressByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetEmailAddressByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/email-addresses/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Updates the email address with the information sent in the request body. Fields not present in the request body are left unchanged.
 */
export const patchEmailAddressByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PatchEmailAddressByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchEmailAddressByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/email-addresses/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the account's email addresses.
 */
export const getAccountByExternalReferenceCodeEmailAddressesPage = <ThrowOnError extends boolean = false>(options: Options<GetAccountByExternalReferenceCodeEmailAddressesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAccountByExternalReferenceCodeEmailAddressesPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/email-addresses',
        ...options
    });
};

/**
 * Retrieves the account's email addresses.
 */
export const getAccountEmailAddressesPage = <ThrowOnError extends boolean = false>(options: Options<GetAccountEmailAddressesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAccountEmailAddressesPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/{accountId}/email-addresses',
        ...options
    });
};

/**
 * Retrieves the organization's email addresses.
 */
export const getOrganizationByExternalReferenceCodeEmailAddressesPage = <ThrowOnError extends boolean = false>(options: Options<GetOrganizationByExternalReferenceCodeEmailAddressesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetOrganizationByExternalReferenceCodeEmailAddressesPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/by-external-reference-code/{externalReferenceCode}/email-addresses',
        ...options
    });
};

/**
 * Retrieves the organization's email addresses.
 */
export const getOrganizationEmailAddressesPage = <ThrowOnError extends boolean = false>(options: Options<GetOrganizationEmailAddressesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetOrganizationEmailAddressesPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/{organizationId}/email-addresses',
        ...options
    });
};

/**
 * Retrieves the user's email addresses.
 */
export const getUserAccountByExternalReferenceCodeEmailAddressesPage = <ThrowOnError extends boolean = false>(options: Options<GetUserAccountByExternalReferenceCodeEmailAddressesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetUserAccountByExternalReferenceCodeEmailAddressesPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-accounts/by-external-reference-code/{externalReferenceCode}/email-addresses',
        ...options
    });
};

/**
 * Retrieves the user's email addresses.
 */
export const getUserAccountEmailAddressesPage = <ThrowOnError extends boolean = false>(options: Options<GetUserAccountEmailAddressesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetUserAccountEmailAddressesPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-accounts/{userAccountId}/email-addresses',
        ...options
    });
};

export const postAccountEmailAddressesPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostAccountEmailAddressesPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAccountEmailAddressesPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/{accountId}/email-addresses/export-batch',
        ...options
    });
};

export const postOrganizationEmailAddressesPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostOrganizationEmailAddressesPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostOrganizationEmailAddressesPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/{organizationId}/email-addresses/export-batch',
        ...options
    });
};

export const postUserAccountEmailAddressesPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostUserAccountEmailAddressesPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostUserAccountEmailAddressesPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-accounts/{userAccountId}/email-addresses/export-batch',
        ...options
    });
};

export const deleteAccountByExternalReferenceCodeOrganization = <ThrowOnError extends boolean = false>(options: Options<DeleteAccountByExternalReferenceCodeOrganizationData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteAccountByExternalReferenceCodeOrganizationResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/organizations/{organizationId}',
        ...options
    });
};

export const getAccountByExternalReferenceCodeOrganization = <ThrowOnError extends boolean = false>(options: Options<GetAccountByExternalReferenceCodeOrganizationData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAccountByExternalReferenceCodeOrganizationResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/organizations/{organizationId}',
        ...options
    });
};

export const postAccountByExternalReferenceCodeOrganization = <ThrowOnError extends boolean = false>(options: Options<PostAccountByExternalReferenceCodeOrganizationData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAccountByExternalReferenceCodeOrganizationResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/organizations/{organizationId}',
        ...options
    });
};

export const deleteAccountOrganization = <ThrowOnError extends boolean = false>(options: Options<DeleteAccountOrganizationData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteAccountOrganizationResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/{accountId}/organizations/{organizationId}',
        ...options
    });
};

export const getAccountOrganization = <ThrowOnError extends boolean = false>(options: Options<GetAccountOrganizationData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAccountOrganizationResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/{accountId}/organizations/{organizationId}',
        ...options
    });
};

export const postAccountOrganization = <ThrowOnError extends boolean = false>(options: Options<PostAccountOrganizationData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAccountOrganizationResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/{accountId}/organizations/{organizationId}',
        ...options
    });
};

/**
 * Deletes an organization.
 */
export const deleteOrganization = <ThrowOnError extends boolean = false>(options: Options<DeleteOrganizationData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteOrganizationResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/{organizationId}',
        ...options
    });
};

/**
 * Retrieves the organization.
 */
export const getOrganization = <ThrowOnError extends boolean = false>(options: Options<GetOrganizationData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetOrganizationResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/{organizationId}',
        ...options
    });
};

/**
 * Updates the organization with the information sent in the request body. Fields not present in the request body are left unchanged.
 */
export const patchOrganization = <ThrowOnError extends boolean = false>(options: Options<PatchOrganizationData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchOrganizationResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/{organizationId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Replaces the organization with information sent in the request body. Any missing fields are deleted unless they are required.
 */
export const putOrganization = <ThrowOnError extends boolean = false>(options: Options<PutOrganizationData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutOrganizationResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/{organizationId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteOrganizationBatch = <ThrowOnError extends boolean = false>(options?: Options<DeleteOrganizationBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteOrganizationBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postOrganizationBatch = <ThrowOnError extends boolean = false>(options?: Options<PostOrganizationBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostOrganizationBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const putOrganizationBatch = <ThrowOnError extends boolean = false>(options?: Options<PutOrganizationBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).put<PutOrganizationBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Deletes an organization.
 */
export const deleteOrganizationByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteOrganizationByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteOrganizationByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

export const getOrganizationByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetOrganizationByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetOrganizationByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Updates the organization with information sent in the request body. Only the provided fields are updated.
 */
export const patchOrganizationByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PatchOrganizationByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchOrganizationByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Replaces the organization with information sent in the request body. Any missing fields are deleted unless they are required.
 */
export const putOrganizationByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PutOrganizationByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutOrganizationByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Removes a user from an organization by their email address
 */
export const deleteOrganizationByExternalReferenceCodeUserAccountByEmailAddress = <ThrowOnError extends boolean = false>(options: Options<DeleteOrganizationByExternalReferenceCodeUserAccountByEmailAddressData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteOrganizationByExternalReferenceCodeUserAccountByEmailAddressResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/by-external-reference-code/{externalReferenceCode}/user-accounts/by-email-address/{emailAddress}',
        ...options
    });
};

/**
 * Assigns a user to an organization by their email address
 */
export const postOrganizationByExternalReferenceCodeUserAccountByEmailAddress = <ThrowOnError extends boolean = false>(options: Options<PostOrganizationByExternalReferenceCodeUserAccountByEmailAddressData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostOrganizationByExternalReferenceCodeUserAccountByEmailAddressResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/by-external-reference-code/{externalReferenceCode}/user-accounts/by-email-address/{emailAddress}',
        ...options
    });
};

/**
 * Removes users from an organization by their email addresses
 */
export const deleteOrganizationByExternalReferenceCodeUserAccountsByEmailAddress = <ThrowOnError extends boolean = false>(options: Options<DeleteOrganizationByExternalReferenceCodeUserAccountsByEmailAddressData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteOrganizationByExternalReferenceCodeUserAccountsByEmailAddressResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/by-external-reference-code/{externalReferenceCode}/user-accounts/by-email-address',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Assigns users to an organization by their email addresses
 */
export const postOrganizationByExternalReferenceCodeUserAccountsByEmailAddress = <ThrowOnError extends boolean = false>(options: Options<PostOrganizationByExternalReferenceCodeUserAccountsByEmailAddressData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostOrganizationByExternalReferenceCodeUserAccountsByEmailAddressResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/by-external-reference-code/{externalReferenceCode}/user-accounts/by-email-address',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Removes a user from an organization by their email address
 */
export const deleteUserAccountByEmailAddress = <ThrowOnError extends boolean = false>(options: Options<DeleteUserAccountByEmailAddressData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteUserAccountByEmailAddressResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/{organizationId}/user-accounts/by-email-address/{emailAddress}',
        ...options
    });
};

/**
 * Assigns a user to an organization by their email address
 */
export const postUserAccountByEmailAddress = <ThrowOnError extends boolean = false>(options: Options<PostUserAccountByEmailAddressData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostUserAccountByEmailAddressResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/{organizationId}/user-accounts/by-email-address/{emailAddress}',
        ...options
    });
};

/**
 * Removes users from an organization by their email addresses
 */
export const deleteUserAccountsByEmailAddress = <ThrowOnError extends boolean = false>(options: Options<DeleteUserAccountsByEmailAddressData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteUserAccountsByEmailAddressResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/{organizationId}/user-accounts/by-email-address',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Assigns users to an organization by their email addresses
 */
export const postUserAccountsByEmailAddress = <ThrowOnError extends boolean = false>(options: Options<PostUserAccountsByEmailAddressData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostUserAccountsByEmailAddressResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/{organizationId}/user-accounts/by-email-address',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the account's organizations. Results can be paginated, filtered, searched, and sorted.
 */
export const getAccountByExternalReferenceCodeOrganizationsPage = <ThrowOnError extends boolean = false>(options: Options<GetAccountByExternalReferenceCodeOrganizationsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAccountByExternalReferenceCodeOrganizationsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/organizations',
        ...options
    });
};

/**
 * Retrieves the account's organizations. Results can be paginated, filtered, searched, and sorted.
 */
export const getAccountOrganizationsPage = <ThrowOnError extends boolean = false>(options: Options<GetAccountOrganizationsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAccountOrganizationsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/{accountId}/organizations',
        ...options
    });
};

/**
 * Retrieves the parent organization's child organizations. Results can be paginated, filtered, searched, and sorted.
 */
export const getOrganizationByExternalReferenceCodeChildOrganizationsPage = <ThrowOnError extends boolean = false>(options: Options<GetOrganizationByExternalReferenceCodeChildOrganizationsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetOrganizationByExternalReferenceCodeChildOrganizationsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/by-external-reference-code/{externalReferenceCode}/child-organizations',
        ...options
    });
};

/**
 * Retrieves the parent organization's child organizations. Results can be paginated, filtered, searched, and sorted.
 */
export const getOrganizationChildOrganizationsPage = <ThrowOnError extends boolean = false>(options: Options<GetOrganizationChildOrganizationsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetOrganizationChildOrganizationsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/{organizationId}/child-organizations',
        ...options
    });
};

/**
 * Retrieves the parent organization's child organizations. Results can be paginated, filtered, searched, and sorted.
 */
export const getOrganizationOrganizationsPage = <ThrowOnError extends boolean = false>(options: Options<GetOrganizationOrganizationsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetOrganizationOrganizationsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/{parentOrganizationId}/organizations',
        ...options
    });
};

/**
 * Retrieves the organizations. Results can be paginated, filtered, searched, and sorted.
 */
export const getOrganizationsPage = <ThrowOnError extends boolean = false>(options?: Options<GetOrganizationsPageData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetOrganizationsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations',
        ...options
    });
};

/**
 * Creates a new organization
 */
export const postOrganization = <ThrowOnError extends boolean = false>(options?: Options<PostOrganizationData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostOrganizationResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postAccountOrganizationsPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostAccountOrganizationsPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAccountOrganizationsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/{accountId}/organizations/export-batch',
        ...options
    });
};

export const postOrganizationsPageExportBatch = <ThrowOnError extends boolean = false>(options?: Options<PostOrganizationsPageExportBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostOrganizationsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/export-batch',
        ...options
    });
};

/**
 * Deletes the phone number.
 */
export const deletePhone = <ThrowOnError extends boolean = false>(options: Options<DeletePhoneData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeletePhoneResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/phones/{phoneId}',
        ...options
    });
};

/**
 * Retrieves the phone number.
 */
export const getPhone = <ThrowOnError extends boolean = false>(options: Options<GetPhoneData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetPhoneResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/phones/{phoneId}',
        ...options
    });
};

/**
 * Updates the phone number.
 */
export const patchPhone = <ThrowOnError extends boolean = false>(options: Options<PatchPhoneData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchPhoneResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/phones/{phoneId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deletePhoneBatch = <ThrowOnError extends boolean = false>(options?: Options<DeletePhoneBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeletePhoneBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/phones/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Deletes the phone number by external reference code.
 */
export const deletePhoneByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeletePhoneByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeletePhoneByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/phones/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves the phone number by external reference code.
 */
export const getPhoneByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetPhoneByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetPhoneByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/phones/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Updates the phone number by external reference code.
 */
export const patchPhoneByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PatchPhoneByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchPhoneByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/phones/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the account's phone numbers.
 */
export const getAccountByExternalReferenceCodePhonesPage = <ThrowOnError extends boolean = false>(options: Options<GetAccountByExternalReferenceCodePhonesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAccountByExternalReferenceCodePhonesPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/phones',
        ...options
    });
};

/**
 * Retrieves the account's phone numbers.
 */
export const getAccountPhonesPage = <ThrowOnError extends boolean = false>(options: Options<GetAccountPhonesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAccountPhonesPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/{accountId}/phones',
        ...options
    });
};

/**
 * Retrieves the organization's phone numbers.
 */
export const getOrganizationByExternalReferenceCodePhonesPage = <ThrowOnError extends boolean = false>(options: Options<GetOrganizationByExternalReferenceCodePhonesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetOrganizationByExternalReferenceCodePhonesPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/by-external-reference-code/{externalReferenceCode}/phones',
        ...options
    });
};

/**
 * Retrieves the organization's phone numbers.
 */
export const getOrganizationPhonesPage = <ThrowOnError extends boolean = false>(options: Options<GetOrganizationPhonesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetOrganizationPhonesPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/{organizationId}/phones',
        ...options
    });
};

/**
 * Retrieves the user's phone numbers.
 */
export const getUserAccountByExternalReferenceCodePhonesPage = <ThrowOnError extends boolean = false>(options: Options<GetUserAccountByExternalReferenceCodePhonesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetUserAccountByExternalReferenceCodePhonesPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-accounts/by-external-reference-code/{externalReferenceCode}/phones',
        ...options
    });
};

/**
 * Retrieves the user's phone numbers.
 */
export const getUserAccountPhonesPage = <ThrowOnError extends boolean = false>(options: Options<GetUserAccountPhonesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetUserAccountPhonesPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-accounts/{userAccountId}/phones',
        ...options
    });
};

export const postAccountPhonesPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostAccountPhonesPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAccountPhonesPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/{accountId}/phones/export-batch',
        ...options
    });
};

export const postOrganizationPhonesPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostOrganizationPhonesPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostOrganizationPhonesPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/{organizationId}/phones/export-batch',
        ...options
    });
};

export const postUserAccountPhonesPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostUserAccountPhonesPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostUserAccountPhonesPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-accounts/{userAccountId}/phones/export-batch',
        ...options
    });
};

/**
 * Deletes the postal address
 */
export const deletePostalAddress = <ThrowOnError extends boolean = false>(options: Options<DeletePostalAddressData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeletePostalAddressResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/postal-addresses/{postalAddressId}',
        ...options
    });
};

/**
 * Retrieves the postal address.
 */
export const getPostalAddress = <ThrowOnError extends boolean = false>(options: Options<GetPostalAddressData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetPostalAddressResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/postal-addresses/{postalAddressId}',
        ...options
    });
};

export const patchPostalAddress = <ThrowOnError extends boolean = false>(options: Options<PatchPostalAddressData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchPostalAddressResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/postal-addresses/{postalAddressId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const putPostalAddress = <ThrowOnError extends boolean = false>(options: Options<PutPostalAddressData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutPostalAddressResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/postal-addresses/{postalAddressId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deletePostalAddressBatch = <ThrowOnError extends boolean = false>(options?: Options<DeletePostalAddressBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeletePostalAddressBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/postal-addresses/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const putPostalAddressBatch = <ThrowOnError extends boolean = false>(options?: Options<PutPostalAddressBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).put<PutPostalAddressBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/postal-addresses/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Deletes the postal address using external reference code.
 */
export const deletePostalAddressByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeletePostalAddressByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeletePostalAddressByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/postal-addresses/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves the postal address using external reference code.
 */
export const getPostalAddressByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetPostalAddressByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetPostalAddressByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/postal-addresses/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Updates the postal address using external reference code.
 */
export const patchPostalAddressByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PatchPostalAddressByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchPostalAddressByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/postal-addresses/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Updates the postal address using external reference code.
 */
export const putPostalAddressByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PutPostalAddressByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutPostalAddressByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/postal-addresses/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the account's postal addresses.
 */
export const getAccountByExternalReferenceCodePostalAddressesPage = <ThrowOnError extends boolean = false>(options: Options<GetAccountByExternalReferenceCodePostalAddressesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAccountByExternalReferenceCodePostalAddressesPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/postal-addresses',
        ...options
    });
};

/**
 * Retrieves the account's postal addresses.
 */
export const getAccountPostalAddressesPage = <ThrowOnError extends boolean = false>(options: Options<GetAccountPostalAddressesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAccountPostalAddressesPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/{accountId}/postal-addresses',
        ...options
    });
};

export const postAccountPostalAddress = <ThrowOnError extends boolean = false>(options: Options<PostAccountPostalAddressData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAccountPostalAddressResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/{accountId}/postal-addresses',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the organization's postal addresses.
 */
export const getOrganizationByExternalReferenceCodePostalAddressesPage = <ThrowOnError extends boolean = false>(options: Options<GetOrganizationByExternalReferenceCodePostalAddressesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetOrganizationByExternalReferenceCodePostalAddressesPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/by-external-reference-code/{externalReferenceCode}/postal-addresses',
        ...options
    });
};

/**
 * Retrieves the organization's postal addresses.
 */
export const getOrganizationPostalAddressesPage = <ThrowOnError extends boolean = false>(options: Options<GetOrganizationPostalAddressesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetOrganizationPostalAddressesPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/{organizationId}/postal-addresses',
        ...options
    });
};

/**
 * Retrieves the user's postal addresses.
 */
export const getUserAccountByExternalReferenceCodePostalAddressesPage = <ThrowOnError extends boolean = false>(options: Options<GetUserAccountByExternalReferenceCodePostalAddressesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetUserAccountByExternalReferenceCodePostalAddressesPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-accounts/by-external-reference-code/{externalReferenceCode}/postal-addresses',
        ...options
    });
};

/**
 * Retrieves the user's postal addresses.
 */
export const getUserAccountPostalAddressesPage = <ThrowOnError extends boolean = false>(options: Options<GetUserAccountPostalAddressesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetUserAccountPostalAddressesPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-accounts/{userAccountId}/postal-addresses',
        ...options
    });
};

export const postAccountPostalAddressBatch = <ThrowOnError extends boolean = false>(options: Options<PostAccountPostalAddressBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAccountPostalAddressBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/{accountId}/postal-addresses/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postAccountPostalAddressesPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostAccountPostalAddressesPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAccountPostalAddressesPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/{accountId}/postal-addresses/export-batch',
        ...options
    });
};

export const postOrganizationPostalAddressesPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostOrganizationPostalAddressesPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostOrganizationPostalAddressesPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/{organizationId}/postal-addresses/export-batch',
        ...options
    });
};

export const postUserAccountPostalAddressesPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostUserAccountPostalAddressesPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostUserAccountPostalAddressesPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-accounts/{userAccountId}/postal-addresses/export-batch',
        ...options
    });
};

/**
 * Unassociates an organization role by external reference code with a user account
 */
export const deleteOrganizationRoleByExternalReferenceCodeUserAccountAssociation = <ThrowOnError extends boolean = false>(options: Options<DeleteOrganizationRoleByExternalReferenceCodeUserAccountAssociationData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteOrganizationRoleByExternalReferenceCodeUserAccountAssociationResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/roles/by-external-reference-code/{externalReferenceCode}/association/user-account/{userAccountId}/organization/{organizationId}',
        ...options
    });
};

/**
 * Associates a organization role by external reference code with a user account
 */
export const postOrganizationRoleByExternalReferenceCodeUserAccountAssociation = <ThrowOnError extends boolean = false>(options: Options<PostOrganizationRoleByExternalReferenceCodeUserAccountAssociationData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostOrganizationRoleByExternalReferenceCodeUserAccountAssociationResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/roles/by-external-reference-code/{externalReferenceCode}/association/user-account/{userAccountId}/organization/{organizationId}',
        ...options
    });
};

/**
 * Unassociates an organization role with a user account
 */
export const deleteOrganizationRoleUserAccountAssociation = <ThrowOnError extends boolean = false>(options: Options<DeleteOrganizationRoleUserAccountAssociationData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteOrganizationRoleUserAccountAssociationResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/roles/{roleId}/association/user-account/{userAccountId}/organization/{organizationId}',
        ...options
    });
};

/**
 * Associates a organization role with a user account
 */
export const postOrganizationRoleUserAccountAssociation = <ThrowOnError extends boolean = false>(options: Options<PostOrganizationRoleUserAccountAssociationData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostOrganizationRoleUserAccountAssociationResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/roles/{roleId}/association/user-account/{userAccountId}/organization/{organizationId}',
        ...options
    });
};

/**
 * Deletes the role.
 */
export const deleteRole = <ThrowOnError extends boolean = false>(options: Options<DeleteRoleData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteRoleResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/roles/{roleId}',
        ...options
    });
};

/**
 * Retrieves the role.
 */
export const getRole = <ThrowOnError extends boolean = false>(options: Options<GetRoleData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetRoleResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/roles/{roleId}',
        ...options
    });
};

/**
 * Updates the role.
 */
export const patchRole = <ThrowOnError extends boolean = false>(options: Options<PatchRoleData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchRoleResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/roles/{roleId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Updates the role.
 */
export const putRole = <ThrowOnError extends boolean = false>(options: Options<PutRoleData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutRoleResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/roles/{roleId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteRoleBatch = <ThrowOnError extends boolean = false>(options?: Options<DeleteRoleBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteRoleBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/roles/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postRoleBatch = <ThrowOnError extends boolean = false>(options?: Options<PostRoleBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostRoleBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/roles/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const putRoleBatch = <ThrowOnError extends boolean = false>(options?: Options<PutRoleBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).put<PutRoleBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/roles/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Deletes the role by its external reference code.
 */
export const deleteRoleByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteRoleByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteRoleByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/roles/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves the role by its external reference code.
 */
export const getRoleByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetRoleByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetRoleByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/roles/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Updates the role by its external reference code.
 */
export const patchRoleByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PatchRoleByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchRoleByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/roles/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Updates the role by its external reference code.
 */
export const putRoleByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PutRoleByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutRoleByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/roles/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Unassociates a role by external reference code with a user account
 */
export const deleteRoleByExternalReferenceCodeUserAccountAssociation = <ThrowOnError extends boolean = false>(options: Options<DeleteRoleByExternalReferenceCodeUserAccountAssociationData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteRoleByExternalReferenceCodeUserAccountAssociationResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/roles/by-external-reference-code/{externalReferenceCode}/association/user-account/{userAccountId}',
        ...options
    });
};

/**
 * Associates a role by external reference code with a user account
 */
export const postRoleByExternalReferenceCodeUserAccountAssociation = <ThrowOnError extends boolean = false>(options: Options<PostRoleByExternalReferenceCodeUserAccountAssociationData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostRoleByExternalReferenceCodeUserAccountAssociationResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/roles/by-external-reference-code/{externalReferenceCode}/association/user-account/{userAccountId}',
        ...options
    });
};

/**
 * Unassociates a role with a user account
 */
export const deleteRoleUserAccountAssociation = <ThrowOnError extends boolean = false>(options: Options<DeleteRoleUserAccountAssociationData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteRoleUserAccountAssociationResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/roles/{roleId}/association/user-account/{userAccountId}',
        ...options
    });
};

/**
 * Associates a role with a user account
 */
export const postRoleUserAccountAssociation = <ThrowOnError extends boolean = false>(options: Options<PostRoleUserAccountAssociationData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostRoleUserAccountAssociationResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/roles/{roleId}/association/user-account/{userAccountId}',
        ...options
    });
};

/**
 * Unassociates a site role by external reference code with a user account
 */
export const deleteSiteRoleByExternalReferenceCodeUserAccountAssociation = <ThrowOnError extends boolean = false>(options: Options<DeleteSiteRoleByExternalReferenceCodeUserAccountAssociationData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSiteRoleByExternalReferenceCodeUserAccountAssociationResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/roles/by-external-reference-code/{externalReferenceCode}/association/user-account/{userAccountId}/site/{siteId}',
        ...options
    });
};

/**
 * Associates a site role by external reference code with a user account
 */
export const postSiteRoleByExternalReferenceCodeUserAccountAssociation = <ThrowOnError extends boolean = false>(options: Options<PostSiteRoleByExternalReferenceCodeUserAccountAssociationData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteRoleByExternalReferenceCodeUserAccountAssociationResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/roles/by-external-reference-code/{externalReferenceCode}/association/user-account/{userAccountId}/site/{siteId}',
        ...options
    });
};

/**
 * Unassociates a site role with a user account
 */
export const deleteSiteRoleUserAccountAssociation = <ThrowOnError extends boolean = false>(options: Options<DeleteSiteRoleUserAccountAssociationData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSiteRoleUserAccountAssociationResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/roles/{roleId}/association/user-account/{userAccountId}/site/{siteId}',
        ...options
    });
};

/**
 * Associates a site role with a user account
 */
export const postSiteRoleUserAccountAssociation = <ThrowOnError extends boolean = false>(options: Options<PostSiteRoleUserAccountAssociationData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteRoleUserAccountAssociationResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/roles/{roleId}/association/user-account/{userAccountId}/site/{siteId}',
        ...options
    });
};

/**
 * Retrieves the portal instance's roles. Results can be paginated.
 */
export const getRolesPage = <ThrowOnError extends boolean = false>(options?: Options<GetRolesPageData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetRolesPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/roles',
        ...options
    });
};

/**
 * Creates a new role
 */
export const postRole = <ThrowOnError extends boolean = false>(options?: Options<PostRoleData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostRoleResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/roles',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postRolesPageExportBatch = <ThrowOnError extends boolean = false>(options?: Options<PostRolesPageExportBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostRolesPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/roles/export-batch',
        ...options
    });
};

/**
 * Gets a site's segments.
 */
export const getSiteSegmentsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteSegmentsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSegmentsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/sites/{siteId}/segments',
        ...options
    });
};

/**
 * Gets a user's segments. The set of available headers are: Accept-Language (string), Host (string), User-Agent (string), X-Browser (string), X-Cookies (collection string), X-Device-Brand (string), X-Device-Model (string), X-Device-Screen-Resolution-Height (double), X-Device-Screen-Resolution-Width (double), X-Last-Sign-In-Date-Time (date time) and X-Signed-In (boolean). Local date will be always present in the request.
 */
export const getSiteUserAccountSegmentsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteUserAccountSegmentsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteUserAccountSegmentsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/sites/{siteId}/user-accounts/{userAccountId}/segments',
        ...options
    });
};

export const postSiteSegmentsPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostSiteSegmentsPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteSegmentsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/sites/{siteId}/segments/export-batch',
        ...options
    });
};

/**
 * Gets a segment's users.
 */
export const getSegmentUserAccountsPage = <ThrowOnError extends boolean = false>(options: Options<GetSegmentUserAccountsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSegmentUserAccountsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/segments/{segmentId}/user-accounts',
        ...options
    });
};

export const getMyUserAccountSharedAssetsSharedByMePage = <ThrowOnError extends boolean = false>(options?: Options<GetMyUserAccountSharedAssetsSharedByMePageData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetMyUserAccountSharedAssetsSharedByMePageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/my-user-account/shared-assets/shared-by-me',
        ...options
    });
};

export const getMyUserAccountSharedAssetsSharedWithMePage = <ThrowOnError extends boolean = false>(options?: Options<GetMyUserAccountSharedAssetsSharedWithMePageData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetMyUserAccountSharedAssetsSharedWithMePageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/my-user-account/shared-assets/shared-with-me',
        ...options
    });
};

export const getMyUserAccountSitesPage = <ThrowOnError extends boolean = false>(options?: Options<GetMyUserAccountSitesPageData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetMyUserAccountSitesPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/my-user-account/sites',
        ...options
    });
};

export const getSite = <ThrowOnError extends boolean = false>(options: Options<GetSiteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/sites/{siteId}',
        ...options
    });
};

export const getSiteByFriendlyUrlPath = <ThrowOnError extends boolean = false>(options: Options<GetSiteByFriendlyUrlPathData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteByFriendlyUrlPathResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/sites/by-friendly-url-path/{friendlyUrlPath}',
        ...options
    });
};

export const deleteMyUserAccountSubscription = <ThrowOnError extends boolean = false>(options: Options<DeleteMyUserAccountSubscriptionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteMyUserAccountSubscriptionResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/my-user-account/subscriptions/{subscriptionId}',
        ...options
    });
};

export const getMyUserAccountSubscription = <ThrowOnError extends boolean = false>(options: Options<GetMyUserAccountSubscriptionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetMyUserAccountSubscriptionResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/my-user-account/subscriptions/{subscriptionId}',
        ...options
    });
};

export const getMyUserAccountSubscriptionsPage = <ThrowOnError extends boolean = false>(options?: Options<GetMyUserAccountSubscriptionsPageData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetMyUserAccountSubscriptionsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/my-user-account/subscriptions',
        ...options
    });
};

/**
 * Retrieves the user's email verification ticket.
 */
export const getUserAccountEmailVerificationTicket = <ThrowOnError extends boolean = false>(options: Options<GetUserAccountEmailVerificationTicketData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetUserAccountEmailVerificationTicketResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-accounts/{userAccountId}/email-verification-ticket',
        ...options
    });
};

/**
 * Retrieves the user's password reset ticket.
 */
export const getUserAccountPasswordResetTicket = <ThrowOnError extends boolean = false>(options: Options<GetUserAccountPasswordResetTicketData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetUserAccountPasswordResetTicketResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-accounts/{userAccountId}/password-reset-ticket',
        ...options
    });
};

/**
 * Retrieves the user account full name definition.
 */
export const getUserAccountFullNameDefinition = <ThrowOnError extends boolean = false>(options?: Options<GetUserAccountFullNameDefinitionData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetUserAccountFullNameDefinitionResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-account-full-name-definition',
        ...options
    });
};

/**
 * Removes a user by their external reference code from an account by external reference code
 */
export const deleteAccountByExternalReferenceCodeUserAccountByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteAccountByExternalReferenceCodeUserAccountByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteAccountByExternalReferenceCodeUserAccountByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{accountExternalReferenceCode}/user-accounts/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Gets a user by their external reference code to an account by external reference code
 */
export const getAccountByExternalReferenceCodeUserAccountByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetAccountByExternalReferenceCodeUserAccountByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAccountByExternalReferenceCodeUserAccountByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{accountExternalReferenceCode}/user-accounts/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Assigns a user by their external reference code to an account by external reference code
 */
export const postAccountByExternalReferenceCodeUserAccountByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PostAccountByExternalReferenceCodeUserAccountByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAccountByExternalReferenceCodeUserAccountByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{accountExternalReferenceCode}/user-accounts/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Removes a user assigned to an account
 */
export const deleteAccountUserAccount = <ThrowOnError extends boolean = false>(options: Options<DeleteAccountUserAccountData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteAccountUserAccountResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/{accountId}/user-accounts/{userAccountId}',
        ...options
    });
};

/**
 * Gets a user assigned to an account
 */
export const getAccountUserAccount = <ThrowOnError extends boolean = false>(options: Options<GetAccountUserAccountData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAccountUserAccountResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/{accountId}/user-accounts/{userAccountId}',
        ...options
    });
};

/**
 * Removes a user from an account by their email address
 */
export const deleteAccountUserAccountByEmailAddress = <ThrowOnError extends boolean = false>(options: Options<DeleteAccountUserAccountByEmailAddressData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteAccountUserAccountByEmailAddressResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/{accountId}/user-accounts/by-email-address/{emailAddress}',
        ...options
    });
};

/**
 * Assigns a user to an account by their email address
 */
export const postAccountUserAccountByEmailAddress = <ThrowOnError extends boolean = false>(options: Options<PostAccountUserAccountByEmailAddressData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAccountUserAccountByEmailAddressResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/{accountId}/user-accounts/by-email-address/{emailAddress}',
        ...options
    });
};

/**
 * Removes a user from an account by external reference code by their email address
 */
export const deleteAccountUserAccountByExternalReferenceCodeByEmailAddress = <ThrowOnError extends boolean = false>(options: Options<DeleteAccountUserAccountByExternalReferenceCodeByEmailAddressData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteAccountUserAccountByExternalReferenceCodeByEmailAddressResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/user-accounts/by-email-address/{emailAddress}',
        ...options
    });
};

/**
 * Assigns a user to an account by external reference code by their email address
 */
export const postAccountUserAccountByExternalReferenceCodeByEmailAddress = <ThrowOnError extends boolean = false>(options: Options<PostAccountUserAccountByExternalReferenceCodeByEmailAddressData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAccountUserAccountByExternalReferenceCodeByEmailAddressResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/user-accounts/by-email-address/{emailAddress}',
        ...options
    });
};

/**
 * Removes users from an account by their email addresses
 */
export const deleteAccountUserAccountsByEmailAddress = <ThrowOnError extends boolean = false>(options: Options<DeleteAccountUserAccountsByEmailAddressData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteAccountUserAccountsByEmailAddressResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/{accountId}/user-accounts/by-email-address',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Assigns users to an account by their email addresses
 */
export const postAccountUserAccountsByEmailAddress = <ThrowOnError extends boolean = false>(options: Options<PostAccountUserAccountsByEmailAddressData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAccountUserAccountsByEmailAddressResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/{accountId}/user-accounts/by-email-address',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Removes users from an account by their email addresses
 */
export const deleteAccountUserAccountsByExternalReferenceCodeByEmailAddress = <ThrowOnError extends boolean = false>(options: Options<DeleteAccountUserAccountsByExternalReferenceCodeByEmailAddressData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteAccountUserAccountsByExternalReferenceCodeByEmailAddressResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/user-accounts/by-email-address',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Assigns users to an account by their email addresses
 */
export const postAccountUserAccountsByExternalReferenceCodeByEmailAddress = <ThrowOnError extends boolean = false>(options: Options<PostAccountUserAccountsByExternalReferenceCodeByEmailAddressData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAccountUserAccountsByExternalReferenceCodeByEmailAddressResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/user-accounts/by-email-address',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Deletes the user account
 */
export const deleteUserAccount = <ThrowOnError extends boolean = false>(options: Options<DeleteUserAccountData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteUserAccountResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-accounts/{userAccountId}',
        ...options
    });
};

/**
 * Retrieves the user account.
 */
export const getUserAccount = <ThrowOnError extends boolean = false>(options: Options<GetUserAccountData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetUserAccountResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-accounts/{userAccountId}',
        ...options
    });
};

/**
 * Updates the user account with information sent in the request body. Only the provided fields are updated.
 */
export const patchUserAccount = <ThrowOnError extends boolean = false>(options: Options<PatchUserAccountData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchUserAccountResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-accounts/{userAccountId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Replaces the user account with information sent in the request body. Any missing fields are deleted unless they are required.
 */
export const putUserAccount = <ThrowOnError extends boolean = false>(options: Options<PutUserAccountData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutUserAccountResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-accounts/{userAccountId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteUserAccountBatch = <ThrowOnError extends boolean = false>(options?: Options<DeleteUserAccountBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteUserAccountBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-accounts/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postUserAccountBatch = <ThrowOnError extends boolean = false>(options?: Options<PostUserAccountBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostUserAccountBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-accounts/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const putUserAccountBatch = <ThrowOnError extends boolean = false>(options?: Options<PutUserAccountBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).put<PutUserAccountBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-accounts/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const deleteUserAccountByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteUserAccountByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteUserAccountByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-accounts/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

export const getUserAccountByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetUserAccountByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetUserAccountByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-accounts/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Updates the user account with information sent in the request body. Only the provided fields are updated.
 */
export const patchUserAccountByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PatchUserAccountByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchUserAccountByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-accounts/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const putUserAccountByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PutUserAccountByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutUserAccountByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-accounts/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Gets the users assigned to an account
 */
export const getAccountUserAccountsByExternalReferenceCodePage = <ThrowOnError extends boolean = false>(options: Options<GetAccountUserAccountsByExternalReferenceCodePageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAccountUserAccountsByExternalReferenceCodePageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/user-accounts',
        ...options
    });
};

/**
 * Creates a user and assigns them to the account
 */
export const postAccountUserAccountByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PostAccountUserAccountByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAccountUserAccountByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/user-accounts',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Gets the users assigned to an account
 */
export const getAccountUserAccountsPage = <ThrowOnError extends boolean = false>(options: Options<GetAccountUserAccountsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAccountUserAccountsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/{accountId}/user-accounts',
        ...options
    });
};

/**
 * Creates a user and assigns them to the account
 */
export const postAccountUserAccount = <ThrowOnError extends boolean = false>(options: Options<PostAccountUserAccountData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAccountUserAccountResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/{accountId}/user-accounts',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves information about the user who made the request.
 */
export const getMyUserAccount = <ThrowOnError extends boolean = false>(options?: Options<GetMyUserAccountData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetMyUserAccountResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/my-user-account',
        ...options
    });
};

/**
 * Retrieves the organization's members (users). Results can be paginated, filtered, searched, and sorted.
 */
export const getOrganizationByExternalReferenceCodeUserAccountsPage = <ThrowOnError extends boolean = false>(options: Options<GetOrganizationByExternalReferenceCodeUserAccountsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetOrganizationByExternalReferenceCodeUserAccountsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/by-external-reference-code/{externalReferenceCode}/user-accounts',
        ...options
    });
};

/**
 * Retrieves the organization's members (users). Results can be paginated, filtered, searched, and sorted.
 */
export const getOrganizationUserAccountsPage = <ThrowOnError extends boolean = false>(options: Options<GetOrganizationUserAccountsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetOrganizationUserAccountsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/{organizationId}/user-accounts',
        ...options
    });
};

/**
 * Gets the selected property of a user assigned to an account for a specific site
 */
export const getSiteAccountUserAccountSelected = <ThrowOnError extends boolean = false>(options: Options<GetSiteAccountUserAccountSelectedData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteAccountUserAccountSelectedResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/sites/{siteId}/accounts/{accountId}/user-accounts/{userAccountId}/selected',
        ...options
    });
};

/**
 * Updates the selected property of a user assigned to an account for a specific site
 */
export const patchSiteAccountUserAccountSelected = <ThrowOnError extends boolean = false>(options: Options<PatchSiteAccountUserAccountSelectedData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchSiteAccountUserAccountSelectedResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/sites/{siteId}/accounts/{accountId}/user-accounts/{userAccountId}/selected',
        ...options
    });
};

/**
 * Gets the selected property of a user assigned to an account for a specific site
 */
export const getSiteByFriendlyUrlPathAccountByExternalReferenceCodeAccountExternalReferenceCodeUserAccountByExternalReferenceCodeUserAccountExternalReferenceCodeSelected = <ThrowOnError extends boolean = false>(options: Options<GetSiteByFriendlyUrlPathAccountByExternalReferenceCodeAccountExternalReferenceCodeUserAccountByExternalReferenceCodeUserAccountExternalReferenceCodeSelectedData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteByFriendlyUrlPathAccountByExternalReferenceCodeAccountExternalReferenceCodeUserAccountByExternalReferenceCodeUserAccountExternalReferenceCodeSelectedResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/sites/by-friendly-url-path/{friendlyUrlPath}/accounts/by-external-reference-code/{accountExternalReferenceCode}/user-accounts/by-external-reference-code/{userAccountExternalReferenceCode}/selected',
        ...options
    });
};

/**
 * Updates the selected property of a user assigned to an account for a specific site
 */
export const patchSiteByFriendlyUrlPathAccountByExternalReferenceCodeAccountExternalReferenceCodeUserAccountByExternalReferenceCodeUserAccountExternalReferenceCodeSelected = <ThrowOnError extends boolean = false>(options: Options<PatchSiteByFriendlyUrlPathAccountByExternalReferenceCodeAccountExternalReferenceCodeUserAccountByExternalReferenceCodeUserAccountExternalReferenceCodeSelectedData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchSiteByFriendlyUrlPathAccountByExternalReferenceCodeAccountExternalReferenceCodeUserAccountByExternalReferenceCodeUserAccountExternalReferenceCodeSelectedResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/sites/by-friendly-url-path/{friendlyUrlPath}/accounts/by-external-reference-code/{accountExternalReferenceCode}/user-accounts/by-external-reference-code/{userAccountExternalReferenceCode}/selected',
        ...options
    });
};

/**
 * Retrieves the site members' user accounts. Results can be paginated, filtered, searched, and sorted.
 */
export const getSiteUserAccountsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteUserAccountsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteUserAccountsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/sites/{siteId}/user-accounts',
        ...options
    });
};

export const getUserAccountByEmailAddress = <ThrowOnError extends boolean = false>(options: Options<GetUserAccountByEmailAddressData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetUserAccountByEmailAddressResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-accounts/by-email-address/{emailAddress}',
        ...options
    });
};

export const getUserAccountsByStatusPage = <ThrowOnError extends boolean = false>(options: Options<GetUserAccountsByStatusPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetUserAccountsByStatusPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-accounts/by-status/{status}',
        ...options
    });
};

/**
 * Retrieves the user accounts. Results can be paginated, filtered, searched, and sorted.
 */
export const getUserAccountsPage = <ThrowOnError extends boolean = false>(options?: Options<GetUserAccountsPageData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetUserAccountsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-accounts',
        ...options
    });
};

/**
 * Creates a new user account
 */
export const postUserAccount = <ThrowOnError extends boolean = false>(options?: Options<PostUserAccountData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostUserAccountResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-accounts',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const deleteUserGroupByExternalReferenceCodeUsers = <ThrowOnError extends boolean = false>(options: Options<DeleteUserGroupByExternalReferenceCodeUsersData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteUserGroupByExternalReferenceCodeUsersResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-groups/by-external-reference-code/{externalReferenceCode}/user-group-users',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the list of users in a user group.
 */
export const getUserGroupByExternalReferenceCodeUsersPage = <ThrowOnError extends boolean = false>(options: Options<GetUserGroupByExternalReferenceCodeUsersPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetUserGroupByExternalReferenceCodeUsersPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-groups/by-external-reference-code/{externalReferenceCode}/user-group-users',
        ...options
    });
};

export const postUserGroupByExternalReferenceCodeUsers = <ThrowOnError extends boolean = false>(options: Options<PostUserGroupByExternalReferenceCodeUsersData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostUserGroupByExternalReferenceCodeUsersResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-groups/by-external-reference-code/{externalReferenceCode}/user-group-users',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteUserGroupUsers = <ThrowOnError extends boolean = false>(options: Options<DeleteUserGroupUsersData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteUserGroupUsersResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-groups/{userGroupId}/user-group-users',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the list of users in a user group.
 */
export const getUserGroupUsersPage = <ThrowOnError extends boolean = false>(options: Options<GetUserGroupUsersPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetUserGroupUsersPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-groups/{userGroupId}/user-group-users',
        ...options
    });
};

export const postUserGroupUsers = <ThrowOnError extends boolean = false>(options: Options<PostUserGroupUsersData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostUserGroupUsersResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-groups/{userGroupId}/user-group-users',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postAccountUserAccountBatch = <ThrowOnError extends boolean = false>(options: Options<PostAccountUserAccountBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAccountUserAccountBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/{accountId}/user-accounts/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postAccountUserAccountsPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostAccountUserAccountsPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAccountUserAccountsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/{accountId}/user-accounts/export-batch',
        ...options
    });
};

export const postOrganizationUserAccountsPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostOrganizationUserAccountsPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostOrganizationUserAccountsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/{organizationId}/user-accounts/export-batch',
        ...options
    });
};

export const postSiteUserAccountsPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostSiteUserAccountsPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteUserAccountsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/sites/{siteId}/user-accounts/export-batch',
        ...options
    });
};

export const postUserAccountImage = <ThrowOnError extends boolean = false>(options: Options<PostUserAccountImageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostUserAccountImageResponses, unknown, ThrowOnError>({
        ...formDataBodySerializer,
        url: '/o/headless-admin-user/v1.0/user-accounts/{userAccountId}/image',
        ...options,
        headers: {
            'Content-Type': null,
            ...options.headers
        }
    });
};

export const postUserAccountsPageExportBatch = <ThrowOnError extends boolean = false>(options?: Options<PostUserAccountsPageExportBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostUserAccountsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-accounts/export-batch',
        ...options
    });
};

export const deleteUserGroup = <ThrowOnError extends boolean = false>(options: Options<DeleteUserGroupData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteUserGroupResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-groups/{userGroupId}',
        ...options
    });
};

export const getUserGroup = <ThrowOnError extends boolean = false>(options: Options<GetUserGroupData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetUserGroupResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-groups/{userGroupId}',
        ...options
    });
};

export const patchUserGroup = <ThrowOnError extends boolean = false>(options: Options<PatchUserGroupData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchUserGroupResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-groups/{userGroupId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const putUserGroup = <ThrowOnError extends boolean = false>(options: Options<PutUserGroupData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutUserGroupResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-groups/{userGroupId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteUserGroupBatch = <ThrowOnError extends boolean = false>(options?: Options<DeleteUserGroupBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteUserGroupBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-groups/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postUserGroupBatch = <ThrowOnError extends boolean = false>(options?: Options<PostUserGroupBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostUserGroupBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-groups/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const putUserGroupBatch = <ThrowOnError extends boolean = false>(options?: Options<PutUserGroupBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).put<PutUserGroupBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-groups/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const deleteUserGroupByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteUserGroupByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteUserGroupByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-groups/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

export const getUserGroupByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetUserGroupByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetUserGroupByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-groups/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

export const patchUserGroupByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PatchUserGroupByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchUserGroupByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-groups/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const putUserGroupByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PutUserGroupByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutUserGroupByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-groups/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getUserGroupsPage = <ThrowOnError extends boolean = false>(options?: Options<GetUserGroupsPageData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetUserGroupsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-groups',
        ...options
    });
};

export const postUserGroup = <ThrowOnError extends boolean = false>(options?: Options<PostUserGroupData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostUserGroupResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-groups',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Retrieves the user's user groups.
 */
export const getUserUserGroups = <ThrowOnError extends boolean = false>(options: Options<GetUserUserGroupsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetUserUserGroupsResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-accounts/{userAccountId}/user-groups',
        ...options
    });
};

export const postUserGroupsPageExportBatch = <ThrowOnError extends boolean = false>(options?: Options<PostUserGroupsPageExportBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostUserGroupsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-groups/export-batch',
        ...options
    });
};

/**
 * Deletes the web URL.
 */
export const deleteWebUrl = <ThrowOnError extends boolean = false>(options: Options<DeleteWebUrlData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteWebUrlResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/web-urls/{webUrlId}',
        ...options
    });
};

/**
 * Retrieves the web URL.
 */
export const getWebUrl = <ThrowOnError extends boolean = false>(options: Options<GetWebUrlData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetWebUrlResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/web-urls/{webUrlId}',
        ...options
    });
};

/**
 * Updates the web URL.
 */
export const patchWebUrl = <ThrowOnError extends boolean = false>(options: Options<PatchWebUrlData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchWebUrlResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/web-urls/{webUrlId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteWebUrlBatch = <ThrowOnError extends boolean = false>(options?: Options<DeleteWebUrlBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteWebUrlBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/web-urls/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Deletes the web URL by external reference code.
 */
export const deleteWebUrlByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteWebUrlByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteWebUrlByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/web-urls/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves the web URL by external reference code.
 */
export const getWebUrlByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetWebUrlByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetWebUrlByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/web-urls/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Updates the web URL by external reference code.
 */
export const patchWebUrlByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PatchWebUrlByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchWebUrlByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/web-urls/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the account's web URLs.
 */
export const getAccountByExternalReferenceCodeWebUrlsPage = <ThrowOnError extends boolean = false>(options: Options<GetAccountByExternalReferenceCodeWebUrlsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAccountByExternalReferenceCodeWebUrlsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/web-urls',
        ...options
    });
};

/**
 * Retrieves the account's web URLs.
 */
export const getAccountWebUrlsPage = <ThrowOnError extends boolean = false>(options: Options<GetAccountWebUrlsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAccountWebUrlsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/{accountId}/web-urls',
        ...options
    });
};

/**
 * Retrieves the organization's web URLs.
 */
export const getOrganizationByExternalReferenceCodeWebUrlsPage = <ThrowOnError extends boolean = false>(options: Options<GetOrganizationByExternalReferenceCodeWebUrlsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetOrganizationByExternalReferenceCodeWebUrlsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/by-external-reference-code/{externalReferenceCode}/web-urls',
        ...options
    });
};

/**
 * Retrieves the organization's URLs.
 */
export const getOrganizationWebUrlsPage = <ThrowOnError extends boolean = false>(options: Options<GetOrganizationWebUrlsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetOrganizationWebUrlsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/{organizationId}/web-urls',
        ...options
    });
};

/**
 * Retrieves the user's web URLs.
 */
export const getUserAccountByExternalReferenceCodeWebUrlsPage = <ThrowOnError extends boolean = false>(options: Options<GetUserAccountByExternalReferenceCodeWebUrlsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetUserAccountByExternalReferenceCodeWebUrlsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-accounts/by-external-reference-code/{externalReferenceCode}/web-urls',
        ...options
    });
};

/**
 * Retrieves the user's URLs.
 */
export const getUserAccountWebUrlsPage = <ThrowOnError extends boolean = false>(options: Options<GetUserAccountWebUrlsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetUserAccountWebUrlsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-accounts/{userAccountId}/web-urls',
        ...options
    });
};

export const postAccountWebUrlsPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostAccountWebUrlsPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAccountWebUrlsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/{accountId}/web-urls/export-batch',
        ...options
    });
};

export const postOrganizationWebUrlsPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostOrganizationWebUrlsPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostOrganizationWebUrlsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/organizations/{organizationId}/web-urls/export-batch',
        ...options
    });
};

export const postUserAccountWebUrlsPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostUserAccountWebUrlsPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostUserAccountWebUrlsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-accounts/{userAccountId}/web-urls/export-batch',
        ...options
    });
};

export const getUserAccountUserToUserAddInfoPage = <ThrowOnError extends boolean = false>(options: Options<GetUserAccountUserToUserAddInfoPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetUserAccountUserToUserAddInfoPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-accounts/{userAccountId}/userToUserAddInfo',
        ...options
    });
};

export const deleteUserAccountUserToUserAddInfo = <ThrowOnError extends boolean = false>(options: Options<DeleteUserAccountUserToUserAddInfoData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteUserAccountUserToUserAddInfoResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-accounts/{userAccountId}/userToUserAddInfo/{userAdditionalInfoId}',
        ...options
    });
};

export const putUserAccountUserToUserAddInfo = <ThrowOnError extends boolean = false>(options: Options<PutUserAccountUserToUserAddInfoData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutUserAccountUserToUserAddInfoResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/user-accounts/{userAccountId}/userToUserAddInfo/{userAdditionalInfoId}',
        ...options
    });
};

export const getAccountAccountEntryToUserAdditionalInfoPage = <ThrowOnError extends boolean = false>(options: Options<GetAccountAccountEntryToUserAdditionalInfoPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAccountAccountEntryToUserAdditionalInfoPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/{accountId}/accountEntryToUserAdditionalInfo',
        ...options
    });
};

export const deleteAccountAccountEntryToUserAdditionalInfo = <ThrowOnError extends boolean = false>(options: Options<DeleteAccountAccountEntryToUserAdditionalInfoData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteAccountAccountEntryToUserAdditionalInfoResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/{accountId}/accountEntryToUserAdditionalInfo/{userAdditionalInfoId}',
        ...options
    });
};

export const putAccountAccountEntryToUserAdditionalInfo = <ThrowOnError extends boolean = false>(options: Options<PutAccountAccountEntryToUserAdditionalInfoData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutAccountAccountEntryToUserAdditionalInfoResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/{accountId}/accountEntryToUserAdditionalInfo/{userAdditionalInfoId}',
        ...options
    });
};

export const getAccountAccountToOAuth2DxpAuthorizationPage = <ThrowOnError extends boolean = false>(options: Options<GetAccountAccountToOAuth2DxpAuthorizationPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAccountAccountToOAuth2DxpAuthorizationPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/{accountId}/accountToOAuth2DxpAuthorization',
        ...options
    });
};

export const deleteAccountAccountToOAuth2DxpAuthorization = <ThrowOnError extends boolean = false>(options: Options<DeleteAccountAccountToOAuth2DxpAuthorizationData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteAccountAccountToOAuth2DxpAuthorizationResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/{accountId}/accountToOAuth2DxpAuthorization/{oAuth2DxpAuthorizationId}',
        ...options
    });
};

export const putAccountAccountToOAuth2DxpAuthorization = <ThrowOnError extends boolean = false>(options: Options<PutAccountAccountToOAuth2DxpAuthorizationData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutAccountAccountToOAuth2DxpAuthorizationResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/{accountId}/accountToOAuth2DxpAuthorization/{oAuth2DxpAuthorizationId}',
        ...options
    });
};

export const getAccountAccountEntryToPublisherAssetsPage = <ThrowOnError extends boolean = false>(options: Options<GetAccountAccountEntryToPublisherAssetsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAccountAccountEntryToPublisherAssetsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/{accountId}/accountEntryToPublisherAssets',
        ...options
    });
};

export const deleteAccountAccountEntryToPublisherAssets = <ThrowOnError extends boolean = false>(options: Options<DeleteAccountAccountEntryToPublisherAssetsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteAccountAccountEntryToPublisherAssetsResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/{accountId}/accountEntryToPublisherAssets/{publisherAssetsId}',
        ...options
    });
};

export const putAccountAccountEntryToPublisherAssets = <ThrowOnError extends boolean = false>(options: Options<PutAccountAccountEntryToPublisherAssetsData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutAccountAccountEntryToPublisherAssetsResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-user/v1.0/accounts/{accountId}/accountEntryToPublisherAssets/{publisherAssetsId}',
        ...options
    });
};