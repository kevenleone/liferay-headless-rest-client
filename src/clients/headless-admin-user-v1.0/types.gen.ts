// This file is auto-generated by @hey-api/openapi-ts

/**
 * A list of the user's account.
 */
export type AccountBrief = {
    /**
     * The account's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The account's ID.
     */
    readonly id?: number;
    /**
     * The account's name.
     */
    name?: string;
    /**
     * A list of the user's roles.
     */
    readonly roleBriefs?: Array<RoleBrief>;
    /**
     * The account's type.
     */
    type?: string;
    readonly 'x-class-name'?: string;
};

export type AccountGroup = {
    /**
     * The list of accounts associated with this account group.
     */
    accountBriefs?: Array<AccountBrief>;
    /**
     * Block of actions allowed by the user making the request.
     */
    readonly actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    creator?: Creator;
    customFields?: Array<CustomField>;
    /**
     * The account group's creation date.
     */
    readonly dateCreated?: string;
    /**
     * The account group's most recent modification date.
     */
    readonly dateModified?: string;
    description?: string;
    externalReferenceCode?: string;
    readonly id?: number;
    name?: string;
    permissions?: Array<Permission>;
    readonly 'x-class-name'?: string;
};

/**
 * The user who created the user group.
 */
export type Creator = {
    /**
     * The user's additional name, which can be used as a middle name.
     */
    readonly additionalName?: string;
    /**
     * The type of the content.
     */
    readonly contentType?: string;
    /**
     * The user's surname (last name).
     */
    readonly familyName?: string;
    /**
     * The user's first name.
     */
    readonly givenName?: string;
    /**
     * The user's ID.
     */
    readonly id?: number;
    /**
     * A relative URL to the user's profile image.
     */
    readonly image?: string;
    /**
     * The user's full name.
     */
    readonly name?: string;
    /**
     * A relative URL to the user's profile.
     */
    readonly profileURL?: string;
    readonly 'x-class-name'?: string;
};

export type CustomField = {
    readonly 'x-class-name'?: string;
    customValue?: CustomValue;
    /**
     * The field type (e.g., image, text, etc.).
     */
    readonly dataType?: string;
    /**
     * The field's internal name. This is valid for comparisons and unique in the structured content.
     */
    name?: string;
};

/**
 * The field's value.
 */
export type CustomValue = {
    readonly 'x-class-name'?: string;
    /**
     * The field's content value for simple types.
     */
    data?: {
        [key: string]: unknown;
    };
    /**
     * The localized field's content values for simple types.
     */
    data_i18n?: {
        [key: string]: string;
    };
    geo?: Geo;
};

export type Facet = {
    facetCriteria?: string;
    facetValues?: Array<FacetValue>;
};

export type FacetValue = {
    numberOfOccurrences?: number;
    term?: string;
};

/**
 * A point determined by latitude and longitude.
 */
export type Geo = {
    readonly 'x-class-name'?: string;
    /**
     * The latitude of a point in space.
     */
    latitude?: number;
    /**
     * The longitude of a point in space.
     */
    longitude?: number;
};

export type PageAccountGroup = {
    totalCount?: number;
    lastPage?: number;
    items?: Array<AccountGroup>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type Permission = {
    actionIds?: Array<string>;
    roleExternalReferenceCode?: string;
    roleName?: string;
    roleType?: string;
};

/**
 * The list of roles associated with this user group.
 */
export type RoleBrief = {
    /**
     * The role's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The role's ID.
     */
    readonly id?: number;
    /**
     * The role's key.
     */
    key?: string;
    /**
     * The role's name.
     */
    name?: string;
    readonly name_i18n?: {
        [key: string]: string;
    };
    /**
     * The role's type.
     */
    roleType?: number;
    readonly 'x-class-name'?: string;
};

export type Account = {
    accountContactInformation?: AccountContactInformation;
    /**
     * A list of the account's account groups.
     */
    readonly accountGroupBriefs?: Array<AccountGroupBrief>;
    /**
     * A list of the account's roles.
     */
    readonly accountRoles?: Array<AccountRole>;
    /**
     * The users linked to the account
     */
    accountUserAccounts?: Array<UserAccount>;
    /**
     * Block of actions allowed by the user making the request.
     */
    readonly actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    creator?: Creator;
    customFields?: Array<CustomField>;
    /**
     * The account's creation date.
     */
    readonly dateCreated?: string;
    /**
     * The account's most recent modification date.
     */
    readonly dateModified?: string;
    defaultBillingAddressExternalReferenceCode?: string;
    defaultBillingAddressId?: number;
    defaultShippingAddressExternalReferenceCode?: string;
    defaultShippingAddressId?: number;
    description?: string;
    /**
     * The account's email domains. Users assigned to this account generally will have email addresses under one of these domains.
     */
    domains?: Array<string>;
    /**
     * The optional external key of this account.
     */
    externalReferenceCode?: string;
    readonly id?: number;
    /**
     * A list of keywords describing the account.
     */
    keywords?: Array<string>;
    logoBase64?: string;
    logoExternalReferenceCode?: string;
    logoId?: number;
    logoURL?: string;
    name?: string;
    /**
     * The number of this account's associated users.
     */
    readonly numberOfUsers?: number;
    organizationExternalReferenceCodes?: Array<string>;
    organizationIds?: Array<number>;
    parentAccountExternalReferenceCode?: string;
    parentAccountId?: number;
    permissions?: Array<Permission>;
    /**
     * The addresses linked to the account
     */
    postalAddresses?: Array<PostalAddress>;
    status?: number;
    taxId?: string;
    /**
     * The categories associated with this account.
     */
    readonly taxonomyCategoryBriefs?: Array<TaxonomyCategoryBrief>;
    readonly 'x-class-name'?: string;
    type?: 'business' | 'guest' | 'person' | 'supplier';
    /**
     * Information about the object relationship accountToOAuth2DxpAuthorization can be embedded with "nestedFields".
     */
    accountToOAuth2DxpAuthorization?: Array<OAuth2DxpAuthorization>;
    /**
     * Information about the object relationship accountEntryToUserAdditionalInfo can be embedded with "nestedFields".
     */
    accountEntryToUserAdditionalInfo?: Array<UserAdditionalInfo>;
    company?: string;
    /**
     * Information about the object relationship accountEntryToPublisherAssets can be embedded with "nestedFields".
     */
    accountEntryToPublisherAssets?: Array<PublisherAssets>;
};

/**
 * The account's contact information.
 */
export type AccountContactInformation = {
    /**
     * A list of the account's email addresses, with one optionally marked as primary.
     */
    emailAddresses?: Array<EmailAddress>;
    /**
     * The account's Facebook account.
     */
    facebook?: string;
    /**
     * The ID of the `contactInformation`.
     */
    readonly id?: number;
    /**
     * The account's Jabber handle.
     */
    jabber?: string;
    /**
     * A list of account's postal addresses, with one optionally marked as primary.
     */
    postalAddresses?: Array<PostalAddress>;
    /**
     * The account's Skype handle.
     */
    skype?: string;
    /**
     * The account's SMS number.
     */
    sms?: string;
    /**
     * A list of the account's phone numbers, with one optionally marked as primary.
     */
    telephones?: Array<Phone>;
    /**
     * The account's Twitter handle.
     */
    twitter?: string;
    /**
     * A list of the account's web URLs, with one optionally marked as primary.
     */
    webUrls?: Array<WebUrl>;
    readonly 'x-class-name'?: string;
};

/**
 * A list of the account's account groups.
 */
export type AccountGroupBrief = {
    externalReferenceCode?: string;
    readonly id?: number;
    name?: string;
    readonly 'x-class-name'?: string;
};

/**
 * A list of the account's roles.
 */
export type AccountRole = {
    /**
     * The primary key of the account that owns this role.
     */
    readonly accountId?: number;
    description?: string;
    displayName?: string;
    /**
     * The optional external key of this account role.
     */
    externalReferenceCode?: string;
    readonly id?: number;
    name?: string;
    /**
     * The primary key of the underlying system role.
     */
    readonly roleId?: number;
    /**
     * The role's type.
     */
    readonly roleType?: number;
    readonly 'x-class-name'?: string;
};

/**
 * The user's asset libraries.
 */
export type AssetLibraryBrief = {
    /**
     * The asset library's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The asset library's group ID.
     */
    readonly groupId?: number;
    /**
     * The asset library's name.
     */
    readonly name?: string;
    readonly 'x-class-name'?: string;
};

/**
 * A list of the user's email addresses, with one optionally marked as primary.
 */
export type EmailAddress = {
    /**
     * The email address.
     */
    emailAddress?: string;
    /**
     * The email address's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The email address's ID.
     */
    readonly id?: number;
    /**
     * A flag that indicates whether this is the main email address of the user/organization.
     */
    primary?: boolean;
    /**
     * The email address's type.
     */
    type?: string;
    readonly 'x-class-name'?: string;
};

/**
 * A list of the user's organizations.
 */
export type OrganizationBrief = {
    /**
     * The organization's external reference code.
     */
    readonly externalReferenceCode?: string;
    /**
     * The organization's ID.
     */
    readonly id?: number;
    /**
     * The organization's name.
     */
    readonly name?: string;
    /**
     * A list of the user's roles.
     */
    readonly roleBriefs?: Array<RoleBrief>;
    readonly 'x-class-name'?: string;
};

/**
 * A list of the user's phone numbers, with one optionally marked as primary.
 */
export type Phone = {
    /**
     * The phone number's extension.
     */
    extension?: string;
    /**
     * The phone number's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The phone number's ID.
     */
    id?: number;
    /**
     * The phone number without its extension.
     */
    phoneNumber?: string;
    /**
     * The phone number's type.
     */
    phoneType?: string;
    /**
     * A flag that identifies whether this is the main phone number of the user/organization.
     */
    primary?: boolean;
    readonly 'x-class-name'?: string;
};

/**
 * A list of user's postal addresses, with one optionally marked as primary.
 */
export type PostalAddress = {
    /**
     * The address's country (e.g., USA).
     */
    addressCountry?: string;
    addressCountry_i18n?: {
        [key: string]: string;
    };
    /**
     * The address's locality (e.g., city).
     */
    addressLocality?: string;
    /**
     * The address's region (e.g., state).
     */
    addressRegion?: string;
    /**
     * The address's subtype.
     */
    addressSubtype?: string;
    /**
     * The address's type.
     */
    addressType?: string;
    /**
     * The optional external key of this address.
     */
    externalReferenceCode?: string;
    /**
     * The address's ID.
     */
    readonly id?: number;
    /**
     * The address's name.
     */
    name?: string;
    /**
     * The phone number.
     */
    phoneNumber?: string;
    /**
     * The address's postal code (e.g., zip code).
     */
    postalCode?: string;
    /**
     * A flag that identifies whether this is the main address of the user/organization.
     */
    primary?: boolean;
    /**
     * The street address's first line (e.g., 1600 Amphitheatre Pkwy.).
     */
    streetAddressLine1?: string;
    /**
     * The street address's second line.
     */
    streetAddressLine2?: string;
    /**
     * The street address's third line.
     */
    streetAddressLine3?: string;
    readonly 'x-class-name'?: string;
};

/**
 * A list of the user's sites.
 */
export type SiteBrief = {
    /**
     * The site's descriptive name.
     */
    readonly descriptiveName?: string;
    readonly descriptiveName_i18n?: {
        [key: string]: string;
    };
    /**
     * The site's external reference code.
     */
    readonly externalReferenceCode?: string;
    /**
     * The site's ID.
     */
    readonly id?: number;
    /**
     * The site's name.
     */
    readonly name?: string;
    readonly name_i18n?: {
        [key: string]: string;
    };
    /**
     * A list of the user's roles.
     */
    readonly roleBriefs?: Array<RoleBrief>;
    readonly 'x-class-name'?: string;
};

/**
 * The categories associated with this user.
 */
export type TaxonomyCategoryBrief = {
    /**
     * Optional field with the embedded taxonomy category, can be embedded with nestedFields
     */
    readonly embeddedTaxonomyCategory?: {
        [key: string]: unknown;
    };
    /**
     * The category's ID.
     */
    readonly taxonomyCategoryId?: number;
    /**
     * The category's name.
     */
    readonly taxonomyCategoryName?: string;
    /**
     * The localized category's names.
     */
    readonly taxonomyCategoryName_i18n?: {
        [key: string]: string;
    };
    taxonomyCategoryReference?: TaxonomyCategoryReference;
    readonly 'x-class-name'?: string;
};

/**
 * A unique reference to a taxonomy category.
 */
export type TaxonomyCategoryReference = {
    /**
     * The taxonomy category's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The key of the site or asset library where the taxonomy category is located.
     */
    siteKey?: string;
    readonly 'x-class-name'?: string;
};

export type UserAccount = {
    /**
     * A list of the user's account.
     */
    readonly accountBriefs?: Array<AccountBrief>;
    readonly actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    /**
     * The user's additional name (e.g., middle name).
     */
    additionalName?: string;
    /**
     * The user's alias or screen name.
     */
    alternateName?: string;
    /**
     * The user's asset libraries.
     */
    readonly assetLibraryBriefs?: Array<AssetLibraryBrief>;
    /**
     * The user's date of birth.
     */
    birthDate?: string;
    creator?: Creator;
    currentPassword?: string;
    customFields?: Array<CustomField>;
    /**
     * A relative URL to the user's dashboard.
     */
    readonly dashboardURL?: string;
    /**
     * The creation date of the user's account.
     */
    readonly dateCreated?: string;
    /**
     * The last time any field of the user's account was changed.
     */
    readonly dateModified?: string;
    /**
     * The user's main email address.
     */
    emailAddress?: string;
    /**
     * The optional external key of this user account.
     */
    externalReferenceCode?: string;
    /**
     * The user's surname (last name).
     */
    familyName?: string;
    /**
     * The user's first name.
     */
    givenName?: string;
    /**
     * A flag that indicates whether the user has been signed in.
     */
    readonly hasLoginDate?: boolean;
    /**
     * The user's title (e.g., Dr., Mr., Mrs, Ms., etc.).
     */
    honorificPrefix?: string;
    /**
     * The user's suffix (e.g., II, Jr., PhD, etc.).
     */
    honorificSuffix?: string;
    /**
     * The user's ID.
     */
    id?: number;
    /**
     * A relative URL to the user's profile image.
     */
    readonly image?: string;
    /**
     * The user's profile image external reference code.
     */
    imageExternalReferenceCode?: string;
    /**
     * The user's profile image id.
     */
    imageId?: number;
    /**
     * The user's job title.
     */
    jobTitle?: string;
    /**
     * A list of keywords describing the user.
     */
    readonly keywords?: Array<string>;
    /**
     * The user's preferred language.
     */
    readonly languageDisplayName?: string;
    /**
     * The user's preferred language id.
     */
    languageId?: string;
    /**
     * The last time the user logged in.
     */
    readonly lastLoginDate?: string;
    /**
     * The user's full name.
     */
    readonly name?: string;
    /**
     * A list of the user's organizations.
     */
    readonly organizationBriefs?: Array<OrganizationBrief>;
    password?: string;
    permissions?: Array<Permission>;
    /**
     * A relative URL to the user's profile.
     */
    readonly profileURL?: string;
    /**
     * A list of the user's roles.
     */
    readonly roleBriefs?: Array<RoleBrief>;
    /**
     * A list of the user's sites.
     */
    readonly siteBriefs?: Array<SiteBrief>;
    /**
     * The categories associated with this user.
     */
    readonly taxonomyCategoryBriefs?: Array<TaxonomyCategoryBrief>;
    userAccountContactInformation?: UserAccountContactInformation;
    /**
     * A list of the user's userGroups.
     */
    readonly userGroupBriefs?: Array<UserGroupBrief>;
    readonly 'x-class-name'?: string;
    /**
     * The user's gender.
     */
    gender?: 'Male' | 'Female';
    /**
     * The user's status.
     */
    status?: 'Active' | 'Inactive';
    newsSubscription?: boolean;
    /**
     * Information about the object relationship userToUserAddInfo can be embedded with "nestedFields".
     */
    userToUserAddInfo?: Array<CUserAdditionalInfo>;
};

/**
 * The user's contact information.
 */
export type UserAccountContactInformation = {
    /**
     * A list of the user's email addresses, with one optionally marked as primary.
     */
    emailAddresses?: Array<EmailAddress>;
    /**
     * The user's Facebook account.
     */
    facebook?: string;
    /**
     * The ID of the `contactInformation`.
     */
    readonly id?: number;
    /**
     * The user's Jabber handle.
     */
    jabber?: string;
    /**
     * A list of user's postal addresses, with one optionally marked as primary.
     */
    postalAddresses?: Array<PostalAddress>;
    /**
     * The user's Skype handle.
     */
    skype?: string;
    /**
     * The user's SMS number.
     */
    sms?: string;
    /**
     * A list of the user's phone numbers, with one optionally marked as primary.
     */
    telephones?: Array<Phone>;
    /**
     * The user's Twitter handle.
     */
    twitter?: string;
    /**
     * A list of the user's web URLs, with one optionally marked as primary.
     */
    webUrls?: Array<WebUrl>;
    readonly 'x-class-name'?: string;
};

/**
 * A list of the user's userGroups.
 */
export type UserGroupBrief = {
    description?: string;
    /**
     * The user group's external reference code.
     */
    readonly externalReferenceCode?: string;
    readonly id?: number;
    name?: string;
    readonly 'x-class-name'?: string;
};

export type WebUrl = {
    /**
     * The optional external key of this URL.
     */
    externalReferenceCode?: string;
    /**
     * The URL's ID.
     */
    id?: number;
    /**
     * A flag that identifies whether this is the main web address of the user/organization.
     */
    primary?: boolean;
    /**
     * The absolute URL.
     */
    url?: string;
    /**
     * The URL's type.
     */
    urlType?: string;
    readonly 'x-class-name'?: string;
};

export type PageAccount = {
    totalCount?: number;
    lastPage?: number;
    items?: Array<Account>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageAccountRole = {
    totalCount?: number;
    lastPage?: number;
    items?: Array<AccountRole>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageEmailAddress = {
    totalCount?: number;
    lastPage?: number;
    items?: Array<EmailAddress>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

/**
 * A list of hours when the organization is open. This follows the [`OpeningHoursSpecification`](https://www.schema.org/OpeningHoursSpecification) specification.
 */
export type HoursAvailable = {
    /**
     * The organization's closing time (in `HH:MM` format).
     */
    closes?: string;
    /**
     * The day of the week.
     */
    dayOfWeek?: string;
    /**
     * The organization's opening time (in `HH:MM` format).
     */
    opens?: string;
    readonly 'x-class-name'?: string;
};

/**
 * The organization's postal information (country and region).
 */
export type Location = {
    /**
     * The organization's country. This follows the [`addressCountry`](https://schema.org/addressCountry) specification.
     */
    addressCountry?: string;
    /**
     * The organization's country isocode.
     */
    readonly addressCountryCode?: string;
    addressCountry_i18n?: {
        [key: string]: string;
    };
    /**
     * The organization's region. This follows the [`addressRegion`](https://schema.org/addressRegion) specification.
     */
    addressRegion?: string;
    /**
     * The organization's region code.
     */
    readonly addressRegionCode?: string;
    /**
     * The location's ID.
     */
    readonly id?: number;
    readonly 'x-class-name'?: string;
};

export type Organization = {
    /**
     * The list of accounts associated with this organization.
     */
    readonly accountBriefs?: Array<AccountBrief>;
    readonly actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    childOrganizations?: Array<Organization>;
    /**
     * The text of a comment associated with the organization.
     */
    comment?: string;
    creator?: Creator;
    customFields?: Array<CustomField>;
    /**
     * The organization's creation date.
     */
    readonly dateCreated?: string;
    /**
     * The most recent time any of the organization's fields changed.
     */
    readonly dateModified?: string;
    /**
     * The optional external key of this organization.
     */
    externalReferenceCode?: string;
    /**
     * The organization's ID.
     */
    id?: string;
    /**
     * A relative URL to the organization's image.
     */
    readonly image?: string;
    imageBase64?: string;
    /**
     * The organization's image external reference code.
     */
    imageExternalReferenceCode?: string;
    /**
     * The organization's image id.
     */
    imageId?: number;
    /**
     * A list of keywords describing the organization.
     */
    keywords?: Array<string>;
    location?: Location;
    /**
     * The organization's name.
     */
    name?: string;
    /**
     * The number of this organization's associated accounts.
     */
    readonly numberOfAccounts?: number;
    /**
     * The number of this organization's child organizations.
     */
    readonly numberOfOrganizations?: number;
    /**
     * The number of this organization's associated users.
     */
    readonly numberOfUsers?: number;
    organizationAccounts?: Array<Account>;
    organizationContactInformation?: OrganizationContactInformation;
    parentOrganization?: Organization;
    permissions?: Array<Permission>;
    /**
     * The list of roles associated with this organization.
     */
    readonly roleBriefs?: Array<RoleBrief>;
    /**
     * A list of services the organization provides. This follows the [`Service`](https://www.schema.org/Service) specification.
     */
    services?: Array<Service>;
    /**
     * The categories associated with this organization.
     */
    readonly taxonomyCategoryBriefs?: Array<TaxonomyCategoryBrief>;
    /**
     * The tree path of the organization.
     */
    treePath?: string;
    /**
     * The list of users associated with this organization.
     */
    readonly userAccountBriefs?: Array<UserAccountBrief>;
    userAccounts?: Array<UserAccount>;
    readonly 'x-class-name'?: string;
};

/**
 * The organization's contact information, which includes email addresses, postal addresses, phone numbers, and web URLs. This is modeled internally as a `Contact`.
 */
export type OrganizationContactInformation = {
    /**
     * The organization's email addresses, with one optionally marked as primary.
     */
    emailAddresses?: Array<EmailAddress>;
    /**
     * The organization's postal addresses, with one optionally marked as primary.
     */
    postalAddresses?: Array<PostalAddress>;
    /**
     * The organization's phones numbers, with one optionally marked as primary.
     */
    telephones?: Array<Phone>;
    /**
     * The organization's web URLs, with one optionally marked as primary.
     */
    webUrls?: Array<WebUrl>;
    readonly 'x-class-name'?: string;
};

/**
 * A list of services the organization provides. This follows the [`Service`](https://www.schema.org/Service) specification.
 */
export type Service = {
    /**
     * A list of hours when the organization is open. This follows the [`OpeningHoursSpecification`](https://www.schema.org/OpeningHoursSpecification) specification.
     */
    hoursAvailable?: Array<HoursAvailable>;
    /**
     * The type of service the organization provides.
     */
    serviceType?: string;
    readonly 'x-class-name'?: string;
};

/**
 * The list of users associated with this user group.
 */
export type UserAccountBrief = {
    /**
     * The user's alias or screen name.
     */
    alternateName?: string;
    /**
     * The user's main email address.
     */
    emailAddress?: string;
    /**
     * The optional external key of this user account.
     */
    externalReferenceCode?: string;
    /**
     * The user's ID.
     */
    id?: number;
    /**
     * The user's full name.
     */
    readonly name?: string;
    readonly 'x-class-name'?: string;
};

export type PageOrganization = {
    totalCount?: number;
    lastPage?: number;
    items?: Array<Organization>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageUserAccount = {
    totalCount?: number;
    lastPage?: number;
    items?: Array<UserAccount>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PagePhone = {
    totalCount?: number;
    lastPage?: number;
    items?: Array<Phone>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PagePostalAddress = {
    totalCount?: number;
    lastPage?: number;
    items?: Array<PostalAddress>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type Role = {
    /**
     * Block of actions that the user can perform with the roles.
     */
    readonly actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    /**
     * A list of languages for which the role has a translation.
     */
    readonly availableLanguages?: Array<string>;
    creator?: Creator;
    /**
     * The role's creation date.
     */
    readonly dateCreated?: string;
    /**
     * The last time any of the role's fields were changed.
     */
    readonly dateModified?: string;
    /**
     * The role's description.
     */
    description?: string;
    description_i18n?: {
        [key: string]: string;
    };
    /**
     * The optional external key of this role.
     */
    externalReferenceCode?: string;
    /**
     * The role's ID.
     */
    readonly id?: number;
    /**
     * The role's name.
     */
    name?: string;
    name_i18n?: {
        [key: string]: string;
    };
    permissions?: Array<Permission>;
    rolePermissions?: Array<RolePermission>;
    /**
     * The role's type.
     */
    roleType?: string;
    readonly 'x-class-name'?: string;
};

export type RolePermission = {
    actionIds?: Array<string>;
    id?: number;
    label?: string;
    primaryKey?: string;
    resourceName?: string;
    roleId?: number;
    scope?: number;
    readonly 'x-class-name'?: string;
};

export type PageRole = {
    totalCount?: number;
    lastPage?: number;
    items?: Array<Role>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageSegment = {
    totalCount?: number;
    lastPage?: number;
    items?: Array<Segment>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

/**
 * Represents a set of users that meet certain criteria. Segments may be used to create customized experiences for users.
 */
export type Segment = {
    /**
     * A flag that indicates whether the segment is active.
     */
    readonly active?: boolean;
    /**
     * The segment's criteria.
     */
    readonly criteria: string;
    /**
     * The segment's criteria in JSON.
     */
    readonly criteriaValue?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    /**
     * The segment's creation date.
     */
    readonly dateCreated?: string;
    /**
     * The segment's most recent modification date.
     */
    readonly dateModified?: string;
    /**
     * The segment's ID.
     */
    readonly id?: number;
    /**
     * The segment's name.
     */
    readonly name: string;
    /**
     * The ID of the segment's site.
     */
    readonly siteId?: number;
    /**
     * The segment's source.
     */
    readonly source?: string;
    readonly 'x-class-name'?: string;
};

export type PageSegmentUser = {
    totalCount?: number;
    lastPage?: number;
    items?: Array<SegmentUser>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type SegmentUser = {
    /**
     * The user's email address.
     */
    readonly emailAddress?: string;
    /**
     * The user's ID.
     */
    readonly id?: number;
    /**
     * The user's full name.
     */
    readonly name?: string;
    readonly 'x-class-name'?: string;
};

export type PageSharedAsset = {
    totalCount?: number;
    lastPage?: number;
    items?: Array<SharedAsset>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type SharedAsset = {
    /**
     * The shared asset actions.
     */
    readonly actionIds?: Array<string>;
    /**
     * Block of actions allowed by the user making the request.
     */
    readonly actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    /**
     * The shared asset type.
     */
    readonly assetType?: string;
    readonly className?: string;
    readonly classPK?: number;
    creator?: Creator;
    /**
     * The shared asset creation date.
     */
    readonly dateCreated?: string;
    /**
     * The shared asset modified date.
     */
    readonly dateModified?: string;
    /**
     * The shared asset external reference code.
     */
    readonly externalReferenceCode?: string;
    /**
     * The shared asset file type icon.
     */
    readonly fileTypeIcon?: string;
    /**
     * The shared asset file type icon color.
     */
    readonly fileTypeIconColor?: string;
    /**
     * The shared asset ID.
     */
    readonly id?: number;
    /**
     * Whether the shared asset is shareable or not
     */
    readonly shareable?: boolean;
    /**
     * The name of the site to which this shared asset is scoped.
     */
    readonly siteName?: string;
    /**
     * The shared asset title.
     */
    readonly title?: string;
    readonly 'x-class-name'?: string;
};

export type PageSite = {
    totalCount?: number;
    lastPage?: number;
    items?: Array<Site>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type Site = {
    availableLanguages?: Array<string>;
    creator?: Creator;
    description?: string;
    description_i18n?: {
        [key: string]: string;
    };
    descriptiveName?: string;
    descriptiveName_i18n?: {
        [key: string]: string;
    };
    friendlyUrlPath?: string;
    id?: number;
    key?: string;
    membershipType?: string;
    name?: string;
    name_i18n?: {
        [key: string]: string;
    };
    parentSiteId?: number;
    sites?: Array<Site>;
    readonly 'x-class-name'?: string;
};

export type Subscription = {
    contentId?: {
        [key: string]: unknown;
    };
    contentType?: string;
    readonly dateCreated?: string;
    readonly dateModified?: string;
    frequency?: string;
    readonly id?: number;
    siteId?: number;
    readonly 'x-class-name'?: string;
};

export type PageSubscription = {
    totalCount?: number;
    lastPage?: number;
    items?: Array<Subscription>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type Ticket = {
    readonly expirationDate?: string;
    readonly extraInfo?: string;
    readonly id?: number;
    readonly key?: string;
    readonly 'x-class-name'?: string;
};

export type UserAccountFullNameDefinition = {
    /**
     * A list of the user's account.
     */
    readonly userAccountFullNameDefinitionFields?: Array<UserAccountFullNameDefinitionField>;
    readonly 'x-class-name'?: string;
};

/**
 * A list of the user's account.
 */
export type UserAccountFullNameDefinitionField = {
    readonly key?: string;
    readonly required?: boolean;
    readonly values?: Array<string>;
    readonly 'x-class-name'?: string;
};

export type MultipartBody = {
    values?: {
        [key: string]: string;
    };
};

export type UserGroup = {
    readonly actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    creator?: Creator;
    /**
     * The user group's creation date.
     */
    readonly dateCreated?: string;
    /**
     * The user group's most recent modification date.
     */
    readonly dateModified?: string;
    description?: string;
    externalReferenceCode?: string;
    readonly id?: number;
    name?: string;
    permissions?: Array<Permission>;
    /**
     * The list of roles associated with this user group.
     */
    readonly roleBriefs?: Array<RoleBrief>;
    /**
     * The list of users associated with this user group.
     */
    readonly userAccountBriefs?: Array<UserAccountBrief>;
    readonly usersCount?: number;
    readonly 'x-class-name'?: string;
};

export type PageUserGroup = {
    totalCount?: number;
    lastPage?: number;
    items?: Array<UserGroup>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageWebUrl = {
    totalCount?: number;
    lastPage?: number;
    items?: Array<WebUrl>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type OAuth2DxpAuthorization = {
    readonly actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    /**
     * Optional field with the audit events associated with this object entry, can be embedded with nestedFields
     */
    readonly auditEvents?: Array<AuditEvent>;
    readonly creator?: string;
    readonly dateCreated?: string;
    readonly dateModified?: string;
    defaultLanguageId?: string;
    displayDate?: string;
    expirationDate?: string;
    externalReferenceCode?: string;
    /**
     * A relative URL to the page's rendered content.
     */
    friendlyUrlPath?: string;
    /**
     * The localized relative URLs to the page's rendered content.
     */
    friendlyUrlPath_i18n?: {
        [key: string]: string;
    };
    readonly id?: number;
    /**
     * A list of keywords describing the object entry.
     */
    keywords?: Array<string>;
    objectEntryFolderExternalReferenceCode?: string;
    objectEntryFolderId?: number;
    permissions?: Array<Permission>;
    reviewDate?: string;
    readonly scopeId?: number;
    readonly scopeKey?: string;
    readonly status?: number;
    /**
     * The categories associated with this object entry.
     */
    taxonomyCategoryBriefs?: Array<TaxonomyCategoryBrief>;
    taxonomyCategoryIds?: Array<number>;
    readonly 'x-class-name'?: string;
    readonly 'x-schema-name'?: string;
    connectionSource?: string;
    r_accountToOAuth2DxpAuthorization_accountEntryId?: number;
    /**
     * Information about the relationship accountToOAuth2DxpAuthorization can be embedded with "nestedFields".
     */
    accountToOAuth2DxpAuthorization?: {
        [key: string]: unknown;
    };
    r_accountToOAuth2DxpAuthorization_accountEntryERC?: string;
    readonly accountToOAuth2DxpAuthorizationERC?: string;
};

export type PublisherAssets = {
    readonly actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    /**
     * Optional field with the audit events associated with this object entry, can be embedded with nestedFields
     */
    readonly auditEvents?: Array<AuditEvent>;
    readonly creator?: string;
    readonly dateCreated?: string;
    readonly dateModified?: string;
    defaultLanguageId?: string;
    displayDate?: string;
    expirationDate?: string;
    externalReferenceCode?: string;
    /**
     * A relative URL to the page's rendered content.
     */
    friendlyUrlPath?: string;
    /**
     * The localized relative URLs to the page's rendered content.
     */
    friendlyUrlPath_i18n?: {
        [key: string]: string;
    };
    readonly id?: number;
    /**
     * A list of keywords describing the object entry.
     */
    keywords?: Array<string>;
    objectEntryFolderExternalReferenceCode?: string;
    objectEntryFolderId?: number;
    permissions?: Array<Permission>;
    reviewDate?: string;
    readonly scopeId?: number;
    readonly scopeKey?: string;
    readonly status?: number;
    /**
     * The categories associated with this object entry.
     */
    taxonomyCategoryBriefs?: Array<TaxonomyCategoryBrief>;
    taxonomyCategoryIds?: Array<number>;
    readonly 'x-class-name'?: string;
    readonly 'x-schema-name'?: string;
    name?: string;
    publisherAssetType?: ListEntry;
    r_accountEntryToPublisherAssets_accountEntryId: number;
    /**
     * Information about the relationship accountEntryToPublisherAssets can be embedded with "nestedFields".
     */
    accountEntryToPublisherAssets: {
        [key: string]: unknown;
    };
    r_accountEntryToPublisherAssets_accountEntryERC: string;
    readonly accountEntryToPublisherAssetsERC?: string;
    r_productEntryToPublisherAssets_CPDefinitionId?: number;
    /**
     * Information about the relationship productEntryToPublisherAssets can be embedded with "nestedFields".
     */
    productEntryToPublisherAssets?: {
        [key: string]: unknown;
    };
    r_productEntryToPublisherAssets_CPDefinitionERC?: string;
    readonly productEntryToPublisherAssetsERC?: string;
    sourceCode?: FileEntry;
    version?: string;
};

export type UserAdditionalInfo = {
    readonly actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    /**
     * Optional field with the audit events associated with this object entry, can be embedded with nestedFields
     */
    readonly auditEvents?: Array<AuditEvent>;
    readonly creator?: string;
    readonly dateCreated?: string;
    readonly dateModified?: string;
    defaultLanguageId?: string;
    displayDate?: string;
    expirationDate?: string;
    externalReferenceCode?: string;
    /**
     * A relative URL to the page's rendered content.
     */
    friendlyUrlPath?: string;
    /**
     * The localized relative URLs to the page's rendered content.
     */
    friendlyUrlPath_i18n?: {
        [key: string]: string;
    };
    readonly id?: number;
    /**
     * A list of keywords describing the object entry.
     */
    keywords?: Array<string>;
    objectEntryFolderExternalReferenceCode?: string;
    objectEntryFolderId?: number;
    permissions?: Array<Permission>;
    reviewDate?: string;
    readonly scopeId?: number;
    readonly scopeKey?: string;
    readonly status?: number;
    /**
     * The categories associated with this object entry.
     */
    taxonomyCategoryBriefs?: Array<TaxonomyCategoryBrief>;
    taxonomyCategoryIds?: Array<number>;
    readonly 'x-class-name'?: string;
    readonly 'x-schema-name'?: string;
    acceptInviteStatus?: boolean;
    accountName?: string;
    emailOfMember?: string;
    inviterName?: string;
    inviteURL?: string;
    mothersName?: string;
    r_accountEntryToUserAdditionalInfo_accountEntryId?: number;
    /**
     * Information about the relationship accountEntryToUserAdditionalInfo can be embedded with "nestedFields".
     */
    accountEntryToUserAdditionalInfo?: {
        [key: string]: unknown;
    };
    r_accountEntryToUserAdditionalInfo_accountEntryERC?: string;
    readonly accountEntryToUserAdditionalInfoERC?: string;
    r_userToUserAddInfo_userId?: number;
    /**
     * Information about the relationship userToUserAddInfo can be embedded with "nestedFields".
     */
    userToUserAddInfo?: {
        [key: string]: unknown;
    };
    r_userToUserAddInfo_userERC?: string;
    readonly userToUserAddInfoERC?: string;
    roles?: string;
    sendType?: ListEntry;
    userFirstName?: string;
};

export type CUserAdditionalInfo = {
    [key: string]: unknown;
};

/**
 * Represents a collaborator for an entry.
 */
export type Collaborator = {
    /**
     * The collaborator actions for the shared asset.
     */
    actionIds: Array<string>;
    /**
     * Block of actions allowed by the user making the request.
     */
    readonly actions?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    creator?: Creator;
    /**
     * The expiration date to be a collaborator of the asset.
     */
    dateExpired?: string;
    /**
     * The collaborator external reference code.
     */
    readonly externalReferenceCode?: string;
    /**
     * The collaborator ID.
     */
    id?: number;
    /**
     * The collaborator name.
     */
    readonly name?: string;
    /**
     * The collaborator portrait.
     */
    readonly portrait?: string;
    /**
     * If the collaborator can share or not the asset.
     */
    share?: boolean;
    /**
     * The collaborator type.
     */
    type: string;
    readonly 'x-class-name'?: string;
};

export type PageCollaborator = {
    totalCount?: number;
    lastPage?: number;
    items?: Array<Collaborator>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

/**
 * Optional field with the audit events associated with this object entry, can be embedded with nestedFields
 */
export type AuditEvent = {
    readonly auditFieldChanges?: Array<AuditFieldChange>;
    creator?: Creator;
    readonly dateCreated?: string;
    readonly eventType?: string;
    readonly 'x-class-name'?: string;
};

export type AuditFieldChange = {
    name?: string;
    newValue?: {
        [key: string]: unknown;
    };
    oldValue?: {
        [key: string]: unknown;
    };
    readonly 'x-class-name'?: string;
};

export type ParentTaxonomyCategory = {
    /**
     * The parent taxonomy category's external reference code.
     */
    externalReferenceCode?: string;
    readonly 'x-class-name'?: string;
};

export type ParentTaxonomyVocabulary = {
    /**
     * The parent category's `TaxonomyVocabulary` external reference code.
     */
    externalReferenceCode?: string;
    readonly 'x-class-name'?: string;
};

export type Scope = {
    externalReferenceCode?: string;
    readonly 'x-class-name'?: string;
    type?: 'AssetLibrary' | 'Site';
};

export type Status = {
    code: number;
    label?: string;
    label_i18n?: string;
    readonly 'x-class-name'?: string;
};

export type Version = {
    readonly number?: number;
    readonly 'x-class-name'?: string;
};

export type PagePermission = {
    totalCount?: number;
    lastPage?: number;
    items?: Array<Permission>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type ValidationError = {
    errorMessage?: string;
    objectFieldName?: string;
    objectValidationRuleExternalReferenceCode?: string;
    readonly 'x-class-name'?: string;
};

export type ValidationResponse = {
    validationErrors?: Array<ValidationError>;
    readonly 'x-class-name'?: string;
};

export type ValidationRequest = {
    objectValidationRuleExternalReferenceCodes?: Array<string>;
    values?: UserAdditionalInfo;
    readonly 'x-class-name'?: string;
};

export type PageUserAdditionalInfo = {
    totalCount?: number;
    lastPage?: number;
    items?: Array<UserAdditionalInfo>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
    readonly 'x-schema-name'?: string;
};

export type ListEntry = {
    key?: string;
    name?: string;
    readonly name_i18n?: {
        [key: string]: string;
    };
    readonly 'x-class-name'?: string;
};

export type PageOAuth2DxpAuthorization = {
    totalCount?: number;
    lastPage?: number;
    items?: Array<OAuth2DxpAuthorization>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
    readonly 'x-schema-name'?: string;
};

export type PagePublisherAssets = {
    totalCount?: number;
    lastPage?: number;
    items?: Array<PublisherAssets>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
    readonly 'x-schema-name'?: string;
};

export type FileEntry = {
    externalReferenceCode?: string;
    /**
     * optional field with the content of the document in Base64, can be embedded with nestedFields (the format of the nested field must be `<attachment field name>.fileBase64`)
     */
    fileBase64?: string;
    /**
     * optional field that specifies the source of the file to be downloaded, can be embedded with nestedFields (the format of the nested field must be `<attachment field name>.fileURL`)
     */
    fileURL?: string;
    folder?: Folder;
    id?: number;
    link?: Link;
    name?: string;
    /**
     * optional field that specifies the preview URL of the file to be used, can be embedded with nestedFields (the format of the nested field must be `<attachment field name>.previewURL`)
     */
    readonly previewURL?: string;
    scope?: Scope;
    /**
     * optional field that specifies the thumbnail of the file to be used, can be embedded with nestedFields (the format of the nested field must be `<attachment field name>.thumbnailURL`)
     */
    readonly thumbnailURL?: string;
    readonly 'x-class-name'?: string;
};

export type Folder = {
    externalReferenceCode?: string;
    siteId?: number;
    readonly 'x-class-name'?: string;
};

export type Link = {
    href?: string;
    label?: string;
    readonly 'x-class-name'?: string;
};

export type DeleteAccountGroupData = {
    body?: never;
    path: {
        accountGroupId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/account-groups/{accountGroupId}';
};

export type DeleteAccountGroupResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetAccountGroupData = {
    body?: never;
    path: {
        accountGroupId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/account-groups/{accountGroupId}';
};

export type GetAccountGroupResponses = {
    /**
     * default response
     */
    default: AccountGroup;
};

export type GetAccountGroupResponse = GetAccountGroupResponses[keyof GetAccountGroupResponses];

export type PatchAccountGroupData = {
    body?: AccountGroup;
    path: {
        accountGroupId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/account-groups/{accountGroupId}';
};

export type PatchAccountGroupResponses = {
    /**
     * default response
     */
    default: AccountGroup;
};

export type PatchAccountGroupResponse = PatchAccountGroupResponses[keyof PatchAccountGroupResponses];

export type PutAccountGroupData = {
    body?: AccountGroup;
    path: {
        accountGroupId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/account-groups/{accountGroupId}';
};

export type PutAccountGroupResponses = {
    /**
     * default response
     */
    default: AccountGroup;
};

export type PutAccountGroupResponse = PutAccountGroupResponses[keyof PutAccountGroupResponses];

export type DeleteAccountGroupBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-admin-user/v1.0/account-groups/batch';
};

export type DeleteAccountGroupBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostAccountGroupBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-admin-user/v1.0/account-groups/batch';
};

export type PostAccountGroupBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutAccountGroupBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-admin-user/v1.0/account-groups/batch';
};

export type PutAccountGroupBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteAccountGroupByExternalReferenceCodeData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/account-groups/by-external-reference-code/{externalReferenceCode}';
};

export type DeleteAccountGroupByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetAccountGroupByExternalReferenceCodeData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/account-groups/by-external-reference-code/{externalReferenceCode}';
};

export type GetAccountGroupByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: AccountGroup;
};

export type GetAccountGroupByExternalReferenceCodeResponse = GetAccountGroupByExternalReferenceCodeResponses[keyof GetAccountGroupByExternalReferenceCodeResponses];

export type PatchAccountGroupByExternalReferenceCodeData = {
    body?: AccountGroup;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/account-groups/by-external-reference-code/{externalReferenceCode}';
};

export type PatchAccountGroupByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: AccountGroup;
};

export type PatchAccountGroupByExternalReferenceCodeResponse = PatchAccountGroupByExternalReferenceCodeResponses[keyof PatchAccountGroupByExternalReferenceCodeResponses];

export type PutAccountGroupByExternalReferenceCodeData = {
    body?: AccountGroup;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/account-groups/by-external-reference-code/{externalReferenceCode}';
};

export type PutAccountGroupByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: AccountGroup;
};

export type PutAccountGroupByExternalReferenceCodeResponse = PutAccountGroupByExternalReferenceCodeResponses[keyof PutAccountGroupByExternalReferenceCodeResponses];

export type DeleteAccountGroupByExternalReferenceCodeAccountByExternalReferenceCodeData = {
    body?: never;
    path: {
        accountExternalReferenceCode: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/account-groups/by-external-reference-code/{accountExternalReferenceCode}/accounts/by-external-reference-code/{externalReferenceCode}';
};

export type DeleteAccountGroupByExternalReferenceCodeAccountByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostAccountGroupByExternalReferenceCodeAccountByExternalReferenceCodeData = {
    body?: never;
    path: {
        accountExternalReferenceCode: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/account-groups/by-external-reference-code/{accountExternalReferenceCode}/accounts/by-external-reference-code/{externalReferenceCode}';
};

export type PostAccountGroupByExternalReferenceCodeAccountByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetAccountAccountGroupsPageData = {
    body?: never;
    path: {
        accountId: string;
    };
    query?: {
        page?: string;
        pageSize?: string;
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/accounts/{accountId}/account-groups';
};

export type GetAccountAccountGroupsPageResponses = {
    /**
     * default response
     */
    default: PageAccountGroup;
};

export type GetAccountAccountGroupsPageResponse = GetAccountAccountGroupsPageResponses[keyof GetAccountAccountGroupsPageResponses];

export type GetAccountByExternalReferenceCodeAccountExternalReferenceCodeAccountGroupsPageData = {
    body?: never;
    path: {
        accountExternalReferenceCode: string;
    };
    query?: {
        page?: string;
        pageSize?: string;
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{accountExternalReferenceCode}/account-groups';
};

export type GetAccountByExternalReferenceCodeAccountExternalReferenceCodeAccountGroupsPageResponses = {
    /**
     * default response
     */
    default: PageAccountGroup;
};

export type GetAccountByExternalReferenceCodeAccountExternalReferenceCodeAccountGroupsPageResponse = GetAccountByExternalReferenceCodeAccountExternalReferenceCodeAccountGroupsPageResponses[keyof GetAccountByExternalReferenceCodeAccountExternalReferenceCodeAccountGroupsPageResponses];

export type GetAccountGroupsPageData = {
    body?: never;
    path?: never;
    query?: {
        filter?: string;
        page?: string;
        pageSize?: string;
        search?: string;
        sort?: string;
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/account-groups';
};

export type GetAccountGroupsPageResponses = {
    /**
     * default response
     */
    default: PageAccountGroup;
};

export type GetAccountGroupsPageResponse = GetAccountGroupsPageResponses[keyof GetAccountGroupsPageResponses];

export type PostAccountGroupData = {
    body?: AccountGroup;
    path?: never;
    query?: never;
    url: '/o/headless-admin-user/v1.0/account-groups';
};

export type PostAccountGroupResponses = {
    /**
     * default response
     */
    default: AccountGroup;
};

export type PostAccountGroupResponse = PostAccountGroupResponses[keyof PostAccountGroupResponses];

export type PostAccountAccountGroupsPageExportBatchData = {
    body?: never;
    path: {
        accountId: string;
    };
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-admin-user/v1.0/accounts/{accountId}/account-groups/export-batch';
};

export type PostAccountAccountGroupsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostAccountGroupsPageExportBatchData = {
    body?: never;
    path?: never;
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-admin-user/v1.0/account-groups/export-batch';
};

export type PostAccountGroupsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteAccountData = {
    body?: never;
    path: {
        accountId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts/{accountId}';
};

export type DeleteAccountResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetAccountData = {
    body?: never;
    path: {
        accountId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts/{accountId}';
};

export type GetAccountResponses = {
    /**
     * default response
     */
    default: Account;
};

export type GetAccountResponse = GetAccountResponses[keyof GetAccountResponses];

export type PatchAccountData = {
    body?: Account;
    path: {
        accountId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts/{accountId}';
};

export type PatchAccountResponses = {
    /**
     * default response
     */
    default: Account;
};

export type PatchAccountResponse = PatchAccountResponses[keyof PatchAccountResponses];

export type PutAccountData = {
    body?: Account;
    path: {
        accountId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts/{accountId}';
};

export type PutAccountResponses = {
    /**
     * default response
     */
    default: Account;
};

export type PutAccountResponse = PutAccountResponses[keyof PutAccountResponses];

export type DeleteAccountBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-admin-user/v1.0/accounts/batch';
};

export type DeleteAccountBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostAccountBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-admin-user/v1.0/accounts/batch';
};

export type PostAccountBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutAccountBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-admin-user/v1.0/accounts/batch';
};

export type PutAccountBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteAccountByExternalReferenceCodeData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}';
};

export type DeleteAccountByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetAccountByExternalReferenceCodeData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}';
};

export type GetAccountByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: Account;
};

export type GetAccountByExternalReferenceCodeResponse = GetAccountByExternalReferenceCodeResponses[keyof GetAccountByExternalReferenceCodeResponses];

export type PatchAccountByExternalReferenceCodeData = {
    body?: Account;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}';
};

export type PatchAccountByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: Account;
};

export type PatchAccountByExternalReferenceCodeResponse = PatchAccountByExternalReferenceCodeResponses[keyof PatchAccountByExternalReferenceCodeResponses];

export type PutAccountByExternalReferenceCodeData = {
    body?: Account;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}';
};

export type PutAccountByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: Account;
};

export type PutAccountByExternalReferenceCodeResponse = PutAccountByExternalReferenceCodeResponses[keyof PutAccountByExternalReferenceCodeResponses];

export type DeleteOrganizationAccountsData = {
    body?: Array<number>;
    path: {
        organizationId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/organizations/{organizationId}/accounts';
};

export type DeleteOrganizationAccountsResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetOrganizationAccountsPageData = {
    body?: never;
    path: {
        organizationId: string;
    };
    query?: {
        filter?: string;
        page?: string;
        pageSize?: string;
        search?: string;
        sort?: string;
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/organizations/{organizationId}/accounts';
};

export type GetOrganizationAccountsPageResponses = {
    /**
     * default response
     */
    default: PageAccount;
};

export type GetOrganizationAccountsPageResponse = GetOrganizationAccountsPageResponses[keyof GetOrganizationAccountsPageResponses];

export type PostOrganizationAccountsData = {
    body?: Array<number>;
    path: {
        organizationId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/organizations/{organizationId}/accounts';
};

export type PostOrganizationAccountsResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteOrganizationAccountsByExternalReferenceCodeData = {
    body?: Array<string>;
    path: {
        organizationId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/organizations/{organizationId}/accounts/by-external-reference-code';
};

export type DeleteOrganizationAccountsByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostOrganizationAccountsByExternalReferenceCodeData = {
    body?: Array<string>;
    path: {
        organizationId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/organizations/{organizationId}/accounts/by-external-reference-code';
};

export type PostOrganizationAccountsByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteOrganizationByExternalReferenceCodeAccountsData = {
    body?: Array<number>;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/organizations/by-external-reference-code/{externalReferenceCode}/accounts';
};

export type DeleteOrganizationByExternalReferenceCodeAccountsResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetOrganizationByExternalReferenceCodeAccountsPageData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: {
        filter?: string;
        page?: string;
        pageSize?: string;
        search?: string;
        sort?: string;
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/organizations/by-external-reference-code/{externalReferenceCode}/accounts';
};

export type GetOrganizationByExternalReferenceCodeAccountsPageResponses = {
    /**
     * default response
     */
    default: PageAccount;
};

export type GetOrganizationByExternalReferenceCodeAccountsPageResponse = GetOrganizationByExternalReferenceCodeAccountsPageResponses[keyof GetOrganizationByExternalReferenceCodeAccountsPageResponses];

export type PostOrganizationByExternalReferenceCodeAccountsData = {
    body?: Array<number>;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/organizations/by-external-reference-code/{externalReferenceCode}/accounts';
};

export type PostOrganizationByExternalReferenceCodeAccountsResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteOrganizationByExternalReferenceCodeOrganizationExternalReferenceCodeAccountByExternalReferenceCodeData = {
    body?: Array<string>;
    path: {
        organizationExternalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/organizations/by-external-reference-code/{organizationExternalReferenceCode}/accounts/by-external-reference-code';
};

export type DeleteOrganizationByExternalReferenceCodeOrganizationExternalReferenceCodeAccountByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetOrganizationByExternalReferenceCodeOrganizationExternalReferenceCodeAccountsByExternalReferenceCodePageData = {
    body?: never;
    path: {
        organizationExternalReferenceCode: string;
    };
    query?: {
        filter?: string;
        page?: string;
        pageSize?: string;
        search?: string;
        sort?: string;
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/organizations/by-external-reference-code/{organizationExternalReferenceCode}/accounts/by-external-reference-code';
};

export type GetOrganizationByExternalReferenceCodeOrganizationExternalReferenceCodeAccountsByExternalReferenceCodePageResponses = {
    /**
     * default response
     */
    default: PageAccount;
};

export type GetOrganizationByExternalReferenceCodeOrganizationExternalReferenceCodeAccountsByExternalReferenceCodePageResponse = GetOrganizationByExternalReferenceCodeOrganizationExternalReferenceCodeAccountsByExternalReferenceCodePageResponses[keyof GetOrganizationByExternalReferenceCodeOrganizationExternalReferenceCodeAccountsByExternalReferenceCodePageResponses];

export type PostOrganizationByExternalReferenceCodeOrganizationExternalReferenceCodeAccountByExternalReferenceCodeData = {
    body?: Array<string>;
    path: {
        organizationExternalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/organizations/by-external-reference-code/{organizationExternalReferenceCode}/accounts/by-external-reference-code';
};

export type PostOrganizationByExternalReferenceCodeOrganizationExternalReferenceCodeAccountByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetAccountGroupAccountsPageData = {
    body?: never;
    path: {
        accountGroupId: string;
    };
    query?: {
        filter?: string;
        page?: string;
        pageSize?: string;
        search?: string;
        sort?: string;
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/account-groups/{accountGroupId}/accounts';
};

export type GetAccountGroupAccountsPageResponses = {
    /**
     * default response
     */
    default: PageAccount;
};

export type GetAccountGroupAccountsPageResponse = GetAccountGroupAccountsPageResponses[keyof GetAccountGroupAccountsPageResponses];

export type GetAccountGroupByExternalReferenceCodeAccountsPageData = {
    body?: never;
    path: {
        accountGroupExternalReferenceCode: string;
    };
    query?: {
        filter?: string;
        page?: string;
        pageSize?: string;
        search?: string;
        sort?: string;
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/account-groups/by-external-reference-code/{accountGroupExternalReferenceCode}/accounts';
};

export type GetAccountGroupByExternalReferenceCodeAccountsPageResponses = {
    /**
     * default response
     */
    default: PageAccount;
};

export type GetAccountGroupByExternalReferenceCodeAccountsPageResponse = GetAccountGroupByExternalReferenceCodeAccountsPageResponses[keyof GetAccountGroupByExternalReferenceCodeAccountsPageResponses];

export type GetAccountsPageData = {
    body?: never;
    path?: never;
    query?: {
        filter?: string;
        page?: string;
        pageSize?: string;
        search?: string;
        sort?: string;
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/accounts';
};

export type GetAccountsPageResponses = {
    /**
     * default response
     */
    default: PageAccount;
};

export type GetAccountsPageResponse = GetAccountsPageResponses[keyof GetAccountsPageResponses];

export type PostAccountData = {
    body?: Account;
    path?: never;
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts';
};

export type PostAccountResponses = {
    /**
     * default response
     */
    default: Account;
};

export type PostAccountResponse = PostAccountResponses[keyof PostAccountResponses];

export type PatchOrganizationMoveAccountsData = {
    body?: Array<number>;
    path: {
        sourceOrganizationId: string;
        targetOrganizationId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/organizations/move-accounts/{sourceOrganizationId}/{targetOrganizationId}';
};

export type PatchOrganizationMoveAccountsResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PatchOrganizationMoveAccountsByExternalReferenceCodeData = {
    body?: Array<string>;
    path: {
        sourceOrganizationId: string;
        targetOrganizationId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/organizations/move-accounts/{sourceOrganizationId}/{targetOrganizationId}/by-external-reference-code';
};

export type PatchOrganizationMoveAccountsByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostAccountGroupAccountsPageExportBatchData = {
    body?: never;
    path: {
        accountGroupId: string;
    };
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-admin-user/v1.0/account-groups/{accountGroupId}/accounts/export-batch';
};

export type PostAccountGroupAccountsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostAccountsPageExportBatchData = {
    body?: never;
    path?: never;
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-admin-user/v1.0/accounts/export-batch';
};

export type PostAccountsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostOrganizationAccountsPageExportBatchData = {
    body?: never;
    path: {
        organizationId: string;
    };
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-admin-user/v1.0/organizations/{organizationId}/accounts/export-batch';
};

export type PostOrganizationAccountsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteAccountAccountRoleUserAccountAssociationData = {
    body?: never;
    path: {
        accountId: string;
        accountRoleId: string;
        userAccountId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts/{accountId}/account-roles/{accountRoleId}/user-accounts/{userAccountId}';
};

export type DeleteAccountAccountRoleUserAccountAssociationResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostAccountAccountRoleUserAccountAssociationData = {
    body?: never;
    path: {
        accountId: string;
        accountRoleId: string;
        userAccountId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts/{accountId}/account-roles/{accountRoleId}/user-accounts/{userAccountId}';
};

export type PostAccountAccountRoleUserAccountAssociationResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteAccountByExternalReferenceCodeAccountRoleByExternalReferenceCodeUserAccountByEmailAddressData = {
    body?: never;
    path: {
        externalReferenceCode: string;
        accountRoleExternalReferenceCode: string;
        emailAddress: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/account-roles/by-external-reference-code/{accountRoleExternalReferenceCode}/user-accounts/by-email-address/{emailAddress}';
};

export type DeleteAccountByExternalReferenceCodeAccountRoleByExternalReferenceCodeUserAccountByEmailAddressResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostAccountByExternalReferenceCodeAccountRoleByExternalReferenceCodeUserAccountByEmailAddressData = {
    body?: never;
    path: {
        externalReferenceCode: string;
        accountRoleExternalReferenceCode: string;
        emailAddress: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/account-roles/by-external-reference-code/{accountRoleExternalReferenceCode}/user-accounts/by-email-address/{emailAddress}';
};

export type PostAccountByExternalReferenceCodeAccountRoleByExternalReferenceCodeUserAccountByEmailAddressResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteAccountByExternalReferenceCodeAccountRoleByExternalReferenceCodeUserAccountByExternalReferenceCodeData = {
    body?: never;
    path: {
        accountExternalReferenceCode: string;
        accountRoleExternalReferenceCode: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{accountExternalReferenceCode}/account-roles/by-external-reference-code/{accountRoleExternalReferenceCode}/user-accounts/by-external-reference-code/{externalReferenceCode}';
};

export type DeleteAccountByExternalReferenceCodeAccountRoleByExternalReferenceCodeUserAccountByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostAccountByExternalReferenceCodeAccountRoleByExternalReferenceCodeUserAccountByExternalReferenceCodeData = {
    body?: never;
    path: {
        accountExternalReferenceCode: string;
        accountRoleExternalReferenceCode: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{accountExternalReferenceCode}/account-roles/by-external-reference-code/{accountRoleExternalReferenceCode}/user-accounts/by-external-reference-code/{externalReferenceCode}';
};

export type PostAccountByExternalReferenceCodeAccountRoleByExternalReferenceCodeUserAccountByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteAccountByExternalReferenceCodeAccountRoleUserAccountByEmailAddressData = {
    body?: never;
    path: {
        externalReferenceCode: string;
        accountRoleId: string;
        emailAddress: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/account-roles/{accountRoleId}/user-accounts/by-email-address/{emailAddress}';
};

export type DeleteAccountByExternalReferenceCodeAccountRoleUserAccountByEmailAddressResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostAccountByExternalReferenceCodeAccountRoleUserAccountByEmailAddressData = {
    body?: never;
    path: {
        externalReferenceCode: string;
        accountRoleId: string;
        emailAddress: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/account-roles/{accountRoleId}/user-accounts/by-email-address/{emailAddress}';
};

export type PostAccountByExternalReferenceCodeAccountRoleUserAccountByEmailAddressResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteAccountByExternalReferenceCodeAccountRoleUserAccountByExternalReferenceCodeData = {
    body?: never;
    path: {
        accountExternalReferenceCode: string;
        accountRoleId: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{accountExternalReferenceCode}/account-roles/{accountRoleId}/user-accounts/by-external-reference-code/{externalReferenceCode}';
};

export type DeleteAccountByExternalReferenceCodeAccountRoleUserAccountByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostAccountByExternalReferenceCodeAccountRoleUserAccountByExternalReferenceCodeData = {
    body?: never;
    path: {
        accountExternalReferenceCode: string;
        accountRoleId: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{accountExternalReferenceCode}/account-roles/{accountRoleId}/user-accounts/by-external-reference-code/{externalReferenceCode}';
};

export type PostAccountByExternalReferenceCodeAccountRoleUserAccountByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetAccountAccountRolesByExternalReferenceCodePageData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: {
        filter?: string;
        keywords?: string;
        page?: string;
        pageSize?: string;
        sort?: string;
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/account-roles';
};

export type GetAccountAccountRolesByExternalReferenceCodePageResponses = {
    /**
     * default response
     */
    default: PageAccountRole;
};

export type GetAccountAccountRolesByExternalReferenceCodePageResponse = GetAccountAccountRolesByExternalReferenceCodePageResponses[keyof GetAccountAccountRolesByExternalReferenceCodePageResponses];

export type PostAccountAccountRoleByExternalReferenceCodeData = {
    body?: AccountRole;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/account-roles';
};

export type PostAccountAccountRoleByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: AccountRole;
};

export type PostAccountAccountRoleByExternalReferenceCodeResponse = PostAccountAccountRoleByExternalReferenceCodeResponses[keyof PostAccountAccountRoleByExternalReferenceCodeResponses];

export type GetAccountAccountRolesPageData = {
    body?: never;
    path: {
        accountId: string;
    };
    query?: {
        filter?: string;
        keywords?: string;
        page?: string;
        pageSize?: string;
        sort?: string;
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/accounts/{accountId}/account-roles';
};

export type GetAccountAccountRolesPageResponses = {
    /**
     * default response
     */
    default: PageAccountRole;
};

export type GetAccountAccountRolesPageResponse = GetAccountAccountRolesPageResponses[keyof GetAccountAccountRolesPageResponses];

export type PostAccountAccountRoleData = {
    body?: AccountRole;
    path: {
        accountId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts/{accountId}/account-roles';
};

export type PostAccountAccountRoleResponses = {
    /**
     * default response
     */
    default: AccountRole;
};

export type PostAccountAccountRoleResponse = PostAccountAccountRoleResponses[keyof PostAccountAccountRoleResponses];

export type GetAccountByExternalReferenceCodeUserAccountByEmailAddressAccountRolesPageData = {
    body?: never;
    path: {
        externalReferenceCode: string;
        emailAddress: string;
    };
    query?: {
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/user-accounts/by-email-address/{emailAddress}/account-roles';
};

export type GetAccountByExternalReferenceCodeUserAccountByEmailAddressAccountRolesPageResponses = {
    /**
     * default response
     */
    default: PageAccountRole;
};

export type GetAccountByExternalReferenceCodeUserAccountByEmailAddressAccountRolesPageResponse = GetAccountByExternalReferenceCodeUserAccountByEmailAddressAccountRolesPageResponses[keyof GetAccountByExternalReferenceCodeUserAccountByEmailAddressAccountRolesPageResponses];

export type GetAccountByExternalReferenceCodeUserAccountByExternalReferenceCodeAccountRolesPageData = {
    body?: never;
    path: {
        accountExternalReferenceCode: string;
        externalReferenceCode: string;
    };
    query?: {
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{accountExternalReferenceCode}/user-accounts/by-external-reference-code/{externalReferenceCode}/account-roles';
};

export type GetAccountByExternalReferenceCodeUserAccountByExternalReferenceCodeAccountRolesPageResponses = {
    /**
     * default response
     */
    default: PageAccountRole;
};

export type GetAccountByExternalReferenceCodeUserAccountByExternalReferenceCodeAccountRolesPageResponse = GetAccountByExternalReferenceCodeUserAccountByExternalReferenceCodeAccountRolesPageResponses[keyof GetAccountByExternalReferenceCodeUserAccountByExternalReferenceCodeAccountRolesPageResponses];

export type PostAccountAccountRoleBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        accountId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-admin-user/v1.0/accounts/{accountId}/account-roles/batch';
};

export type PostAccountAccountRoleBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostAccountAccountRolesPageExportBatchData = {
    body?: never;
    path: {
        accountId: string;
    };
    query?: {
        filter?: string;
        keywords?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-admin-user/v1.0/accounts/{accountId}/account-roles/export-batch';
};

export type PostAccountAccountRolesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteEmailAddressData = {
    body?: never;
    path: {
        emailAddressId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/email-addresses/{emailAddressId}';
};

export type DeleteEmailAddressResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetEmailAddressData = {
    body?: never;
    path: {
        emailAddressId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/email-addresses/{emailAddressId}';
};

export type GetEmailAddressResponses = {
    /**
     * default response
     */
    default: EmailAddress;
};

export type GetEmailAddressResponse = GetEmailAddressResponses[keyof GetEmailAddressResponses];

export type PatchEmailAddressData = {
    body?: EmailAddress;
    path: {
        emailAddressId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/email-addresses/{emailAddressId}';
};

export type PatchEmailAddressResponses = {
    /**
     * default response
     */
    default: EmailAddress;
};

export type PatchEmailAddressResponse = PatchEmailAddressResponses[keyof PatchEmailAddressResponses];

export type DeleteEmailAddressBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-admin-user/v1.0/email-addresses/batch';
};

export type DeleteEmailAddressBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteEmailAddressByExternalReferenceCodeData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/email-addresses/by-external-reference-code/{externalReferenceCode}';
};

export type DeleteEmailAddressByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetEmailAddressByExternalReferenceCodeData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/email-addresses/by-external-reference-code/{externalReferenceCode}';
};

export type GetEmailAddressByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: EmailAddress;
};

export type GetEmailAddressByExternalReferenceCodeResponse = GetEmailAddressByExternalReferenceCodeResponses[keyof GetEmailAddressByExternalReferenceCodeResponses];

export type PatchEmailAddressByExternalReferenceCodeData = {
    body?: EmailAddress;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/email-addresses/by-external-reference-code/{externalReferenceCode}';
};

export type PatchEmailAddressByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: EmailAddress;
};

export type PatchEmailAddressByExternalReferenceCodeResponse = PatchEmailAddressByExternalReferenceCodeResponses[keyof PatchEmailAddressByExternalReferenceCodeResponses];

export type GetAccountByExternalReferenceCodeEmailAddressesPageData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: {
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/email-addresses';
};

export type GetAccountByExternalReferenceCodeEmailAddressesPageResponses = {
    /**
     * default response
     */
    default: PageEmailAddress;
};

export type GetAccountByExternalReferenceCodeEmailAddressesPageResponse = GetAccountByExternalReferenceCodeEmailAddressesPageResponses[keyof GetAccountByExternalReferenceCodeEmailAddressesPageResponses];

export type GetAccountEmailAddressesPageData = {
    body?: never;
    path: {
        accountId: string;
    };
    query?: {
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/accounts/{accountId}/email-addresses';
};

export type GetAccountEmailAddressesPageResponses = {
    /**
     * default response
     */
    default: PageEmailAddress;
};

export type GetAccountEmailAddressesPageResponse = GetAccountEmailAddressesPageResponses[keyof GetAccountEmailAddressesPageResponses];

export type GetOrganizationByExternalReferenceCodeEmailAddressesPageData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: {
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/organizations/by-external-reference-code/{externalReferenceCode}/email-addresses';
};

export type GetOrganizationByExternalReferenceCodeEmailAddressesPageResponses = {
    /**
     * default response
     */
    default: PageEmailAddress;
};

export type GetOrganizationByExternalReferenceCodeEmailAddressesPageResponse = GetOrganizationByExternalReferenceCodeEmailAddressesPageResponses[keyof GetOrganizationByExternalReferenceCodeEmailAddressesPageResponses];

export type GetOrganizationEmailAddressesPageData = {
    body?: never;
    path: {
        organizationId: string;
    };
    query?: {
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/organizations/{organizationId}/email-addresses';
};

export type GetOrganizationEmailAddressesPageResponses = {
    /**
     * default response
     */
    default: PageEmailAddress;
};

export type GetOrganizationEmailAddressesPageResponse = GetOrganizationEmailAddressesPageResponses[keyof GetOrganizationEmailAddressesPageResponses];

export type GetUserAccountByExternalReferenceCodeEmailAddressesPageData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: {
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/user-accounts/by-external-reference-code/{externalReferenceCode}/email-addresses';
};

export type GetUserAccountByExternalReferenceCodeEmailAddressesPageResponses = {
    /**
     * default response
     */
    default: PageEmailAddress;
};

export type GetUserAccountByExternalReferenceCodeEmailAddressesPageResponse = GetUserAccountByExternalReferenceCodeEmailAddressesPageResponses[keyof GetUserAccountByExternalReferenceCodeEmailAddressesPageResponses];

export type GetUserAccountEmailAddressesPageData = {
    body?: never;
    path: {
        userAccountId: string;
    };
    query?: {
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/user-accounts/{userAccountId}/email-addresses';
};

export type GetUserAccountEmailAddressesPageResponses = {
    /**
     * default response
     */
    default: PageEmailAddress;
};

export type GetUserAccountEmailAddressesPageResponse = GetUserAccountEmailAddressesPageResponses[keyof GetUserAccountEmailAddressesPageResponses];

export type PostAccountEmailAddressesPageExportBatchData = {
    body?: never;
    path: {
        accountId: string;
    };
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-admin-user/v1.0/accounts/{accountId}/email-addresses/export-batch';
};

export type PostAccountEmailAddressesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostOrganizationEmailAddressesPageExportBatchData = {
    body?: never;
    path: {
        organizationId: string;
    };
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-admin-user/v1.0/organizations/{organizationId}/email-addresses/export-batch';
};

export type PostOrganizationEmailAddressesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostUserAccountEmailAddressesPageExportBatchData = {
    body?: never;
    path: {
        userAccountId: string;
    };
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-admin-user/v1.0/user-accounts/{userAccountId}/email-addresses/export-batch';
};

export type PostUserAccountEmailAddressesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteAccountByExternalReferenceCodeOrganizationData = {
    body?: never;
    path: {
        externalReferenceCode: string;
        organizationId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/organizations/{organizationId}';
};

export type DeleteAccountByExternalReferenceCodeOrganizationResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetAccountByExternalReferenceCodeOrganizationData = {
    body?: never;
    path: {
        externalReferenceCode: string;
        organizationId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/organizations/{organizationId}';
};

export type GetAccountByExternalReferenceCodeOrganizationResponses = {
    /**
     * default response
     */
    default: Organization;
};

export type GetAccountByExternalReferenceCodeOrganizationResponse = GetAccountByExternalReferenceCodeOrganizationResponses[keyof GetAccountByExternalReferenceCodeOrganizationResponses];

export type PostAccountByExternalReferenceCodeOrganizationData = {
    body?: never;
    path: {
        externalReferenceCode: string;
        organizationId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/organizations/{organizationId}';
};

export type PostAccountByExternalReferenceCodeOrganizationResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteAccountOrganizationData = {
    body?: never;
    path: {
        accountId: string;
        organizationId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts/{accountId}/organizations/{organizationId}';
};

export type DeleteAccountOrganizationResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetAccountOrganizationData = {
    body?: never;
    path: {
        accountId: string;
        organizationId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts/{accountId}/organizations/{organizationId}';
};

export type GetAccountOrganizationResponses = {
    /**
     * default response
     */
    default: Organization;
};

export type GetAccountOrganizationResponse = GetAccountOrganizationResponses[keyof GetAccountOrganizationResponses];

export type PostAccountOrganizationData = {
    body?: never;
    path: {
        accountId: string;
        organizationId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts/{accountId}/organizations/{organizationId}';
};

export type PostAccountOrganizationResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteOrganizationData = {
    body?: never;
    path: {
        organizationId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/organizations/{organizationId}';
};

export type DeleteOrganizationResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetOrganizationData = {
    body?: never;
    path: {
        organizationId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/organizations/{organizationId}';
};

export type GetOrganizationResponses = {
    /**
     * default response
     */
    default: Organization;
};

export type GetOrganizationResponse = GetOrganizationResponses[keyof GetOrganizationResponses];

export type PatchOrganizationData = {
    body?: Organization;
    path: {
        organizationId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/organizations/{organizationId}';
};

export type PatchOrganizationResponses = {
    /**
     * default response
     */
    default: Organization;
};

export type PatchOrganizationResponse = PatchOrganizationResponses[keyof PatchOrganizationResponses];

export type PutOrganizationData = {
    body?: Organization;
    path: {
        organizationId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/organizations/{organizationId}';
};

export type PutOrganizationResponses = {
    /**
     * default response
     */
    default: Organization;
};

export type PutOrganizationResponse = PutOrganizationResponses[keyof PutOrganizationResponses];

export type DeleteOrganizationBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-admin-user/v1.0/organizations/batch';
};

export type DeleteOrganizationBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostOrganizationBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-admin-user/v1.0/organizations/batch';
};

export type PostOrganizationBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutOrganizationBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-admin-user/v1.0/organizations/batch';
};

export type PutOrganizationBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteOrganizationByExternalReferenceCodeData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/organizations/by-external-reference-code/{externalReferenceCode}';
};

export type DeleteOrganizationByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetOrganizationByExternalReferenceCodeData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/organizations/by-external-reference-code/{externalReferenceCode}';
};

export type GetOrganizationByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: Organization;
};

export type GetOrganizationByExternalReferenceCodeResponse = GetOrganizationByExternalReferenceCodeResponses[keyof GetOrganizationByExternalReferenceCodeResponses];

export type PatchOrganizationByExternalReferenceCodeData = {
    body?: Organization;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/organizations/by-external-reference-code/{externalReferenceCode}';
};

export type PatchOrganizationByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: Organization;
};

export type PatchOrganizationByExternalReferenceCodeResponse = PatchOrganizationByExternalReferenceCodeResponses[keyof PatchOrganizationByExternalReferenceCodeResponses];

export type PutOrganizationByExternalReferenceCodeData = {
    body?: Organization;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/organizations/by-external-reference-code/{externalReferenceCode}';
};

export type PutOrganizationByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: Organization;
};

export type PutOrganizationByExternalReferenceCodeResponse = PutOrganizationByExternalReferenceCodeResponses[keyof PutOrganizationByExternalReferenceCodeResponses];

export type DeleteOrganizationByExternalReferenceCodeUserAccountByEmailAddressData = {
    body?: never;
    path: {
        externalReferenceCode: string;
        emailAddress: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/organizations/by-external-reference-code/{externalReferenceCode}/user-accounts/by-email-address/{emailAddress}';
};

export type DeleteOrganizationByExternalReferenceCodeUserAccountByEmailAddressResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostOrganizationByExternalReferenceCodeUserAccountByEmailAddressData = {
    body?: never;
    path: {
        externalReferenceCode: string;
        emailAddress: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/organizations/by-external-reference-code/{externalReferenceCode}/user-accounts/by-email-address/{emailAddress}';
};

export type PostOrganizationByExternalReferenceCodeUserAccountByEmailAddressResponses = {
    /**
     * default response
     */
    default: UserAccount;
};

export type PostOrganizationByExternalReferenceCodeUserAccountByEmailAddressResponse = PostOrganizationByExternalReferenceCodeUserAccountByEmailAddressResponses[keyof PostOrganizationByExternalReferenceCodeUserAccountByEmailAddressResponses];

export type DeleteOrganizationByExternalReferenceCodeUserAccountsByEmailAddressData = {
    body?: Array<string>;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/organizations/by-external-reference-code/{externalReferenceCode}/user-accounts/by-email-address';
};

export type DeleteOrganizationByExternalReferenceCodeUserAccountsByEmailAddressResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostOrganizationByExternalReferenceCodeUserAccountsByEmailAddressData = {
    body?: Array<string>;
    path: {
        externalReferenceCode: string;
    };
    query?: {
        organizationRoleIds?: string;
    };
    url: '/o/headless-admin-user/v1.0/organizations/by-external-reference-code/{externalReferenceCode}/user-accounts/by-email-address';
};

export type PostOrganizationByExternalReferenceCodeUserAccountsByEmailAddressResponses = {
    /**
     * default response
     */
    default: PageUserAccount;
};

export type PostOrganizationByExternalReferenceCodeUserAccountsByEmailAddressResponse = PostOrganizationByExternalReferenceCodeUserAccountsByEmailAddressResponses[keyof PostOrganizationByExternalReferenceCodeUserAccountsByEmailAddressResponses];

export type DeleteUserAccountByEmailAddressData = {
    body?: never;
    path: {
        organizationId: string;
        emailAddress: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/organizations/{organizationId}/user-accounts/by-email-address/{emailAddress}';
};

export type DeleteUserAccountByEmailAddressResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostUserAccountByEmailAddressData = {
    body?: never;
    path: {
        organizationId: string;
        emailAddress: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/organizations/{organizationId}/user-accounts/by-email-address/{emailAddress}';
};

export type PostUserAccountByEmailAddressResponses = {
    /**
     * default response
     */
    default: UserAccount;
};

export type PostUserAccountByEmailAddressResponse = PostUserAccountByEmailAddressResponses[keyof PostUserAccountByEmailAddressResponses];

export type DeleteUserAccountsByEmailAddressData = {
    body?: Array<string>;
    path: {
        organizationId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/organizations/{organizationId}/user-accounts/by-email-address';
};

export type DeleteUserAccountsByEmailAddressResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostUserAccountsByEmailAddressData = {
    body?: Array<string>;
    path: {
        organizationId: string;
    };
    query?: {
        organizationRoleIds?: string;
    };
    url: '/o/headless-admin-user/v1.0/organizations/{organizationId}/user-accounts/by-email-address';
};

export type PostUserAccountsByEmailAddressResponses = {
    /**
     * default response
     */
    default: PageUserAccount;
};

export type PostUserAccountsByEmailAddressResponse = PostUserAccountsByEmailAddressResponses[keyof PostUserAccountsByEmailAddressResponses];

export type GetAccountByExternalReferenceCodeOrganizationsPageData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: {
        filter?: string;
        page?: string;
        pageSize?: string;
        search?: string;
        sort?: string;
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/organizations';
};

export type GetAccountByExternalReferenceCodeOrganizationsPageResponses = {
    /**
     * default response
     */
    default: PageOrganization;
};

export type GetAccountByExternalReferenceCodeOrganizationsPageResponse = GetAccountByExternalReferenceCodeOrganizationsPageResponses[keyof GetAccountByExternalReferenceCodeOrganizationsPageResponses];

export type GetAccountOrganizationsPageData = {
    body?: never;
    path: {
        accountId: string;
    };
    query?: {
        filter?: string;
        page?: string;
        pageSize?: string;
        search?: string;
        sort?: string;
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/accounts/{accountId}/organizations';
};

export type GetAccountOrganizationsPageResponses = {
    /**
     * default response
     */
    default: PageOrganization;
};

export type GetAccountOrganizationsPageResponse = GetAccountOrganizationsPageResponses[keyof GetAccountOrganizationsPageResponses];

export type GetOrganizationByExternalReferenceCodeChildOrganizationsPageData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: {
        filter?: string;
        flatten?: string;
        page?: string;
        pageSize?: string;
        search?: string;
        sort?: string;
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/organizations/by-external-reference-code/{externalReferenceCode}/child-organizations';
};

export type GetOrganizationByExternalReferenceCodeChildOrganizationsPageResponses = {
    /**
     * default response
     */
    default: PageOrganization;
};

export type GetOrganizationByExternalReferenceCodeChildOrganizationsPageResponse = GetOrganizationByExternalReferenceCodeChildOrganizationsPageResponses[keyof GetOrganizationByExternalReferenceCodeChildOrganizationsPageResponses];

export type GetOrganizationChildOrganizationsPageData = {
    body?: never;
    path: {
        organizationId: string;
    };
    query?: {
        filter?: string;
        flatten?: string;
        page?: string;
        pageSize?: string;
        search?: string;
        sort?: string;
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/organizations/{organizationId}/child-organizations';
};

export type GetOrganizationChildOrganizationsPageResponses = {
    /**
     * default response
     */
    default: PageOrganization;
};

export type GetOrganizationChildOrganizationsPageResponse = GetOrganizationChildOrganizationsPageResponses[keyof GetOrganizationChildOrganizationsPageResponses];

export type GetOrganizationOrganizationsPageData = {
    body?: never;
    path: {
        parentOrganizationId: string;
    };
    query?: {
        filter?: string;
        flatten?: string;
        page?: string;
        pageSize?: string;
        search?: string;
        sort?: string;
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/organizations/{parentOrganizationId}/organizations';
};

export type GetOrganizationOrganizationsPageResponses = {
    /**
     * default response
     */
    default: PageOrganization;
};

export type GetOrganizationOrganizationsPageResponse = GetOrganizationOrganizationsPageResponses[keyof GetOrganizationOrganizationsPageResponses];

export type GetOrganizationsPageData = {
    body?: never;
    path?: never;
    query?: {
        filter?: string;
        flatten?: string;
        page?: string;
        pageSize?: string;
        search?: string;
        sort?: string;
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/organizations';
};

export type GetOrganizationsPageResponses = {
    /**
     * default response
     */
    default: PageOrganization;
};

export type GetOrganizationsPageResponse = GetOrganizationsPageResponses[keyof GetOrganizationsPageResponses];

export type PostOrganizationData = {
    body?: Organization;
    path?: never;
    query?: never;
    url: '/o/headless-admin-user/v1.0/organizations';
};

export type PostOrganizationResponses = {
    /**
     * default response
     */
    default: Organization;
};

export type PostOrganizationResponse = PostOrganizationResponses[keyof PostOrganizationResponses];

export type PostAccountOrganizationsPageExportBatchData = {
    body?: never;
    path: {
        accountId: string;
    };
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-admin-user/v1.0/accounts/{accountId}/organizations/export-batch';
};

export type PostAccountOrganizationsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostOrganizationsPageExportBatchData = {
    body?: never;
    path?: never;
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-admin-user/v1.0/organizations/export-batch';
};

export type PostOrganizationsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeletePhoneData = {
    body?: never;
    path: {
        phoneId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/phones/{phoneId}';
};

export type DeletePhoneResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetPhoneData = {
    body?: never;
    path: {
        phoneId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/phones/{phoneId}';
};

export type GetPhoneResponses = {
    /**
     * default response
     */
    default: Phone;
};

export type GetPhoneResponse = GetPhoneResponses[keyof GetPhoneResponses];

export type PatchPhoneData = {
    body?: Phone;
    path: {
        phoneId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/phones/{phoneId}';
};

export type PatchPhoneResponses = {
    /**
     * default response
     */
    default: Phone;
};

export type PatchPhoneResponse = PatchPhoneResponses[keyof PatchPhoneResponses];

export type DeletePhoneBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-admin-user/v1.0/phones/batch';
};

export type DeletePhoneBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeletePhoneByExternalReferenceCodeData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/phones/by-external-reference-code/{externalReferenceCode}';
};

export type DeletePhoneByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetPhoneByExternalReferenceCodeData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/phones/by-external-reference-code/{externalReferenceCode}';
};

export type GetPhoneByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: Phone;
};

export type GetPhoneByExternalReferenceCodeResponse = GetPhoneByExternalReferenceCodeResponses[keyof GetPhoneByExternalReferenceCodeResponses];

export type PatchPhoneByExternalReferenceCodeData = {
    body?: Phone;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/phones/by-external-reference-code/{externalReferenceCode}';
};

export type PatchPhoneByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: Phone;
};

export type PatchPhoneByExternalReferenceCodeResponse = PatchPhoneByExternalReferenceCodeResponses[keyof PatchPhoneByExternalReferenceCodeResponses];

export type GetAccountByExternalReferenceCodePhonesPageData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: {
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/phones';
};

export type GetAccountByExternalReferenceCodePhonesPageResponses = {
    /**
     * default response
     */
    default: PagePhone;
};

export type GetAccountByExternalReferenceCodePhonesPageResponse = GetAccountByExternalReferenceCodePhonesPageResponses[keyof GetAccountByExternalReferenceCodePhonesPageResponses];

export type GetAccountPhonesPageData = {
    body?: never;
    path: {
        accountId: string;
    };
    query?: {
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/accounts/{accountId}/phones';
};

export type GetAccountPhonesPageResponses = {
    /**
     * default response
     */
    default: PagePhone;
};

export type GetAccountPhonesPageResponse = GetAccountPhonesPageResponses[keyof GetAccountPhonesPageResponses];

export type GetOrganizationByExternalReferenceCodePhonesPageData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: {
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/organizations/by-external-reference-code/{externalReferenceCode}/phones';
};

export type GetOrganizationByExternalReferenceCodePhonesPageResponses = {
    /**
     * default response
     */
    default: PagePhone;
};

export type GetOrganizationByExternalReferenceCodePhonesPageResponse = GetOrganizationByExternalReferenceCodePhonesPageResponses[keyof GetOrganizationByExternalReferenceCodePhonesPageResponses];

export type GetOrganizationPhonesPageData = {
    body?: never;
    path: {
        organizationId: string;
    };
    query?: {
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/organizations/{organizationId}/phones';
};

export type GetOrganizationPhonesPageResponses = {
    /**
     * default response
     */
    default: PagePhone;
};

export type GetOrganizationPhonesPageResponse = GetOrganizationPhonesPageResponses[keyof GetOrganizationPhonesPageResponses];

export type GetUserAccountByExternalReferenceCodePhonesPageData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: {
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/user-accounts/by-external-reference-code/{externalReferenceCode}/phones';
};

export type GetUserAccountByExternalReferenceCodePhonesPageResponses = {
    /**
     * default response
     */
    default: PagePhone;
};

export type GetUserAccountByExternalReferenceCodePhonesPageResponse = GetUserAccountByExternalReferenceCodePhonesPageResponses[keyof GetUserAccountByExternalReferenceCodePhonesPageResponses];

export type GetUserAccountPhonesPageData = {
    body?: never;
    path: {
        userAccountId: string;
    };
    query?: {
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/user-accounts/{userAccountId}/phones';
};

export type GetUserAccountPhonesPageResponses = {
    /**
     * default response
     */
    default: PagePhone;
};

export type GetUserAccountPhonesPageResponse = GetUserAccountPhonesPageResponses[keyof GetUserAccountPhonesPageResponses];

export type PostAccountPhonesPageExportBatchData = {
    body?: never;
    path: {
        accountId: string;
    };
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-admin-user/v1.0/accounts/{accountId}/phones/export-batch';
};

export type PostAccountPhonesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostOrganizationPhonesPageExportBatchData = {
    body?: never;
    path: {
        organizationId: string;
    };
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-admin-user/v1.0/organizations/{organizationId}/phones/export-batch';
};

export type PostOrganizationPhonesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostUserAccountPhonesPageExportBatchData = {
    body?: never;
    path: {
        userAccountId: string;
    };
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-admin-user/v1.0/user-accounts/{userAccountId}/phones/export-batch';
};

export type PostUserAccountPhonesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeletePostalAddressData = {
    body?: never;
    path: {
        postalAddressId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/postal-addresses/{postalAddressId}';
};

export type DeletePostalAddressResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetPostalAddressData = {
    body?: never;
    path: {
        postalAddressId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/postal-addresses/{postalAddressId}';
};

export type GetPostalAddressResponses = {
    /**
     * default response
     */
    default: PostalAddress;
};

export type GetPostalAddressResponse = GetPostalAddressResponses[keyof GetPostalAddressResponses];

export type PatchPostalAddressData = {
    body?: PostalAddress;
    path: {
        postalAddressId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/postal-addresses/{postalAddressId}';
};

export type PatchPostalAddressResponses = {
    /**
     * default response
     */
    default: PostalAddress;
};

export type PatchPostalAddressResponse = PatchPostalAddressResponses[keyof PatchPostalAddressResponses];

export type PutPostalAddressData = {
    body?: PostalAddress;
    path: {
        postalAddressId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/postal-addresses/{postalAddressId}';
};

export type PutPostalAddressResponses = {
    /**
     * default response
     */
    default: PostalAddress;
};

export type PutPostalAddressResponse = PutPostalAddressResponses[keyof PutPostalAddressResponses];

export type DeletePostalAddressBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-admin-user/v1.0/postal-addresses/batch';
};

export type DeletePostalAddressBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutPostalAddressBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-admin-user/v1.0/postal-addresses/batch';
};

export type PutPostalAddressBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeletePostalAddressByExternalReferenceCodeData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/postal-addresses/by-external-reference-code/{externalReferenceCode}';
};

export type DeletePostalAddressByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetPostalAddressByExternalReferenceCodeData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/postal-addresses/by-external-reference-code/{externalReferenceCode}';
};

export type GetPostalAddressByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: PostalAddress;
};

export type GetPostalAddressByExternalReferenceCodeResponse = GetPostalAddressByExternalReferenceCodeResponses[keyof GetPostalAddressByExternalReferenceCodeResponses];

export type PatchPostalAddressByExternalReferenceCodeData = {
    body?: PostalAddress;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/postal-addresses/by-external-reference-code/{externalReferenceCode}';
};

export type PatchPostalAddressByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: PostalAddress;
};

export type PatchPostalAddressByExternalReferenceCodeResponse = PatchPostalAddressByExternalReferenceCodeResponses[keyof PatchPostalAddressByExternalReferenceCodeResponses];

export type PutPostalAddressByExternalReferenceCodeData = {
    body?: PostalAddress;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/postal-addresses/by-external-reference-code/{externalReferenceCode}';
};

export type PutPostalAddressByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: PostalAddress;
};

export type PutPostalAddressByExternalReferenceCodeResponse = PutPostalAddressByExternalReferenceCodeResponses[keyof PutPostalAddressByExternalReferenceCodeResponses];

export type GetAccountByExternalReferenceCodePostalAddressesPageData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: {
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/postal-addresses';
};

export type GetAccountByExternalReferenceCodePostalAddressesPageResponses = {
    /**
     * default response
     */
    default: PagePostalAddress;
};

export type GetAccountByExternalReferenceCodePostalAddressesPageResponse = GetAccountByExternalReferenceCodePostalAddressesPageResponses[keyof GetAccountByExternalReferenceCodePostalAddressesPageResponses];

export type GetAccountPostalAddressesPageData = {
    body?: never;
    path: {
        accountId: string;
    };
    query?: {
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/accounts/{accountId}/postal-addresses';
};

export type GetAccountPostalAddressesPageResponses = {
    /**
     * default response
     */
    default: PagePostalAddress;
};

export type GetAccountPostalAddressesPageResponse = GetAccountPostalAddressesPageResponses[keyof GetAccountPostalAddressesPageResponses];

export type PostAccountPostalAddressData = {
    body?: PostalAddress;
    path: {
        accountId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts/{accountId}/postal-addresses';
};

export type PostAccountPostalAddressResponses = {
    /**
     * default response
     */
    default: PostalAddress;
};

export type PostAccountPostalAddressResponse = PostAccountPostalAddressResponses[keyof PostAccountPostalAddressResponses];

export type GetOrganizationByExternalReferenceCodePostalAddressesPageData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: {
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/organizations/by-external-reference-code/{externalReferenceCode}/postal-addresses';
};

export type GetOrganizationByExternalReferenceCodePostalAddressesPageResponses = {
    /**
     * default response
     */
    default: PagePostalAddress;
};

export type GetOrganizationByExternalReferenceCodePostalAddressesPageResponse = GetOrganizationByExternalReferenceCodePostalAddressesPageResponses[keyof GetOrganizationByExternalReferenceCodePostalAddressesPageResponses];

export type GetOrganizationPostalAddressesPageData = {
    body?: never;
    path: {
        organizationId: string;
    };
    query?: {
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/organizations/{organizationId}/postal-addresses';
};

export type GetOrganizationPostalAddressesPageResponses = {
    /**
     * default response
     */
    default: PagePostalAddress;
};

export type GetOrganizationPostalAddressesPageResponse = GetOrganizationPostalAddressesPageResponses[keyof GetOrganizationPostalAddressesPageResponses];

export type GetUserAccountByExternalReferenceCodePostalAddressesPageData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: {
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/user-accounts/by-external-reference-code/{externalReferenceCode}/postal-addresses';
};

export type GetUserAccountByExternalReferenceCodePostalAddressesPageResponses = {
    /**
     * default response
     */
    default: PagePostalAddress;
};

export type GetUserAccountByExternalReferenceCodePostalAddressesPageResponse = GetUserAccountByExternalReferenceCodePostalAddressesPageResponses[keyof GetUserAccountByExternalReferenceCodePostalAddressesPageResponses];

export type GetUserAccountPostalAddressesPageData = {
    body?: never;
    path: {
        userAccountId: string;
    };
    query?: {
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/user-accounts/{userAccountId}/postal-addresses';
};

export type GetUserAccountPostalAddressesPageResponses = {
    /**
     * default response
     */
    default: PagePostalAddress;
};

export type GetUserAccountPostalAddressesPageResponse = GetUserAccountPostalAddressesPageResponses[keyof GetUserAccountPostalAddressesPageResponses];

export type PostAccountPostalAddressBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        accountId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-admin-user/v1.0/accounts/{accountId}/postal-addresses/batch';
};

export type PostAccountPostalAddressBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostAccountPostalAddressesPageExportBatchData = {
    body?: never;
    path: {
        accountId: string;
    };
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-admin-user/v1.0/accounts/{accountId}/postal-addresses/export-batch';
};

export type PostAccountPostalAddressesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostOrganizationPostalAddressesPageExportBatchData = {
    body?: never;
    path: {
        organizationId: string;
    };
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-admin-user/v1.0/organizations/{organizationId}/postal-addresses/export-batch';
};

export type PostOrganizationPostalAddressesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostUserAccountPostalAddressesPageExportBatchData = {
    body?: never;
    path: {
        userAccountId: string;
    };
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-admin-user/v1.0/user-accounts/{userAccountId}/postal-addresses/export-batch';
};

export type PostUserAccountPostalAddressesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteOrganizationRoleByExternalReferenceCodeUserAccountAssociationData = {
    body?: never;
    path: {
        externalReferenceCode: string;
        userAccountId: string;
        organizationId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/roles/by-external-reference-code/{externalReferenceCode}/association/user-account/{userAccountId}/organization/{organizationId}';
};

export type DeleteOrganizationRoleByExternalReferenceCodeUserAccountAssociationResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostOrganizationRoleByExternalReferenceCodeUserAccountAssociationData = {
    body?: never;
    path: {
        externalReferenceCode: string;
        userAccountId: string;
        organizationId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/roles/by-external-reference-code/{externalReferenceCode}/association/user-account/{userAccountId}/organization/{organizationId}';
};

export type PostOrganizationRoleByExternalReferenceCodeUserAccountAssociationResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteOrganizationRoleUserAccountAssociationData = {
    body?: never;
    path: {
        roleId: string;
        userAccountId: string;
        organizationId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/roles/{roleId}/association/user-account/{userAccountId}/organization/{organizationId}';
};

export type DeleteOrganizationRoleUserAccountAssociationResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostOrganizationRoleUserAccountAssociationData = {
    body?: never;
    path: {
        roleId: string;
        userAccountId: string;
        organizationId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/roles/{roleId}/association/user-account/{userAccountId}/organization/{organizationId}';
};

export type PostOrganizationRoleUserAccountAssociationResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteRoleData = {
    body?: never;
    path: {
        roleId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/roles/{roleId}';
};

export type DeleteRoleResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetRoleData = {
    body?: never;
    path: {
        roleId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/roles/{roleId}';
};

export type GetRoleResponses = {
    /**
     * default response
     */
    default: Role;
};

export type GetRoleResponse = GetRoleResponses[keyof GetRoleResponses];

export type PatchRoleData = {
    body?: Role;
    path: {
        roleId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/roles/{roleId}';
};

export type PatchRoleResponses = {
    /**
     * default response
     */
    default: Role;
};

export type PatchRoleResponse = PatchRoleResponses[keyof PatchRoleResponses];

export type PutRoleData = {
    body?: Role;
    path: {
        roleId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/roles/{roleId}';
};

export type PutRoleResponses = {
    /**
     * default response
     */
    default: Role;
};

export type PutRoleResponse = PutRoleResponses[keyof PutRoleResponses];

export type DeleteRoleBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-admin-user/v1.0/roles/batch';
};

export type DeleteRoleBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostRoleBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-admin-user/v1.0/roles/batch';
};

export type PostRoleBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutRoleBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-admin-user/v1.0/roles/batch';
};

export type PutRoleBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteRoleByExternalReferenceCodeData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/roles/by-external-reference-code/{externalReferenceCode}';
};

export type DeleteRoleByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetRoleByExternalReferenceCodeData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/roles/by-external-reference-code/{externalReferenceCode}';
};

export type GetRoleByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: Role;
};

export type GetRoleByExternalReferenceCodeResponse = GetRoleByExternalReferenceCodeResponses[keyof GetRoleByExternalReferenceCodeResponses];

export type PatchRoleByExternalReferenceCodeData = {
    body?: Role;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/roles/by-external-reference-code/{externalReferenceCode}';
};

export type PatchRoleByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: Role;
};

export type PatchRoleByExternalReferenceCodeResponse = PatchRoleByExternalReferenceCodeResponses[keyof PatchRoleByExternalReferenceCodeResponses];

export type PutRoleByExternalReferenceCodeData = {
    body?: Role;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/roles/by-external-reference-code/{externalReferenceCode}';
};

export type PutRoleByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: Role;
};

export type PutRoleByExternalReferenceCodeResponse = PutRoleByExternalReferenceCodeResponses[keyof PutRoleByExternalReferenceCodeResponses];

export type DeleteRoleByExternalReferenceCodeUserAccountAssociationData = {
    body?: never;
    path: {
        externalReferenceCode: string;
        userAccountId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/roles/by-external-reference-code/{externalReferenceCode}/association/user-account/{userAccountId}';
};

export type DeleteRoleByExternalReferenceCodeUserAccountAssociationResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostRoleByExternalReferenceCodeUserAccountAssociationData = {
    body?: never;
    path: {
        externalReferenceCode: string;
        userAccountId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/roles/by-external-reference-code/{externalReferenceCode}/association/user-account/{userAccountId}';
};

export type PostRoleByExternalReferenceCodeUserAccountAssociationResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteRoleUserAccountAssociationData = {
    body?: never;
    path: {
        roleId: string;
        userAccountId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/roles/{roleId}/association/user-account/{userAccountId}';
};

export type DeleteRoleUserAccountAssociationResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostRoleUserAccountAssociationData = {
    body?: never;
    path: {
        roleId: string;
        userAccountId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/roles/{roleId}/association/user-account/{userAccountId}';
};

export type PostRoleUserAccountAssociationResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteSiteRoleByExternalReferenceCodeUserAccountAssociationData = {
    body?: never;
    path: {
        externalReferenceCode: string;
        userAccountId: string;
        siteId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/roles/by-external-reference-code/{externalReferenceCode}/association/user-account/{userAccountId}/site/{siteId}';
};

export type DeleteSiteRoleByExternalReferenceCodeUserAccountAssociationResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostSiteRoleByExternalReferenceCodeUserAccountAssociationData = {
    body?: never;
    path: {
        externalReferenceCode: string;
        userAccountId: string;
        siteId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/roles/by-external-reference-code/{externalReferenceCode}/association/user-account/{userAccountId}/site/{siteId}';
};

export type PostSiteRoleByExternalReferenceCodeUserAccountAssociationResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteSiteRoleUserAccountAssociationData = {
    body?: never;
    path: {
        roleId: string;
        userAccountId: string;
        siteId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/roles/{roleId}/association/user-account/{userAccountId}/site/{siteId}';
};

export type DeleteSiteRoleUserAccountAssociationResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostSiteRoleUserAccountAssociationData = {
    body?: never;
    path: {
        roleId: string;
        userAccountId: string;
        siteId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/roles/{roleId}/association/user-account/{userAccountId}/site/{siteId}';
};

export type PostSiteRoleUserAccountAssociationResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetRolesPageData = {
    body?: never;
    path?: never;
    query?: {
        fields?: string;
        filter?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        types?: string;
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/roles';
};

export type GetRolesPageResponses = {
    /**
     * default response
     */
    default: PageRole;
};

export type GetRolesPageResponse = GetRolesPageResponses[keyof GetRolesPageResponses];

export type PostRoleData = {
    body?: Role;
    path?: never;
    query?: never;
    url: '/o/headless-admin-user/v1.0/roles';
};

export type PostRoleResponses = {
    /**
     * default response
     */
    default: Role;
};

export type PostRoleResponse = PostRoleResponses[keyof PostRoleResponses];

export type PostRolesPageExportBatchData = {
    body?: never;
    path?: never;
    query?: {
        filter?: string;
        search?: string;
        types?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-admin-user/v1.0/roles/export-batch';
};

export type PostRolesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSiteSegmentsPageData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        page?: string;
        pageSize?: string;
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/sites/{siteId}/segments';
};

export type GetSiteSegmentsPageResponses = {
    /**
     * default response
     */
    default: PageSegment;
};

export type GetSiteSegmentsPageResponse = GetSiteSegmentsPageResponses[keyof GetSiteSegmentsPageResponses];

export type GetSiteUserAccountSegmentsPageData = {
    body?: never;
    path: {
        siteId: string;
        userAccountId: string;
    };
    query?: {
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/sites/{siteId}/user-accounts/{userAccountId}/segments';
};

export type GetSiteUserAccountSegmentsPageResponses = {
    /**
     * default response
     */
    default: PageSegment;
};

export type GetSiteUserAccountSegmentsPageResponse = GetSiteUserAccountSegmentsPageResponses[keyof GetSiteUserAccountSegmentsPageResponses];

export type PostSiteSegmentsPageExportBatchData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-admin-user/v1.0/sites/{siteId}/segments/export-batch';
};

export type PostSiteSegmentsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSegmentUserAccountsPageData = {
    body?: never;
    path: {
        segmentId: string;
    };
    query?: {
        page?: string;
        pageSize?: string;
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/segments/{segmentId}/user-accounts';
};

export type GetSegmentUserAccountsPageResponses = {
    /**
     * default response
     */
    default: PageSegmentUser;
};

export type GetSegmentUserAccountsPageResponse = GetSegmentUserAccountsPageResponses[keyof GetSegmentUserAccountsPageResponses];

export type GetMyUserAccountSharedAssetsSharedByMePageData = {
    body?: never;
    path?: never;
    query?: {
        aggregationTerms?: string;
        filter?: string;
        page?: string;
        pageSize?: string;
        search?: string;
        sort?: string;
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/my-user-account/shared-assets/shared-by-me';
};

export type GetMyUserAccountSharedAssetsSharedByMePageResponses = {
    /**
     * default response
     */
    default: PageSharedAsset;
};

export type GetMyUserAccountSharedAssetsSharedByMePageResponse = GetMyUserAccountSharedAssetsSharedByMePageResponses[keyof GetMyUserAccountSharedAssetsSharedByMePageResponses];

export type GetMyUserAccountSharedAssetsSharedWithMePageData = {
    body?: never;
    path?: never;
    query?: {
        aggregationTerms?: string;
        filter?: string;
        page?: string;
        pageSize?: string;
        search?: string;
        sort?: string;
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/my-user-account/shared-assets/shared-with-me';
};

export type GetMyUserAccountSharedAssetsSharedWithMePageResponses = {
    /**
     * default response
     */
    default: PageSharedAsset;
};

export type GetMyUserAccountSharedAssetsSharedWithMePageResponse = GetMyUserAccountSharedAssetsSharedWithMePageResponses[keyof GetMyUserAccountSharedAssetsSharedWithMePageResponses];

export type GetMyUserAccountSitesPageData = {
    body?: never;
    path?: never;
    query?: {
        page?: string;
        pageSize?: string;
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/my-user-account/sites';
};

export type GetMyUserAccountSitesPageResponses = {
    /**
     * default response
     */
    default: PageSite;
};

export type GetMyUserAccountSitesPageResponse = GetMyUserAccountSitesPageResponses[keyof GetMyUserAccountSitesPageResponses];

export type GetSiteData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/sites/{siteId}';
};

export type GetSiteResponses = {
    /**
     * default response
     */
    default: Site;
};

export type GetSiteResponse = GetSiteResponses[keyof GetSiteResponses];

export type GetSiteByFriendlyUrlPathData = {
    body?: never;
    path: {
        friendlyUrlPath: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/sites/by-friendly-url-path/{friendlyUrlPath}';
};

export type GetSiteByFriendlyUrlPathResponses = {
    /**
     * default response
     */
    default: Site;
};

export type GetSiteByFriendlyUrlPathResponse = GetSiteByFriendlyUrlPathResponses[keyof GetSiteByFriendlyUrlPathResponses];

export type DeleteMyUserAccountSubscriptionData = {
    body?: never;
    path: {
        subscriptionId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/my-user-account/subscriptions/{subscriptionId}';
};

export type DeleteMyUserAccountSubscriptionResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetMyUserAccountSubscriptionData = {
    body?: never;
    path: {
        subscriptionId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/my-user-account/subscriptions/{subscriptionId}';
};

export type GetMyUserAccountSubscriptionResponses = {
    /**
     * default response
     */
    default: Subscription;
};

export type GetMyUserAccountSubscriptionResponse = GetMyUserAccountSubscriptionResponses[keyof GetMyUserAccountSubscriptionResponses];

export type GetMyUserAccountSubscriptionsPageData = {
    body?: never;
    path?: never;
    query?: {
        contentType?: string;
        page?: string;
        pageSize?: string;
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/my-user-account/subscriptions';
};

export type GetMyUserAccountSubscriptionsPageResponses = {
    /**
     * default response
     */
    default: PageSubscription;
};

export type GetMyUserAccountSubscriptionsPageResponse = GetMyUserAccountSubscriptionsPageResponses[keyof GetMyUserAccountSubscriptionsPageResponses];

export type GetUserAccountEmailVerificationTicketData = {
    body?: never;
    path: {
        userAccountId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/user-accounts/{userAccountId}/email-verification-ticket';
};

export type GetUserAccountEmailVerificationTicketResponses = {
    /**
     * default response
     */
    default: Ticket;
};

export type GetUserAccountEmailVerificationTicketResponse = GetUserAccountEmailVerificationTicketResponses[keyof GetUserAccountEmailVerificationTicketResponses];

export type GetUserAccountPasswordResetTicketData = {
    body?: never;
    path: {
        userAccountId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/user-accounts/{userAccountId}/password-reset-ticket';
};

export type GetUserAccountPasswordResetTicketResponses = {
    /**
     * default response
     */
    default: Ticket;
};

export type GetUserAccountPasswordResetTicketResponse = GetUserAccountPasswordResetTicketResponses[keyof GetUserAccountPasswordResetTicketResponses];

export type GetUserAccountFullNameDefinitionData = {
    body?: never;
    path?: never;
    query?: {
        languageId?: string;
    };
    url: '/o/headless-admin-user/v1.0/user-account-full-name-definition';
};

export type GetUserAccountFullNameDefinitionResponses = {
    /**
     * default response
     */
    default: UserAccountFullNameDefinition;
};

export type GetUserAccountFullNameDefinitionResponse = GetUserAccountFullNameDefinitionResponses[keyof GetUserAccountFullNameDefinitionResponses];

export type DeleteAccountByExternalReferenceCodeUserAccountByExternalReferenceCodeData = {
    body?: never;
    path: {
        accountExternalReferenceCode: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{accountExternalReferenceCode}/user-accounts/by-external-reference-code/{externalReferenceCode}';
};

export type DeleteAccountByExternalReferenceCodeUserAccountByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetAccountByExternalReferenceCodeUserAccountByExternalReferenceCodeData = {
    body?: never;
    path: {
        accountExternalReferenceCode: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{accountExternalReferenceCode}/user-accounts/by-external-reference-code/{externalReferenceCode}';
};

export type GetAccountByExternalReferenceCodeUserAccountByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: UserAccount;
};

export type GetAccountByExternalReferenceCodeUserAccountByExternalReferenceCodeResponse = GetAccountByExternalReferenceCodeUserAccountByExternalReferenceCodeResponses[keyof GetAccountByExternalReferenceCodeUserAccountByExternalReferenceCodeResponses];

export type PostAccountByExternalReferenceCodeUserAccountByExternalReferenceCodeData = {
    body?: never;
    path: {
        accountExternalReferenceCode: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{accountExternalReferenceCode}/user-accounts/by-external-reference-code/{externalReferenceCode}';
};

export type PostAccountByExternalReferenceCodeUserAccountByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteAccountUserAccountData = {
    body?: never;
    path: {
        accountId: string;
        userAccountId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts/{accountId}/user-accounts/{userAccountId}';
};

export type DeleteAccountUserAccountResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetAccountUserAccountData = {
    body?: never;
    path: {
        accountId: string;
        userAccountId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts/{accountId}/user-accounts/{userAccountId}';
};

export type GetAccountUserAccountResponses = {
    /**
     * default response
     */
    default: UserAccount;
};

export type GetAccountUserAccountResponse = GetAccountUserAccountResponses[keyof GetAccountUserAccountResponses];

export type DeleteAccountUserAccountByEmailAddressData = {
    body?: never;
    path: {
        accountId: string;
        emailAddress: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts/{accountId}/user-accounts/by-email-address/{emailAddress}';
};

export type DeleteAccountUserAccountByEmailAddressResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostAccountUserAccountByEmailAddressData = {
    body?: never;
    path: {
        accountId: string;
        emailAddress: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts/{accountId}/user-accounts/by-email-address/{emailAddress}';
};

export type PostAccountUserAccountByEmailAddressResponses = {
    /**
     * default response
     */
    default: UserAccount;
};

export type PostAccountUserAccountByEmailAddressResponse = PostAccountUserAccountByEmailAddressResponses[keyof PostAccountUserAccountByEmailAddressResponses];

export type DeleteAccountUserAccountByExternalReferenceCodeByEmailAddressData = {
    body?: never;
    path: {
        externalReferenceCode: string;
        emailAddress: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/user-accounts/by-email-address/{emailAddress}';
};

export type DeleteAccountUserAccountByExternalReferenceCodeByEmailAddressResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostAccountUserAccountByExternalReferenceCodeByEmailAddressData = {
    body?: never;
    path: {
        externalReferenceCode: string;
        emailAddress: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/user-accounts/by-email-address/{emailAddress}';
};

export type PostAccountUserAccountByExternalReferenceCodeByEmailAddressResponses = {
    /**
     * default response
     */
    default: UserAccount;
};

export type PostAccountUserAccountByExternalReferenceCodeByEmailAddressResponse = PostAccountUserAccountByExternalReferenceCodeByEmailAddressResponses[keyof PostAccountUserAccountByExternalReferenceCodeByEmailAddressResponses];

export type DeleteAccountUserAccountsByEmailAddressData = {
    body?: Array<string>;
    path: {
        accountId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts/{accountId}/user-accounts/by-email-address';
};

export type DeleteAccountUserAccountsByEmailAddressResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostAccountUserAccountsByEmailAddressData = {
    body?: Array<string>;
    path: {
        accountId: string;
    };
    query?: {
        accountRoleIds?: string;
    };
    url: '/o/headless-admin-user/v1.0/accounts/{accountId}/user-accounts/by-email-address';
};

export type PostAccountUserAccountsByEmailAddressResponses = {
    /**
     * default response
     */
    default: PageUserAccount;
};

export type PostAccountUserAccountsByEmailAddressResponse = PostAccountUserAccountsByEmailAddressResponses[keyof PostAccountUserAccountsByEmailAddressResponses];

export type DeleteAccountUserAccountsByExternalReferenceCodeByEmailAddressData = {
    body?: Array<string>;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/user-accounts/by-email-address';
};

export type DeleteAccountUserAccountsByExternalReferenceCodeByEmailAddressResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostAccountUserAccountsByExternalReferenceCodeByEmailAddressData = {
    body?: Array<string>;
    path: {
        externalReferenceCode: string;
    };
    query?: {
        accountRoleIds?: string;
    };
    url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/user-accounts/by-email-address';
};

export type PostAccountUserAccountsByExternalReferenceCodeByEmailAddressResponses = {
    /**
     * default response
     */
    default: PageUserAccount;
};

export type PostAccountUserAccountsByExternalReferenceCodeByEmailAddressResponse = PostAccountUserAccountsByExternalReferenceCodeByEmailAddressResponses[keyof PostAccountUserAccountsByExternalReferenceCodeByEmailAddressResponses];

export type DeleteUserAccountData = {
    body?: never;
    path: {
        userAccountId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/user-accounts/{userAccountId}';
};

export type DeleteUserAccountResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetUserAccountData = {
    body?: never;
    path: {
        userAccountId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/user-accounts/{userAccountId}';
};

export type GetUserAccountResponses = {
    /**
     * default response
     */
    default: UserAccount;
};

export type GetUserAccountResponse = GetUserAccountResponses[keyof GetUserAccountResponses];

export type PatchUserAccountData = {
    body?: UserAccount;
    path: {
        userAccountId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/user-accounts/{userAccountId}';
};

export type PatchUserAccountResponses = {
    /**
     * default response
     */
    default: UserAccount;
};

export type PatchUserAccountResponse = PatchUserAccountResponses[keyof PatchUserAccountResponses];

export type PutUserAccountData = {
    body?: UserAccount;
    path: {
        userAccountId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/user-accounts/{userAccountId}';
};

export type PutUserAccountResponses = {
    /**
     * default response
     */
    default: UserAccount;
};

export type PutUserAccountResponse = PutUserAccountResponses[keyof PutUserAccountResponses];

export type DeleteUserAccountBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-admin-user/v1.0/user-accounts/batch';
};

export type DeleteUserAccountBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostUserAccountBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-admin-user/v1.0/user-accounts/batch';
};

export type PostUserAccountBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutUserAccountBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-admin-user/v1.0/user-accounts/batch';
};

export type PutUserAccountBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteUserAccountByExternalReferenceCodeData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/user-accounts/by-external-reference-code/{externalReferenceCode}';
};

export type DeleteUserAccountByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetUserAccountByExternalReferenceCodeData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/user-accounts/by-external-reference-code/{externalReferenceCode}';
};

export type GetUserAccountByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: UserAccount;
};

export type GetUserAccountByExternalReferenceCodeResponse = GetUserAccountByExternalReferenceCodeResponses[keyof GetUserAccountByExternalReferenceCodeResponses];

export type PatchUserAccountByExternalReferenceCodeData = {
    body?: UserAccount;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/user-accounts/by-external-reference-code/{externalReferenceCode}';
};

export type PatchUserAccountByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: UserAccount;
};

export type PatchUserAccountByExternalReferenceCodeResponse = PatchUserAccountByExternalReferenceCodeResponses[keyof PatchUserAccountByExternalReferenceCodeResponses];

export type PutUserAccountByExternalReferenceCodeData = {
    body?: UserAccount;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/user-accounts/by-external-reference-code/{externalReferenceCode}';
};

export type PutUserAccountByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: UserAccount;
};

export type PutUserAccountByExternalReferenceCodeResponse = PutUserAccountByExternalReferenceCodeResponses[keyof PutUserAccountByExternalReferenceCodeResponses];

export type GetAccountUserAccountsByExternalReferenceCodePageData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: {
        filter?: string;
        page?: string;
        pageSize?: string;
        search?: string;
        sort?: string;
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/user-accounts';
};

export type GetAccountUserAccountsByExternalReferenceCodePageResponses = {
    /**
     * default response
     */
    default: PageUserAccount;
};

export type GetAccountUserAccountsByExternalReferenceCodePageResponse = GetAccountUserAccountsByExternalReferenceCodePageResponses[keyof GetAccountUserAccountsByExternalReferenceCodePageResponses];

export type PostAccountUserAccountByExternalReferenceCodeData = {
    body?: UserAccount;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/user-accounts';
};

export type PostAccountUserAccountByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: UserAccount;
};

export type PostAccountUserAccountByExternalReferenceCodeResponse = PostAccountUserAccountByExternalReferenceCodeResponses[keyof PostAccountUserAccountByExternalReferenceCodeResponses];

export type GetAccountUserAccountsPageData = {
    body?: never;
    path: {
        accountId: string;
    };
    query?: {
        filter?: string;
        page?: string;
        pageSize?: string;
        search?: string;
        sort?: string;
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/accounts/{accountId}/user-accounts';
};

export type GetAccountUserAccountsPageResponses = {
    /**
     * default response
     */
    default: PageUserAccount;
};

export type GetAccountUserAccountsPageResponse = GetAccountUserAccountsPageResponses[keyof GetAccountUserAccountsPageResponses];

export type PostAccountUserAccountData = {
    body?: UserAccount;
    path: {
        accountId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts/{accountId}/user-accounts';
};

export type PostAccountUserAccountResponses = {
    /**
     * default response
     */
    default: UserAccount;
};

export type PostAccountUserAccountResponse = PostAccountUserAccountResponses[keyof PostAccountUserAccountResponses];

export type GetMyUserAccountData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/o/headless-admin-user/v1.0/my-user-account';
};

export type GetMyUserAccountResponses = {
    /**
     * default response
     */
    default: UserAccount;
};

export type GetMyUserAccountResponse = GetMyUserAccountResponses[keyof GetMyUserAccountResponses];

export type GetOrganizationByExternalReferenceCodeUserAccountsPageData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: {
        filter?: string;
        page?: string;
        pageSize?: string;
        search?: string;
        sort?: string;
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/organizations/by-external-reference-code/{externalReferenceCode}/user-accounts';
};

export type GetOrganizationByExternalReferenceCodeUserAccountsPageResponses = {
    /**
     * default response
     */
    default: PageUserAccount;
};

export type GetOrganizationByExternalReferenceCodeUserAccountsPageResponse = GetOrganizationByExternalReferenceCodeUserAccountsPageResponses[keyof GetOrganizationByExternalReferenceCodeUserAccountsPageResponses];

export type GetOrganizationUserAccountsPageData = {
    body?: never;
    path: {
        organizationId: string;
    };
    query?: {
        filter?: string;
        page?: string;
        pageSize?: string;
        search?: string;
        sort?: string;
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/organizations/{organizationId}/user-accounts';
};

export type GetOrganizationUserAccountsPageResponses = {
    /**
     * default response
     */
    default: PageUserAccount;
};

export type GetOrganizationUserAccountsPageResponse = GetOrganizationUserAccountsPageResponses[keyof GetOrganizationUserAccountsPageResponses];

export type GetSiteAccountUserAccountSelectedData = {
    body?: never;
    path: {
        siteId: string;
        accountId: string;
        userAccountId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/sites/{siteId}/accounts/{accountId}/user-accounts/{userAccountId}/selected';
};

export type GetSiteAccountUserAccountSelectedResponses = {
    /**
     * default response
     */
    default: boolean;
};

export type GetSiteAccountUserAccountSelectedResponse = GetSiteAccountUserAccountSelectedResponses[keyof GetSiteAccountUserAccountSelectedResponses];

export type PatchSiteAccountUserAccountSelectedData = {
    body?: never;
    path: {
        siteId: string;
        accountId: string;
        userAccountId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/sites/{siteId}/accounts/{accountId}/user-accounts/{userAccountId}/selected';
};

export type PatchSiteAccountUserAccountSelectedResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSiteByFriendlyUrlPathAccountByExternalReferenceCodeAccountExternalReferenceCodeUserAccountByExternalReferenceCodeUserAccountExternalReferenceCodeSelectedData = {
    body?: never;
    path: {
        friendlyUrlPath: string;
        accountExternalReferenceCode: string;
        userAccountExternalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/sites/by-friendly-url-path/{friendlyUrlPath}/accounts/by-external-reference-code/{accountExternalReferenceCode}/user-accounts/by-external-reference-code/{userAccountExternalReferenceCode}/selected';
};

export type GetSiteByFriendlyUrlPathAccountByExternalReferenceCodeAccountExternalReferenceCodeUserAccountByExternalReferenceCodeUserAccountExternalReferenceCodeSelectedResponses = {
    /**
     * default response
     */
    default: boolean;
};

export type GetSiteByFriendlyUrlPathAccountByExternalReferenceCodeAccountExternalReferenceCodeUserAccountByExternalReferenceCodeUserAccountExternalReferenceCodeSelectedResponse = GetSiteByFriendlyUrlPathAccountByExternalReferenceCodeAccountExternalReferenceCodeUserAccountByExternalReferenceCodeUserAccountExternalReferenceCodeSelectedResponses[keyof GetSiteByFriendlyUrlPathAccountByExternalReferenceCodeAccountExternalReferenceCodeUserAccountByExternalReferenceCodeUserAccountExternalReferenceCodeSelectedResponses];

export type PatchSiteByFriendlyUrlPathAccountByExternalReferenceCodeAccountExternalReferenceCodeUserAccountByExternalReferenceCodeUserAccountExternalReferenceCodeSelectedData = {
    body?: never;
    path: {
        friendlyUrlPath: string;
        accountExternalReferenceCode: string;
        userAccountExternalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/sites/by-friendly-url-path/{friendlyUrlPath}/accounts/by-external-reference-code/{accountExternalReferenceCode}/user-accounts/by-external-reference-code/{userAccountExternalReferenceCode}/selected';
};

export type PatchSiteByFriendlyUrlPathAccountByExternalReferenceCodeAccountExternalReferenceCodeUserAccountByExternalReferenceCodeUserAccountExternalReferenceCodeSelectedResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSiteUserAccountsPageData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        filter?: string;
        page?: string;
        pageSize?: string;
        search?: string;
        sort?: string;
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/sites/{siteId}/user-accounts';
};

export type GetSiteUserAccountsPageResponses = {
    /**
     * default response
     */
    default: PageUserAccount;
};

export type GetSiteUserAccountsPageResponse = GetSiteUserAccountsPageResponses[keyof GetSiteUserAccountsPageResponses];

export type GetUserAccountByEmailAddressData = {
    body?: never;
    path: {
        emailAddress: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/user-accounts/by-email-address/{emailAddress}';
};

export type GetUserAccountByEmailAddressResponses = {
    /**
     * default response
     */
    default: UserAccount;
};

export type GetUserAccountByEmailAddressResponse = GetUserAccountByEmailAddressResponses[keyof GetUserAccountByEmailAddressResponses];

export type GetUserAccountsByStatusPageData = {
    body?: never;
    path: {
        status: string;
    };
    query?: {
        filter?: string;
        page?: string;
        pageSize?: string;
        search?: string;
        sort?: string;
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/user-accounts/by-status/{status}';
};

export type GetUserAccountsByStatusPageResponses = {
    /**
     * default response
     */
    default: PageUserAccount;
};

export type GetUserAccountsByStatusPageResponse = GetUserAccountsByStatusPageResponses[keyof GetUserAccountsByStatusPageResponses];

export type GetUserAccountsPageData = {
    body?: never;
    path?: never;
    query?: {
        filter?: string;
        page?: string;
        pageSize?: string;
        search?: string;
        sort?: string;
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/user-accounts';
};

export type GetUserAccountsPageResponses = {
    /**
     * default response
     */
    default: PageUserAccount;
};

export type GetUserAccountsPageResponse = GetUserAccountsPageResponses[keyof GetUserAccountsPageResponses];

export type PostUserAccountData = {
    body?: UserAccount;
    path?: never;
    query?: never;
    url: '/o/headless-admin-user/v1.0/user-accounts';
};

export type PostUserAccountResponses = {
    /**
     * default response
     */
    default: UserAccount;
};

export type PostUserAccountResponse = PostUserAccountResponses[keyof PostUserAccountResponses];

export type DeleteUserGroupByExternalReferenceCodeUsersData = {
    body?: Array<number>;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/user-groups/by-external-reference-code/{externalReferenceCode}/user-group-users';
};

export type DeleteUserGroupByExternalReferenceCodeUsersResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetUserGroupByExternalReferenceCodeUsersPageData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: {
        filter?: string;
        page?: string;
        pageSize?: string;
        search?: string;
        sort?: string;
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/user-groups/by-external-reference-code/{externalReferenceCode}/user-group-users';
};

export type GetUserGroupByExternalReferenceCodeUsersPageResponses = {
    /**
     * default response
     */
    default: PageUserAccount;
};

export type GetUserGroupByExternalReferenceCodeUsersPageResponse = GetUserGroupByExternalReferenceCodeUsersPageResponses[keyof GetUserGroupByExternalReferenceCodeUsersPageResponses];

export type PostUserGroupByExternalReferenceCodeUsersData = {
    body?: Array<number>;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/user-groups/by-external-reference-code/{externalReferenceCode}/user-group-users';
};

export type PostUserGroupByExternalReferenceCodeUsersResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteUserGroupUsersData = {
    body?: Array<number>;
    path: {
        userGroupId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/user-groups/{userGroupId}/user-group-users';
};

export type DeleteUserGroupUsersResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetUserGroupUsersPageData = {
    body?: never;
    path: {
        userGroupId: string;
    };
    query?: {
        filter?: string;
        page?: string;
        pageSize?: string;
        search?: string;
        sort?: string;
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/user-groups/{userGroupId}/user-group-users';
};

export type GetUserGroupUsersPageResponses = {
    /**
     * default response
     */
    default: PageUserAccount;
};

export type GetUserGroupUsersPageResponse = GetUserGroupUsersPageResponses[keyof GetUserGroupUsersPageResponses];

export type PostUserGroupUsersData = {
    body?: Array<number>;
    path: {
        userGroupId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/user-groups/{userGroupId}/user-group-users';
};

export type PostUserGroupUsersResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostAccountUserAccountBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        accountId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-admin-user/v1.0/accounts/{accountId}/user-accounts/batch';
};

export type PostAccountUserAccountBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostAccountUserAccountsPageExportBatchData = {
    body?: never;
    path: {
        accountId: string;
    };
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-admin-user/v1.0/accounts/{accountId}/user-accounts/export-batch';
};

export type PostAccountUserAccountsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostOrganizationUserAccountsPageExportBatchData = {
    body?: never;
    path: {
        organizationId: string;
    };
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-admin-user/v1.0/organizations/{organizationId}/user-accounts/export-batch';
};

export type PostOrganizationUserAccountsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostSiteUserAccountsPageExportBatchData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-admin-user/v1.0/sites/{siteId}/user-accounts/export-batch';
};

export type PostSiteUserAccountsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostUserAccountImageData = {
    body?: MultipartBody;
    path: {
        userAccountId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/user-accounts/{userAccountId}/image';
};

export type PostUserAccountImageResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostUserAccountsPageExportBatchData = {
    body?: never;
    path?: never;
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-admin-user/v1.0/user-accounts/export-batch';
};

export type PostUserAccountsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteUserGroupData = {
    body?: never;
    path: {
        userGroupId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/user-groups/{userGroupId}';
};

export type DeleteUserGroupResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetUserGroupData = {
    body?: never;
    path: {
        userGroupId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/user-groups/{userGroupId}';
};

export type GetUserGroupResponses = {
    /**
     * default response
     */
    default: UserGroup;
};

export type GetUserGroupResponse = GetUserGroupResponses[keyof GetUserGroupResponses];

export type PatchUserGroupData = {
    body?: UserGroup;
    path: {
        userGroupId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/user-groups/{userGroupId}';
};

export type PatchUserGroupResponses = {
    /**
     * default response
     */
    default: UserGroup;
};

export type PatchUserGroupResponse = PatchUserGroupResponses[keyof PatchUserGroupResponses];

export type PutUserGroupData = {
    body?: UserGroup;
    path: {
        userGroupId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/user-groups/{userGroupId}';
};

export type PutUserGroupResponses = {
    /**
     * default response
     */
    default: UserGroup;
};

export type PutUserGroupResponse = PutUserGroupResponses[keyof PutUserGroupResponses];

export type DeleteUserGroupBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-admin-user/v1.0/user-groups/batch';
};

export type DeleteUserGroupBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostUserGroupBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-admin-user/v1.0/user-groups/batch';
};

export type PostUserGroupBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutUserGroupBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-admin-user/v1.0/user-groups/batch';
};

export type PutUserGroupBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteUserGroupByExternalReferenceCodeData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/user-groups/by-external-reference-code/{externalReferenceCode}';
};

export type DeleteUserGroupByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetUserGroupByExternalReferenceCodeData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/user-groups/by-external-reference-code/{externalReferenceCode}';
};

export type GetUserGroupByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: UserGroup;
};

export type GetUserGroupByExternalReferenceCodeResponse = GetUserGroupByExternalReferenceCodeResponses[keyof GetUserGroupByExternalReferenceCodeResponses];

export type PatchUserGroupByExternalReferenceCodeData = {
    body?: UserGroup;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/user-groups/by-external-reference-code/{externalReferenceCode}';
};

export type PatchUserGroupByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: UserGroup;
};

export type PatchUserGroupByExternalReferenceCodeResponse = PatchUserGroupByExternalReferenceCodeResponses[keyof PatchUserGroupByExternalReferenceCodeResponses];

export type PutUserGroupByExternalReferenceCodeData = {
    body?: UserGroup;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/user-groups/by-external-reference-code/{externalReferenceCode}';
};

export type PutUserGroupByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: UserGroup;
};

export type PutUserGroupByExternalReferenceCodeResponse = PutUserGroupByExternalReferenceCodeResponses[keyof PutUserGroupByExternalReferenceCodeResponses];

export type GetUserGroupsPageData = {
    body?: never;
    path?: never;
    query?: {
        filter?: string;
        page?: string;
        pageSize?: string;
        search?: string;
        sort?: string;
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/user-groups';
};

export type GetUserGroupsPageResponses = {
    /**
     * default response
     */
    default: PageUserGroup;
};

export type GetUserGroupsPageResponse = GetUserGroupsPageResponses[keyof GetUserGroupsPageResponses];

export type PostUserGroupData = {
    body?: UserGroup;
    path?: never;
    query?: never;
    url: '/o/headless-admin-user/v1.0/user-groups';
};

export type PostUserGroupResponses = {
    /**
     * default response
     */
    default: UserGroup;
};

export type PostUserGroupResponse = PostUserGroupResponses[keyof PostUserGroupResponses];

export type GetUserUserGroupsData = {
    body?: never;
    path: {
        userAccountId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/user-accounts/{userAccountId}/user-groups';
};

export type GetUserUserGroupsResponses = {
    /**
     * default response
     */
    default: PageUserGroup;
};

export type GetUserUserGroupsResponse = GetUserUserGroupsResponses[keyof GetUserUserGroupsResponses];

export type PostUserGroupsPageExportBatchData = {
    body?: never;
    path?: never;
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-admin-user/v1.0/user-groups/export-batch';
};

export type PostUserGroupsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteWebUrlData = {
    body?: never;
    path: {
        webUrlId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/web-urls/{webUrlId}';
};

export type DeleteWebUrlResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetWebUrlData = {
    body?: never;
    path: {
        webUrlId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/web-urls/{webUrlId}';
};

export type GetWebUrlResponses = {
    /**
     * default response
     */
    default: WebUrl;
};

export type GetWebUrlResponse = GetWebUrlResponses[keyof GetWebUrlResponses];

export type PatchWebUrlData = {
    body?: WebUrl;
    path: {
        webUrlId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/web-urls/{webUrlId}';
};

export type PatchWebUrlResponses = {
    /**
     * default response
     */
    default: WebUrl;
};

export type PatchWebUrlResponse = PatchWebUrlResponses[keyof PatchWebUrlResponses];

export type DeleteWebUrlBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-admin-user/v1.0/web-urls/batch';
};

export type DeleteWebUrlBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteWebUrlByExternalReferenceCodeData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/web-urls/by-external-reference-code/{externalReferenceCode}';
};

export type DeleteWebUrlByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetWebUrlByExternalReferenceCodeData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/web-urls/by-external-reference-code/{externalReferenceCode}';
};

export type GetWebUrlByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: WebUrl;
};

export type GetWebUrlByExternalReferenceCodeResponse = GetWebUrlByExternalReferenceCodeResponses[keyof GetWebUrlByExternalReferenceCodeResponses];

export type PatchWebUrlByExternalReferenceCodeData = {
    body?: WebUrl;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/web-urls/by-external-reference-code/{externalReferenceCode}';
};

export type PatchWebUrlByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: WebUrl;
};

export type PatchWebUrlByExternalReferenceCodeResponse = PatchWebUrlByExternalReferenceCodeResponses[keyof PatchWebUrlByExternalReferenceCodeResponses];

export type GetAccountByExternalReferenceCodeWebUrlsPageData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: {
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/accounts/by-external-reference-code/{externalReferenceCode}/web-urls';
};

export type GetAccountByExternalReferenceCodeWebUrlsPageResponses = {
    /**
     * default response
     */
    default: PageWebUrl;
};

export type GetAccountByExternalReferenceCodeWebUrlsPageResponse = GetAccountByExternalReferenceCodeWebUrlsPageResponses[keyof GetAccountByExternalReferenceCodeWebUrlsPageResponses];

export type GetAccountWebUrlsPageData = {
    body?: never;
    path: {
        accountId: string;
    };
    query?: {
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/accounts/{accountId}/web-urls';
};

export type GetAccountWebUrlsPageResponses = {
    /**
     * default response
     */
    default: PageWebUrl;
};

export type GetAccountWebUrlsPageResponse = GetAccountWebUrlsPageResponses[keyof GetAccountWebUrlsPageResponses];

export type GetOrganizationByExternalReferenceCodeWebUrlsPageData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: {
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/organizations/by-external-reference-code/{externalReferenceCode}/web-urls';
};

export type GetOrganizationByExternalReferenceCodeWebUrlsPageResponses = {
    /**
     * default response
     */
    default: PageWebUrl;
};

export type GetOrganizationByExternalReferenceCodeWebUrlsPageResponse = GetOrganizationByExternalReferenceCodeWebUrlsPageResponses[keyof GetOrganizationByExternalReferenceCodeWebUrlsPageResponses];

export type GetOrganizationWebUrlsPageData = {
    body?: never;
    path: {
        organizationId: string;
    };
    query?: {
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/organizations/{organizationId}/web-urls';
};

export type GetOrganizationWebUrlsPageResponses = {
    /**
     * default response
     */
    default: PageWebUrl;
};

export type GetOrganizationWebUrlsPageResponse = GetOrganizationWebUrlsPageResponses[keyof GetOrganizationWebUrlsPageResponses];

export type GetUserAccountByExternalReferenceCodeWebUrlsPageData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: {
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/user-accounts/by-external-reference-code/{externalReferenceCode}/web-urls';
};

export type GetUserAccountByExternalReferenceCodeWebUrlsPageResponses = {
    /**
     * default response
     */
    default: PageWebUrl;
};

export type GetUserAccountByExternalReferenceCodeWebUrlsPageResponse = GetUserAccountByExternalReferenceCodeWebUrlsPageResponses[keyof GetUserAccountByExternalReferenceCodeWebUrlsPageResponses];

export type GetUserAccountWebUrlsPageData = {
    body?: never;
    path: {
        userAccountId: string;
    };
    query?: {
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/user-accounts/{userAccountId}/web-urls';
};

export type GetUserAccountWebUrlsPageResponses = {
    /**
     * default response
     */
    default: PageWebUrl;
};

export type GetUserAccountWebUrlsPageResponse = GetUserAccountWebUrlsPageResponses[keyof GetUserAccountWebUrlsPageResponses];

export type PostAccountWebUrlsPageExportBatchData = {
    body?: never;
    path: {
        accountId: string;
    };
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-admin-user/v1.0/accounts/{accountId}/web-urls/export-batch';
};

export type PostAccountWebUrlsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostOrganizationWebUrlsPageExportBatchData = {
    body?: never;
    path: {
        organizationId: string;
    };
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-admin-user/v1.0/organizations/{organizationId}/web-urls/export-batch';
};

export type PostOrganizationWebUrlsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostUserAccountWebUrlsPageExportBatchData = {
    body?: never;
    path: {
        userAccountId: string;
    };
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-admin-user/v1.0/user-accounts/{userAccountId}/web-urls/export-batch';
};

export type PostUserAccountWebUrlsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetUserAccountUserToUserAddInfoPageData = {
    body?: never;
    path: {
        userAccountId: string;
    };
    query?: {
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/user-accounts/{userAccountId}/userToUserAddInfo';
};

export type GetUserAccountUserToUserAddInfoPageResponses = {
    /**
     * default response
     */
    default: PageUserAdditionalInfo;
};

export type GetUserAccountUserToUserAddInfoPageResponse = GetUserAccountUserToUserAddInfoPageResponses[keyof GetUserAccountUserToUserAddInfoPageResponses];

export type DeleteUserAccountUserToUserAddInfoData = {
    body?: never;
    path: {
        userAccountId: string;
        userAdditionalInfoId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/user-accounts/{userAccountId}/userToUserAddInfo/{userAdditionalInfoId}';
};

export type DeleteUserAccountUserToUserAddInfoResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutUserAccountUserToUserAddInfoData = {
    body?: never;
    path: {
        userAccountId: string;
        userAdditionalInfoId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/user-accounts/{userAccountId}/userToUserAddInfo/{userAdditionalInfoId}';
};

export type PutUserAccountUserToUserAddInfoResponses = {
    /**
     * default response
     */
    default: UserAdditionalInfo;
};

export type PutUserAccountUserToUserAddInfoResponse = PutUserAccountUserToUserAddInfoResponses[keyof PutUserAccountUserToUserAddInfoResponses];

export type GetAccountAccountEntryToUserAdditionalInfoPageData = {
    body?: never;
    path: {
        accountId: string;
    };
    query?: {
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/accounts/{accountId}/accountEntryToUserAdditionalInfo';
};

export type GetAccountAccountEntryToUserAdditionalInfoPageResponses = {
    /**
     * default response
     */
    default: PageUserAdditionalInfo;
};

export type GetAccountAccountEntryToUserAdditionalInfoPageResponse = GetAccountAccountEntryToUserAdditionalInfoPageResponses[keyof GetAccountAccountEntryToUserAdditionalInfoPageResponses];

export type DeleteAccountAccountEntryToUserAdditionalInfoData = {
    body?: never;
    path: {
        accountId: string;
        userAdditionalInfoId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts/{accountId}/accountEntryToUserAdditionalInfo/{userAdditionalInfoId}';
};

export type DeleteAccountAccountEntryToUserAdditionalInfoResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutAccountAccountEntryToUserAdditionalInfoData = {
    body?: never;
    path: {
        accountId: string;
        userAdditionalInfoId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts/{accountId}/accountEntryToUserAdditionalInfo/{userAdditionalInfoId}';
};

export type PutAccountAccountEntryToUserAdditionalInfoResponses = {
    /**
     * default response
     */
    default: UserAdditionalInfo;
};

export type PutAccountAccountEntryToUserAdditionalInfoResponse = PutAccountAccountEntryToUserAdditionalInfoResponses[keyof PutAccountAccountEntryToUserAdditionalInfoResponses];

export type GetAccountAccountToOAuth2DxpAuthorizationPageData = {
    body?: never;
    path: {
        accountId: string;
    };
    query?: {
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/accounts/{accountId}/accountToOAuth2DxpAuthorization';
};

export type GetAccountAccountToOAuth2DxpAuthorizationPageResponses = {
    /**
     * default response
     */
    default: PageOAuth2DxpAuthorization;
};

export type GetAccountAccountToOAuth2DxpAuthorizationPageResponse = GetAccountAccountToOAuth2DxpAuthorizationPageResponses[keyof GetAccountAccountToOAuth2DxpAuthorizationPageResponses];

export type DeleteAccountAccountToOAuth2DxpAuthorizationData = {
    body?: never;
    path: {
        accountId: string;
        oAuth2DxpAuthorizationId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts/{accountId}/accountToOAuth2DxpAuthorization/{oAuth2DxpAuthorizationId}';
};

export type DeleteAccountAccountToOAuth2DxpAuthorizationResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutAccountAccountToOAuth2DxpAuthorizationData = {
    body?: never;
    path: {
        accountId: string;
        oAuth2DxpAuthorizationId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts/{accountId}/accountToOAuth2DxpAuthorization/{oAuth2DxpAuthorizationId}';
};

export type PutAccountAccountToOAuth2DxpAuthorizationResponses = {
    /**
     * default response
     */
    default: OAuth2DxpAuthorization;
};

export type PutAccountAccountToOAuth2DxpAuthorizationResponse = PutAccountAccountToOAuth2DxpAuthorizationResponses[keyof PutAccountAccountToOAuth2DxpAuthorizationResponses];

export type GetAccountAccountEntryToPublisherAssetsPageData = {
    body?: never;
    path: {
        accountId: string;
    };
    query?: {
        nestedFields?: string;
    };
    url: '/o/headless-admin-user/v1.0/accounts/{accountId}/accountEntryToPublisherAssets';
};

export type GetAccountAccountEntryToPublisherAssetsPageResponses = {
    /**
     * default response
     */
    default: PagePublisherAssets;
};

export type GetAccountAccountEntryToPublisherAssetsPageResponse = GetAccountAccountEntryToPublisherAssetsPageResponses[keyof GetAccountAccountEntryToPublisherAssetsPageResponses];

export type DeleteAccountAccountEntryToPublisherAssetsData = {
    body?: never;
    path: {
        accountId: string;
        publisherAssetsId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts/{accountId}/accountEntryToPublisherAssets/{publisherAssetsId}';
};

export type DeleteAccountAccountEntryToPublisherAssetsResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutAccountAccountEntryToPublisherAssetsData = {
    body?: never;
    path: {
        accountId: string;
        publisherAssetsId: string;
    };
    query?: never;
    url: '/o/headless-admin-user/v1.0/accounts/{accountId}/accountEntryToPublisherAssets/{publisherAssetsId}';
};

export type PutAccountAccountEntryToPublisherAssetsResponses = {
    /**
     * default response
     */
    default: PublisherAssets;
};

export type PutAccountAccountEntryToPublisherAssetsResponse = PutAccountAccountEntryToPublisherAssetsResponses[keyof PutAccountAccountEntryToPublisherAssetsResponses];

export type ClientOptions = {
    baseUrl: 'http://localhost:8080' | (string & {});
};