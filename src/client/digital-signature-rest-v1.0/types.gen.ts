// This file is auto-generated by @hey-api/openapi-ts

export type DsDocumentReadable = {
    assignTabsToDSRecipientId?: string;
    data?: string;
    fileEntryExternalReferenceCode?: string;
    fileExtension?: string;
    id?: string;
    name?: string;
    transformPDFFields?: boolean;
    uri?: string;
    readonly 'x-class-name'?: string;
};

export type DsDocumentWritable = {
    assignTabsToDSRecipientId?: string;
    data?: string;
    fileEntryExternalReferenceCode?: string;
    fileExtension?: string;
    id?: string;
    name?: string;
    transformPDFFields?: boolean;
    uri?: string;
};

export type DsEnvelopeReadable = {
    readonly dateCreated?: string;
    readonly dateModified?: string;
    dsDocument?: Array<DsDocumentReadable>;
    dsRecipient?: Array<DsRecipientReadable>;
    emailBlurb?: string;
    emailSubject?: string;
    id?: string;
    name?: string;
    senderEmailAddress?: string;
    siteId?: number;
    status?: string;
    readonly 'x-class-name'?: string;
};

export type DsEnvelopeWritable = {
    dsDocument?: Array<DsDocumentWritable>;
    dsRecipient?: Array<DsRecipientWritable>;
    emailBlurb?: string;
    emailSubject?: string;
    id?: string;
    name?: string;
    senderEmailAddress?: string;
    siteId?: number;
    status?: string;
};

export type DsRecipientReadable = {
    dsClientUserId?: string;
    emailAddress?: string;
    id?: string;
    name?: string;
    status?: string;
    tabs?: {
        [key: string]: unknown;
    };
    readonly 'x-class-name'?: string;
};

export type DsRecipientWritable = {
    dsClientUserId?: string;
    emailAddress?: string;
    id?: string;
    name?: string;
    status?: string;
    tabs?: {
        [key: string]: unknown;
    };
};

export type Facet = {
    facetCriteria?: string;
    facetValues?: Array<FacetValue>;
};

export type FacetValue = {
    numberOfOccurrences?: number;
    term?: string;
};

export type PageDsEnvelopeReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<DsEnvelopeReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageDsEnvelopeWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<DsEnvelopeWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type DsEnvelopeSignatureUrlReadable = {
    url?: string;
    readonly 'x-class-name'?: string;
};

export type DsEnvelopeSignatureUrlWritable = {
    url?: string;
};

export type DsRecipientViewDefinitionReadable = {
    authenticationMethod?: string;
    dsClientUserId?: string;
    emailAddress?: string;
    returnURL?: string;
    userName?: string;
    readonly 'x-class-name'?: string;
};

export type DsRecipientViewDefinitionWritable = {
    authenticationMethod?: string;
    dsClientUserId?: string;
    emailAddress?: string;
    returnURL?: string;
    userName?: string;
};

export type GetSiteDsEnvelopeData = {
    body?: never;
    path: {
        siteId: string;
        dsEnvelopeId: string;
    };
    query?: never;
    url: '/o/digital-signature-rest/v1.0/sites/{siteId}/ds-envelopes/{dsEnvelopeId}';
};

export type GetSiteDsEnvelopeResponses = {
    /**
     * default response
     */
    default: DsEnvelopeReadable;
};

export type GetSiteDsEnvelopeResponse = GetSiteDsEnvelopeResponses[keyof GetSiteDsEnvelopeResponses];

export type GetSiteDsEnvelopesPageData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        fromDate?: string;
        keywords?: string;
        order?: string;
        page?: string;
        pageSize?: string;
        status?: string;
        nestedFields?: string;
    };
    url: '/o/digital-signature-rest/v1.0/sites/{siteId}/ds-envelopes';
};

export type GetSiteDsEnvelopesPageResponses = {
    /**
     * default response
     */
    default: PageDsEnvelopeReadable;
};

export type GetSiteDsEnvelopesPageResponse = GetSiteDsEnvelopesPageResponses[keyof GetSiteDsEnvelopesPageResponses];

export type PostSiteDsEnvelopeData = {
    body?: DsEnvelopeWritable;
    path: {
        siteId: string;
    };
    query?: never;
    url: '/o/digital-signature-rest/v1.0/sites/{siteId}/ds-envelopes';
};

export type PostSiteDsEnvelopeResponses = {
    /**
     * default response
     */
    default: DsEnvelopeReadable;
};

export type PostSiteDsEnvelopeResponse = PostSiteDsEnvelopeResponses[keyof PostSiteDsEnvelopeResponses];

export type PostSiteDsEnvelopeBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        siteId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/digital-signature-rest/v1.0/sites/{siteId}/ds-envelopes/batch';
};

export type PostSiteDsEnvelopeBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostSiteDsEnvelopesPageExportBatchData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        fromDate?: string;
        keywords?: string;
        order?: string;
        status?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/digital-signature-rest/v1.0/sites/{siteId}/ds-envelopes/export-batch';
};

export type PostSiteDsEnvelopesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostSiteDsRecipientViewDefinitionData = {
    body?: DsRecipientViewDefinitionWritable;
    path: {
        siteId: string;
        dsEnvelopeId: string;
    };
    query?: never;
    url: '/o/digital-signature-rest/v1.0/sites/{siteId}/ds-recipient-view-definition/{dsEnvelopeId}';
};

export type PostSiteDsRecipientViewDefinitionResponses = {
    /**
     * default response
     */
    default: DsEnvelopeSignatureUrlReadable;
};

export type PostSiteDsRecipientViewDefinitionResponse = PostSiteDsRecipientViewDefinitionResponses[keyof PostSiteDsRecipientViewDefinitionResponses];

export type ClientOptions = {
    baseUrl: 'http://localhost:8080' | (string & {});
};