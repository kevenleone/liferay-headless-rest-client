// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';
import type { GetSiteDsEnvelopeData, GetSiteDsEnvelopeResponses, GetSiteDsEnvelopesPageData, GetSiteDsEnvelopesPageResponses, PostSiteDsEnvelopeData, PostSiteDsEnvelopeResponses, PostSiteDsEnvelopeBatchData, PostSiteDsEnvelopeBatchResponses, PostSiteDsEnvelopesPageExportBatchData, PostSiteDsEnvelopesPageExportBatchResponses, PostSiteDsRecipientViewDefinitionData, PostSiteDsRecipientViewDefinitionResponses, GetOpenApiData, GetOpenApiResponses } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export const getSiteDsEnvelope = <ThrowOnError extends boolean = false>(options: Options<GetSiteDsEnvelopeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteDsEnvelopeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/ds-envelopes/{dsEnvelopeId}',
        ...options
    });
};

export const getSiteDsEnvelopesPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteDsEnvelopesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteDsEnvelopesPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/ds-envelopes',
        ...options
    });
};

export const postSiteDsEnvelope = <ThrowOnError extends boolean = false>(options: Options<PostSiteDsEnvelopeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteDsEnvelopeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/ds-envelopes',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postSiteDsEnvelopeBatch = <ThrowOnError extends boolean = false>(options: Options<PostSiteDsEnvelopeBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteDsEnvelopeBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/ds-envelopes/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postSiteDsEnvelopesPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostSiteDsEnvelopesPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteDsEnvelopesPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/ds-envelopes/export-batch',
        ...options
    });
};

export const postSiteDsRecipientViewDefinition = <ThrowOnError extends boolean = false>(options: Options<PostSiteDsRecipientViewDefinitionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteDsRecipientViewDefinitionResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/ds-recipient-view-definition/{dsEnvelopeId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getOpenApi = <ThrowOnError extends boolean = false>(options: Options<GetOpenApiData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetOpenApiResponses, unknown, ThrowOnError>({
        url: '/v1.0/openapi.{type}',
        ...options
    });
};