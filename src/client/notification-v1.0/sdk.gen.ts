// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';
import type { DeleteNotificationQueueEntryData, DeleteNotificationQueueEntryResponses, GetNotificationQueueEntryData, GetNotificationQueueEntryResponses, DeleteNotificationQueueEntryBatchData, DeleteNotificationQueueEntryBatchResponses, PostNotificationQueueEntryBatchData, PostNotificationQueueEntryBatchResponses, GetNotificationQueueEntriesPageData, GetNotificationQueueEntriesPageResponses, PostNotificationQueueEntryData, PostNotificationQueueEntryResponses, PostNotificationQueueEntriesPageExportBatchData, PostNotificationQueueEntriesPageExportBatchResponses, PutNotificationQueueEntryResendData, PutNotificationQueueEntryResendResponses, DeleteNotificationTemplateData, DeleteNotificationTemplateResponses, GetNotificationTemplateData, GetNotificationTemplateResponses, PatchNotificationTemplateData, PatchNotificationTemplateResponses, PutNotificationTemplateData, PutNotificationTemplateResponses, DeleteNotificationTemplateBatchData, DeleteNotificationTemplateBatchResponses, PostNotificationTemplateBatchData, PostNotificationTemplateBatchResponses, PutNotificationTemplateBatchData, PutNotificationTemplateBatchResponses, GetNotificationTemplateByExternalReferenceCodeData, GetNotificationTemplateByExternalReferenceCodeResponses, PutNotificationTemplateByExternalReferenceCodeData, PutNotificationTemplateByExternalReferenceCodeResponses, GetNotificationTemplatesPageData, GetNotificationTemplatesPageResponses, PostNotificationTemplateData, PostNotificationTemplateResponses, PostNotificationTemplateCopyData, PostNotificationTemplateCopyResponses, PostNotificationTemplatesPageExportBatchData, PostNotificationTemplatesPageExportBatchResponses } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export const deleteNotificationQueueEntry = <ThrowOnError extends boolean = false>(options: Options<DeleteNotificationQueueEntryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteNotificationQueueEntryResponses, unknown, ThrowOnError>({
        url: '/o/notification/v1.0/notification-queue-entries/{notificationQueueEntryId}',
        ...options
    });
};

export const getNotificationQueueEntry = <ThrowOnError extends boolean = false>(options: Options<GetNotificationQueueEntryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetNotificationQueueEntryResponses, unknown, ThrowOnError>({
        url: '/o/notification/v1.0/notification-queue-entries/{notificationQueueEntryId}',
        ...options
    });
};

export const deleteNotificationQueueEntryBatch = <ThrowOnError extends boolean = false>(options?: Options<DeleteNotificationQueueEntryBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteNotificationQueueEntryBatchResponses, unknown, ThrowOnError>({
        url: '/o/notification/v1.0/notification-queue-entries/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postNotificationQueueEntryBatch = <ThrowOnError extends boolean = false>(options?: Options<PostNotificationQueueEntryBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostNotificationQueueEntryBatchResponses, unknown, ThrowOnError>({
        url: '/o/notification/v1.0/notification-queue-entries/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const getNotificationQueueEntriesPage = <ThrowOnError extends boolean = false>(options?: Options<GetNotificationQueueEntriesPageData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetNotificationQueueEntriesPageResponses, unknown, ThrowOnError>({
        url: '/o/notification/v1.0/notification-queue-entries',
        ...options
    });
};

export const postNotificationQueueEntry = <ThrowOnError extends boolean = false>(options?: Options<PostNotificationQueueEntryData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostNotificationQueueEntryResponses, unknown, ThrowOnError>({
        url: '/o/notification/v1.0/notification-queue-entries',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postNotificationQueueEntriesPageExportBatch = <ThrowOnError extends boolean = false>(options?: Options<PostNotificationQueueEntriesPageExportBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostNotificationQueueEntriesPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/notification/v1.0/notification-queue-entries/export-batch',
        ...options
    });
};

export const putNotificationQueueEntryResend = <ThrowOnError extends boolean = false>(options: Options<PutNotificationQueueEntryResendData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutNotificationQueueEntryResendResponses, unknown, ThrowOnError>({
        url: '/o/notification/v1.0/notification-queue-entries/{notificationQueueEntryId}/resend',
        ...options
    });
};

export const deleteNotificationTemplate = <ThrowOnError extends boolean = false>(options: Options<DeleteNotificationTemplateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteNotificationTemplateResponses, unknown, ThrowOnError>({
        url: '/o/notification/v1.0/notification-templates/{notificationTemplateId}',
        ...options
    });
};

export const getNotificationTemplate = <ThrowOnError extends boolean = false>(options: Options<GetNotificationTemplateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetNotificationTemplateResponses, unknown, ThrowOnError>({
        url: '/o/notification/v1.0/notification-templates/{notificationTemplateId}',
        ...options
    });
};

export const patchNotificationTemplate = <ThrowOnError extends boolean = false>(options: Options<PatchNotificationTemplateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchNotificationTemplateResponses, unknown, ThrowOnError>({
        url: '/o/notification/v1.0/notification-templates/{notificationTemplateId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const putNotificationTemplate = <ThrowOnError extends boolean = false>(options: Options<PutNotificationTemplateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutNotificationTemplateResponses, unknown, ThrowOnError>({
        url: '/o/notification/v1.0/notification-templates/{notificationTemplateId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteNotificationTemplateBatch = <ThrowOnError extends boolean = false>(options?: Options<DeleteNotificationTemplateBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteNotificationTemplateBatchResponses, unknown, ThrowOnError>({
        url: '/o/notification/v1.0/notification-templates/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postNotificationTemplateBatch = <ThrowOnError extends boolean = false>(options?: Options<PostNotificationTemplateBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostNotificationTemplateBatchResponses, unknown, ThrowOnError>({
        url: '/o/notification/v1.0/notification-templates/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const putNotificationTemplateBatch = <ThrowOnError extends boolean = false>(options?: Options<PutNotificationTemplateBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).put<PutNotificationTemplateBatchResponses, unknown, ThrowOnError>({
        url: '/o/notification/v1.0/notification-templates/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const getNotificationTemplateByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetNotificationTemplateByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetNotificationTemplateByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/notification/v1.0/notification-templates/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

export const putNotificationTemplateByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PutNotificationTemplateByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutNotificationTemplateByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/notification/v1.0/notification-templates/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getNotificationTemplatesPage = <ThrowOnError extends boolean = false>(options?: Options<GetNotificationTemplatesPageData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetNotificationTemplatesPageResponses, unknown, ThrowOnError>({
        url: '/o/notification/v1.0/notification-templates',
        ...options
    });
};

export const postNotificationTemplate = <ThrowOnError extends boolean = false>(options?: Options<PostNotificationTemplateData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostNotificationTemplateResponses, unknown, ThrowOnError>({
        url: '/o/notification/v1.0/notification-templates',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postNotificationTemplateCopy = <ThrowOnError extends boolean = false>(options: Options<PostNotificationTemplateCopyData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostNotificationTemplateCopyResponses, unknown, ThrowOnError>({
        url: '/o/notification/v1.0/notification-templates/{notificationTemplateId}/copy',
        ...options
    });
};

export const postNotificationTemplatesPageExportBatch = <ThrowOnError extends boolean = false>(options?: Options<PostNotificationTemplatesPageExportBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostNotificationTemplatesPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/notification/v1.0/notification-templates/export-batch',
        ...options
    });
};