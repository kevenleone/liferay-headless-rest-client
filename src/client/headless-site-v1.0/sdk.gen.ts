// This file is auto-generated by @hey-api/openapi-ts

import { type Options as ClientOptions, type TDataShape, type Client, formDataBodySerializer } from '@hey-api/client-fetch';
import type { DeleteSiteData, DeleteSiteResponses, DeleteSiteByExternalReferenceCodeData, DeleteSiteByExternalReferenceCodeResponses, GetSiteByExternalReferenceCodeData, GetSiteByExternalReferenceCodeResponses, PutSiteByExternalReferenceCodeData, PutSiteByExternalReferenceCodeResponses, GetSiteByExternalReferenceCodeSiteInitializerData, GetSiteByExternalReferenceCodeSiteInitializerResponses, PostSite1Data, PostSite1Responses } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Deletes a site and all of its associated content.
 */
export const deleteSite = <ThrowOnError extends boolean = false>(options: Options<DeleteSiteData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSiteResponses, unknown, ThrowOnError>({
        url: '/o/headless-site/v1.0/sites/{siteId}',
        ...options
    });
};

/**
 * Deletes a site and all of its associated content.
 */
export const deleteSiteByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteSiteByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSiteByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-site/v1.0/sites/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

export const getSiteByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetSiteByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-site/v1.0/sites/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Adds or update a new site
 */
export const putSiteByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PutSiteByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        ...formDataBodySerializer,
        url: '/o/headless-site/v1.0/sites/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': null,
            ...options.headers
        }
    });
};

export const getSiteByExternalReferenceCodeSiteInitializer = <ThrowOnError extends boolean = false>(options: Options<GetSiteByExternalReferenceCodeSiteInitializerData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteByExternalReferenceCodeSiteInitializerResponses, unknown, ThrowOnError>({
        url: '/o/headless-site/v1.0/sites/by-external-reference-code/{externalReferenceCode}/site-initializer',
        ...options
    });
};

/**
 * Adds a new site
 */
export const postSite1 = <ThrowOnError extends boolean = false>(options?: Options<PostSite1Data, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostSite1Responses, unknown, ThrowOnError>({
        url: '/o/headless-site/v1.0/sites',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};