// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';
import type { DeleteCountryData, DeleteCountryResponses, GetCountryData, GetCountryResponses, PatchCountryData, PatchCountryResponses, PutCountryData, PutCountryResponses, DeleteCountryBatchData, DeleteCountryBatchResponses, PostCountryBatchData, PostCountryBatchResponses, PutCountryBatchData, PutCountryBatchResponses, GetCountriesPageData, GetCountriesPageResponses, PostCountryData, PostCountryResponses, GetCountryByA2Data, GetCountryByA2Responses, GetCountryByA3Data, GetCountryByA3Responses, GetCountryByNameData, GetCountryByNameResponses, GetCountryByNumberData, GetCountryByNumberResponses, PostCountriesPageExportBatchData, PostCountriesPageExportBatchResponses, DeleteRegionData, DeleteRegionResponses, GetRegionData, GetRegionResponses, PatchRegionData, PatchRegionResponses, PutRegionData, PutRegionResponses, DeleteRegionBatchData, DeleteRegionBatchResponses, PutRegionBatchData, PutRegionBatchResponses, GetCountryRegionByRegionCodeData, GetCountryRegionByRegionCodeResponses, GetCountryRegionsPageData, GetCountryRegionsPageResponses, PostCountryRegionData, PostCountryRegionResponses, GetRegionsPageData, GetRegionsPageResponses, PostCountryRegionBatchData, PostCountryRegionBatchResponses, PostCountryRegionsPageExportBatchData, PostCountryRegionsPageExportBatchResponses, PostRegionsPageExportBatchData, PostRegionsPageExportBatchResponses } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export const deleteCountry = <ThrowOnError extends boolean = false>(options: Options<DeleteCountryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteCountryResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-address/v1.0/countries/{countryId}',
        ...options
    });
};

export const getCountry = <ThrowOnError extends boolean = false>(options: Options<GetCountryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCountryResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-address/v1.0/countries/{countryId}',
        ...options
    });
};

export const patchCountry = <ThrowOnError extends boolean = false>(options: Options<PatchCountryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchCountryResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-address/v1.0/countries/{countryId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const putCountry = <ThrowOnError extends boolean = false>(options: Options<PutCountryData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutCountryResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-address/v1.0/countries/{countryId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteCountryBatch = <ThrowOnError extends boolean = false>(options?: Options<DeleteCountryBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteCountryBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-address/v1.0/countries/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const postCountryBatch = <ThrowOnError extends boolean = false>(options?: Options<PostCountryBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostCountryBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-address/v1.0/countries/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const putCountryBatch = <ThrowOnError extends boolean = false>(options?: Options<PutCountryBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).put<PutCountryBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-address/v1.0/countries/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const getCountriesPage = <ThrowOnError extends boolean = false>(options?: Options<GetCountriesPageData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetCountriesPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-address/v1.0/countries',
        ...options
    });
};

export const postCountry = <ThrowOnError extends boolean = false>(options?: Options<PostCountryData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostCountryResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-address/v1.0/countries',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const getCountryByA2 = <ThrowOnError extends boolean = false>(options: Options<GetCountryByA2Data, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCountryByA2Responses, unknown, ThrowOnError>({
        url: '/o/headless-admin-address/v1.0/countries/by-a2/{a2}',
        ...options
    });
};

export const getCountryByA3 = <ThrowOnError extends boolean = false>(options: Options<GetCountryByA3Data, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCountryByA3Responses, unknown, ThrowOnError>({
        url: '/o/headless-admin-address/v1.0/countries/by-a3/{a3}',
        ...options
    });
};

export const getCountryByName = <ThrowOnError extends boolean = false>(options: Options<GetCountryByNameData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCountryByNameResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-address/v1.0/countries/by-name/{name}',
        ...options
    });
};

export const getCountryByNumber = <ThrowOnError extends boolean = false>(options: Options<GetCountryByNumberData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCountryByNumberResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-address/v1.0/countries/by-number/{number}',
        ...options
    });
};

export const postCountriesPageExportBatch = <ThrowOnError extends boolean = false>(options?: Options<PostCountriesPageExportBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostCountriesPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-address/v1.0/countries/export-batch',
        ...options
    });
};

export const deleteRegion = <ThrowOnError extends boolean = false>(options: Options<DeleteRegionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteRegionResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-address/v1.0/regions/{regionId}',
        ...options
    });
};

export const getRegion = <ThrowOnError extends boolean = false>(options: Options<GetRegionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetRegionResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-address/v1.0/regions/{regionId}',
        ...options
    });
};

export const patchRegion = <ThrowOnError extends boolean = false>(options: Options<PatchRegionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchRegionResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-address/v1.0/regions/{regionId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const putRegion = <ThrowOnError extends boolean = false>(options: Options<PutRegionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutRegionResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-address/v1.0/regions/{regionId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteRegionBatch = <ThrowOnError extends boolean = false>(options?: Options<DeleteRegionBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteRegionBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-address/v1.0/regions/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const putRegionBatch = <ThrowOnError extends boolean = false>(options?: Options<PutRegionBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).put<PutRegionBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-address/v1.0/regions/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const getCountryRegionByRegionCode = <ThrowOnError extends boolean = false>(options: Options<GetCountryRegionByRegionCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCountryRegionByRegionCodeResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-address/v1.0/countries/{countryId}/regions/by-region-code/{regionCode}',
        ...options
    });
};

export const getCountryRegionsPage = <ThrowOnError extends boolean = false>(options: Options<GetCountryRegionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCountryRegionsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-address/v1.0/countries/{countryId}/regions',
        ...options
    });
};

export const postCountryRegion = <ThrowOnError extends boolean = false>(options: Options<PostCountryRegionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostCountryRegionResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-address/v1.0/countries/{countryId}/regions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getRegionsPage = <ThrowOnError extends boolean = false>(options?: Options<GetRegionsPageData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetRegionsPageResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-address/v1.0/regions',
        ...options
    });
};

export const postCountryRegionBatch = <ThrowOnError extends boolean = false>(options: Options<PostCountryRegionBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostCountryRegionBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-address/v1.0/countries/{countryId}/regions/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postCountryRegionsPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostCountryRegionsPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostCountryRegionsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-address/v1.0/countries/{countryId}/regions/export-batch',
        ...options
    });
};

export const postRegionsPageExportBatch = <ThrowOnError extends boolean = false>(options?: Options<PostRegionsPageExportBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostRegionsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/o/headless-admin-address/v1.0/regions/export-batch',
        ...options
    });
};