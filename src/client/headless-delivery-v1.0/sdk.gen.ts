// This file is auto-generated by @hey-api/openapi-ts

import { type Options as ClientOptions, type TDataShape, type Client, formDataBodySerializer } from '@hey-api/client-fetch';
import type { DeleteBlogPostingImageData, DeleteBlogPostingImageResponses, GetBlogPostingImageData, GetBlogPostingImageResponses, DeleteBlogPostingImageBatchData, DeleteBlogPostingImageBatchResponses, DeleteSiteBlogPostingImageByExternalReferenceCodeData, DeleteSiteBlogPostingImageByExternalReferenceCodeResponses, GetSiteBlogPostingImageByExternalReferenceCodeData, GetSiteBlogPostingImageByExternalReferenceCodeResponses, GetSiteBlogPostingImagesPageData, GetSiteBlogPostingImagesPageResponses, PostSiteBlogPostingImageData, PostSiteBlogPostingImageResponses, PostSiteBlogPostingImageBatchData, PostSiteBlogPostingImageBatchResponses, PostSiteBlogPostingImagesPageExportBatchData, PostSiteBlogPostingImagesPageExportBatchResponses, DeleteBlogPostingData, DeleteBlogPostingResponses, GetBlogPostingData, GetBlogPostingResponses, PatchBlogPostingData, PatchBlogPostingResponses, PutBlogPostingData, PutBlogPostingResponses, DeleteBlogPostingBatchData, DeleteBlogPostingBatchResponses, PutBlogPostingBatchData, PutBlogPostingBatchResponses, DeleteBlogPostingMyRatingData, DeleteBlogPostingMyRatingResponses, GetBlogPostingMyRatingData, GetBlogPostingMyRatingResponses, PostBlogPostingMyRatingData, PostBlogPostingMyRatingResponses, PutBlogPostingMyRatingData, PutBlogPostingMyRatingResponses, DeleteSiteBlogPostingByExternalReferenceCodeData, DeleteSiteBlogPostingByExternalReferenceCodeResponses, GetSiteBlogPostingByExternalReferenceCodeData, GetSiteBlogPostingByExternalReferenceCodeResponses, PutSiteBlogPostingByExternalReferenceCodeData, PutSiteBlogPostingByExternalReferenceCodeResponses, GetBlogPostingPermissionsPageData, GetBlogPostingPermissionsPageResponses, PutBlogPostingPermissionsPageData, PutBlogPostingPermissionsPageResponses, GetBlogPostingRenderedContentByDisplayPageDisplayPageKeyData, GetBlogPostingRenderedContentByDisplayPageDisplayPageKeyResponses, GetSiteBlogPostingPermissionsPageData, GetSiteBlogPostingPermissionsPageResponses, PutSiteBlogPostingPermissionsPageData, PutSiteBlogPostingPermissionsPageResponses, GetSiteBlogPostingsPageData, GetSiteBlogPostingsPageResponses, PostSiteBlogPostingData, PostSiteBlogPostingResponses, PostSiteBlogPostingBatchData, PostSiteBlogPostingBatchResponses, PostSiteBlogPostingsPageExportBatchData, PostSiteBlogPostingsPageExportBatchResponses, PutSiteBlogPostingSubscribeData, PutSiteBlogPostingSubscribeResponses, PutSiteBlogPostingUnsubscribeData, PutSiteBlogPostingUnsubscribeResponses, DeleteCommentData, DeleteCommentResponses, GetCommentData, GetCommentResponses, PutCommentData, PutCommentResponses, DeleteCommentBatchData, DeleteCommentBatchResponses, PutCommentBatchData, PutCommentBatchResponses, DeleteSiteBlogPostingByExternalReferenceCodeBlogPostingExternalReferenceCodeCommentByExternalReferenceCodeData, DeleteSiteBlogPostingByExternalReferenceCodeBlogPostingExternalReferenceCodeCommentByExternalReferenceCodeResponses, GetSiteBlogPostingByExternalReferenceCodeBlogPostingExternalReferenceCodeCommentByExternalReferenceCodeData, GetSiteBlogPostingByExternalReferenceCodeBlogPostingExternalReferenceCodeCommentByExternalReferenceCodeResponses, PutSiteBlogPostingByExternalReferenceCodeBlogPostingExternalReferenceCodeCommentByExternalReferenceCodeData, PutSiteBlogPostingByExternalReferenceCodeBlogPostingExternalReferenceCodeCommentByExternalReferenceCodeResponses, DeleteSiteCommentByExternalReferenceCodeParentCommentExternalReferenceCodeCommentByExternalReferenceCodeData, DeleteSiteCommentByExternalReferenceCodeParentCommentExternalReferenceCodeCommentByExternalReferenceCodeResponses, GetSiteCommentByExternalReferenceCodeParentCommentExternalReferenceCodeCommentByExternalReferenceCodeData, GetSiteCommentByExternalReferenceCodeParentCommentExternalReferenceCodeCommentByExternalReferenceCodeResponses, PutSiteCommentByExternalReferenceCodeParentCommentExternalReferenceCodeCommentByExternalReferenceCodeData, PutSiteCommentByExternalReferenceCodeParentCommentExternalReferenceCodeCommentByExternalReferenceCodeResponses, DeleteSiteDocumentByExternalReferenceCodeDocumentExternalReferenceCodeCommentByExternalReferenceCodeData, DeleteSiteDocumentByExternalReferenceCodeDocumentExternalReferenceCodeCommentByExternalReferenceCodeResponses, GetSiteDocumentByExternalReferenceCodeDocumentExternalReferenceCodeCommentByExternalReferenceCodeData, GetSiteDocumentByExternalReferenceCodeDocumentExternalReferenceCodeCommentByExternalReferenceCodeResponses, PutSiteDocumentByExternalReferenceCodeDocumentExternalReferenceCodeCommentByExternalReferenceCodeData, PutSiteDocumentByExternalReferenceCodeDocumentExternalReferenceCodeCommentByExternalReferenceCodeResponses, DeleteSiteStructuredContentByExternalReferenceCodeStructuredContentExternalReferenceCodeCommentByExternalReferenceCodeData, DeleteSiteStructuredContentByExternalReferenceCodeStructuredContentExternalReferenceCodeCommentByExternalReferenceCodeResponses, GetSiteStructuredContentByExternalReferenceCodeStructuredContentExternalReferenceCodeCommentByExternalReferenceCodeData, GetSiteStructuredContentByExternalReferenceCodeStructuredContentExternalReferenceCodeCommentByExternalReferenceCodeResponses, PutSiteStructuredContentByExternalReferenceCodeStructuredContentExternalReferenceCodeCommentByExternalReferenceCodeData, PutSiteStructuredContentByExternalReferenceCodeStructuredContentExternalReferenceCodeCommentByExternalReferenceCodeResponses, GetBlogPostingCommentsPageData, GetBlogPostingCommentsPageResponses, PostBlogPostingCommentData, PostBlogPostingCommentResponses, GetCommentCommentsPageData, GetCommentCommentsPageResponses, PostCommentCommentData, PostCommentCommentResponses, GetDocumentCommentsPageData, GetDocumentCommentsPageResponses, PostDocumentCommentData, PostDocumentCommentResponses, GetStructuredContentCommentsPageData, GetStructuredContentCommentsPageResponses, PostStructuredContentCommentData, PostStructuredContentCommentResponses, PostBlogPostingCommentBatchData, PostBlogPostingCommentBatchResponses, PostBlogPostingCommentsPageExportBatchData, PostBlogPostingCommentsPageExportBatchResponses, PostDocumentCommentBatchData, PostDocumentCommentBatchResponses, PostDocumentCommentsPageExportBatchData, PostDocumentCommentsPageExportBatchResponses, PostStructuredContentCommentBatchData, PostStructuredContentCommentBatchResponses, PostStructuredContentCommentsPageExportBatchData, PostStructuredContentCommentsPageExportBatchResponses, GetAssetLibraryContentElementsPageData, GetAssetLibraryContentElementsPageResponses, GetSiteContentElementsPageData, GetSiteContentElementsPageResponses, PostAssetLibraryContentElementsPageExportBatchData, PostAssetLibraryContentElementsPageExportBatchResponses, PostSiteContentElementsPageExportBatchData, PostSiteContentElementsPageExportBatchResponses, GetAssetLibraryContentSetByKeyContentSetElementsPageData, GetAssetLibraryContentSetByKeyContentSetElementsPageResponses, GetAssetLibraryContentSetByUuidContentSetElementsPageData, GetAssetLibraryContentSetByUuidContentSetElementsPageResponses, GetContentSetContentSetElementsPageData, GetContentSetContentSetElementsPageResponses, GetSiteContentSetByKeyContentSetElementsPageData, GetSiteContentSetByKeyContentSetElementsPageResponses, GetSiteContentSetByUuidContentSetElementsPageData, GetSiteContentSetByUuidContentSetElementsPageResponses, GetSiteContentSetProviderByKeyContentSetElementsPageData, GetSiteContentSetProviderByKeyContentSetElementsPageResponses, GetAssetLibraryContentStructurePermissionsPageData, GetAssetLibraryContentStructurePermissionsPageResponses, PutAssetLibraryContentStructurePermissionsPageData, PutAssetLibraryContentStructurePermissionsPageResponses, GetAssetLibraryContentStructuresPageData, GetAssetLibraryContentStructuresPageResponses, GetContentStructureData, GetContentStructureResponses, GetContentStructurePermissionsPageData, GetContentStructurePermissionsPageResponses, PutContentStructurePermissionsPageData, PutContentStructurePermissionsPageResponses, GetSiteContentStructurePermissionsPageData, GetSiteContentStructurePermissionsPageResponses, PutSiteContentStructurePermissionsPageData, PutSiteContentStructurePermissionsPageResponses, GetSiteContentStructuresPageData, GetSiteContentStructuresPageResponses, PostAssetLibraryContentStructuresPageExportBatchData, PostAssetLibraryContentStructuresPageExportBatchResponses, PostSiteContentStructuresPageExportBatchData, PostSiteContentStructuresPageExportBatchResponses, GetAssetLibraryContentTemplatesPageData, GetAssetLibraryContentTemplatesPageResponses, GetSiteContentTemplateData, GetSiteContentTemplateResponses, GetSiteContentTemplatesPageData, GetSiteContentTemplatesPageResponses, PostAssetLibraryContentTemplatesPageExportBatchData, PostAssetLibraryContentTemplatesPageExportBatchResponses, PostSiteContentTemplatesPageExportBatchData, PostSiteContentTemplatesPageExportBatchResponses, DeleteDocumentDataDefinitionTypeData, DeleteDocumentDataDefinitionTypeResponses, GetDocumentDataDefinitionTypeData, GetDocumentDataDefinitionTypeResponses, DeleteDocumentDataDefinitionTypeBatchData, DeleteDocumentDataDefinitionTypeBatchResponses, GetAssetLibraryDocumentDataDefinitionTypesPageData, GetAssetLibraryDocumentDataDefinitionTypesPageResponses, PostAssetLibraryDocumentDataDefinitionTypeData, PostAssetLibraryDocumentDataDefinitionTypeResponses, GetSiteDocumentDataDefinitionTypesPageData, GetSiteDocumentDataDefinitionTypesPageResponses, PostSiteDocumentDataDefinitionTypeData, PostSiteDocumentDataDefinitionTypeResponses, PostAssetLibraryDocumentDataDefinitionTypeBatchData, PostAssetLibraryDocumentDataDefinitionTypeBatchResponses, PostAssetLibraryDocumentDataDefinitionTypesPageExportBatchData, PostAssetLibraryDocumentDataDefinitionTypesPageExportBatchResponses, PostSiteDocumentDataDefinitionTypeBatchData, PostSiteDocumentDataDefinitionTypeBatchResponses, PostSiteDocumentDataDefinitionTypesPageExportBatchData, PostSiteDocumentDataDefinitionTypesPageExportBatchResponses, DeleteDocumentFolderData, DeleteDocumentFolderResponses, GetDocumentFolderData, GetDocumentFolderResponses, PatchDocumentFolderData, PatchDocumentFolderResponses, PutDocumentFolderData, PutDocumentFolderResponses, DeleteDocumentFolderBatchData, DeleteDocumentFolderBatchResponses, PutDocumentFolderBatchData, PutDocumentFolderBatchResponses, DeleteDocumentFolderMyRatingData, DeleteDocumentFolderMyRatingResponses, GetDocumentFolderMyRatingData, GetDocumentFolderMyRatingResponses, PostDocumentFolderMyRatingData, PostDocumentFolderMyRatingResponses, PutDocumentFolderMyRatingData, PutDocumentFolderMyRatingResponses, DeleteSiteDocumentsFolderByExternalReferenceCodeData, DeleteSiteDocumentsFolderByExternalReferenceCodeResponses, GetSiteDocumentsFolderByExternalReferenceCodeData, GetSiteDocumentsFolderByExternalReferenceCodeResponses, PutSiteDocumentsFolderByExternalReferenceCodeData, PutSiteDocumentsFolderByExternalReferenceCodeResponses, GetAssetLibraryDocumentFolderPermissionsPageData, GetAssetLibraryDocumentFolderPermissionsPageResponses, PutAssetLibraryDocumentFolderPermissionsPageData, PutAssetLibraryDocumentFolderPermissionsPageResponses, GetAssetLibraryDocumentFoldersPageData, GetAssetLibraryDocumentFoldersPageResponses, PostAssetLibraryDocumentFolderData, PostAssetLibraryDocumentFolderResponses, GetAssetLibraryDocumentFoldersRatedByMePageData, GetAssetLibraryDocumentFoldersRatedByMePageResponses, GetDocumentFolderDocumentFoldersPageData, GetDocumentFolderDocumentFoldersPageResponses, PostDocumentFolderDocumentFolderData, PostDocumentFolderDocumentFolderResponses, GetDocumentFolderPermissionsPageData, GetDocumentFolderPermissionsPageResponses, PutDocumentFolderPermissionsPageData, PutDocumentFolderPermissionsPageResponses, GetSiteDocumentFolderPermissionsPageData, GetSiteDocumentFolderPermissionsPageResponses, PutSiteDocumentFolderPermissionsPageData, PutSiteDocumentFolderPermissionsPageResponses, GetSiteDocumentFoldersPageData, GetSiteDocumentFoldersPageResponses, PostSiteDocumentFolderData, PostSiteDocumentFolderResponses, GetSiteDocumentFoldersRatedByMePageData, GetSiteDocumentFoldersRatedByMePageResponses, PostAssetLibraryDocumentFolderBatchData, PostAssetLibraryDocumentFolderBatchResponses, PostAssetLibraryDocumentFoldersPageExportBatchData, PostAssetLibraryDocumentFoldersPageExportBatchResponses, PostSiteDocumentFolderBatchData, PostSiteDocumentFolderBatchResponses, PostSiteDocumentFoldersPageExportBatchData, PostSiteDocumentFoldersPageExportBatchResponses, PutDocumentFolderSubscribeData, PutDocumentFolderSubscribeResponses, PutDocumentFolderUnsubscribeData, PutDocumentFolderUnsubscribeResponses, DeleteAssetLibraryDocumentMetadataSetByExternalReferenceCodeData, DeleteAssetLibraryDocumentMetadataSetByExternalReferenceCodeResponses, GetAssetLibraryDocumentMetadataSetByExternalReferenceCodeData, GetAssetLibraryDocumentMetadataSetByExternalReferenceCodeResponses, PutAssetLibraryDocumentMetadataSetByExternalReferenceCodeData, PutAssetLibraryDocumentMetadataSetByExternalReferenceCodeResponses, DeleteDocumentMetadataSetData, DeleteDocumentMetadataSetResponses, GetDocumentMetadataSetData, GetDocumentMetadataSetResponses, DeleteDocumentMetadataSetBatchData, DeleteDocumentMetadataSetBatchResponses, DeleteSiteDocumentMetadataSetByExternalReferenceCodeData, DeleteSiteDocumentMetadataSetByExternalReferenceCodeResponses, GetSiteDocumentMetadataSetByExternalReferenceCodeData, GetSiteDocumentMetadataSetByExternalReferenceCodeResponses, PutSiteDocumentMetadataSetByExternalReferenceCodeData, PutSiteDocumentMetadataSetByExternalReferenceCodeResponses, GetAssetLibraryDocumentMetadataSetsPageData, GetAssetLibraryDocumentMetadataSetsPageResponses, PostAssetLibraryDocumentMetadataSetData, PostAssetLibraryDocumentMetadataSetResponses, GetSiteDocumentMetadataSetsPageData, GetSiteDocumentMetadataSetsPageResponses, PostSiteDocumentMetadataSetData, PostSiteDocumentMetadataSetResponses, PostAssetLibraryDocumentMetadataSetBatchData, PostAssetLibraryDocumentMetadataSetBatchResponses, PostAssetLibraryDocumentMetadataSetsPageExportBatchData, PostAssetLibraryDocumentMetadataSetsPageExportBatchResponses, PostSiteDocumentMetadataSetBatchData, PostSiteDocumentMetadataSetBatchResponses, PostSiteDocumentMetadataSetsPageExportBatchData, PostSiteDocumentMetadataSetsPageExportBatchResponses, DeleteAssetLibraryDocumentByExternalReferenceCodeData, DeleteAssetLibraryDocumentByExternalReferenceCodeResponses, GetAssetLibraryDocumentByExternalReferenceCodeData, GetAssetLibraryDocumentByExternalReferenceCodeResponses, PutAssetLibraryDocumentByExternalReferenceCodeData, PutAssetLibraryDocumentByExternalReferenceCodeResponses, DeleteDocumentData, DeleteDocumentResponses, GetDocumentData, GetDocumentResponses, PatchDocumentData, PatchDocumentResponses, PutDocumentData, PutDocumentResponses, DeleteDocumentBatchData, DeleteDocumentBatchResponses, PutDocumentBatchData, PutDocumentBatchResponses, DeleteDocumentMyRatingData, DeleteDocumentMyRatingResponses, GetDocumentMyRatingData, GetDocumentMyRatingResponses, PostDocumentMyRatingData, PostDocumentMyRatingResponses, PutDocumentMyRatingData, PutDocumentMyRatingResponses, DeleteSiteDocumentByExternalReferenceCodeData, DeleteSiteDocumentByExternalReferenceCodeResponses, GetSiteDocumentByExternalReferenceCodeData, GetSiteDocumentByExternalReferenceCodeResponses, PutSiteDocumentByExternalReferenceCodeData, PutSiteDocumentByExternalReferenceCodeResponses, GetAssetLibraryDocumentPermissionsPageData, GetAssetLibraryDocumentPermissionsPageResponses, PutAssetLibraryDocumentPermissionsPageData, PutAssetLibraryDocumentPermissionsPageResponses, GetAssetLibraryDocumentsPageData, GetAssetLibraryDocumentsPageResponses, PostAssetLibraryDocumentData, PostAssetLibraryDocumentResponses, GetAssetLibraryDocumentsRatedByMePageData, GetAssetLibraryDocumentsRatedByMePageResponses, GetDocumentFolderDocumentsPageData, GetDocumentFolderDocumentsPageResponses, PostDocumentFolderDocumentData, PostDocumentFolderDocumentResponses, GetDocumentPermissionsPageData, GetDocumentPermissionsPageResponses, PutDocumentPermissionsPageData, PutDocumentPermissionsPageResponses, GetDocumentRenderedContentByDisplayPageDisplayPageKeyData, GetDocumentRenderedContentByDisplayPageDisplayPageKeyResponses, GetSiteDocumentPermissionsPageData, GetSiteDocumentPermissionsPageResponses, PutSiteDocumentPermissionsPageData, PutSiteDocumentPermissionsPageResponses, GetSiteDocumentsPageData, GetSiteDocumentsPageResponses, PostSiteDocumentData, PostSiteDocumentResponses, GetSiteDocumentsRatedByMePageData, GetSiteDocumentsRatedByMePageResponses, PostAssetLibraryDocumentBatchData, PostAssetLibraryDocumentBatchResponses, PostAssetLibraryDocumentsPageExportBatchData, PostAssetLibraryDocumentsPageExportBatchResponses, PostDocumentFolderDocumentBatchData, PostDocumentFolderDocumentBatchResponses, PostDocumentFolderDocumentsPageExportBatchData, PostDocumentFolderDocumentsPageExportBatchResponses, PostSiteDocumentBatchData, PostSiteDocumentBatchResponses, PostSiteDocumentsPageExportBatchData, PostSiteDocumentsPageExportBatchResponses, DeleteDocumentShortcutData, DeleteDocumentShortcutResponses, GetDocumentShortcutData, GetDocumentShortcutResponses, PatchDocumentShortcutData, PatchDocumentShortcutResponses, PutDocumentShortcutData, PutDocumentShortcutResponses, DeleteDocumentShortcutBatchData, DeleteDocumentShortcutBatchResponses, PutDocumentShortcutBatchData, PutDocumentShortcutBatchResponses, DeleteSiteDocumentShortcutByExternalReferenceCodeData, DeleteSiteDocumentShortcutByExternalReferenceCodeResponses, GetSiteDocumentShortcutByExternalReferenceCodeData, GetSiteDocumentShortcutByExternalReferenceCodeResponses, PutSiteDocumentShortcutByExternalReferenceCodeData, PutSiteDocumentShortcutByExternalReferenceCodeResponses, GetAssetLibraryDocumentShortcutsPageData, GetAssetLibraryDocumentShortcutsPageResponses, PostAssetLibraryDocumentShortcutData, PostAssetLibraryDocumentShortcutResponses, GetSiteDocumentShortcutsPageData, GetSiteDocumentShortcutsPageResponses, PostSiteDocumentShortcutData, PostSiteDocumentShortcutResponses, PostAssetLibraryDocumentShortcutBatchData, PostAssetLibraryDocumentShortcutBatchResponses, PostAssetLibraryDocumentShortcutsPageExportBatchData, PostAssetLibraryDocumentShortcutsPageExportBatchResponses, PostSiteDocumentShortcutBatchData, PostSiteDocumentShortcutBatchResponses, PostSiteDocumentShortcutsPageExportBatchData, PostSiteDocumentShortcutsPageExportBatchResponses, DeleteKnowledgeBaseArticleData, DeleteKnowledgeBaseArticleResponses, GetKnowledgeBaseArticleData, GetKnowledgeBaseArticleResponses, PatchKnowledgeBaseArticleData, PatchKnowledgeBaseArticleResponses, PutKnowledgeBaseArticleData, PutKnowledgeBaseArticleResponses, DeleteKnowledgeBaseArticleBatchData, DeleteKnowledgeBaseArticleBatchResponses, PutKnowledgeBaseArticleBatchData, PutKnowledgeBaseArticleBatchResponses, DeleteKnowledgeBaseArticleMyRatingData, DeleteKnowledgeBaseArticleMyRatingResponses, GetKnowledgeBaseArticleMyRatingData, GetKnowledgeBaseArticleMyRatingResponses, PostKnowledgeBaseArticleMyRatingData, PostKnowledgeBaseArticleMyRatingResponses, PutKnowledgeBaseArticleMyRatingData, PutKnowledgeBaseArticleMyRatingResponses, DeleteSiteKnowledgeBaseArticleByExternalReferenceCodeData, DeleteSiteKnowledgeBaseArticleByExternalReferenceCodeResponses, GetSiteKnowledgeBaseArticleByExternalReferenceCodeData, GetSiteKnowledgeBaseArticleByExternalReferenceCodeResponses, PutSiteKnowledgeBaseArticleByExternalReferenceCodeData, PutSiteKnowledgeBaseArticleByExternalReferenceCodeResponses, GetKnowledgeBaseArticleKnowledgeBaseArticlesPageData, GetKnowledgeBaseArticleKnowledgeBaseArticlesPageResponses, PostKnowledgeBaseArticleKnowledgeBaseArticleData, PostKnowledgeBaseArticleKnowledgeBaseArticleResponses, GetKnowledgeBaseArticlePermissionsPageData, GetKnowledgeBaseArticlePermissionsPageResponses, PutKnowledgeBaseArticlePermissionsPageData, PutKnowledgeBaseArticlePermissionsPageResponses, GetKnowledgeBaseFolderKnowledgeBaseArticlesPageData, GetKnowledgeBaseFolderKnowledgeBaseArticlesPageResponses, PostKnowledgeBaseFolderKnowledgeBaseArticleData, PostKnowledgeBaseFolderKnowledgeBaseArticleResponses, GetSiteKnowledgeBaseArticlePermissionsPageData, GetSiteKnowledgeBaseArticlePermissionsPageResponses, PutSiteKnowledgeBaseArticlePermissionsPageData, PutSiteKnowledgeBaseArticlePermissionsPageResponses, GetSiteKnowledgeBaseArticlesPageData, GetSiteKnowledgeBaseArticlesPageResponses, PostSiteKnowledgeBaseArticleData, PostSiteKnowledgeBaseArticleResponses, PostKnowledgeBaseFolderKnowledgeBaseArticleBatchData, PostKnowledgeBaseFolderKnowledgeBaseArticleBatchResponses, PostKnowledgeBaseFolderKnowledgeBaseArticlesPageExportBatchData, PostKnowledgeBaseFolderKnowledgeBaseArticlesPageExportBatchResponses, PostSiteKnowledgeBaseArticleBatchData, PostSiteKnowledgeBaseArticleBatchResponses, PostSiteKnowledgeBaseArticlesPageExportBatchData, PostSiteKnowledgeBaseArticlesPageExportBatchResponses, PutKnowledgeBaseArticleSubscribeData, PutKnowledgeBaseArticleSubscribeResponses, PutKnowledgeBaseArticleUnsubscribeData, PutKnowledgeBaseArticleUnsubscribeResponses, PutSiteKnowledgeBaseArticleSubscribeData, PutSiteKnowledgeBaseArticleSubscribeResponses, PutSiteKnowledgeBaseArticleUnsubscribeData, PutSiteKnowledgeBaseArticleUnsubscribeResponses, DeleteKnowledgeBaseAttachmentData, DeleteKnowledgeBaseAttachmentResponses, GetKnowledgeBaseAttachmentData, GetKnowledgeBaseAttachmentResponses, DeleteKnowledgeBaseAttachmentBatchData, DeleteKnowledgeBaseAttachmentBatchResponses, DeleteSiteKnowledgeBaseArticleByExternalReferenceCodeKnowledgeBaseArticleExternalReferenceCodeKnowledgeBaseAttachmentByExternalReferenceCodeData, DeleteSiteKnowledgeBaseArticleByExternalReferenceCodeKnowledgeBaseArticleExternalReferenceCodeKnowledgeBaseAttachmentByExternalReferenceCodeResponses, GetSiteKnowledgeBaseArticleByExternalReferenceCodeKnowledgeBaseArticleExternalReferenceCodeKnowledgeBaseAttachmentByExternalReferenceCodeData, GetSiteKnowledgeBaseArticleByExternalReferenceCodeKnowledgeBaseArticleExternalReferenceCodeKnowledgeBaseAttachmentByExternalReferenceCodeResponses, GetKnowledgeBaseArticleKnowledgeBaseAttachmentsPageData, GetKnowledgeBaseArticleKnowledgeBaseAttachmentsPageResponses, PostKnowledgeBaseArticleKnowledgeBaseAttachmentData, PostKnowledgeBaseArticleKnowledgeBaseAttachmentResponses, PostKnowledgeBaseArticleKnowledgeBaseAttachmentBatchData, PostKnowledgeBaseArticleKnowledgeBaseAttachmentBatchResponses, PostKnowledgeBaseArticleKnowledgeBaseAttachmentsPageExportBatchData, PostKnowledgeBaseArticleKnowledgeBaseAttachmentsPageExportBatchResponses, DeleteKnowledgeBaseFolderData, DeleteKnowledgeBaseFolderResponses, GetKnowledgeBaseFolderData, GetKnowledgeBaseFolderResponses, PatchKnowledgeBaseFolderData, PatchKnowledgeBaseFolderResponses, PutKnowledgeBaseFolderData, PutKnowledgeBaseFolderResponses, DeleteKnowledgeBaseFolderBatchData, DeleteKnowledgeBaseFolderBatchResponses, PutKnowledgeBaseFolderBatchData, PutKnowledgeBaseFolderBatchResponses, DeleteSiteKnowledgeBaseFolderByExternalReferenceCodeData, DeleteSiteKnowledgeBaseFolderByExternalReferenceCodeResponses, GetSiteKnowledgeBaseFolderByExternalReferenceCodeData, GetSiteKnowledgeBaseFolderByExternalReferenceCodeResponses, PutSiteKnowledgeBaseFolderByExternalReferenceCodeData, PutSiteKnowledgeBaseFolderByExternalReferenceCodeResponses, GetKnowledgeBaseFolderKnowledgeBaseFoldersPageData, GetKnowledgeBaseFolderKnowledgeBaseFoldersPageResponses, PostKnowledgeBaseFolderKnowledgeBaseFolderData, PostKnowledgeBaseFolderKnowledgeBaseFolderResponses, GetKnowledgeBaseFolderPermissionsPageData, GetKnowledgeBaseFolderPermissionsPageResponses, PutKnowledgeBaseFolderPermissionsPageData, PutKnowledgeBaseFolderPermissionsPageResponses, GetSiteKnowledgeBaseFolderPermissionsPageData, GetSiteKnowledgeBaseFolderPermissionsPageResponses, PutSiteKnowledgeBaseFolderPermissionsPageData, PutSiteKnowledgeBaseFolderPermissionsPageResponses, GetSiteKnowledgeBaseFoldersPageData, GetSiteKnowledgeBaseFoldersPageResponses, PostSiteKnowledgeBaseFolderData, PostSiteKnowledgeBaseFolderResponses, PostSiteKnowledgeBaseFolderBatchData, PostSiteKnowledgeBaseFolderBatchResponses, PostSiteKnowledgeBaseFoldersPageExportBatchData, PostSiteKnowledgeBaseFoldersPageExportBatchResponses, GetAssetLibraryLanguagesPageData, GetAssetLibraryLanguagesPageResponses, GetSiteLanguagesPageData, GetSiteLanguagesPageResponses, PostAssetLibraryLanguagesPageExportBatchData, PostAssetLibraryLanguagesPageExportBatchResponses, PostSiteLanguagesPageExportBatchData, PostSiteLanguagesPageExportBatchResponses, DeleteMessageBoardAttachmentData, DeleteMessageBoardAttachmentResponses, GetMessageBoardAttachmentData, GetMessageBoardAttachmentResponses, DeleteMessageBoardAttachmentBatchData, DeleteMessageBoardAttachmentBatchResponses, DeleteSiteMessageBoardMessageByExternalReferenceCodeMessageBoardMessageExternalReferenceCodeMessageBoardAttachmentByExternalReferenceCodeData, DeleteSiteMessageBoardMessageByExternalReferenceCodeMessageBoardMessageExternalReferenceCodeMessageBoardAttachmentByExternalReferenceCodeResponses, GetSiteMessageBoardMessageByExternalReferenceCodeMessageBoardMessageExternalReferenceCodeMessageBoardAttachmentByExternalReferenceCodeData, GetSiteMessageBoardMessageByExternalReferenceCodeMessageBoardMessageExternalReferenceCodeMessageBoardAttachmentByExternalReferenceCodeResponses, GetMessageBoardMessageMessageBoardAttachmentsPageData, GetMessageBoardMessageMessageBoardAttachmentsPageResponses, PostMessageBoardMessageMessageBoardAttachmentData, PostMessageBoardMessageMessageBoardAttachmentResponses, GetMessageBoardThreadMessageBoardAttachmentsPageData, GetMessageBoardThreadMessageBoardAttachmentsPageResponses, PostMessageBoardThreadMessageBoardAttachmentData, PostMessageBoardThreadMessageBoardAttachmentResponses, PostMessageBoardMessageMessageBoardAttachmentBatchData, PostMessageBoardMessageMessageBoardAttachmentBatchResponses, PostMessageBoardMessageMessageBoardAttachmentsPageExportBatchData, PostMessageBoardMessageMessageBoardAttachmentsPageExportBatchResponses, PostMessageBoardThreadMessageBoardAttachmentBatchData, PostMessageBoardThreadMessageBoardAttachmentBatchResponses, PostMessageBoardThreadMessageBoardAttachmentsPageExportBatchData, PostMessageBoardThreadMessageBoardAttachmentsPageExportBatchResponses, DeleteMessageBoardMessageData, DeleteMessageBoardMessageResponses, GetMessageBoardMessageData, GetMessageBoardMessageResponses, PatchMessageBoardMessageData, PatchMessageBoardMessageResponses, PutMessageBoardMessageData, PutMessageBoardMessageResponses, DeleteMessageBoardMessageBatchData, DeleteMessageBoardMessageBatchResponses, PutMessageBoardMessageBatchData, PutMessageBoardMessageBatchResponses, DeleteMessageBoardMessageMyRatingData, DeleteMessageBoardMessageMyRatingResponses, GetMessageBoardMessageMyRatingData, GetMessageBoardMessageMyRatingResponses, PostMessageBoardMessageMyRatingData, PostMessageBoardMessageMyRatingResponses, PutMessageBoardMessageMyRatingData, PutMessageBoardMessageMyRatingResponses, DeleteSiteMessageBoardMessageByExternalReferenceCodeData, DeleteSiteMessageBoardMessageByExternalReferenceCodeResponses, GetSiteMessageBoardMessageByExternalReferenceCodeData, GetSiteMessageBoardMessageByExternalReferenceCodeResponses, PutSiteMessageBoardMessageByExternalReferenceCodeData, PutSiteMessageBoardMessageByExternalReferenceCodeResponses, GetMessageBoardMessageMessageBoardMessagesPageData, GetMessageBoardMessageMessageBoardMessagesPageResponses, PostMessageBoardMessageMessageBoardMessageData, PostMessageBoardMessageMessageBoardMessageResponses, GetMessageBoardMessagePermissionsPageData, GetMessageBoardMessagePermissionsPageResponses, PutMessageBoardMessagePermissionsPageData, PutMessageBoardMessagePermissionsPageResponses, GetMessageBoardThreadMessageBoardMessagesPageData, GetMessageBoardThreadMessageBoardMessagesPageResponses, PostMessageBoardThreadMessageBoardMessageData, PostMessageBoardThreadMessageBoardMessageResponses, GetSiteMessageBoardMessageByFriendlyUrlPathData, GetSiteMessageBoardMessageByFriendlyUrlPathResponses, GetSiteMessageBoardMessagePermissionsPageData, GetSiteMessageBoardMessagePermissionsPageResponses, PutSiteMessageBoardMessagePermissionsPageData, PutSiteMessageBoardMessagePermissionsPageResponses, GetSiteMessageBoardMessagesPageData, GetSiteMessageBoardMessagesPageResponses, GetSiteUserMessageBoardMessagesActivityPageData, GetSiteUserMessageBoardMessagesActivityPageResponses, PostMessageBoardThreadMessageBoardMessageBatchData, PostMessageBoardThreadMessageBoardMessageBatchResponses, PostMessageBoardThreadMessageBoardMessagesPageExportBatchData, PostMessageBoardThreadMessageBoardMessagesPageExportBatchResponses, PostSiteMessageBoardMessagesPageExportBatchData, PostSiteMessageBoardMessagesPageExportBatchResponses, PutMessageBoardMessageMarkAsAnswerData, PutMessageBoardMessageMarkAsAnswerResponses, PutMessageBoardMessageSubscribeData, PutMessageBoardMessageSubscribeResponses, PutMessageBoardMessageUnmarkAsAnswerData, PutMessageBoardMessageUnmarkAsAnswerResponses, PutMessageBoardMessageUnsubscribeData, PutMessageBoardMessageUnsubscribeResponses, DeleteMessageBoardSectionData, DeleteMessageBoardSectionResponses, GetMessageBoardSectionData, GetMessageBoardSectionResponses, PatchMessageBoardSectionData, PatchMessageBoardSectionResponses, PutMessageBoardSectionData, PutMessageBoardSectionResponses, DeleteMessageBoardSectionBatchData, DeleteMessageBoardSectionBatchResponses, PutMessageBoardSectionBatchData, PutMessageBoardSectionBatchResponses, GetMessageBoardSectionMessageBoardSectionsPageData, GetMessageBoardSectionMessageBoardSectionsPageResponses, PostMessageBoardSectionMessageBoardSectionData, PostMessageBoardSectionMessageBoardSectionResponses, GetMessageBoardSectionPermissionsPageData, GetMessageBoardSectionPermissionsPageResponses, PutMessageBoardSectionPermissionsPageData, PutMessageBoardSectionPermissionsPageResponses, GetSiteMessageBoardSectionByFriendlyUrlPathData, GetSiteMessageBoardSectionByFriendlyUrlPathResponses, GetSiteMessageBoardSectionPermissionsPageData, GetSiteMessageBoardSectionPermissionsPageResponses, PutSiteMessageBoardSectionPermissionsPageData, PutSiteMessageBoardSectionPermissionsPageResponses, GetSiteMessageBoardSectionsPageData, GetSiteMessageBoardSectionsPageResponses, PostSiteMessageBoardSectionData, PostSiteMessageBoardSectionResponses, PostSiteMessageBoardSectionBatchData, PostSiteMessageBoardSectionBatchResponses, PostSiteMessageBoardSectionsPageExportBatchData, PostSiteMessageBoardSectionsPageExportBatchResponses, PutMessageBoardSectionSubscribeData, PutMessageBoardSectionSubscribeResponses, PutMessageBoardSectionUnsubscribeData, PutMessageBoardSectionUnsubscribeResponses, DeleteMessageBoardThreadData, DeleteMessageBoardThreadResponses, GetMessageBoardThreadData, GetMessageBoardThreadResponses, PatchMessageBoardThreadData, PatchMessageBoardThreadResponses, PutMessageBoardThreadData, PutMessageBoardThreadResponses, DeleteMessageBoardThreadBatchData, DeleteMessageBoardThreadBatchResponses, PutMessageBoardThreadBatchData, PutMessageBoardThreadBatchResponses, DeleteMessageBoardThreadMyRatingData, DeleteMessageBoardThreadMyRatingResponses, GetMessageBoardThreadMyRatingData, GetMessageBoardThreadMyRatingResponses, PostMessageBoardThreadMyRatingData, PostMessageBoardThreadMyRatingResponses, PutMessageBoardThreadMyRatingData, PutMessageBoardThreadMyRatingResponses, GetMessageBoardSectionMessageBoardThreadsPageData, GetMessageBoardSectionMessageBoardThreadsPageResponses, PostMessageBoardSectionMessageBoardThreadData, PostMessageBoardSectionMessageBoardThreadResponses, GetMessageBoardThreadPermissionsPageData, GetMessageBoardThreadPermissionsPageResponses, PutMessageBoardThreadPermissionsPageData, PutMessageBoardThreadPermissionsPageResponses, GetMessageBoardThreadsRankedPageData, GetMessageBoardThreadsRankedPageResponses, GetSiteMessageBoardThreadByFriendlyUrlPathData, GetSiteMessageBoardThreadByFriendlyUrlPathResponses, GetSiteMessageBoardThreadPermissionsPageData, GetSiteMessageBoardThreadPermissionsPageResponses, PutSiteMessageBoardThreadPermissionsPageData, PutSiteMessageBoardThreadPermissionsPageResponses, GetSiteMessageBoardThreadsPageData, GetSiteMessageBoardThreadsPageResponses, PostSiteMessageBoardThreadData, PostSiteMessageBoardThreadResponses, PostMessageBoardSectionMessageBoardThreadBatchData, PostMessageBoardSectionMessageBoardThreadBatchResponses, PostMessageBoardSectionMessageBoardThreadsPageExportBatchData, PostMessageBoardSectionMessageBoardThreadsPageExportBatchResponses, PostSiteMessageBoardThreadBatchData, PostSiteMessageBoardThreadBatchResponses, PostSiteMessageBoardThreadsPageExportBatchData, PostSiteMessageBoardThreadsPageExportBatchResponses, PutMessageBoardThreadSubscribeData, PutMessageBoardThreadSubscribeResponses, PutMessageBoardThreadUnsubscribeData, PutMessageBoardThreadUnsubscribeResponses, DeleteNavigationMenuData, DeleteNavigationMenuResponses, GetNavigationMenuData, GetNavigationMenuResponses, PutNavigationMenuData, PutNavigationMenuResponses, DeleteNavigationMenuBatchData, DeleteNavigationMenuBatchResponses, PutNavigationMenuBatchData, PutNavigationMenuBatchResponses, DeleteSiteNavigationMenuByExternalReferenceCodeData, DeleteSiteNavigationMenuByExternalReferenceCodeResponses, GetSiteNavigationMenuByExternalReferenceCodeData, GetSiteNavigationMenuByExternalReferenceCodeResponses, PutSiteNavigationMenuByExternalReferenceCodeData, PutSiteNavigationMenuByExternalReferenceCodeResponses, GetNavigationMenuPermissionsPageData, GetNavigationMenuPermissionsPageResponses, PutNavigationMenuPermissionsPageData, PutNavigationMenuPermissionsPageResponses, GetSiteNavigationMenuPermissionsPageData, GetSiteNavigationMenuPermissionsPageResponses, PutSiteNavigationMenuPermissionsPageData, PutSiteNavigationMenuPermissionsPageResponses, GetSiteNavigationMenusPageData, GetSiteNavigationMenusPageResponses, PostSiteNavigationMenuData, PostSiteNavigationMenuResponses, PostSiteNavigationMenuBatchData, PostSiteNavigationMenuBatchResponses, PostSiteNavigationMenusPageExportBatchData, PostSiteNavigationMenusPageExportBatchResponses, GetOpenApiData, GetOpenApiResponses, GetSiteSitePageData, GetSiteSitePageResponses, GetSiteSitePageExperienceExperienceKeyData, GetSiteSitePageExperienceExperienceKeyResponses, GetSiteSitePageExperienceExperienceKeyRenderedPageData, GetSiteSitePageExperienceExperienceKeyRenderedPageResponses, GetSiteSitePageRenderedPageData, GetSiteSitePageRenderedPageResponses, GetSiteSitePagesExperiencesPageData, GetSiteSitePagesExperiencesPageResponses, GetSiteSitePagesPageData, GetSiteSitePagesPageResponses, PostSiteSitePageData, PostSiteSitePageResponses, PostSiteSitePageBatchData, PostSiteSitePageBatchResponses, PostSiteSitePagesPageExportBatchData, PostSiteSitePagesPageExportBatchResponses, DeleteAssetLibraryStructuredContentFolderByExternalReferenceCodeData, DeleteAssetLibraryStructuredContentFolderByExternalReferenceCodeResponses, GetAssetLibraryStructuredContentFolderByExternalReferenceCodeData, GetAssetLibraryStructuredContentFolderByExternalReferenceCodeResponses, PutAssetLibraryStructuredContentFolderByExternalReferenceCodeData, PutAssetLibraryStructuredContentFolderByExternalReferenceCodeResponses, DeleteSiteStructuredContentFolderByExternalReferenceCodeData, DeleteSiteStructuredContentFolderByExternalReferenceCodeResponses, GetSiteStructuredContentFolderByExternalReferenceCodeData, GetSiteStructuredContentFolderByExternalReferenceCodeResponses, PutSiteStructuredContentFolderByExternalReferenceCodeData, PutSiteStructuredContentFolderByExternalReferenceCodeResponses, DeleteStructuredContentFolderData, DeleteStructuredContentFolderResponses, GetStructuredContentFolderData, GetStructuredContentFolderResponses, PatchStructuredContentFolderData, PatchStructuredContentFolderResponses, PutStructuredContentFolderData, PutStructuredContentFolderResponses, DeleteStructuredContentFolderBatchData, DeleteStructuredContentFolderBatchResponses, PutStructuredContentFolderBatchData, PutStructuredContentFolderBatchResponses, GetAssetLibraryStructuredContentFolderPermissionsPageData, GetAssetLibraryStructuredContentFolderPermissionsPageResponses, PutAssetLibraryStructuredContentFolderPermissionsPageData, PutAssetLibraryStructuredContentFolderPermissionsPageResponses, GetAssetLibraryStructuredContentFoldersPageData, GetAssetLibraryStructuredContentFoldersPageResponses, PostAssetLibraryStructuredContentFolderData, PostAssetLibraryStructuredContentFolderResponses, GetSiteStructuredContentFolderPermissionsPageData, GetSiteStructuredContentFolderPermissionsPageResponses, PutSiteStructuredContentFolderPermissionsPageData, PutSiteStructuredContentFolderPermissionsPageResponses, GetSiteStructuredContentFoldersPageData, GetSiteStructuredContentFoldersPageResponses, PostSiteStructuredContentFolderData, PostSiteStructuredContentFolderResponses, GetStructuredContentFolderPermissionsPageData, GetStructuredContentFolderPermissionsPageResponses, PutStructuredContentFolderPermissionsPageData, PutStructuredContentFolderPermissionsPageResponses, GetStructuredContentFolderStructuredContentFoldersPageData, GetStructuredContentFolderStructuredContentFoldersPageResponses, PostStructuredContentFolderStructuredContentFolderData, PostStructuredContentFolderStructuredContentFolderResponses, PostAssetLibraryStructuredContentFolderBatchData, PostAssetLibraryStructuredContentFolderBatchResponses, PostAssetLibraryStructuredContentFoldersPageExportBatchData, PostAssetLibraryStructuredContentFoldersPageExportBatchResponses, PostSiteStructuredContentFolderBatchData, PostSiteStructuredContentFolderBatchResponses, PostSiteStructuredContentFoldersPageExportBatchData, PostSiteStructuredContentFoldersPageExportBatchResponses, PutStructuredContentFolderSubscribeData, PutStructuredContentFolderSubscribeResponses, PutStructuredContentFolderUnsubscribeData, PutStructuredContentFolderUnsubscribeResponses, DeleteAssetLibraryStructuredContentByExternalReferenceCodeData, DeleteAssetLibraryStructuredContentByExternalReferenceCodeResponses, GetAssetLibraryStructuredContentByExternalReferenceCodeData, GetAssetLibraryStructuredContentByExternalReferenceCodeResponses, PutAssetLibraryStructuredContentByExternalReferenceCodeData, PutAssetLibraryStructuredContentByExternalReferenceCodeResponses, DeleteSiteStructuredContentByExternalReferenceCodeData, DeleteSiteStructuredContentByExternalReferenceCodeResponses, GetSiteStructuredContentByExternalReferenceCodeData, GetSiteStructuredContentByExternalReferenceCodeResponses, PutSiteStructuredContentByExternalReferenceCodeData, PutSiteStructuredContentByExternalReferenceCodeResponses, DeleteStructuredContentData, DeleteStructuredContentResponses, GetStructuredContentData, GetStructuredContentResponses, PatchStructuredContentData, PatchStructuredContentResponses, PutStructuredContentData, PutStructuredContentResponses, DeleteStructuredContentBatchData, DeleteStructuredContentBatchResponses, PutStructuredContentBatchData, PutStructuredContentBatchResponses, DeleteStructuredContentMyRatingData, DeleteStructuredContentMyRatingResponses, GetStructuredContentMyRatingData, GetStructuredContentMyRatingResponses, PostStructuredContentMyRatingData, PostStructuredContentMyRatingResponses, PutStructuredContentMyRatingData, PutStructuredContentMyRatingResponses, GetAssetLibraryStructuredContentPermissionsPageData, GetAssetLibraryStructuredContentPermissionsPageResponses, PutAssetLibraryStructuredContentPermissionsPageData, PutAssetLibraryStructuredContentPermissionsPageResponses, GetAssetLibraryStructuredContentsPageData, GetAssetLibraryStructuredContentsPageResponses, PostAssetLibraryStructuredContentData, PostAssetLibraryStructuredContentResponses, GetContentStructureStructuredContentsPageData, GetContentStructureStructuredContentsPageResponses, GetSiteStructuredContentByKeyData, GetSiteStructuredContentByKeyResponses, GetSiteStructuredContentByUuidData, GetSiteStructuredContentByUuidResponses, GetSiteStructuredContentPermissionsPageData, GetSiteStructuredContentPermissionsPageResponses, PutSiteStructuredContentPermissionsPageData, PutSiteStructuredContentPermissionsPageResponses, GetSiteStructuredContentsPageData, GetSiteStructuredContentsPageResponses, PostSiteStructuredContentData, PostSiteStructuredContentResponses, GetStructuredContentFolderStructuredContentsPageData, GetStructuredContentFolderStructuredContentsPageResponses, PostStructuredContentFolderStructuredContentData, PostStructuredContentFolderStructuredContentResponses, GetStructuredContentPermissionsPageData, GetStructuredContentPermissionsPageResponses, PutStructuredContentPermissionsPageData, PutStructuredContentPermissionsPageResponses, GetStructuredContentRenderedContentByDisplayPageDisplayPageKeyData, GetStructuredContentRenderedContentByDisplayPageDisplayPageKeyResponses, GetStructuredContentRenderedContentContentTemplateData, GetStructuredContentRenderedContentContentTemplateResponses, PostAssetLibraryStructuredContentBatchData, PostAssetLibraryStructuredContentBatchResponses, PostAssetLibraryStructuredContentsPageExportBatchData, PostAssetLibraryStructuredContentsPageExportBatchResponses, PostContentStructureStructuredContentsPageExportBatchData, PostContentStructureStructuredContentsPageExportBatchResponses, PostSiteStructuredContentBatchData, PostSiteStructuredContentBatchResponses, PostSiteStructuredContentsPageExportBatchData, PostSiteStructuredContentsPageExportBatchResponses, PostStructuredContentFolderStructuredContentBatchData, PostStructuredContentFolderStructuredContentBatchResponses, PostStructuredContentFolderStructuredContentsPageExportBatchData, PostStructuredContentFolderStructuredContentsPageExportBatchResponses, PutStructuredContentSubscribeData, PutStructuredContentSubscribeResponses, PutStructuredContentUnsubscribeData, PutStructuredContentUnsubscribeResponses, DeleteSiteWikiNodeByExternalReferenceCodeData, DeleteSiteWikiNodeByExternalReferenceCodeResponses, GetSiteWikiNodeByExternalReferenceCodeData, GetSiteWikiNodeByExternalReferenceCodeResponses, PutSiteWikiNodeByExternalReferenceCodeData, PutSiteWikiNodeByExternalReferenceCodeResponses, DeleteWikiNodeData, DeleteWikiNodeResponses, GetWikiNodeData, GetWikiNodeResponses, PutWikiNodeData, PutWikiNodeResponses, DeleteWikiNodeBatchData, DeleteWikiNodeBatchResponses, PutWikiNodeBatchData, PutWikiNodeBatchResponses, GetSiteWikiNodePermissionsPageData, GetSiteWikiNodePermissionsPageResponses, PutSiteWikiNodePermissionsPageData, PutSiteWikiNodePermissionsPageResponses, GetSiteWikiNodesPageData, GetSiteWikiNodesPageResponses, PostSiteWikiNodeData, PostSiteWikiNodeResponses, GetWikiNodePermissionsPageData, GetWikiNodePermissionsPageResponses, PutWikiNodePermissionsPageData, PutWikiNodePermissionsPageResponses, PostSiteWikiNodeBatchData, PostSiteWikiNodeBatchResponses, PostSiteWikiNodesPageExportBatchData, PostSiteWikiNodesPageExportBatchResponses, PutWikiNodeSubscribeData, PutWikiNodeSubscribeResponses, PutWikiNodeUnsubscribeData, PutWikiNodeUnsubscribeResponses, DeleteSiteWikiPageByExternalReferenceCodeWikiPageExternalReferenceCodeWikiPageAttachmentByExternalReferenceCodeData, DeleteSiteWikiPageByExternalReferenceCodeWikiPageExternalReferenceCodeWikiPageAttachmentByExternalReferenceCodeResponses, GetSiteWikiPageByExternalReferenceCodeWikiPageExternalReferenceCodeWikiPageAttachmentByExternalReferenceCodeData, GetSiteWikiPageByExternalReferenceCodeWikiPageExternalReferenceCodeWikiPageAttachmentByExternalReferenceCodeResponses, DeleteWikiPageAttachmentData, DeleteWikiPageAttachmentResponses, GetWikiPageAttachmentData, GetWikiPageAttachmentResponses, DeleteWikiPageAttachmentBatchData, DeleteWikiPageAttachmentBatchResponses, GetWikiPageWikiPageAttachmentsPageData, GetWikiPageWikiPageAttachmentsPageResponses, PostWikiPageWikiPageAttachmentData, PostWikiPageWikiPageAttachmentResponses, PostWikiPageWikiPageAttachmentBatchData, PostWikiPageWikiPageAttachmentBatchResponses, PostWikiPageWikiPageAttachmentsPageExportBatchData, PostWikiPageWikiPageAttachmentsPageExportBatchResponses, DeleteSiteWikiPageByExternalReferenceCodeData, DeleteSiteWikiPageByExternalReferenceCodeResponses, GetSiteWikiPageByExternalReferenceCodeData, GetSiteWikiPageByExternalReferenceCodeResponses, PutSiteWikiPageByExternalReferenceCodeData, PutSiteWikiPageByExternalReferenceCodeResponses, DeleteWikiPageData, DeleteWikiPageResponses, GetWikiPageData, GetWikiPageResponses, PutWikiPageData, PutWikiPageResponses, DeleteWikiPageBatchData, DeleteWikiPageBatchResponses, PutWikiPageBatchData, PutWikiPageBatchResponses, GetWikiNodeWikiPagesPageData, GetWikiNodeWikiPagesPageResponses, PostWikiNodeWikiPageData, PostWikiNodeWikiPageResponses, GetWikiPagePermissionsPageData, GetWikiPagePermissionsPageResponses, PutWikiPagePermissionsPageData, PutWikiPagePermissionsPageResponses, GetWikiPageWikiPagesPageData, GetWikiPageWikiPagesPageResponses, PostWikiPageWikiPageData, PostWikiPageWikiPageResponses, PostWikiNodeWikiPageBatchData, PostWikiNodeWikiPageBatchResponses, PostWikiNodeWikiPagesPageExportBatchData, PostWikiNodeWikiPagesPageExportBatchResponses, PutWikiPageSubscribeData, PutWikiPageSubscribeResponses, PutWikiPageUnsubscribeData, PutWikiPageUnsubscribeResponses } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Deletes the blog post's image.
 */
export const deleteBlogPostingImage = <ThrowOnError extends boolean = false>(options: Options<DeleteBlogPostingImageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteBlogPostingImageResponses, unknown, ThrowOnError>({
        url: '/v1.0/blog-posting-images/{blogPostingImageId}',
        ...options
    });
};

/**
 * Retrieves the blog post's image. The binary image is returned as a relative URL to the image itself.
 */
export const getBlogPostingImage = <ThrowOnError extends boolean = false>(options: Options<GetBlogPostingImageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetBlogPostingImageResponses, unknown, ThrowOnError>({
        url: '/v1.0/blog-posting-images/{blogPostingImageId}',
        ...options
    });
};

export const deleteBlogPostingImageBatch = <ThrowOnError extends boolean = false>(options?: Options<DeleteBlogPostingImageBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteBlogPostingImageBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/blog-posting-images/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Deletes the site's blog post image by external reference code.
 */
export const deleteSiteBlogPostingImageByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteSiteBlogPostingImageByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSiteBlogPostingImageByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/blog-posting-images/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves the site's blog post image by external reference code. The binary image is returned as a relative URL to the image itself.
 */
export const getSiteBlogPostingImageByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetSiteBlogPostingImageByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteBlogPostingImageByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/blog-posting-images/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves the site's blog post images. Results can be paginated, filtered, searched, and sorted.
 */
export const getSiteBlogPostingImagesPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteBlogPostingImagesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteBlogPostingImagesPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/blog-posting-images',
        ...options
    });
};

/**
 * Creates a blog post image. The request body must be `multipart/form-data` with two parts, the file's bytes (`file`), and an optional JSON string (`blogPostingImage`) with the metadata.
 */
export const postSiteBlogPostingImage = <ThrowOnError extends boolean = false>(options: Options<PostSiteBlogPostingImageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteBlogPostingImageResponses, unknown, ThrowOnError>({
        ...formDataBodySerializer,
        url: '/v1.0/sites/{siteId}/blog-posting-images',
        ...options,
        headers: {
            'Content-Type': null,
            ...options.headers
        }
    });
};

export const postSiteBlogPostingImageBatch = <ThrowOnError extends boolean = false>(options: Options<PostSiteBlogPostingImageBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteBlogPostingImageBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/blog-posting-images/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postSiteBlogPostingImagesPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostSiteBlogPostingImagesPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteBlogPostingImagesPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/blog-posting-images/export-batch',
        ...options
    });
};

/**
 * Deletes the blog post and returns a 204 if the operation succeeds.
 */
export const deleteBlogPosting = <ThrowOnError extends boolean = false>(options: Options<DeleteBlogPostingData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteBlogPostingResponses, unknown, ThrowOnError>({
        url: '/v1.0/blog-postings/{blogPostingId}',
        ...options
    });
};

/**
 * Retrieves the blog post.
 */
export const getBlogPosting = <ThrowOnError extends boolean = false>(options: Options<GetBlogPostingData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetBlogPostingResponses, unknown, ThrowOnError>({
        url: '/v1.0/blog-postings/{blogPostingId}',
        ...options
    });
};

/**
 * Updates the blog post using only the fields received in the request body. Any other fields are left untouched. Returns the updated blog post.
 */
export const patchBlogPosting = <ThrowOnError extends boolean = false>(options: Options<PatchBlogPostingData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchBlogPostingResponses, unknown, ThrowOnError>({
        url: '/v1.0/blog-postings/{blogPostingId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Replaces the blog post with the information sent in the request body. Any missing fields are deleted, unless they are required.
 */
export const putBlogPosting = <ThrowOnError extends boolean = false>(options: Options<PutBlogPostingData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutBlogPostingResponses, unknown, ThrowOnError>({
        url: '/v1.0/blog-postings/{blogPostingId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteBlogPostingBatch = <ThrowOnError extends boolean = false>(options?: Options<DeleteBlogPostingBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteBlogPostingBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/blog-postings/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const putBlogPostingBatch = <ThrowOnError extends boolean = false>(options?: Options<PutBlogPostingBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).put<PutBlogPostingBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/blog-postings/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Deletes the blog post rating of the user who authenticated the request.
 */
export const deleteBlogPostingMyRating = <ThrowOnError extends boolean = false>(options: Options<DeleteBlogPostingMyRatingData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteBlogPostingMyRatingResponses, unknown, ThrowOnError>({
        url: '/v1.0/blog-postings/{blogPostingId}/my-rating',
        ...options
    });
};

/**
 * Retrieves the blog post rating of the user who authenticated the request.
 */
export const getBlogPostingMyRating = <ThrowOnError extends boolean = false>(options: Options<GetBlogPostingMyRatingData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetBlogPostingMyRatingResponses, unknown, ThrowOnError>({
        url: '/v1.0/blog-postings/{blogPostingId}/my-rating',
        ...options
    });
};

/**
 * Creates a new blog post rating by the user who authenticated the request.
 */
export const postBlogPostingMyRating = <ThrowOnError extends boolean = false>(options: Options<PostBlogPostingMyRatingData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostBlogPostingMyRatingResponses, unknown, ThrowOnError>({
        url: '/v1.0/blog-postings/{blogPostingId}/my-rating',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Replaces an existing blog post rating by the user who authenticated the request.
 */
export const putBlogPostingMyRating = <ThrowOnError extends boolean = false>(options: Options<PutBlogPostingMyRatingData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutBlogPostingMyRatingResponses, unknown, ThrowOnError>({
        url: '/v1.0/blog-postings/{blogPostingId}/my-rating',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Deletes the blog post by external reference code.
 */
export const deleteSiteBlogPostingByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteSiteBlogPostingByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSiteBlogPostingByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/blog-postings/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves the site's blog post by external reference code.
 */
export const getSiteBlogPostingByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetSiteBlogPostingByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteBlogPostingByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/blog-postings/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Updates the site's blog post with the given external reference code, or creates it if it not exists.
 */
export const putSiteBlogPostingByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PutSiteBlogPostingByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteBlogPostingByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/blog-postings/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getBlogPostingPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetBlogPostingPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetBlogPostingPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/blog-postings/{blogPostingId}/permissions',
        ...options
    });
};

export const putBlogPostingPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutBlogPostingPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutBlogPostingPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/blog-postings/{blogPostingId}/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the blog post's rendered display page
 */
export const getBlogPostingRenderedContentByDisplayPageDisplayPageKey = <ThrowOnError extends boolean = false>(options: Options<GetBlogPostingRenderedContentByDisplayPageDisplayPageKeyData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetBlogPostingRenderedContentByDisplayPageDisplayPageKeyResponses, unknown, ThrowOnError>({
        url: '/v1.0/blog-postings/{blogPostingId}/rendered-content-by-display-page/{displayPageKey}',
        ...options
    });
};

export const getSiteBlogPostingPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteBlogPostingPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteBlogPostingPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/blog-postings/permissions',
        ...options
    });
};

export const putSiteBlogPostingPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutSiteBlogPostingPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteBlogPostingPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/blog-postings/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the site's blog postings. Results can be paginated, filtered, searched, and sorted.
 */
export const getSiteBlogPostingsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteBlogPostingsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteBlogPostingsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/blog-postings',
        ...options
    });
};

/**
 * Creates a new blog post.
 */
export const postSiteBlogPosting = <ThrowOnError extends boolean = false>(options: Options<PostSiteBlogPostingData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteBlogPostingResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/blog-postings',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postSiteBlogPostingBatch = <ThrowOnError extends boolean = false>(options: Options<PostSiteBlogPostingBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteBlogPostingBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/blog-postings/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postSiteBlogPostingsPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostSiteBlogPostingsPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteBlogPostingsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/blog-postings/export-batch',
        ...options
    });
};

export const putSiteBlogPostingSubscribe = <ThrowOnError extends boolean = false>(options: Options<PutSiteBlogPostingSubscribeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteBlogPostingSubscribeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/blog-postings/subscribe',
        ...options
    });
};

export const putSiteBlogPostingUnsubscribe = <ThrowOnError extends boolean = false>(options: Options<PutSiteBlogPostingUnsubscribeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteBlogPostingUnsubscribeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/blog-postings/unsubscribe',
        ...options
    });
};

/**
 * Deletes the comment and returns a 204 if the operation succeeded.
 */
export const deleteComment = <ThrowOnError extends boolean = false>(options: Options<DeleteCommentData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteCommentResponses, unknown, ThrowOnError>({
        url: '/v1.0/comments/{commentId}',
        ...options
    });
};

/**
 * Retrieves the comment.
 */
export const getComment = <ThrowOnError extends boolean = false>(options: Options<GetCommentData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCommentResponses, unknown, ThrowOnError>({
        url: '/v1.0/comments/{commentId}',
        ...options
    });
};

/**
 * Replaces the comment with the information sent in the request body. Any missing fields are deleted, unless they are required.
 */
export const putComment = <ThrowOnError extends boolean = false>(options: Options<PutCommentData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutCommentResponses, unknown, ThrowOnError>({
        url: '/v1.0/comments/{commentId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteCommentBatch = <ThrowOnError extends boolean = false>(options?: Options<DeleteCommentBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteCommentBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/comments/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const putCommentBatch = <ThrowOnError extends boolean = false>(options?: Options<PutCommentBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).put<PutCommentBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/comments/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Deletes the blog posting's comment by blog posting's and comment's external reference codes.
 */
export const deleteSiteBlogPostingByExternalReferenceCodeBlogPostingExternalReferenceCodeCommentByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteSiteBlogPostingByExternalReferenceCodeBlogPostingExternalReferenceCodeCommentByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSiteBlogPostingByExternalReferenceCodeBlogPostingExternalReferenceCodeCommentByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/blog-postings/by-external-reference-code/{blogPostingExternalReferenceCode}/comments/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves the blog posting's comment by blog posting's and comment's external reference codes.
 */
export const getSiteBlogPostingByExternalReferenceCodeBlogPostingExternalReferenceCodeCommentByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetSiteBlogPostingByExternalReferenceCodeBlogPostingExternalReferenceCodeCommentByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteBlogPostingByExternalReferenceCodeBlogPostingExternalReferenceCodeCommentByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/blog-postings/by-external-reference-code/{blogPostingExternalReferenceCode}/comments/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Updates the blog posting's comment given the blog posting's and comment's external reference codes, or creates it if it not exists.
 */
export const putSiteBlogPostingByExternalReferenceCodeBlogPostingExternalReferenceCodeCommentByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PutSiteBlogPostingByExternalReferenceCodeBlogPostingExternalReferenceCodeCommentByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteBlogPostingByExternalReferenceCodeBlogPostingExternalReferenceCodeCommentByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/blog-postings/by-external-reference-code/{blogPostingExternalReferenceCode}/comments/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Deletes the parent comment's comment by its parent comment's and comment's external reference codes.
 */
export const deleteSiteCommentByExternalReferenceCodeParentCommentExternalReferenceCodeCommentByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteSiteCommentByExternalReferenceCodeParentCommentExternalReferenceCodeCommentByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSiteCommentByExternalReferenceCodeParentCommentExternalReferenceCodeCommentByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/comments/by-external-reference-code/{parentCommentExternalReferenceCode}/comments/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves the parent comment's comment by its parent comment's and comment's external reference codes.
 */
export const getSiteCommentByExternalReferenceCodeParentCommentExternalReferenceCodeCommentByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetSiteCommentByExternalReferenceCodeParentCommentExternalReferenceCodeCommentByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteCommentByExternalReferenceCodeParentCommentExternalReferenceCodeCommentByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/comments/by-external-reference-code/{parentCommentExternalReferenceCode}/comments/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Updates the parent comment's comment given the parent comment's and comment's external reference codes, or creates it if it not exists.
 */
export const putSiteCommentByExternalReferenceCodeParentCommentExternalReferenceCodeCommentByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PutSiteCommentByExternalReferenceCodeParentCommentExternalReferenceCodeCommentByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteCommentByExternalReferenceCodeParentCommentExternalReferenceCodeCommentByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/comments/by-external-reference-code/{parentCommentExternalReferenceCode}/comments/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Deletes the document's comment by document's and comment's external reference codes.
 */
export const deleteSiteDocumentByExternalReferenceCodeDocumentExternalReferenceCodeCommentByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteSiteDocumentByExternalReferenceCodeDocumentExternalReferenceCodeCommentByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSiteDocumentByExternalReferenceCodeDocumentExternalReferenceCodeCommentByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/documents/by-external-reference-code/{documentExternalReferenceCode}/comments/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves the document's comment by document's and comment's external reference codes.
 */
export const getSiteDocumentByExternalReferenceCodeDocumentExternalReferenceCodeCommentByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetSiteDocumentByExternalReferenceCodeDocumentExternalReferenceCodeCommentByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteDocumentByExternalReferenceCodeDocumentExternalReferenceCodeCommentByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/documents/by-external-reference-code/{documentExternalReferenceCode}/comments/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Updates the document's comment given the document's and comment's external reference codes, or creates it if it not exists.
 */
export const putSiteDocumentByExternalReferenceCodeDocumentExternalReferenceCodeCommentByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PutSiteDocumentByExternalReferenceCodeDocumentExternalReferenceCodeCommentByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteDocumentByExternalReferenceCodeDocumentExternalReferenceCodeCommentByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/documents/by-external-reference-code/{documentExternalReferenceCode}/comments/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Deletes the structured content's comment by structured content's and comment's external reference codes.
 */
export const deleteSiteStructuredContentByExternalReferenceCodeStructuredContentExternalReferenceCodeCommentByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteSiteStructuredContentByExternalReferenceCodeStructuredContentExternalReferenceCodeCommentByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSiteStructuredContentByExternalReferenceCodeStructuredContentExternalReferenceCodeCommentByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/structured-contents/by-external-reference-code/{structuredContentExternalReferenceCode}/comments/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves the structured content's comment by structured content's and comment's external reference codes.
 */
export const getSiteStructuredContentByExternalReferenceCodeStructuredContentExternalReferenceCodeCommentByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetSiteStructuredContentByExternalReferenceCodeStructuredContentExternalReferenceCodeCommentByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteStructuredContentByExternalReferenceCodeStructuredContentExternalReferenceCodeCommentByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/structured-contents/by-external-reference-code/{structuredContentExternalReferenceCode}/comments/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Updates the structured content's comment given the structured content's and comment's external reference codes, or creates it if it not exists.
 */
export const putSiteStructuredContentByExternalReferenceCodeStructuredContentExternalReferenceCodeCommentByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PutSiteStructuredContentByExternalReferenceCodeStructuredContentExternalReferenceCodeCommentByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteStructuredContentByExternalReferenceCodeStructuredContentExternalReferenceCodeCommentByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/structured-contents/by-external-reference-code/{structuredContentExternalReferenceCode}/comments/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the blog post's comments in a list. Results can be paginated, filtered, searched, and sorted.
 */
export const getBlogPostingCommentsPage = <ThrowOnError extends boolean = false>(options: Options<GetBlogPostingCommentsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetBlogPostingCommentsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/blog-postings/{blogPostingId}/comments',
        ...options
    });
};

/**
 * Creates a new comment on the blog post.
 */
export const postBlogPostingComment = <ThrowOnError extends boolean = false>(options: Options<PostBlogPostingCommentData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostBlogPostingCommentResponses, unknown, ThrowOnError>({
        url: '/v1.0/blog-postings/{blogPostingId}/comments',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the parent comment's child comments. Results can be paginated, filtered, searched, and sorted.
 */
export const getCommentCommentsPage = <ThrowOnError extends boolean = false>(options: Options<GetCommentCommentsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCommentCommentsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/comments/{parentCommentId}/comments',
        ...options
    });
};

/**
 * Creates a new child comment of the existing comment.
 */
export const postCommentComment = <ThrowOnError extends boolean = false>(options: Options<PostCommentCommentData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostCommentCommentResponses, unknown, ThrowOnError>({
        url: '/v1.0/comments/{parentCommentId}/comments',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the document's comments. Results can be paginated, filtered, searched, and sorted.
 */
export const getDocumentCommentsPage = <ThrowOnError extends boolean = false>(options: Options<GetDocumentCommentsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetDocumentCommentsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/documents/{documentId}/comments',
        ...options
    });
};

/**
 * Creates a new comment on the document.
 */
export const postDocumentComment = <ThrowOnError extends boolean = false>(options: Options<PostDocumentCommentData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostDocumentCommentResponses, unknown, ThrowOnError>({
        url: '/v1.0/documents/{documentId}/comments',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the structured content's comments. Results can be paginated, filtered, searched, and sorted.
 */
export const getStructuredContentCommentsPage = <ThrowOnError extends boolean = false>(options: Options<GetStructuredContentCommentsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetStructuredContentCommentsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/structured-contents/{structuredContentId}/comments',
        ...options
    });
};

/**
 * Creates a new comment on the structured content.
 */
export const postStructuredContentComment = <ThrowOnError extends boolean = false>(options: Options<PostStructuredContentCommentData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostStructuredContentCommentResponses, unknown, ThrowOnError>({
        url: '/v1.0/structured-contents/{structuredContentId}/comments',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postBlogPostingCommentBatch = <ThrowOnError extends boolean = false>(options: Options<PostBlogPostingCommentBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostBlogPostingCommentBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/blog-postings/{blogPostingId}/comments/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postBlogPostingCommentsPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostBlogPostingCommentsPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostBlogPostingCommentsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/blog-postings/{blogPostingId}/comments/export-batch',
        ...options
    });
};

export const postDocumentCommentBatch = <ThrowOnError extends boolean = false>(options: Options<PostDocumentCommentBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostDocumentCommentBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/documents/{documentId}/comments/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postDocumentCommentsPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostDocumentCommentsPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostDocumentCommentsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/documents/{documentId}/comments/export-batch',
        ...options
    });
};

export const postStructuredContentCommentBatch = <ThrowOnError extends boolean = false>(options: Options<PostStructuredContentCommentBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostStructuredContentCommentBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/structured-contents/{structuredContentId}/comments/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postStructuredContentCommentsPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostStructuredContentCommentsPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostStructuredContentCommentsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/structured-contents/{structuredContentId}/comments/export-batch',
        ...options
    });
};

export const getAssetLibraryContentElementsPage = <ThrowOnError extends boolean = false>(options: Options<GetAssetLibraryContentElementsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAssetLibraryContentElementsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/content-elements',
        ...options
    });
};

export const getSiteContentElementsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteContentElementsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteContentElementsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/content-elements',
        ...options
    });
};

export const postAssetLibraryContentElementsPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostAssetLibraryContentElementsPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAssetLibraryContentElementsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/content-elements/export-batch',
        ...options
    });
};

export const postSiteContentElementsPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostSiteContentElementsPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteContentElementsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/content-elements/export-batch',
        ...options
    });
};

export const getAssetLibraryContentSetByKeyContentSetElementsPage = <ThrowOnError extends boolean = false>(options: Options<GetAssetLibraryContentSetByKeyContentSetElementsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAssetLibraryContentSetByKeyContentSetElementsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/content-sets/by-key/{key}/content-set-elements',
        ...options
    });
};

export const getAssetLibraryContentSetByUuidContentSetElementsPage = <ThrowOnError extends boolean = false>(options: Options<GetAssetLibraryContentSetByUuidContentSetElementsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAssetLibraryContentSetByUuidContentSetElementsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/content-sets/by-uuid/{uuid}/content-set-elements',
        ...options
    });
};

/**
 * Retrieves the content set's elements (e.g., structured content, blogs, etc.). Results can be paginated. The set of available headers are: Accept-Language (string), Host (string), User-Agent (string), X-Browser (string), X-Cookies (collection string), X-Device-Brand (string), X-Device-Model (string), X-Device-Screen-Resolution-Height (double), X-Device-Screen-Resolution-Width (double), X-Last-Sign-In-Date-Time (date time) and X-Signed-In (boolean). Local date will be always present in the request.
 */
export const getContentSetContentSetElementsPage = <ThrowOnError extends boolean = false>(options: Options<GetContentSetContentSetElementsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetContentSetContentSetElementsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/content-sets/{contentSetId}/content-set-elements',
        ...options
    });
};

/**
 * Retrieves the content set elements by key. Results can be paginated.
 */
export const getSiteContentSetByKeyContentSetElementsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteContentSetByKeyContentSetElementsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteContentSetByKeyContentSetElementsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/content-sets/by-key/{key}/content-set-elements',
        ...options
    });
};

/**
 * Retrieves the content set elements by UUID. Results can be paginated.
 */
export const getSiteContentSetByUuidContentSetElementsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteContentSetByUuidContentSetElementsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteContentSetByUuidContentSetElementsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/content-sets/by-uuid/{uuid}/content-set-elements',
        ...options
    });
};

export const getSiteContentSetProviderByKeyContentSetElementsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteContentSetProviderByKeyContentSetElementsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteContentSetProviderByKeyContentSetElementsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/content-set-providers/by-key/{key}/content-set-elements',
        ...options
    });
};

export const getAssetLibraryContentStructurePermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetAssetLibraryContentStructurePermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAssetLibraryContentStructurePermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/content-structures/permissions',
        ...options
    });
};

export const putAssetLibraryContentStructurePermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutAssetLibraryContentStructurePermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutAssetLibraryContentStructurePermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/content-structures/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getAssetLibraryContentStructuresPage = <ThrowOnError extends boolean = false>(options: Options<GetAssetLibraryContentStructuresPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAssetLibraryContentStructuresPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/content-structures',
        ...options
    });
};

/**
 * Retrieves the content structure.
 */
export const getContentStructure = <ThrowOnError extends boolean = false>(options: Options<GetContentStructureData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetContentStructureResponses, unknown, ThrowOnError>({
        url: '/v1.0/content-structures/{contentStructureId}',
        ...options
    });
};

export const getContentStructurePermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetContentStructurePermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetContentStructurePermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/content-structures/{contentStructureId}/permissions',
        ...options
    });
};

export const putContentStructurePermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutContentStructurePermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutContentStructurePermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/content-structures/{contentStructureId}/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getSiteContentStructurePermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteContentStructurePermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteContentStructurePermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/content-structures/permissions',
        ...options
    });
};

export const putSiteContentStructurePermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutSiteContentStructurePermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteContentStructurePermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/content-structures/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the site's content structures. Results can be paginated, filtered, searched, and sorted.
 */
export const getSiteContentStructuresPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteContentStructuresPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteContentStructuresPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/content-structures',
        ...options
    });
};

export const postAssetLibraryContentStructuresPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostAssetLibraryContentStructuresPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAssetLibraryContentStructuresPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/content-structures/export-batch',
        ...options
    });
};

export const postSiteContentStructuresPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostSiteContentStructuresPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteContentStructuresPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/content-structures/export-batch',
        ...options
    });
};

export const getAssetLibraryContentTemplatesPage = <ThrowOnError extends boolean = false>(options: Options<GetAssetLibraryContentTemplatesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAssetLibraryContentTemplatesPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/content-templates',
        ...options
    });
};

export const getSiteContentTemplate = <ThrowOnError extends boolean = false>(options: Options<GetSiteContentTemplateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteContentTemplateResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/content-templates/{contentTemplateId}',
        ...options
    });
};

export const getSiteContentTemplatesPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteContentTemplatesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteContentTemplatesPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/content-templates',
        ...options
    });
};

export const postAssetLibraryContentTemplatesPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostAssetLibraryContentTemplatesPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAssetLibraryContentTemplatesPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/content-templates/export-batch',
        ...options
    });
};

export const postSiteContentTemplatesPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostSiteContentTemplatesPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteContentTemplatesPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/content-templates/export-batch',
        ...options
    });
};

export const deleteDocumentDataDefinitionType = <ThrowOnError extends boolean = false>(options: Options<DeleteDocumentDataDefinitionTypeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteDocumentDataDefinitionTypeResponses, unknown, ThrowOnError>({
        url: '/v1.0/document-data-definition-types/{documentDataDefinitionTypeId}',
        ...options
    });
};

export const getDocumentDataDefinitionType = <ThrowOnError extends boolean = false>(options: Options<GetDocumentDataDefinitionTypeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetDocumentDataDefinitionTypeResponses, unknown, ThrowOnError>({
        url: '/v1.0/document-data-definition-types/{documentDataDefinitionTypeId}',
        ...options
    });
};

export const deleteDocumentDataDefinitionTypeBatch = <ThrowOnError extends boolean = false>(options?: Options<DeleteDocumentDataDefinitionTypeBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteDocumentDataDefinitionTypeBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/document-data-definition-types/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const getAssetLibraryDocumentDataDefinitionTypesPage = <ThrowOnError extends boolean = false>(options: Options<GetAssetLibraryDocumentDataDefinitionTypesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAssetLibraryDocumentDataDefinitionTypesPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/document-data-definition-types',
        ...options
    });
};

/**
 * Creates a new document data definition type.
 */
export const postAssetLibraryDocumentDataDefinitionType = <ThrowOnError extends boolean = false>(options: Options<PostAssetLibraryDocumentDataDefinitionTypeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAssetLibraryDocumentDataDefinitionTypeResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/document-data-definition-types',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getSiteDocumentDataDefinitionTypesPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteDocumentDataDefinitionTypesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteDocumentDataDefinitionTypesPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/document-data-definition-types',
        ...options
    });
};

/**
 * Creates a new document data definition type.
 */
export const postSiteDocumentDataDefinitionType = <ThrowOnError extends boolean = false>(options: Options<PostSiteDocumentDataDefinitionTypeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteDocumentDataDefinitionTypeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/document-data-definition-types',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postAssetLibraryDocumentDataDefinitionTypeBatch = <ThrowOnError extends boolean = false>(options: Options<PostAssetLibraryDocumentDataDefinitionTypeBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAssetLibraryDocumentDataDefinitionTypeBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/document-data-definition-types/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postAssetLibraryDocumentDataDefinitionTypesPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostAssetLibraryDocumentDataDefinitionTypesPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAssetLibraryDocumentDataDefinitionTypesPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/document-data-definition-types/export-batch',
        ...options
    });
};

export const postSiteDocumentDataDefinitionTypeBatch = <ThrowOnError extends boolean = false>(options: Options<PostSiteDocumentDataDefinitionTypeBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteDocumentDataDefinitionTypeBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/document-data-definition-types/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postSiteDocumentDataDefinitionTypesPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostSiteDocumentDataDefinitionTypesPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteDocumentDataDefinitionTypesPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/document-data-definition-types/export-batch',
        ...options
    });
};

/**
 * Deletes the document folder and returns a 204 if the operation succeeds.
 */
export const deleteDocumentFolder = <ThrowOnError extends boolean = false>(options: Options<DeleteDocumentFolderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteDocumentFolderResponses, unknown, ThrowOnError>({
        url: '/v1.0/document-folders/{documentFolderId}',
        ...options
    });
};

/**
 * Retrieves the document folder.
 */
export const getDocumentFolder = <ThrowOnError extends boolean = false>(options: Options<GetDocumentFolderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetDocumentFolderResponses, unknown, ThrowOnError>({
        url: '/v1.0/document-folders/{documentFolderId}',
        ...options
    });
};

/**
 * Updates only the fields received in the request body. Any other fields are left untouched.
 */
export const patchDocumentFolder = <ThrowOnError extends boolean = false>(options: Options<PatchDocumentFolderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchDocumentFolderResponses, unknown, ThrowOnError>({
        url: '/v1.0/document-folders/{documentFolderId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Replaces the document folder with the information sent in the request body. Any missing fields are deleted, unless they are required.
 */
export const putDocumentFolder = <ThrowOnError extends boolean = false>(options: Options<PutDocumentFolderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutDocumentFolderResponses, unknown, ThrowOnError>({
        url: '/v1.0/document-folders/{documentFolderId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteDocumentFolderBatch = <ThrowOnError extends boolean = false>(options?: Options<DeleteDocumentFolderBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteDocumentFolderBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/document-folders/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const putDocumentFolderBatch = <ThrowOnError extends boolean = false>(options?: Options<PutDocumentFolderBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).put<PutDocumentFolderBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/document-folders/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Deletes the document folder's rating and returns a 204 if the operation succeeded.
 */
export const deleteDocumentFolderMyRating = <ThrowOnError extends boolean = false>(options: Options<DeleteDocumentFolderMyRatingData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteDocumentFolderMyRatingResponses, unknown, ThrowOnError>({
        url: '/v1.0/document-folders/{documentFolderId}/my-rating',
        ...options
    });
};

/**
 * Retrieves the document folder's rating.
 */
export const getDocumentFolderMyRating = <ThrowOnError extends boolean = false>(options: Options<GetDocumentFolderMyRatingData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetDocumentFolderMyRatingResponses, unknown, ThrowOnError>({
        url: '/v1.0/document-folders/{documentFolderId}/my-rating',
        ...options
    });
};

/**
 * Creates a new rating for the document folder, by the user who authenticated the request.
 */
export const postDocumentFolderMyRating = <ThrowOnError extends boolean = false>(options: Options<PostDocumentFolderMyRatingData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostDocumentFolderMyRatingResponses, unknown, ThrowOnError>({
        url: '/v1.0/document-folders/{documentFolderId}/my-rating',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Replaces the rating with the information sent in the request body. Any missing fields are deleted, unless they are required.
 */
export const putDocumentFolderMyRating = <ThrowOnError extends boolean = false>(options: Options<PutDocumentFolderMyRatingData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutDocumentFolderMyRatingResponses, unknown, ThrowOnError>({
        url: '/v1.0/document-folders/{documentFolderId}/my-rating',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Deletes the site's document folder by external reference code returns a 204 if the operation succeeds.
 */
export const deleteSiteDocumentsFolderByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteSiteDocumentsFolderByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSiteDocumentsFolderByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/documents-folder/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves the site's document folder by external reference code.
 */
export const getSiteDocumentsFolderByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetSiteDocumentsFolderByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteDocumentsFolderByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/documents-folder/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Replaces the document folder by external reference code with the information sent in the request body, or replaces it if it not exists.
 */
export const putSiteDocumentsFolderByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PutSiteDocumentsFolderByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteDocumentsFolderByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/documents-folder/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getAssetLibraryDocumentFolderPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetAssetLibraryDocumentFolderPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAssetLibraryDocumentFolderPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/document-folders/permissions',
        ...options
    });
};

export const putAssetLibraryDocumentFolderPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutAssetLibraryDocumentFolderPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutAssetLibraryDocumentFolderPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/document-folders/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getAssetLibraryDocumentFoldersPage = <ThrowOnError extends boolean = false>(options: Options<GetAssetLibraryDocumentFoldersPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAssetLibraryDocumentFoldersPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/document-folders',
        ...options
    });
};

export const postAssetLibraryDocumentFolder = <ThrowOnError extends boolean = false>(options: Options<PostAssetLibraryDocumentFolderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAssetLibraryDocumentFolderResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/document-folders',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the document folders rated by the user.
 */
export const getAssetLibraryDocumentFoldersRatedByMePage = <ThrowOnError extends boolean = false>(options: Options<GetAssetLibraryDocumentFoldersRatedByMePageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAssetLibraryDocumentFoldersRatedByMePageResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/document-folders/rated-by-me',
        ...options
    });
};

/**
 * Retrieves the folder's subfolders. Results can be paginated, filtered, searched, and sorted.
 */
export const getDocumentFolderDocumentFoldersPage = <ThrowOnError extends boolean = false>(options: Options<GetDocumentFolderDocumentFoldersPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetDocumentFolderDocumentFoldersPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/document-folders/{parentDocumentFolderId}/document-folders',
        ...options
    });
};

/**
 * Creates a new folder in a folder identified by `parentDocumentFolderId`.
 */
export const postDocumentFolderDocumentFolder = <ThrowOnError extends boolean = false>(options: Options<PostDocumentFolderDocumentFolderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostDocumentFolderDocumentFolderResponses, unknown, ThrowOnError>({
        url: '/v1.0/document-folders/{parentDocumentFolderId}/document-folders',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getDocumentFolderPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetDocumentFolderPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetDocumentFolderPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/document-folders/{documentFolderId}/permissions',
        ...options
    });
};

export const putDocumentFolderPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutDocumentFolderPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutDocumentFolderPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/document-folders/{documentFolderId}/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getSiteDocumentFolderPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteDocumentFolderPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteDocumentFolderPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/document-folders/permissions',
        ...options
    });
};

export const putSiteDocumentFolderPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutSiteDocumentFolderPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteDocumentFolderPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/document-folders/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the site's document folders. Results can be paginated, filtered, searched, flattened, and sorted.
 */
export const getSiteDocumentFoldersPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteDocumentFoldersPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteDocumentFoldersPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/document-folders',
        ...options
    });
};

/**
 * Creates a new document folder.
 */
export const postSiteDocumentFolder = <ThrowOnError extends boolean = false>(options: Options<PostSiteDocumentFolderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteDocumentFolderResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/document-folders',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the document folders rated by the user.
 */
export const getSiteDocumentFoldersRatedByMePage = <ThrowOnError extends boolean = false>(options: Options<GetSiteDocumentFoldersRatedByMePageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteDocumentFoldersRatedByMePageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/document-folders/rated-by-me',
        ...options
    });
};

export const postAssetLibraryDocumentFolderBatch = <ThrowOnError extends boolean = false>(options: Options<PostAssetLibraryDocumentFolderBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAssetLibraryDocumentFolderBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/document-folders/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postAssetLibraryDocumentFoldersPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostAssetLibraryDocumentFoldersPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAssetLibraryDocumentFoldersPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/document-folders/export-batch',
        ...options
    });
};

export const postSiteDocumentFolderBatch = <ThrowOnError extends boolean = false>(options: Options<PostSiteDocumentFolderBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteDocumentFolderBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/document-folders/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postSiteDocumentFoldersPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostSiteDocumentFoldersPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteDocumentFoldersPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/document-folders/export-batch',
        ...options
    });
};

export const putDocumentFolderSubscribe = <ThrowOnError extends boolean = false>(options: Options<PutDocumentFolderSubscribeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutDocumentFolderSubscribeResponses, unknown, ThrowOnError>({
        url: '/v1.0/document-folders/{documentFolderId}/subscribe',
        ...options
    });
};

export const putDocumentFolderUnsubscribe = <ThrowOnError extends boolean = false>(options: Options<PutDocumentFolderUnsubscribeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutDocumentFolderUnsubscribeResponses, unknown, ThrowOnError>({
        url: '/v1.0/document-folders/{documentFolderId}/unsubscribe',
        ...options
    });
};

/**
 * Deletes the asset library's Document Metadata Set by external reference code.
 */
export const deleteAssetLibraryDocumentMetadataSetByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteAssetLibraryDocumentMetadataSetByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteAssetLibraryDocumentMetadataSetByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/document-metadata-sets/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves the asset library's Document Metadata Set by external reference code.
 */
export const getAssetLibraryDocumentMetadataSetByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetAssetLibraryDocumentMetadataSetByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAssetLibraryDocumentMetadataSetByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/document-metadata-sets/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Updates the asset Library's Document Metadata Set with the given external reference code, or creates it if it does not exists.
 */
export const putAssetLibraryDocumentMetadataSetByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PutAssetLibraryDocumentMetadataSetByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutAssetLibraryDocumentMetadataSetByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/document-metadata-sets/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Deletes the document metadata set and returns a 204 if the operation succeeds.
 */
export const deleteDocumentMetadataSet = <ThrowOnError extends boolean = false>(options: Options<DeleteDocumentMetadataSetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteDocumentMetadataSetResponses, unknown, ThrowOnError>({
        url: '/v1.0/document-metadata-sets/{documentMetadataSetId}',
        ...options
    });
};

/**
 * Retrieves the document metadata set.
 */
export const getDocumentMetadataSet = <ThrowOnError extends boolean = false>(options: Options<GetDocumentMetadataSetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetDocumentMetadataSetResponses, unknown, ThrowOnError>({
        url: '/v1.0/document-metadata-sets/{documentMetadataSetId}',
        ...options
    });
};

export const deleteDocumentMetadataSetBatch = <ThrowOnError extends boolean = false>(options?: Options<DeleteDocumentMetadataSetBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteDocumentMetadataSetBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/document-metadata-sets/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Deletes the site's Document Metadata Set by external reference code.
 */
export const deleteSiteDocumentMetadataSetByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteSiteDocumentMetadataSetByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSiteDocumentMetadataSetByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/document-metadata-sets/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves the site's Document Metadata Set by external reference code.
 */
export const getSiteDocumentMetadataSetByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetSiteDocumentMetadataSetByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteDocumentMetadataSetByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/document-metadata-sets/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Updates the site's Document Metadata Set with the given external reference code, or creates it if it does not exist.
 */
export const putSiteDocumentMetadataSetByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PutSiteDocumentMetadataSetByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteDocumentMetadataSetByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/document-metadata-sets/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getAssetLibraryDocumentMetadataSetsPage = <ThrowOnError extends boolean = false>(options: Options<GetAssetLibraryDocumentMetadataSetsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAssetLibraryDocumentMetadataSetsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/document-metadata-sets',
        ...options
    });
};

export const postAssetLibraryDocumentMetadataSet = <ThrowOnError extends boolean = false>(options: Options<PostAssetLibraryDocumentMetadataSetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAssetLibraryDocumentMetadataSetResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/document-metadata-sets',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getSiteDocumentMetadataSetsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteDocumentMetadataSetsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteDocumentMetadataSetsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/document-metadata-sets',
        ...options
    });
};

export const postSiteDocumentMetadataSet = <ThrowOnError extends boolean = false>(options: Options<PostSiteDocumentMetadataSetData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteDocumentMetadataSetResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/document-metadata-sets',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postAssetLibraryDocumentMetadataSetBatch = <ThrowOnError extends boolean = false>(options: Options<PostAssetLibraryDocumentMetadataSetBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAssetLibraryDocumentMetadataSetBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/document-metadata-sets/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postAssetLibraryDocumentMetadataSetsPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostAssetLibraryDocumentMetadataSetsPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAssetLibraryDocumentMetadataSetsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/document-metadata-sets/export-batch',
        ...options
    });
};

export const postSiteDocumentMetadataSetBatch = <ThrowOnError extends boolean = false>(options: Options<PostSiteDocumentMetadataSetBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteDocumentMetadataSetBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/document-metadata-sets/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postSiteDocumentMetadataSetsPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostSiteDocumentMetadataSetsPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteDocumentMetadataSetsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/document-metadata-sets/export-batch',
        ...options
    });
};

/**
 * Deletes the asset library's document by external reference code.
 */
export const deleteAssetLibraryDocumentByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteAssetLibraryDocumentByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteAssetLibraryDocumentByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/documents/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves the asset library's document by external reference code.
 */
export const getAssetLibraryDocumentByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetAssetLibraryDocumentByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAssetLibraryDocumentByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/documents/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Replaces the document by external reference code with the information sent in the request body, or replaces it if it not exists. Any missing fields are deleted, unless they are required. The request body must be `multipart/form-data` with two parts, the file'sbytes (`file`), and an optional JSON string (`document`) with the metadata.
 */
export const putAssetLibraryDocumentByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PutAssetLibraryDocumentByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutAssetLibraryDocumentByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        ...formDataBodySerializer,
        url: '/v1.0/asset-libraries/{assetLibraryId}/documents/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': null,
            ...options.headers
        }
    });
};

/**
 * Deletes the document and returns a 204 if the operation succeeds.
 */
export const deleteDocument = <ThrowOnError extends boolean = false>(options: Options<DeleteDocumentData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteDocumentResponses, unknown, ThrowOnError>({
        url: '/v1.0/documents/{documentId}',
        ...options
    });
};

/**
 * Retrieves the document.
 */
export const getDocument = <ThrowOnError extends boolean = false>(options: Options<GetDocumentData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetDocumentResponses, unknown, ThrowOnError>({
        url: '/v1.0/documents/{documentId}',
        ...options
    });
};

/**
 * Updates only the fields received in the request body, leaving any other fields untouched. The request body must be `multipart/form-data` with two parts, the file's bytes (`file`), and an optional JSON string (`document`) with the metadata.
 */
export const patchDocument = <ThrowOnError extends boolean = false>(options: Options<PatchDocumentData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchDocumentResponses, unknown, ThrowOnError>({
        ...formDataBodySerializer,
        url: '/v1.0/documents/{documentId}',
        ...options,
        headers: {
            'Content-Type': null,
            ...options.headers
        }
    });
};

/**
 * Replaces the document with the information sent in the request body. Any missing fields are deleted, unless they are required. The request body must be `multipart/form-data` with two parts, the file's bytes (`file`), and an optional JSON string (`document`) with the metadata.
 */
export const putDocument = <ThrowOnError extends boolean = false>(options: Options<PutDocumentData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutDocumentResponses, unknown, ThrowOnError>({
        ...formDataBodySerializer,
        url: '/v1.0/documents/{documentId}',
        ...options,
        headers: {
            'Content-Type': null,
            ...options.headers
        }
    });
};

export const deleteDocumentBatch = <ThrowOnError extends boolean = false>(options?: Options<DeleteDocumentBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteDocumentBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/documents/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const putDocumentBatch = <ThrowOnError extends boolean = false>(options?: Options<PutDocumentBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).put<PutDocumentBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/documents/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Deletes the document's rating and returns a 204 if the operation succeeded.
 */
export const deleteDocumentMyRating = <ThrowOnError extends boolean = false>(options: Options<DeleteDocumentMyRatingData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteDocumentMyRatingResponses, unknown, ThrowOnError>({
        url: '/v1.0/documents/{documentId}/my-rating',
        ...options
    });
};

/**
 * Retrieves the document's rating.
 */
export const getDocumentMyRating = <ThrowOnError extends boolean = false>(options: Options<GetDocumentMyRatingData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetDocumentMyRatingResponses, unknown, ThrowOnError>({
        url: '/v1.0/documents/{documentId}/my-rating',
        ...options
    });
};

/**
 * Creates a new rating for the document, by the user who authenticated the request.
 */
export const postDocumentMyRating = <ThrowOnError extends boolean = false>(options: Options<PostDocumentMyRatingData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostDocumentMyRatingResponses, unknown, ThrowOnError>({
        url: '/v1.0/documents/{documentId}/my-rating',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Replaces the rating with the information sent in the request body. Any missing fields are deleted, unless they are required.
 */
export const putDocumentMyRating = <ThrowOnError extends boolean = false>(options: Options<PutDocumentMyRatingData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutDocumentMyRatingResponses, unknown, ThrowOnError>({
        url: '/v1.0/documents/{documentId}/my-rating',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Deletes the site's document by external reference code returns a 204 if the operation succeeds.
 */
export const deleteSiteDocumentByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteSiteDocumentByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSiteDocumentByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/documents/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves the site's document by external reference code.
 */
export const getSiteDocumentByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetSiteDocumentByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteDocumentByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/documents/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Replaces the document by external reference code with the information sent in the request body, or replaces it if it not exists. Any missing fields are deleted, unless they are required. The request body must be `multipart/form-data` with two parts, the file'sbytes (`file`), and an optional JSON string (`document`) with the metadata.
 */
export const putSiteDocumentByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PutSiteDocumentByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteDocumentByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        ...formDataBodySerializer,
        url: '/v1.0/sites/{siteId}/documents/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': null,
            ...options.headers
        }
    });
};

export const getAssetLibraryDocumentPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetAssetLibraryDocumentPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAssetLibraryDocumentPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/documents/permissions',
        ...options
    });
};

export const putAssetLibraryDocumentPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutAssetLibraryDocumentPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutAssetLibraryDocumentPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/documents/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getAssetLibraryDocumentsPage = <ThrowOnError extends boolean = false>(options: Options<GetAssetLibraryDocumentsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAssetLibraryDocumentsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/documents',
        ...options
    });
};

export const postAssetLibraryDocument = <ThrowOnError extends boolean = false>(options: Options<PostAssetLibraryDocumentData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAssetLibraryDocumentResponses, unknown, ThrowOnError>({
        ...formDataBodySerializer,
        url: '/v1.0/asset-libraries/{assetLibraryId}/documents',
        ...options,
        headers: {
            'Content-Type': null,
            ...options.headers
        }
    });
};

/**
 * Retrieves the documents rated by the user.
 */
export const getAssetLibraryDocumentsRatedByMePage = <ThrowOnError extends boolean = false>(options: Options<GetAssetLibraryDocumentsRatedByMePageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAssetLibraryDocumentsRatedByMePageResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/documents/rated-by-me',
        ...options
    });
};

/**
 * Retrieves the folder's documents. Results can be paginated, filtered, searched, and sorted.
 */
export const getDocumentFolderDocumentsPage = <ThrowOnError extends boolean = false>(options: Options<GetDocumentFolderDocumentsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetDocumentFolderDocumentsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/document-folders/{documentFolderId}/documents',
        ...options
    });
};

/**
 * Creates a new document inside the folder identified by `documentFolderId`. The request body must be `multipart/form-data` with two parts, the file's bytes (`file`), and an optional JSON string (`document`) with the metadata.
 */
export const postDocumentFolderDocument = <ThrowOnError extends boolean = false>(options: Options<PostDocumentFolderDocumentData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostDocumentFolderDocumentResponses, unknown, ThrowOnError>({
        ...formDataBodySerializer,
        url: '/v1.0/document-folders/{documentFolderId}/documents',
        ...options,
        headers: {
            'Content-Type': null,
            ...options.headers
        }
    });
};

export const getDocumentPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetDocumentPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetDocumentPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/documents/{documentId}/permissions',
        ...options
    });
};

export const putDocumentPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutDocumentPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutDocumentPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/documents/{documentId}/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the document's rendered display page
 */
export const getDocumentRenderedContentByDisplayPageDisplayPageKey = <ThrowOnError extends boolean = false>(options: Options<GetDocumentRenderedContentByDisplayPageDisplayPageKeyData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetDocumentRenderedContentByDisplayPageDisplayPageKeyResponses, unknown, ThrowOnError>({
        url: '/v1.0/documents/{documentId}/rendered-content-by-display-page/{displayPageKey}',
        ...options
    });
};

export const getSiteDocumentPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteDocumentPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteDocumentPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/documents/permissions',
        ...options
    });
};

export const putSiteDocumentPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutSiteDocumentPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteDocumentPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/documents/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the documents in the site's root folder. Results can be paginated, filtered, searched, flattened, and sorted.
 */
export const getSiteDocumentsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteDocumentsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteDocumentsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/documents',
        ...options
    });
};

/**
 * Creates a new document. The request body must be `multipart/form-data` with two parts, the file's bytes (`file`), and an optional JSON string (`document`) with the metadata.
 */
export const postSiteDocument = <ThrowOnError extends boolean = false>(options: Options<PostSiteDocumentData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteDocumentResponses, unknown, ThrowOnError>({
        ...formDataBodySerializer,
        url: '/v1.0/sites/{siteId}/documents',
        ...options,
        headers: {
            'Content-Type': null,
            ...options.headers
        }
    });
};

/**
 * Retrieves the documents rated by the user.
 */
export const getSiteDocumentsRatedByMePage = <ThrowOnError extends boolean = false>(options: Options<GetSiteDocumentsRatedByMePageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteDocumentsRatedByMePageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/documents/rated-by-me',
        ...options
    });
};

export const postAssetLibraryDocumentBatch = <ThrowOnError extends boolean = false>(options: Options<PostAssetLibraryDocumentBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAssetLibraryDocumentBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/documents/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postAssetLibraryDocumentsPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostAssetLibraryDocumentsPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAssetLibraryDocumentsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/documents/export-batch',
        ...options
    });
};

export const postDocumentFolderDocumentBatch = <ThrowOnError extends boolean = false>(options: Options<PostDocumentFolderDocumentBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostDocumentFolderDocumentBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/document-folders/{documentFolderId}/documents/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postDocumentFolderDocumentsPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostDocumentFolderDocumentsPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostDocumentFolderDocumentsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/document-folders/{documentFolderId}/documents/export-batch',
        ...options
    });
};

export const postSiteDocumentBatch = <ThrowOnError extends boolean = false>(options: Options<PostSiteDocumentBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteDocumentBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/documents/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postSiteDocumentsPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostSiteDocumentsPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteDocumentsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/documents/export-batch',
        ...options
    });
};

/**
 * Deletes the document shortcut and returns a 204 if the operation succeeds.
 */
export const deleteDocumentShortcut = <ThrowOnError extends boolean = false>(options: Options<DeleteDocumentShortcutData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteDocumentShortcutResponses, unknown, ThrowOnError>({
        url: '/v1.0/document-shortcuts/{documentShortcutId}',
        ...options
    });
};

/**
 * Retrieves the document shortcut.
 */
export const getDocumentShortcut = <ThrowOnError extends boolean = false>(options: Options<GetDocumentShortcutData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetDocumentShortcutResponses, unknown, ThrowOnError>({
        url: '/v1.0/document-shortcuts/{documentShortcutId}',
        ...options
    });
};

/**
 * Updates only the fields received in the request body, leaving any other fields untouched.
 */
export const patchDocumentShortcut = <ThrowOnError extends boolean = false>(options: Options<PatchDocumentShortcutData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchDocumentShortcutResponses, unknown, ThrowOnError>({
        url: '/v1.0/document-shortcuts/{documentShortcutId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Replaces the document shortcut with the information sent in the request body. Any missing fields are deleted, unless they are required.
 */
export const putDocumentShortcut = <ThrowOnError extends boolean = false>(options: Options<PutDocumentShortcutData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutDocumentShortcutResponses, unknown, ThrowOnError>({
        url: '/v1.0/document-shortcuts/{documentShortcutId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteDocumentShortcutBatch = <ThrowOnError extends boolean = false>(options?: Options<DeleteDocumentShortcutBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteDocumentShortcutBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/document-shortcuts/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const putDocumentShortcutBatch = <ThrowOnError extends boolean = false>(options?: Options<PutDocumentShortcutBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).put<PutDocumentShortcutBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/document-shortcuts/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Deletes the site's document shortcut by external reference code returns a 204 if the operation succeeds.
 */
export const deleteSiteDocumentShortcutByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteSiteDocumentShortcutByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSiteDocumentShortcutByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/document-shortcuts/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves the site's document shortcut by external reference code.
 */
export const getSiteDocumentShortcutByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetSiteDocumentShortcutByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteDocumentShortcutByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/document-shortcuts/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

export const putSiteDocumentShortcutByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PutSiteDocumentShortcutByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteDocumentShortcutByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/document-shortcuts/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getAssetLibraryDocumentShortcutsPage = <ThrowOnError extends boolean = false>(options: Options<GetAssetLibraryDocumentShortcutsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAssetLibraryDocumentShortcutsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/document-shortcuts',
        ...options
    });
};

export const postAssetLibraryDocumentShortcut = <ThrowOnError extends boolean = false>(options: Options<PostAssetLibraryDocumentShortcutData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAssetLibraryDocumentShortcutResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/document-shortcuts',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getSiteDocumentShortcutsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteDocumentShortcutsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteDocumentShortcutsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/document-shortcuts',
        ...options
    });
};

export const postSiteDocumentShortcut = <ThrowOnError extends boolean = false>(options: Options<PostSiteDocumentShortcutData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteDocumentShortcutResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/document-shortcuts',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postAssetLibraryDocumentShortcutBatch = <ThrowOnError extends boolean = false>(options: Options<PostAssetLibraryDocumentShortcutBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAssetLibraryDocumentShortcutBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/document-shortcuts/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postAssetLibraryDocumentShortcutsPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostAssetLibraryDocumentShortcutsPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAssetLibraryDocumentShortcutsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/document-shortcuts/export-batch',
        ...options
    });
};

export const postSiteDocumentShortcutBatch = <ThrowOnError extends boolean = false>(options: Options<PostSiteDocumentShortcutBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteDocumentShortcutBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/document-shortcuts/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postSiteDocumentShortcutsPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostSiteDocumentShortcutsPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteDocumentShortcutsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/document-shortcuts/export-batch',
        ...options
    });
};

/**
 * Deletes the knowledge base article and returns a 204 if the operation succeeds.
 */
export const deleteKnowledgeBaseArticle = <ThrowOnError extends boolean = false>(options: Options<DeleteKnowledgeBaseArticleData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteKnowledgeBaseArticleResponses, unknown, ThrowOnError>({
        url: '/v1.0/knowledge-base-articles/{knowledgeBaseArticleId}',
        ...options
    });
};

/**
 * Retrieves the knowledge base article.
 */
export const getKnowledgeBaseArticle = <ThrowOnError extends boolean = false>(options: Options<GetKnowledgeBaseArticleData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetKnowledgeBaseArticleResponses, unknown, ThrowOnError>({
        url: '/v1.0/knowledge-base-articles/{knowledgeBaseArticleId}',
        ...options
    });
};

/**
 * Updates only the fields received in the request body, leaving any other fields untouched.
 */
export const patchKnowledgeBaseArticle = <ThrowOnError extends boolean = false>(options: Options<PatchKnowledgeBaseArticleData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchKnowledgeBaseArticleResponses, unknown, ThrowOnError>({
        url: '/v1.0/knowledge-base-articles/{knowledgeBaseArticleId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Replaces the knowledge base article with the information sent in the request body. Any missing fields are deleted, unless they are required.
 */
export const putKnowledgeBaseArticle = <ThrowOnError extends boolean = false>(options: Options<PutKnowledgeBaseArticleData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutKnowledgeBaseArticleResponses, unknown, ThrowOnError>({
        url: '/v1.0/knowledge-base-articles/{knowledgeBaseArticleId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteKnowledgeBaseArticleBatch = <ThrowOnError extends boolean = false>(options?: Options<DeleteKnowledgeBaseArticleBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteKnowledgeBaseArticleBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/knowledge-base-articles/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const putKnowledgeBaseArticleBatch = <ThrowOnError extends boolean = false>(options?: Options<PutKnowledgeBaseArticleBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).put<PutKnowledgeBaseArticleBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/knowledge-base-articles/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Deletes the knowledge base article's rating and returns a 204 if the operation succeeds.
 */
export const deleteKnowledgeBaseArticleMyRating = <ThrowOnError extends boolean = false>(options: Options<DeleteKnowledgeBaseArticleMyRatingData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteKnowledgeBaseArticleMyRatingResponses, unknown, ThrowOnError>({
        url: '/v1.0/knowledge-base-articles/{knowledgeBaseArticleId}/my-rating',
        ...options
    });
};

/**
 * Retrieves the knowledge base article's rating.
 */
export const getKnowledgeBaseArticleMyRating = <ThrowOnError extends boolean = false>(options: Options<GetKnowledgeBaseArticleMyRatingData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetKnowledgeBaseArticleMyRatingResponses, unknown, ThrowOnError>({
        url: '/v1.0/knowledge-base-articles/{knowledgeBaseArticleId}/my-rating',
        ...options
    });
};

/**
 * Creates a rating for the knowledge base article.
 */
export const postKnowledgeBaseArticleMyRating = <ThrowOnError extends boolean = false>(options: Options<PostKnowledgeBaseArticleMyRatingData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostKnowledgeBaseArticleMyRatingResponses, unknown, ThrowOnError>({
        url: '/v1.0/knowledge-base-articles/{knowledgeBaseArticleId}/my-rating',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Replaces the rating with the information sent in the request body. Any missing fields are deleted, unless they are required.
 */
export const putKnowledgeBaseArticleMyRating = <ThrowOnError extends boolean = false>(options: Options<PutKnowledgeBaseArticleMyRatingData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutKnowledgeBaseArticleMyRatingResponses, unknown, ThrowOnError>({
        url: '/v1.0/knowledge-base-articles/{knowledgeBaseArticleId}/my-rating',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Deletes the knowledge base article by external reference code.
 */
export const deleteSiteKnowledgeBaseArticleByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteSiteKnowledgeBaseArticleByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSiteKnowledgeBaseArticleByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/knowledge-base-articles/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves the site's knowledge base article by external reference code.
 */
export const getSiteKnowledgeBaseArticleByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetSiteKnowledgeBaseArticleByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteKnowledgeBaseArticleByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/knowledge-base-articles/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Updates the site's knowledge base article with the given external reference code, or creates it if it not exists.
 */
export const putSiteKnowledgeBaseArticleByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PutSiteKnowledgeBaseArticleByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteKnowledgeBaseArticleByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/knowledge-base-articles/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the parent knowledge base article's child knowledge base articles. Results can be paginated, filtered, searched, and sorted.
 */
export const getKnowledgeBaseArticleKnowledgeBaseArticlesPage = <ThrowOnError extends boolean = false>(options: Options<GetKnowledgeBaseArticleKnowledgeBaseArticlesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetKnowledgeBaseArticleKnowledgeBaseArticlesPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/knowledge-base-articles/{parentKnowledgeBaseArticleId}/knowledge-base-articles',
        ...options
    });
};

/**
 * Creates a child knowledge base article of the knowledge base article identified by `parentKnowledgeBaseArticleId`.
 */
export const postKnowledgeBaseArticleKnowledgeBaseArticle = <ThrowOnError extends boolean = false>(options: Options<PostKnowledgeBaseArticleKnowledgeBaseArticleData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostKnowledgeBaseArticleKnowledgeBaseArticleResponses, unknown, ThrowOnError>({
        url: '/v1.0/knowledge-base-articles/{parentKnowledgeBaseArticleId}/knowledge-base-articles',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getKnowledgeBaseArticlePermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetKnowledgeBaseArticlePermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetKnowledgeBaseArticlePermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/knowledge-base-articles/{knowledgeBaseArticleId}/permissions',
        ...options
    });
};

export const putKnowledgeBaseArticlePermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutKnowledgeBaseArticlePermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutKnowledgeBaseArticlePermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/knowledge-base-articles/{knowledgeBaseArticleId}/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the folder's knowledge base articles. Results can be paginated, filtered, searched, flattened, and sorted.
 */
export const getKnowledgeBaseFolderKnowledgeBaseArticlesPage = <ThrowOnError extends boolean = false>(options: Options<GetKnowledgeBaseFolderKnowledgeBaseArticlesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetKnowledgeBaseFolderKnowledgeBaseArticlesPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/knowledge-base-folders/{knowledgeBaseFolderId}/knowledge-base-articles',
        ...options
    });
};

/**
 * Creates a new knowledge base article in the folder.
 */
export const postKnowledgeBaseFolderKnowledgeBaseArticle = <ThrowOnError extends boolean = false>(options: Options<PostKnowledgeBaseFolderKnowledgeBaseArticleData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostKnowledgeBaseFolderKnowledgeBaseArticleResponses, unknown, ThrowOnError>({
        url: '/v1.0/knowledge-base-folders/{knowledgeBaseFolderId}/knowledge-base-articles',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getSiteKnowledgeBaseArticlePermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteKnowledgeBaseArticlePermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteKnowledgeBaseArticlePermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/knowledge-base-articles/permissions',
        ...options
    });
};

export const putSiteKnowledgeBaseArticlePermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutSiteKnowledgeBaseArticlePermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteKnowledgeBaseArticlePermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/knowledge-base-articles/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the site's knowledge base articles. Results can be paginated, filtered, searched, flattened, and sorted.
 */
export const getSiteKnowledgeBaseArticlesPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteKnowledgeBaseArticlesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteKnowledgeBaseArticlesPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/knowledge-base-articles',
        ...options
    });
};

/**
 * Creates a new knowledge base article.
 */
export const postSiteKnowledgeBaseArticle = <ThrowOnError extends boolean = false>(options: Options<PostSiteKnowledgeBaseArticleData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteKnowledgeBaseArticleResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/knowledge-base-articles',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postKnowledgeBaseFolderKnowledgeBaseArticleBatch = <ThrowOnError extends boolean = false>(options: Options<PostKnowledgeBaseFolderKnowledgeBaseArticleBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostKnowledgeBaseFolderKnowledgeBaseArticleBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/knowledge-base-folders/{knowledgeBaseFolderId}/knowledge-base-articles/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postKnowledgeBaseFolderKnowledgeBaseArticlesPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostKnowledgeBaseFolderKnowledgeBaseArticlesPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostKnowledgeBaseFolderKnowledgeBaseArticlesPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/knowledge-base-folders/{knowledgeBaseFolderId}/knowledge-base-articles/export-batch',
        ...options
    });
};

export const postSiteKnowledgeBaseArticleBatch = <ThrowOnError extends boolean = false>(options: Options<PostSiteKnowledgeBaseArticleBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteKnowledgeBaseArticleBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/knowledge-base-articles/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postSiteKnowledgeBaseArticlesPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostSiteKnowledgeBaseArticlesPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteKnowledgeBaseArticlesPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/knowledge-base-articles/export-batch',
        ...options
    });
};

export const putKnowledgeBaseArticleSubscribe = <ThrowOnError extends boolean = false>(options: Options<PutKnowledgeBaseArticleSubscribeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutKnowledgeBaseArticleSubscribeResponses, unknown, ThrowOnError>({
        url: '/v1.0/knowledge-base-articles/{knowledgeBaseArticleId}/subscribe',
        ...options
    });
};

export const putKnowledgeBaseArticleUnsubscribe = <ThrowOnError extends boolean = false>(options: Options<PutKnowledgeBaseArticleUnsubscribeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutKnowledgeBaseArticleUnsubscribeResponses, unknown, ThrowOnError>({
        url: '/v1.0/knowledge-base-articles/{knowledgeBaseArticleId}/unsubscribe',
        ...options
    });
};

export const putSiteKnowledgeBaseArticleSubscribe = <ThrowOnError extends boolean = false>(options: Options<PutSiteKnowledgeBaseArticleSubscribeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteKnowledgeBaseArticleSubscribeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/knowledge-base-articles/subscribe',
        ...options
    });
};

export const putSiteKnowledgeBaseArticleUnsubscribe = <ThrowOnError extends boolean = false>(options: Options<PutSiteKnowledgeBaseArticleUnsubscribeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteKnowledgeBaseArticleUnsubscribeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/knowledge-base-articles/unsubscribe',
        ...options
    });
};

/**
 * Deletes the knowledge base file attachment and returns a 204 if the operation succeeds.
 */
export const deleteKnowledgeBaseAttachment = <ThrowOnError extends boolean = false>(options: Options<DeleteKnowledgeBaseAttachmentData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteKnowledgeBaseAttachmentResponses, unknown, ThrowOnError>({
        url: '/v1.0/knowledge-base-attachments/{knowledgeBaseAttachmentId}',
        ...options
    });
};

/**
 * Retrieves the knowledge base attachment.
 */
export const getKnowledgeBaseAttachment = <ThrowOnError extends boolean = false>(options: Options<GetKnowledgeBaseAttachmentData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetKnowledgeBaseAttachmentResponses, unknown, ThrowOnError>({
        url: '/v1.0/knowledge-base-attachments/{knowledgeBaseAttachmentId}',
        ...options
    });
};

export const deleteKnowledgeBaseAttachmentBatch = <ThrowOnError extends boolean = false>(options?: Options<DeleteKnowledgeBaseAttachmentBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteKnowledgeBaseAttachmentBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/knowledge-base-attachments/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Delete the knowledge base attachment by knowledge base article's and knowledge base attachment's external reference codes.
 */
export const deleteSiteKnowledgeBaseArticleByExternalReferenceCodeKnowledgeBaseArticleExternalReferenceCodeKnowledgeBaseAttachmentByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteSiteKnowledgeBaseArticleByExternalReferenceCodeKnowledgeBaseArticleExternalReferenceCodeKnowledgeBaseAttachmentByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSiteKnowledgeBaseArticleByExternalReferenceCodeKnowledgeBaseArticleExternalReferenceCodeKnowledgeBaseAttachmentByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/knowledge-base-articles/by-external-reference-code/{knowledgeBaseArticleExternalReferenceCode}/knowledge-base-attachments/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves the knowledge base article attachment by external reference code.
 */
export const getSiteKnowledgeBaseArticleByExternalReferenceCodeKnowledgeBaseArticleExternalReferenceCodeKnowledgeBaseAttachmentByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetSiteKnowledgeBaseArticleByExternalReferenceCodeKnowledgeBaseArticleExternalReferenceCodeKnowledgeBaseAttachmentByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteKnowledgeBaseArticleByExternalReferenceCodeKnowledgeBaseArticleExternalReferenceCodeKnowledgeBaseAttachmentByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/knowledge-base-articles/by-external-reference-code/{knowledgeBaseArticleExternalReferenceCode}/knowledge-base-attachments/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves the knowledge base article's attachments.
 */
export const getKnowledgeBaseArticleKnowledgeBaseAttachmentsPage = <ThrowOnError extends boolean = false>(options: Options<GetKnowledgeBaseArticleKnowledgeBaseAttachmentsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetKnowledgeBaseArticleKnowledgeBaseAttachmentsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/knowledge-base-articles/{knowledgeBaseArticleId}/knowledge-base-attachments',
        ...options
    });
};

/**
 * Creates a new attachment for an existing knowledge base article. The request body must be `multipart/form-data` with two parts, a `file` part with the file's bytes, and an optional JSON string (`knowledgeBaseAttachment`) with the metadata.
 */
export const postKnowledgeBaseArticleKnowledgeBaseAttachment = <ThrowOnError extends boolean = false>(options: Options<PostKnowledgeBaseArticleKnowledgeBaseAttachmentData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostKnowledgeBaseArticleKnowledgeBaseAttachmentResponses, unknown, ThrowOnError>({
        ...formDataBodySerializer,
        url: '/v1.0/knowledge-base-articles/{knowledgeBaseArticleId}/knowledge-base-attachments',
        ...options,
        headers: {
            'Content-Type': null,
            ...options.headers
        }
    });
};

export const postKnowledgeBaseArticleKnowledgeBaseAttachmentBatch = <ThrowOnError extends boolean = false>(options: Options<PostKnowledgeBaseArticleKnowledgeBaseAttachmentBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostKnowledgeBaseArticleKnowledgeBaseAttachmentBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/knowledge-base-articles/{knowledgeBaseArticleId}/knowledge-base-attachments/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postKnowledgeBaseArticleKnowledgeBaseAttachmentsPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostKnowledgeBaseArticleKnowledgeBaseAttachmentsPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostKnowledgeBaseArticleKnowledgeBaseAttachmentsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/knowledge-base-articles/{knowledgeBaseArticleId}/knowledge-base-attachments/export-batch',
        ...options
    });
};

/**
 * Deletes the knowledge base folder and returns a 204 if the operation succeeds.
 */
export const deleteKnowledgeBaseFolder = <ThrowOnError extends boolean = false>(options: Options<DeleteKnowledgeBaseFolderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteKnowledgeBaseFolderResponses, unknown, ThrowOnError>({
        url: '/v1.0/knowledge-base-folders/{knowledgeBaseFolderId}',
        ...options
    });
};

/**
 * Retrieves the knowledge base folder.
 */
export const getKnowledgeBaseFolder = <ThrowOnError extends boolean = false>(options: Options<GetKnowledgeBaseFolderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetKnowledgeBaseFolderResponses, unknown, ThrowOnError>({
        url: '/v1.0/knowledge-base-folders/{knowledgeBaseFolderId}',
        ...options
    });
};

/**
 * Updates only the fields received in the request body, leaving any other fields untouched.
 */
export const patchKnowledgeBaseFolder = <ThrowOnError extends boolean = false>(options: Options<PatchKnowledgeBaseFolderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchKnowledgeBaseFolderResponses, unknown, ThrowOnError>({
        url: '/v1.0/knowledge-base-folders/{knowledgeBaseFolderId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Replaces the knowledge base folder with the information sent in the request body. Any missing fields are deleted, unless they are required.
 */
export const putKnowledgeBaseFolder = <ThrowOnError extends boolean = false>(options: Options<PutKnowledgeBaseFolderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutKnowledgeBaseFolderResponses, unknown, ThrowOnError>({
        url: '/v1.0/knowledge-base-folders/{knowledgeBaseFolderId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteKnowledgeBaseFolderBatch = <ThrowOnError extends boolean = false>(options?: Options<DeleteKnowledgeBaseFolderBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteKnowledgeBaseFolderBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/knowledge-base-folders/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const putKnowledgeBaseFolderBatch = <ThrowOnError extends boolean = false>(options?: Options<PutKnowledgeBaseFolderBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).put<PutKnowledgeBaseFolderBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/knowledge-base-folders/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Deletes the knowledge base folder by external reference code.
 */
export const deleteSiteKnowledgeBaseFolderByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteSiteKnowledgeBaseFolderByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSiteKnowledgeBaseFolderByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/knowledge-base-folders/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves the site's knowledge base folder by external reference code.
 */
export const getSiteKnowledgeBaseFolderByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetSiteKnowledgeBaseFolderByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteKnowledgeBaseFolderByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/knowledge-base-folders/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Updates the site's knowledge base folder with the given external reference code, or creates it if it not exists.
 */
export const putSiteKnowledgeBaseFolderByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PutSiteKnowledgeBaseFolderByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteKnowledgeBaseFolderByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/knowledge-base-folders/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the knowledge base folder's subfolders.
 */
export const getKnowledgeBaseFolderKnowledgeBaseFoldersPage = <ThrowOnError extends boolean = false>(options: Options<GetKnowledgeBaseFolderKnowledgeBaseFoldersPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetKnowledgeBaseFolderKnowledgeBaseFoldersPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/knowledge-base-folders/{parentKnowledgeBaseFolderId}/knowledge-base-folders',
        ...options
    });
};

/**
 * Creates a knowledge base folder inside the parent folder.
 */
export const postKnowledgeBaseFolderKnowledgeBaseFolder = <ThrowOnError extends boolean = false>(options: Options<PostKnowledgeBaseFolderKnowledgeBaseFolderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostKnowledgeBaseFolderKnowledgeBaseFolderResponses, unknown, ThrowOnError>({
        url: '/v1.0/knowledge-base-folders/{parentKnowledgeBaseFolderId}/knowledge-base-folders',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getKnowledgeBaseFolderPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetKnowledgeBaseFolderPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetKnowledgeBaseFolderPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/knowledge-base-folders/{knowledgeBaseFolderId}/permissions',
        ...options
    });
};

export const putKnowledgeBaseFolderPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutKnowledgeBaseFolderPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutKnowledgeBaseFolderPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/knowledge-base-folders/{knowledgeBaseFolderId}/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getSiteKnowledgeBaseFolderPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteKnowledgeBaseFolderPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteKnowledgeBaseFolderPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/knowledge-base-folders/permissions',
        ...options
    });
};

export const putSiteKnowledgeBaseFolderPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutSiteKnowledgeBaseFolderPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteKnowledgeBaseFolderPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/knowledge-base-folders/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the site's knowledge base folders. Results can be paginated.
 */
export const getSiteKnowledgeBaseFoldersPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteKnowledgeBaseFoldersPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteKnowledgeBaseFoldersPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/knowledge-base-folders',
        ...options
    });
};

/**
 * Creates a new knowledge base folder.
 */
export const postSiteKnowledgeBaseFolder = <ThrowOnError extends boolean = false>(options: Options<PostSiteKnowledgeBaseFolderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteKnowledgeBaseFolderResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/knowledge-base-folders',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postSiteKnowledgeBaseFolderBatch = <ThrowOnError extends boolean = false>(options: Options<PostSiteKnowledgeBaseFolderBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteKnowledgeBaseFolderBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/knowledge-base-folders/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postSiteKnowledgeBaseFoldersPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostSiteKnowledgeBaseFoldersPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteKnowledgeBaseFoldersPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/knowledge-base-folders/export-batch',
        ...options
    });
};

/**
 * Retrieves the asset libraries languages.
 */
export const getAssetLibraryLanguagesPage = <ThrowOnError extends boolean = false>(options: Options<GetAssetLibraryLanguagesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAssetLibraryLanguagesPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/languages',
        ...options
    });
};

/**
 * Retrieves the site's languages.
 */
export const getSiteLanguagesPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteLanguagesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteLanguagesPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/languages',
        ...options
    });
};

export const postAssetLibraryLanguagesPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostAssetLibraryLanguagesPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAssetLibraryLanguagesPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/languages/export-batch',
        ...options
    });
};

export const postSiteLanguagesPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostSiteLanguagesPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteLanguagesPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/languages/export-batch',
        ...options
    });
};

/**
 * Deletes the message board attachment and returns a 204 if the operation succeeds.
 */
export const deleteMessageBoardAttachment = <ThrowOnError extends boolean = false>(options: Options<DeleteMessageBoardAttachmentData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteMessageBoardAttachmentResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-attachments/{messageBoardAttachmentId}',
        ...options
    });
};

/**
 * Retrieves the message board attachment.
 */
export const getMessageBoardAttachment = <ThrowOnError extends boolean = false>(options: Options<GetMessageBoardAttachmentData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetMessageBoardAttachmentResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-attachments/{messageBoardAttachmentId}',
        ...options
    });
};

export const deleteMessageBoardAttachmentBatch = <ThrowOnError extends boolean = false>(options?: Options<DeleteMessageBoardAttachmentBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteMessageBoardAttachmentBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-attachments/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Delete the message board attachment by message board message's and message board attachment's external reference codes.
 */
export const deleteSiteMessageBoardMessageByExternalReferenceCodeMessageBoardMessageExternalReferenceCodeMessageBoardAttachmentByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteSiteMessageBoardMessageByExternalReferenceCodeMessageBoardMessageExternalReferenceCodeMessageBoardAttachmentByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSiteMessageBoardMessageByExternalReferenceCodeMessageBoardMessageExternalReferenceCodeMessageBoardAttachmentByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/message-board-messages/by-external-reference-code/{messageBoardMessageExternalReferenceCode}/message-board-attachments/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves the message board attachment by message board message's and message board attachment's external reference codes.
 */
export const getSiteMessageBoardMessageByExternalReferenceCodeMessageBoardMessageExternalReferenceCodeMessageBoardAttachmentByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetSiteMessageBoardMessageByExternalReferenceCodeMessageBoardMessageExternalReferenceCodeMessageBoardAttachmentByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteMessageBoardMessageByExternalReferenceCodeMessageBoardMessageExternalReferenceCodeMessageBoardAttachmentByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/message-board-messages/by-external-reference-code/{messageBoardMessageExternalReferenceCode}/message-board-attachments/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves the message board message's attachments.
 */
export const getMessageBoardMessageMessageBoardAttachmentsPage = <ThrowOnError extends boolean = false>(options: Options<GetMessageBoardMessageMessageBoardAttachmentsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetMessageBoardMessageMessageBoardAttachmentsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-messages/{messageBoardMessageId}/message-board-attachments',
        ...options
    });
};

/**
 * Creates an attachment for the message board message. The request body must be `multipart/form-data` with two parts, the file's bytes (`file`), and an optional JSON string (`MessageBoardAttachment`) with the metadata.
 */
export const postMessageBoardMessageMessageBoardAttachment = <ThrowOnError extends boolean = false>(options: Options<PostMessageBoardMessageMessageBoardAttachmentData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostMessageBoardMessageMessageBoardAttachmentResponses, unknown, ThrowOnError>({
        ...formDataBodySerializer,
        url: '/v1.0/message-board-messages/{messageBoardMessageId}/message-board-attachments',
        ...options,
        headers: {
            'Content-Type': null,
            ...options.headers
        }
    });
};

/**
 * Retrieves the message board thread's attachments.
 */
export const getMessageBoardThreadMessageBoardAttachmentsPage = <ThrowOnError extends boolean = false>(options: Options<GetMessageBoardThreadMessageBoardAttachmentsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetMessageBoardThreadMessageBoardAttachmentsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-threads/{messageBoardThreadId}/message-board-attachments',
        ...options
    });
};

/**
 * Creates a new attachment for the message board thread. The request body should be `multipart/form-data` with two parts, the file's bytes (`file`), and an optional JSON string (`knowledgeBaseAttachment`) with the metadata.
 */
export const postMessageBoardThreadMessageBoardAttachment = <ThrowOnError extends boolean = false>(options: Options<PostMessageBoardThreadMessageBoardAttachmentData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostMessageBoardThreadMessageBoardAttachmentResponses, unknown, ThrowOnError>({
        ...formDataBodySerializer,
        url: '/v1.0/message-board-threads/{messageBoardThreadId}/message-board-attachments',
        ...options,
        headers: {
            'Content-Type': null,
            ...options.headers
        }
    });
};

export const postMessageBoardMessageMessageBoardAttachmentBatch = <ThrowOnError extends boolean = false>(options: Options<PostMessageBoardMessageMessageBoardAttachmentBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostMessageBoardMessageMessageBoardAttachmentBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-messages/{messageBoardMessageId}/message-board-attachments/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postMessageBoardMessageMessageBoardAttachmentsPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostMessageBoardMessageMessageBoardAttachmentsPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostMessageBoardMessageMessageBoardAttachmentsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-messages/{messageBoardMessageId}/message-board-attachments/export-batch',
        ...options
    });
};

export const postMessageBoardThreadMessageBoardAttachmentBatch = <ThrowOnError extends boolean = false>(options: Options<PostMessageBoardThreadMessageBoardAttachmentBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostMessageBoardThreadMessageBoardAttachmentBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-threads/{messageBoardThreadId}/message-board-attachments/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postMessageBoardThreadMessageBoardAttachmentsPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostMessageBoardThreadMessageBoardAttachmentsPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostMessageBoardThreadMessageBoardAttachmentsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-threads/{messageBoardThreadId}/message-board-attachments/export-batch',
        ...options
    });
};

/**
 * Deletes the message board message and returns a 204 if the operation succeeds.
 */
export const deleteMessageBoardMessage = <ThrowOnError extends boolean = false>(options: Options<DeleteMessageBoardMessageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteMessageBoardMessageResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-messages/{messageBoardMessageId}',
        ...options
    });
};

/**
 * Retrieves the message board message.
 */
export const getMessageBoardMessage = <ThrowOnError extends boolean = false>(options: Options<GetMessageBoardMessageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetMessageBoardMessageResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-messages/{messageBoardMessageId}',
        ...options
    });
};

/**
 * Updates only the fields received in the request body, leaving any other fields untouched.
 */
export const patchMessageBoardMessage = <ThrowOnError extends boolean = false>(options: Options<PatchMessageBoardMessageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchMessageBoardMessageResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-messages/{messageBoardMessageId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Replaces the message board message with the information sent in the request body. Any missing fields are deleted, unless they are required.
 */
export const putMessageBoardMessage = <ThrowOnError extends boolean = false>(options: Options<PutMessageBoardMessageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutMessageBoardMessageResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-messages/{messageBoardMessageId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteMessageBoardMessageBatch = <ThrowOnError extends boolean = false>(options?: Options<DeleteMessageBoardMessageBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteMessageBoardMessageBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-messages/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const putMessageBoardMessageBatch = <ThrowOnError extends boolean = false>(options?: Options<PutMessageBoardMessageBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).put<PutMessageBoardMessageBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-messages/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Deletes the message board message's rating and returns a 204 if the operation succeeds.
 */
export const deleteMessageBoardMessageMyRating = <ThrowOnError extends boolean = false>(options: Options<DeleteMessageBoardMessageMyRatingData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteMessageBoardMessageMyRatingResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-messages/{messageBoardMessageId}/my-rating',
        ...options
    });
};

/**
 * Retrieves the message board message's rating.
 */
export const getMessageBoardMessageMyRating = <ThrowOnError extends boolean = false>(options: Options<GetMessageBoardMessageMyRatingData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetMessageBoardMessageMyRatingResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-messages/{messageBoardMessageId}/my-rating',
        ...options
    });
};

/**
 * Creates a rating for the message board message.
 */
export const postMessageBoardMessageMyRating = <ThrowOnError extends boolean = false>(options: Options<PostMessageBoardMessageMyRatingData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostMessageBoardMessageMyRatingResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-messages/{messageBoardMessageId}/my-rating',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Replaces the rating with the information sent in the request body. Any missing fields are deleted, unless they are required.
 */
export const putMessageBoardMessageMyRating = <ThrowOnError extends boolean = false>(options: Options<PutMessageBoardMessageMyRatingData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutMessageBoardMessageMyRatingResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-messages/{messageBoardMessageId}/my-rating',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Deletes the site's message board message by external reference code.
 */
export const deleteSiteMessageBoardMessageByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteSiteMessageBoardMessageByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSiteMessageBoardMessageByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/message-board-messages/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves the site's message board message by external reference code.
 */
export const getSiteMessageBoardMessageByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetSiteMessageBoardMessageByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteMessageBoardMessageByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/message-board-messages/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Updates the site's message board message with the given external reference code, or creates it if it not exists.
 */
export const putSiteMessageBoardMessageByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PutSiteMessageBoardMessageByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteMessageBoardMessageByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/message-board-messages/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the parent message board message's child messages. Results can be paginated, filtered, searched, and sorted.
 */
export const getMessageBoardMessageMessageBoardMessagesPage = <ThrowOnError extends boolean = false>(options: Options<GetMessageBoardMessageMessageBoardMessagesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetMessageBoardMessageMessageBoardMessagesPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-messages/{parentMessageBoardMessageId}/message-board-messages',
        ...options
    });
};

/**
 * Creates a child message board message of the parent message.
 */
export const postMessageBoardMessageMessageBoardMessage = <ThrowOnError extends boolean = false>(options: Options<PostMessageBoardMessageMessageBoardMessageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostMessageBoardMessageMessageBoardMessageResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-messages/{parentMessageBoardMessageId}/message-board-messages',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getMessageBoardMessagePermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetMessageBoardMessagePermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetMessageBoardMessagePermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-messages/{messageBoardMessageId}/permissions',
        ...options
    });
};

export const putMessageBoardMessagePermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutMessageBoardMessagePermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutMessageBoardMessagePermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-messages/{messageBoardMessageId}/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the message board thread's messages. Results can be paginated, filtered, searched, and sorted.
 */
export const getMessageBoardThreadMessageBoardMessagesPage = <ThrowOnError extends boolean = false>(options: Options<GetMessageBoardThreadMessageBoardMessagesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetMessageBoardThreadMessageBoardMessagesPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-threads/{messageBoardThreadId}/message-board-messages',
        ...options
    });
};

/**
 * Creates a new message in the message board thread.
 */
export const postMessageBoardThreadMessageBoardMessage = <ThrowOnError extends boolean = false>(options: Options<PostMessageBoardThreadMessageBoardMessageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostMessageBoardThreadMessageBoardMessageResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-threads/{messageBoardThreadId}/message-board-messages',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getSiteMessageBoardMessageByFriendlyUrlPath = <ThrowOnError extends boolean = false>(options: Options<GetSiteMessageBoardMessageByFriendlyUrlPathData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteMessageBoardMessageByFriendlyUrlPathResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/message-board-messages/by-friendly-url-path/{friendlyUrlPath}',
        ...options
    });
};

export const getSiteMessageBoardMessagePermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteMessageBoardMessagePermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteMessageBoardMessagePermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/message-board-messages/permissions',
        ...options
    });
};

export const putSiteMessageBoardMessagePermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutSiteMessageBoardMessagePermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteMessageBoardMessagePermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/message-board-messages/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the site's message board messages.
 */
export const getSiteMessageBoardMessagesPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteMessageBoardMessagesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteMessageBoardMessagesPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/message-board-messages',
        ...options
    });
};

/**
 * Retrieves the site's message board messages user's activity.
 */
export const getSiteUserMessageBoardMessagesActivityPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteUserMessageBoardMessagesActivityPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteUserMessageBoardMessagesActivityPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/{userId}/message-board-messages/activity',
        ...options
    });
};

export const postMessageBoardThreadMessageBoardMessageBatch = <ThrowOnError extends boolean = false>(options: Options<PostMessageBoardThreadMessageBoardMessageBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostMessageBoardThreadMessageBoardMessageBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-threads/{messageBoardThreadId}/message-board-messages/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postMessageBoardThreadMessageBoardMessagesPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostMessageBoardThreadMessageBoardMessagesPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostMessageBoardThreadMessageBoardMessagesPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-threads/{messageBoardThreadId}/message-board-messages/export-batch',
        ...options
    });
};

export const postSiteMessageBoardMessagesPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostSiteMessageBoardMessagesPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteMessageBoardMessagesPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/message-board-messages/export-batch',
        ...options
    });
};

export const putMessageBoardMessageMarkAsAnswer = <ThrowOnError extends boolean = false>(options: Options<PutMessageBoardMessageMarkAsAnswerData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutMessageBoardMessageMarkAsAnswerResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-messages/{messageBoardMessageId}/mark-as-answer',
        ...options
    });
};

export const putMessageBoardMessageSubscribe = <ThrowOnError extends boolean = false>(options: Options<PutMessageBoardMessageSubscribeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutMessageBoardMessageSubscribeResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-messages/{messageBoardMessageId}/subscribe',
        ...options
    });
};

export const putMessageBoardMessageUnmarkAsAnswer = <ThrowOnError extends boolean = false>(options: Options<PutMessageBoardMessageUnmarkAsAnswerData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutMessageBoardMessageUnmarkAsAnswerResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-messages/{messageBoardMessageId}/unmark-as-answer',
        ...options
    });
};

export const putMessageBoardMessageUnsubscribe = <ThrowOnError extends boolean = false>(options: Options<PutMessageBoardMessageUnsubscribeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutMessageBoardMessageUnsubscribeResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-messages/{messageBoardMessageId}/unsubscribe',
        ...options
    });
};

/**
 * Deletes the message board section and returns a 204 if the operation succeeds.
 */
export const deleteMessageBoardSection = <ThrowOnError extends boolean = false>(options: Options<DeleteMessageBoardSectionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteMessageBoardSectionResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-sections/{messageBoardSectionId}',
        ...options
    });
};

/**
 * Retrieves the message board section.
 */
export const getMessageBoardSection = <ThrowOnError extends boolean = false>(options: Options<GetMessageBoardSectionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetMessageBoardSectionResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-sections/{messageBoardSectionId}',
        ...options
    });
};

/**
 * Updates only the fields received in the request body, leaving any other fields untouched.
 */
export const patchMessageBoardSection = <ThrowOnError extends boolean = false>(options: Options<PatchMessageBoardSectionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchMessageBoardSectionResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-sections/{messageBoardSectionId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Replaces the message board section with the information sent in the request body. Any missing fields are deleted, unless they are required.
 */
export const putMessageBoardSection = <ThrowOnError extends boolean = false>(options: Options<PutMessageBoardSectionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutMessageBoardSectionResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-sections/{messageBoardSectionId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteMessageBoardSectionBatch = <ThrowOnError extends boolean = false>(options?: Options<DeleteMessageBoardSectionBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteMessageBoardSectionBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-sections/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const putMessageBoardSectionBatch = <ThrowOnError extends boolean = false>(options?: Options<PutMessageBoardSectionBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).put<PutMessageBoardSectionBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-sections/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Retrieves the parent message board section's subsections. Results can be paginated, filtered, searched, and sorted.
 */
export const getMessageBoardSectionMessageBoardSectionsPage = <ThrowOnError extends boolean = false>(options: Options<GetMessageBoardSectionMessageBoardSectionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetMessageBoardSectionMessageBoardSectionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-sections/{parentMessageBoardSectionId}/message-board-sections',
        ...options
    });
};

/**
 * Creates a new message board section in the parent section.
 */
export const postMessageBoardSectionMessageBoardSection = <ThrowOnError extends boolean = false>(options: Options<PostMessageBoardSectionMessageBoardSectionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostMessageBoardSectionMessageBoardSectionResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-sections/{parentMessageBoardSectionId}/message-board-sections',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getMessageBoardSectionPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetMessageBoardSectionPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetMessageBoardSectionPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-sections/{messageBoardSectionId}/permissions',
        ...options
    });
};

export const putMessageBoardSectionPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutMessageBoardSectionPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutMessageBoardSectionPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-sections/{messageBoardSectionId}/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getSiteMessageBoardSectionByFriendlyUrlPath = <ThrowOnError extends boolean = false>(options: Options<GetSiteMessageBoardSectionByFriendlyUrlPathData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteMessageBoardSectionByFriendlyUrlPathResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/message-board-section/by-friendly-url-path/{friendlyUrlPath}',
        ...options
    });
};

export const getSiteMessageBoardSectionPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteMessageBoardSectionPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteMessageBoardSectionPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/message-board-sections/permissions',
        ...options
    });
};

export const putSiteMessageBoardSectionPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutSiteMessageBoardSectionPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteMessageBoardSectionPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/message-board-sections/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the site's message board sections. Results can be paginated, filtered, searched, flattened, and sorted.
 */
export const getSiteMessageBoardSectionsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteMessageBoardSectionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteMessageBoardSectionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/message-board-sections',
        ...options
    });
};

/**
 * Creates a new message board section.
 */
export const postSiteMessageBoardSection = <ThrowOnError extends boolean = false>(options: Options<PostSiteMessageBoardSectionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteMessageBoardSectionResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/message-board-sections',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postSiteMessageBoardSectionBatch = <ThrowOnError extends boolean = false>(options: Options<PostSiteMessageBoardSectionBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteMessageBoardSectionBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/message-board-sections/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postSiteMessageBoardSectionsPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostSiteMessageBoardSectionsPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteMessageBoardSectionsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/message-board-sections/export-batch',
        ...options
    });
};

export const putMessageBoardSectionSubscribe = <ThrowOnError extends boolean = false>(options: Options<PutMessageBoardSectionSubscribeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutMessageBoardSectionSubscribeResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-sections/{messageBoardSectionId}/subscribe',
        ...options
    });
};

export const putMessageBoardSectionUnsubscribe = <ThrowOnError extends boolean = false>(options: Options<PutMessageBoardSectionUnsubscribeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutMessageBoardSectionUnsubscribeResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-sections/{messageBoardSectionId}/unsubscribe',
        ...options
    });
};

/**
 * Deletes the message board thread and returns a 204 if the operation succeeds.
 */
export const deleteMessageBoardThread = <ThrowOnError extends boolean = false>(options: Options<DeleteMessageBoardThreadData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteMessageBoardThreadResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-threads/{messageBoardThreadId}',
        ...options
    });
};

/**
 * Retrieves the message board thread.
 */
export const getMessageBoardThread = <ThrowOnError extends boolean = false>(options: Options<GetMessageBoardThreadData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetMessageBoardThreadResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-threads/{messageBoardThreadId}',
        ...options
    });
};

/**
 * Updates only the fields received in the request body, leaving any other fields untouched.
 */
export const patchMessageBoardThread = <ThrowOnError extends boolean = false>(options: Options<PatchMessageBoardThreadData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchMessageBoardThreadResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-threads/{messageBoardThreadId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Replaces the message board thread with the information sent in the request body. Any missing fields are deleted, unless they are required.
 */
export const putMessageBoardThread = <ThrowOnError extends boolean = false>(options: Options<PutMessageBoardThreadData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutMessageBoardThreadResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-threads/{messageBoardThreadId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteMessageBoardThreadBatch = <ThrowOnError extends boolean = false>(options?: Options<DeleteMessageBoardThreadBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteMessageBoardThreadBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-threads/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const putMessageBoardThreadBatch = <ThrowOnError extends boolean = false>(options?: Options<PutMessageBoardThreadBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).put<PutMessageBoardThreadBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-threads/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Deletes the message board thread's rating and returns a 204 if the operation succeeds.
 */
export const deleteMessageBoardThreadMyRating = <ThrowOnError extends boolean = false>(options: Options<DeleteMessageBoardThreadMyRatingData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteMessageBoardThreadMyRatingResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-threads/{messageBoardThreadId}/my-rating',
        ...options
    });
};

/**
 * Retrieves the message board thread's rating.
 */
export const getMessageBoardThreadMyRating = <ThrowOnError extends boolean = false>(options: Options<GetMessageBoardThreadMyRatingData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetMessageBoardThreadMyRatingResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-threads/{messageBoardThreadId}/my-rating',
        ...options
    });
};

/**
 * Creates the message board thread's rating.
 */
export const postMessageBoardThreadMyRating = <ThrowOnError extends boolean = false>(options: Options<PostMessageBoardThreadMyRatingData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostMessageBoardThreadMyRatingResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-threads/{messageBoardThreadId}/my-rating',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Replaces the rating with the information sent in the request body. Any missing fields are deleted, unless they are required.
 */
export const putMessageBoardThreadMyRating = <ThrowOnError extends boolean = false>(options: Options<PutMessageBoardThreadMyRatingData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutMessageBoardThreadMyRatingResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-threads/{messageBoardThreadId}/my-rating',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the message board section's threads. Results can be paginated, filtered, searched, and sorted.
 */
export const getMessageBoardSectionMessageBoardThreadsPage = <ThrowOnError extends boolean = false>(options: Options<GetMessageBoardSectionMessageBoardThreadsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetMessageBoardSectionMessageBoardThreadsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-sections/{messageBoardSectionId}/message-board-threads',
        ...options
    });
};

/**
 * Creates a new message board thread inside a section.
 */
export const postMessageBoardSectionMessageBoardThread = <ThrowOnError extends boolean = false>(options: Options<PostMessageBoardSectionMessageBoardThreadData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostMessageBoardSectionMessageBoardThreadResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-sections/{messageBoardSectionId}/message-board-threads',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getMessageBoardThreadPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetMessageBoardThreadPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetMessageBoardThreadPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-threads/{messageBoardThreadId}/permissions',
        ...options
    });
};

export const putMessageBoardThreadPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutMessageBoardThreadPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutMessageBoardThreadPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-threads/{messageBoardThreadId}/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getMessageBoardThreadsRankedPage = <ThrowOnError extends boolean = false>(options?: Options<GetMessageBoardThreadsRankedPageData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetMessageBoardThreadsRankedPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-threads/ranked',
        ...options
    });
};

export const getSiteMessageBoardThreadByFriendlyUrlPath = <ThrowOnError extends boolean = false>(options: Options<GetSiteMessageBoardThreadByFriendlyUrlPathData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteMessageBoardThreadByFriendlyUrlPathResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/message-board-threads/by-friendly-url-path/{friendlyUrlPath}',
        ...options
    });
};

export const getSiteMessageBoardThreadPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteMessageBoardThreadPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteMessageBoardThreadPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/message-board-threads/permissions',
        ...options
    });
};

export const putSiteMessageBoardThreadPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutSiteMessageBoardThreadPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteMessageBoardThreadPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/message-board-threads/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the site's message board threads. Results can be paginated, filtered, searched, flattened, and sorted.
 */
export const getSiteMessageBoardThreadsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteMessageBoardThreadsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteMessageBoardThreadsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/message-board-threads',
        ...options
    });
};

/**
 * Creates a new message board thread.
 */
export const postSiteMessageBoardThread = <ThrowOnError extends boolean = false>(options: Options<PostSiteMessageBoardThreadData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteMessageBoardThreadResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/message-board-threads',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postMessageBoardSectionMessageBoardThreadBatch = <ThrowOnError extends boolean = false>(options: Options<PostMessageBoardSectionMessageBoardThreadBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostMessageBoardSectionMessageBoardThreadBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-sections/{messageBoardSectionId}/message-board-threads/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postMessageBoardSectionMessageBoardThreadsPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostMessageBoardSectionMessageBoardThreadsPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostMessageBoardSectionMessageBoardThreadsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-sections/{messageBoardSectionId}/message-board-threads/export-batch',
        ...options
    });
};

export const postSiteMessageBoardThreadBatch = <ThrowOnError extends boolean = false>(options: Options<PostSiteMessageBoardThreadBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteMessageBoardThreadBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/message-board-threads/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postSiteMessageBoardThreadsPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostSiteMessageBoardThreadsPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteMessageBoardThreadsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/message-board-threads/export-batch',
        ...options
    });
};

export const putMessageBoardThreadSubscribe = <ThrowOnError extends boolean = false>(options: Options<PutMessageBoardThreadSubscribeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutMessageBoardThreadSubscribeResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-threads/{messageBoardThreadId}/subscribe',
        ...options
    });
};

export const putMessageBoardThreadUnsubscribe = <ThrowOnError extends boolean = false>(options: Options<PutMessageBoardThreadUnsubscribeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutMessageBoardThreadUnsubscribeResponses, unknown, ThrowOnError>({
        url: '/v1.0/message-board-threads/{messageBoardThreadId}/unsubscribe',
        ...options
    });
};

/**
 * Deletes the navigation menu and returns a 204 if the operation succeeds
 */
export const deleteNavigationMenu = <ThrowOnError extends boolean = false>(options: Options<DeleteNavigationMenuData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteNavigationMenuResponses, unknown, ThrowOnError>({
        url: '/v1.0/navigation-menus/{navigationMenuId}',
        ...options
    });
};

export const getNavigationMenu = <ThrowOnError extends boolean = false>(options: Options<GetNavigationMenuData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetNavigationMenuResponses, unknown, ThrowOnError>({
        url: '/v1.0/navigation-menus/{navigationMenuId}',
        ...options
    });
};

/**
 * Replaces the navigation menu with the information sent in the request body. Any missing fields are deleted, unless they are required.
 */
export const putNavigationMenu = <ThrowOnError extends boolean = false>(options: Options<PutNavigationMenuData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutNavigationMenuResponses, unknown, ThrowOnError>({
        url: '/v1.0/navigation-menus/{navigationMenuId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteNavigationMenuBatch = <ThrowOnError extends boolean = false>(options?: Options<DeleteNavigationMenuBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteNavigationMenuBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/navigation-menus/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const putNavigationMenuBatch = <ThrowOnError extends boolean = false>(options?: Options<PutNavigationMenuBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).put<PutNavigationMenuBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/navigation-menus/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Deletes the navigation menu by external reference code and returns a 204 if the operation succeeds
 */
export const deleteSiteNavigationMenuByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteSiteNavigationMenuByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSiteNavigationMenuByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/navigation-menus/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves the navigation menu by external reference code.
 */
export const getSiteNavigationMenuByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetSiteNavigationMenuByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteNavigationMenuByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/navigation-menus/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Updates the navigation menu with the given external reference code or creates it if it does not exist.
 */
export const putSiteNavigationMenuByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PutSiteNavigationMenuByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteNavigationMenuByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/navigation-menus/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getNavigationMenuPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetNavigationMenuPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetNavigationMenuPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/navigation-menus/{navigationMenuId}/permissions',
        ...options
    });
};

export const putNavigationMenuPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutNavigationMenuPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutNavigationMenuPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/navigation-menus/{navigationMenuId}/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getSiteNavigationMenuPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteNavigationMenuPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteNavigationMenuPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/navigation-menus/permissions',
        ...options
    });
};

export const putSiteNavigationMenuPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutSiteNavigationMenuPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteNavigationMenuPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/navigation-menus/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getSiteNavigationMenusPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteNavigationMenusPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteNavigationMenusPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/navigation-menus',
        ...options
    });
};

/**
 * Creates a new navigation menu.
 */
export const postSiteNavigationMenu = <ThrowOnError extends boolean = false>(options: Options<PostSiteNavigationMenuData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteNavigationMenuResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/navigation-menus',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postSiteNavigationMenuBatch = <ThrowOnError extends boolean = false>(options: Options<PostSiteNavigationMenuBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteNavigationMenuBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/navigation-menus/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postSiteNavigationMenusPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostSiteNavigationMenusPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteNavigationMenusPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/navigation-menus/export-batch',
        ...options
    });
};

export const getOpenApi = <ThrowOnError extends boolean = false>(options: Options<GetOpenApiData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetOpenApiResponses, unknown, ThrowOnError>({
        url: '/v1.0/openapi.{type}',
        ...options
    });
};

/**
 * Retrieves a specific public page of a site
 */
export const getSiteSitePage = <ThrowOnError extends boolean = false>(options: Options<GetSiteSitePageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSitePageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/site-pages/{friendlyUrlPath}',
        ...options
    });
};

/**
 * Retrieves a specific public page of a site for a given experience
 */
export const getSiteSitePageExperienceExperienceKey = <ThrowOnError extends boolean = false>(options: Options<GetSiteSitePageExperienceExperienceKeyData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSitePageExperienceExperienceKeyResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/site-pages/{friendlyUrlPath}/experiences/{experienceKey}',
        ...options
    });
};

/**
 * Retrieves the rendered content of a given public page for a given experience.
 */
export const getSiteSitePageExperienceExperienceKeyRenderedPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteSitePageExperienceExperienceKeyRenderedPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSitePageExperienceExperienceKeyRenderedPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/site-pages/{friendlyUrlPath}/experiences/{experienceKey}/rendered-page',
        ...options
    });
};

/**
 * Retrieves the rendered content of a given public page.
 */
export const getSiteSitePageRenderedPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteSitePageRenderedPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSitePageRenderedPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/site-pages/{friendlyUrlPath}/rendered-page',
        ...options
    });
};

/**
 * Retrieves the experiences of a given Page
 */
export const getSiteSitePagesExperiencesPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteSitePagesExperiencesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSitePagesExperiencesPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/site-pages/{friendlyUrlPath}/experiences',
        ...options
    });
};

/**
 * Retrieves the public pages of the site
 */
export const getSiteSitePagesPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteSitePagesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteSitePagesPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/site-pages',
        ...options
    });
};

/**
 * Adds a new site page
 */
export const postSiteSitePage = <ThrowOnError extends boolean = false>(options: Options<PostSiteSitePageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteSitePageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/site-pages',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postSiteSitePageBatch = <ThrowOnError extends boolean = false>(options: Options<PostSiteSitePageBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteSitePageBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/site-pages/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postSiteSitePagesPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostSiteSitePagesPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteSitePagesPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/site-pages/export-batch',
        ...options
    });
};

/**
 * Deletes the asset library's structured content folder by external reference code.
 */
export const deleteAssetLibraryStructuredContentFolderByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteAssetLibraryStructuredContentFolderByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteAssetLibraryStructuredContentFolderByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/structured-content-folders/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves the asset library's structured content folder by external reference code.
 */
export const getAssetLibraryStructuredContentFolderByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetAssetLibraryStructuredContentFolderByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAssetLibraryStructuredContentFolderByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/structured-content-folders/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Updates the asset library's structured content folder with the given external reference code, or creates it if it not exists.
 */
export const putAssetLibraryStructuredContentFolderByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PutAssetLibraryStructuredContentFolderByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutAssetLibraryStructuredContentFolderByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/structured-content-folders/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteSiteStructuredContentFolderByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteSiteStructuredContentFolderByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSiteStructuredContentFolderByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/structured-content-folders/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

export const getSiteStructuredContentFolderByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetSiteStructuredContentFolderByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteStructuredContentFolderByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/structured-content-folders/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

export const putSiteStructuredContentFolderByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PutSiteStructuredContentFolderByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteStructuredContentFolderByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/structured-content-folders/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Deletes the structured content folder and returns a 204 if the operation succeeds.
 */
export const deleteStructuredContentFolder = <ThrowOnError extends boolean = false>(options: Options<DeleteStructuredContentFolderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteStructuredContentFolderResponses, unknown, ThrowOnError>({
        url: '/v1.0/structured-content-folders/{structuredContentFolderId}',
        ...options
    });
};

/**
 * Retrieves the structured content folder.
 */
export const getStructuredContentFolder = <ThrowOnError extends boolean = false>(options: Options<GetStructuredContentFolderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetStructuredContentFolderResponses, unknown, ThrowOnError>({
        url: '/v1.0/structured-content-folders/{structuredContentFolderId}',
        ...options
    });
};

/**
 * Updates only the fields received in the request body, leaving any other fields untouched.
 */
export const patchStructuredContentFolder = <ThrowOnError extends boolean = false>(options: Options<PatchStructuredContentFolderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchStructuredContentFolderResponses, unknown, ThrowOnError>({
        url: '/v1.0/structured-content-folders/{structuredContentFolderId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Replaces the structured content folder with the information sent in the request body. Any missing fields are deleted, unless they are required.
 */
export const putStructuredContentFolder = <ThrowOnError extends boolean = false>(options: Options<PutStructuredContentFolderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutStructuredContentFolderResponses, unknown, ThrowOnError>({
        url: '/v1.0/structured-content-folders/{structuredContentFolderId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteStructuredContentFolderBatch = <ThrowOnError extends boolean = false>(options?: Options<DeleteStructuredContentFolderBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteStructuredContentFolderBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/structured-content-folders/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const putStructuredContentFolderBatch = <ThrowOnError extends boolean = false>(options?: Options<PutStructuredContentFolderBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).put<PutStructuredContentFolderBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/structured-content-folders/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const getAssetLibraryStructuredContentFolderPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetAssetLibraryStructuredContentFolderPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAssetLibraryStructuredContentFolderPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/structured-content-folders/permissions',
        ...options
    });
};

export const putAssetLibraryStructuredContentFolderPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutAssetLibraryStructuredContentFolderPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutAssetLibraryStructuredContentFolderPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/structured-content-folders/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getAssetLibraryStructuredContentFoldersPage = <ThrowOnError extends boolean = false>(options: Options<GetAssetLibraryStructuredContentFoldersPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAssetLibraryStructuredContentFoldersPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/structured-content-folders',
        ...options
    });
};

export const postAssetLibraryStructuredContentFolder = <ThrowOnError extends boolean = false>(options: Options<PostAssetLibraryStructuredContentFolderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAssetLibraryStructuredContentFolderResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/structured-content-folders',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getSiteStructuredContentFolderPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteStructuredContentFolderPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteStructuredContentFolderPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/structured-content-folders/permissions',
        ...options
    });
};

export const putSiteStructuredContentFolderPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutSiteStructuredContentFolderPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteStructuredContentFolderPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/structured-content-folders/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the site's structured content folders. Results can be paginated, filtered, searched, flattened, and sorted.
 */
export const getSiteStructuredContentFoldersPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteStructuredContentFoldersPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteStructuredContentFoldersPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/structured-content-folders',
        ...options
    });
};

/**
 * Creates a new structured content folder.
 */
export const postSiteStructuredContentFolder = <ThrowOnError extends boolean = false>(options: Options<PostSiteStructuredContentFolderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteStructuredContentFolderResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/structured-content-folders',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getStructuredContentFolderPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetStructuredContentFolderPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetStructuredContentFolderPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/structured-content-folder/{structuredContentFolderId}/permissions',
        ...options
    });
};

export const putStructuredContentFolderPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutStructuredContentFolderPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutStructuredContentFolderPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/structured-content-folder/{structuredContentFolderId}/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the parent structured content folder's subfolders. Results can be paginated, filtered, searched, and sorted.
 */
export const getStructuredContentFolderStructuredContentFoldersPage = <ThrowOnError extends boolean = false>(options: Options<GetStructuredContentFolderStructuredContentFoldersPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetStructuredContentFolderStructuredContentFoldersPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/structured-content-folders/{parentStructuredContentFolderId}/structured-content-folders',
        ...options
    });
};

/**
 * Creates a new structured content folder in an existing folder.
 */
export const postStructuredContentFolderStructuredContentFolder = <ThrowOnError extends boolean = false>(options: Options<PostStructuredContentFolderStructuredContentFolderData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostStructuredContentFolderStructuredContentFolderResponses, unknown, ThrowOnError>({
        url: '/v1.0/structured-content-folders/{parentStructuredContentFolderId}/structured-content-folders',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postAssetLibraryStructuredContentFolderBatch = <ThrowOnError extends boolean = false>(options: Options<PostAssetLibraryStructuredContentFolderBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAssetLibraryStructuredContentFolderBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/structured-content-folders/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postAssetLibraryStructuredContentFoldersPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostAssetLibraryStructuredContentFoldersPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAssetLibraryStructuredContentFoldersPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/structured-content-folders/export-batch',
        ...options
    });
};

export const postSiteStructuredContentFolderBatch = <ThrowOnError extends boolean = false>(options: Options<PostSiteStructuredContentFolderBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteStructuredContentFolderBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/structured-content-folders/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postSiteStructuredContentFoldersPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostSiteStructuredContentFoldersPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteStructuredContentFoldersPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/structured-content-folders/export-batch',
        ...options
    });
};

export const putStructuredContentFolderSubscribe = <ThrowOnError extends boolean = false>(options: Options<PutStructuredContentFolderSubscribeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutStructuredContentFolderSubscribeResponses, unknown, ThrowOnError>({
        url: '/v1.0/structured-content-folders/{structuredContentFolderId}/subscribe',
        ...options
    });
};

export const putStructuredContentFolderUnsubscribe = <ThrowOnError extends boolean = false>(options: Options<PutStructuredContentFolderUnsubscribeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutStructuredContentFolderUnsubscribeResponses, unknown, ThrowOnError>({
        url: '/v1.0/structured-content-folders/{structuredContentFolderId}/unsubscribe',
        ...options
    });
};

/**
 * Deletes the asset library's structured content by external reference code.
 */
export const deleteAssetLibraryStructuredContentByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteAssetLibraryStructuredContentByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteAssetLibraryStructuredContentByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/structured-contents/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

export const getAssetLibraryStructuredContentByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetAssetLibraryStructuredContentByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAssetLibraryStructuredContentByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/structured-contents/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Updates the asset library's structured content with the given external reference code, or creates it if it not exists.
 */
export const putAssetLibraryStructuredContentByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PutAssetLibraryStructuredContentByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutAssetLibraryStructuredContentByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/structured-contents/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Deletes the site's structured content by external reference code.
 */
export const deleteSiteStructuredContentByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteSiteStructuredContentByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSiteStructuredContentByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/structured-contents/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves the site's structured content by external reference code.
 */
export const getSiteStructuredContentByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetSiteStructuredContentByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteStructuredContentByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/structured-contents/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Updates the site's structured content with the given external reference code, or creates it if it not exists.
 */
export const putSiteStructuredContentByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PutSiteStructuredContentByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteStructuredContentByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/structured-contents/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Deletes the structured content and returns a 204 if the operation succeeds.
 */
export const deleteStructuredContent = <ThrowOnError extends boolean = false>(options: Options<DeleteStructuredContentData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteStructuredContentResponses, unknown, ThrowOnError>({
        url: '/v1.0/structured-contents/{structuredContentId}',
        ...options
    });
};

/**
 * Retrieves the structured content via its ID.
 */
export const getStructuredContent = <ThrowOnError extends boolean = false>(options: Options<GetStructuredContentData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetStructuredContentResponses, unknown, ThrowOnError>({
        url: '/v1.0/structured-contents/{structuredContentId}',
        ...options
    });
};

/**
 * Updates only the fields received in the request body, leaving any other fields untouched.
 */
export const patchStructuredContent = <ThrowOnError extends boolean = false>(options: Options<PatchStructuredContentData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchStructuredContentResponses, unknown, ThrowOnError>({
        url: '/v1.0/structured-contents/{structuredContentId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Replaces the structured content with the information sent in the request body. Any missing fields are deleted, unless they are required.
 */
export const putStructuredContent = <ThrowOnError extends boolean = false>(options: Options<PutStructuredContentData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutStructuredContentResponses, unknown, ThrowOnError>({
        url: '/v1.0/structured-contents/{structuredContentId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteStructuredContentBatch = <ThrowOnError extends boolean = false>(options?: Options<DeleteStructuredContentBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteStructuredContentBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/structured-contents/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const putStructuredContentBatch = <ThrowOnError extends boolean = false>(options?: Options<PutStructuredContentBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).put<PutStructuredContentBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/structured-contents/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Deletes the structured content's rating and returns a 204 if the operation succeeds.
 */
export const deleteStructuredContentMyRating = <ThrowOnError extends boolean = false>(options: Options<DeleteStructuredContentMyRatingData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteStructuredContentMyRatingResponses, unknown, ThrowOnError>({
        url: '/v1.0/structured-contents/{structuredContentId}/my-rating',
        ...options
    });
};

/**
 * Retrieves the structured content's rating.
 */
export const getStructuredContentMyRating = <ThrowOnError extends boolean = false>(options: Options<GetStructuredContentMyRatingData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetStructuredContentMyRatingResponses, unknown, ThrowOnError>({
        url: '/v1.0/structured-contents/{structuredContentId}/my-rating',
        ...options
    });
};

/**
 * Create a rating for the structured content.
 */
export const postStructuredContentMyRating = <ThrowOnError extends boolean = false>(options: Options<PostStructuredContentMyRatingData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostStructuredContentMyRatingResponses, unknown, ThrowOnError>({
        url: '/v1.0/structured-contents/{structuredContentId}/my-rating',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Replaces the rating with the information sent in the request body. Any missing fields are deleted, unless they are required.
 */
export const putStructuredContentMyRating = <ThrowOnError extends boolean = false>(options: Options<PutStructuredContentMyRatingData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutStructuredContentMyRatingResponses, unknown, ThrowOnError>({
        url: '/v1.0/structured-contents/{structuredContentId}/my-rating',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getAssetLibraryStructuredContentPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetAssetLibraryStructuredContentPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAssetLibraryStructuredContentPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/structured-contents/permissions',
        ...options
    });
};

export const putAssetLibraryStructuredContentPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutAssetLibraryStructuredContentPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutAssetLibraryStructuredContentPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/structured-contents/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getAssetLibraryStructuredContentsPage = <ThrowOnError extends boolean = false>(options: Options<GetAssetLibraryStructuredContentsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetAssetLibraryStructuredContentsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/structured-contents',
        ...options
    });
};

export const postAssetLibraryStructuredContent = <ThrowOnError extends boolean = false>(options: Options<PostAssetLibraryStructuredContentData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAssetLibraryStructuredContentResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/structured-contents',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves a list of the content structure's structured content. Results can be paginated, filtered, searched, and sorted.
 */
export const getContentStructureStructuredContentsPage = <ThrowOnError extends boolean = false>(options: Options<GetContentStructureStructuredContentsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetContentStructureStructuredContentsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/content-structures/{contentStructureId}/structured-contents',
        ...options
    });
};

/**
 * Retrieves a structured content by its key (`articleKey`).
 */
export const getSiteStructuredContentByKey = <ThrowOnError extends boolean = false>(options: Options<GetSiteStructuredContentByKeyData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteStructuredContentByKeyResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/structured-contents/by-key/{key}',
        ...options
    });
};

/**
 * Retrieves a structured content by its UUID.
 */
export const getSiteStructuredContentByUuid = <ThrowOnError extends boolean = false>(options: Options<GetSiteStructuredContentByUuidData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteStructuredContentByUuidResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/structured-contents/by-uuid/{uuid}',
        ...options
    });
};

export const getSiteStructuredContentPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteStructuredContentPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteStructuredContentPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/structured-contents/permissions',
        ...options
    });
};

export const putSiteStructuredContentPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutSiteStructuredContentPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteStructuredContentPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/structured-contents/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the site's structured content. Results can be paginated, filtered, searched, flattened, and sorted.
 */
export const getSiteStructuredContentsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteStructuredContentsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteStructuredContentsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/structured-contents',
        ...options
    });
};

/**
 * Creates a new structured content.
 */
export const postSiteStructuredContent = <ThrowOnError extends boolean = false>(options: Options<PostSiteStructuredContentData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteStructuredContentResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/structured-contents',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the folder's structured content. Results can be paginated, filtered, searched, and sorted.
 */
export const getStructuredContentFolderStructuredContentsPage = <ThrowOnError extends boolean = false>(options: Options<GetStructuredContentFolderStructuredContentsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetStructuredContentFolderStructuredContentsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/structured-content-folders/{structuredContentFolderId}/structured-contents',
        ...options
    });
};

/**
 * Creates a new structured content in the folder.
 */
export const postStructuredContentFolderStructuredContent = <ThrowOnError extends boolean = false>(options: Options<PostStructuredContentFolderStructuredContentData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostStructuredContentFolderStructuredContentResponses, unknown, ThrowOnError>({
        url: '/v1.0/structured-content-folders/{structuredContentFolderId}/structured-contents',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getStructuredContentPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetStructuredContentPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetStructuredContentPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/structured-contents/{structuredContentId}/permissions',
        ...options
    });
};

export const putStructuredContentPermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutStructuredContentPermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutStructuredContentPermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/structured-contents/{structuredContentId}/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the structured content's rendered display page
 */
export const getStructuredContentRenderedContentByDisplayPageDisplayPageKey = <ThrowOnError extends boolean = false>(options: Options<GetStructuredContentRenderedContentByDisplayPageDisplayPageKeyData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetStructuredContentRenderedContentByDisplayPageDisplayPageKeyResponses, unknown, ThrowOnError>({
        url: '/v1.0/structured-contents/{structuredContentId}/rendered-content-by-display-page/{displayPageKey}',
        ...options
    });
};

/**
 * Retrieves the structured content's rendered template (the result of applying the structure's values to a template).
 */
export const getStructuredContentRenderedContentContentTemplate = <ThrowOnError extends boolean = false>(options: Options<GetStructuredContentRenderedContentContentTemplateData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetStructuredContentRenderedContentContentTemplateResponses, unknown, ThrowOnError>({
        url: '/v1.0/structured-contents/{structuredContentId}/rendered-content/{contentTemplateId}',
        ...options
    });
};

export const postAssetLibraryStructuredContentBatch = <ThrowOnError extends boolean = false>(options: Options<PostAssetLibraryStructuredContentBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAssetLibraryStructuredContentBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/structured-contents/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postAssetLibraryStructuredContentsPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostAssetLibraryStructuredContentsPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostAssetLibraryStructuredContentsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/asset-libraries/{assetLibraryId}/structured-contents/export-batch',
        ...options
    });
};

export const postContentStructureStructuredContentsPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostContentStructureStructuredContentsPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostContentStructureStructuredContentsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/content-structures/{contentStructureId}/structured-contents/export-batch',
        ...options
    });
};

export const postSiteStructuredContentBatch = <ThrowOnError extends boolean = false>(options: Options<PostSiteStructuredContentBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteStructuredContentBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/structured-contents/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postSiteStructuredContentsPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostSiteStructuredContentsPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteStructuredContentsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/structured-contents/export-batch',
        ...options
    });
};

export const postStructuredContentFolderStructuredContentBatch = <ThrowOnError extends boolean = false>(options: Options<PostStructuredContentFolderStructuredContentBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostStructuredContentFolderStructuredContentBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/structured-content-folders/{structuredContentFolderId}/structured-contents/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postStructuredContentFolderStructuredContentsPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostStructuredContentFolderStructuredContentsPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostStructuredContentFolderStructuredContentsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/structured-content-folders/{structuredContentFolderId}/structured-contents/export-batch',
        ...options
    });
};

export const putStructuredContentSubscribe = <ThrowOnError extends boolean = false>(options: Options<PutStructuredContentSubscribeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutStructuredContentSubscribeResponses, unknown, ThrowOnError>({
        url: '/v1.0/structured-contents/{structuredContentId}/subscribe',
        ...options
    });
};

export const putStructuredContentUnsubscribe = <ThrowOnError extends boolean = false>(options: Options<PutStructuredContentUnsubscribeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutStructuredContentUnsubscribeResponses, unknown, ThrowOnError>({
        url: '/v1.0/structured-contents/{structuredContentId}/unsubscribe',
        ...options
    });
};

/**
 * Deletes the site's wiki node by external reference code.
 */
export const deleteSiteWikiNodeByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteSiteWikiNodeByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSiteWikiNodeByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/wiki-nodes/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves the site's wiki node by external reference code.
 */
export const getSiteWikiNodeByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetSiteWikiNodeByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteWikiNodeByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/wiki-nodes/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Updates the site's wiki node with the given external reference code, or creates it if it not exists.
 */
export const putSiteWikiNodeByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PutSiteWikiNodeByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteWikiNodeByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/wiki-nodes/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Deletes the wiki node and returns a 204 if the operation succeeds.
 */
export const deleteWikiNode = <ThrowOnError extends boolean = false>(options: Options<DeleteWikiNodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteWikiNodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/wiki-nodes/{wikiNodeId}',
        ...options
    });
};

/**
 * Retrieves the wiki node
 */
export const getWikiNode = <ThrowOnError extends boolean = false>(options: Options<GetWikiNodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetWikiNodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/wiki-nodes/{wikiNodeId}',
        ...options
    });
};

/**
 * Replaces the wiki node with the information sent in the request body. Any missing fields are deleted, unless they are required.
 */
export const putWikiNode = <ThrowOnError extends boolean = false>(options: Options<PutWikiNodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutWikiNodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/wiki-nodes/{wikiNodeId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteWikiNodeBatch = <ThrowOnError extends boolean = false>(options?: Options<DeleteWikiNodeBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteWikiNodeBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/wiki-nodes/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const putWikiNodeBatch = <ThrowOnError extends boolean = false>(options?: Options<PutWikiNodeBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).put<PutWikiNodeBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/wiki-nodes/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const getSiteWikiNodePermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteWikiNodePermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteWikiNodePermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/wiki-nodes/permissions',
        ...options
    });
};

export const putSiteWikiNodePermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutSiteWikiNodePermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteWikiNodePermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/wiki-nodes/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the wiki node's of a site. Results can be paginated, filtered, searched, and sorted.
 */
export const getSiteWikiNodesPage = <ThrowOnError extends boolean = false>(options: Options<GetSiteWikiNodesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteWikiNodesPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/wiki-nodes',
        ...options
    });
};

/**
 * Creates a new wiki node
 */
export const postSiteWikiNode = <ThrowOnError extends boolean = false>(options: Options<PostSiteWikiNodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteWikiNodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/wiki-nodes',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getWikiNodePermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetWikiNodePermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetWikiNodePermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/wiki-nodes/{wikiNodeId}/permissions',
        ...options
    });
};

export const putWikiNodePermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutWikiNodePermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutWikiNodePermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/wiki-nodes/{wikiNodeId}/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postSiteWikiNodeBatch = <ThrowOnError extends boolean = false>(options: Options<PostSiteWikiNodeBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteWikiNodeBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/wiki-nodes/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postSiteWikiNodesPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostSiteWikiNodesPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostSiteWikiNodesPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/wiki-nodes/export-batch',
        ...options
    });
};

export const putWikiNodeSubscribe = <ThrowOnError extends boolean = false>(options: Options<PutWikiNodeSubscribeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutWikiNodeSubscribeResponses, unknown, ThrowOnError>({
        url: '/v1.0/wiki-nodes/{wikiNodeId}/subscribe',
        ...options
    });
};

export const putWikiNodeUnsubscribe = <ThrowOnError extends boolean = false>(options: Options<PutWikiNodeUnsubscribeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutWikiNodeUnsubscribeResponses, unknown, ThrowOnError>({
        url: '/v1.0/wiki-nodes/{wikiNodeId}/unsubscribe',
        ...options
    });
};

/**
 * Delete the wiki page attachment by wiki page's and wiki page attachment's external reference codes.
 */
export const deleteSiteWikiPageByExternalReferenceCodeWikiPageExternalReferenceCodeWikiPageAttachmentByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteSiteWikiPageByExternalReferenceCodeWikiPageExternalReferenceCodeWikiPageAttachmentByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSiteWikiPageByExternalReferenceCodeWikiPageExternalReferenceCodeWikiPageAttachmentByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/wiki-pages/by-external-reference-code/{wikiPageExternalReferenceCode}/wiki-page-attachments/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves the wiki page attachment by wiki page's and wiki page attachment's external reference codes.
 */
export const getSiteWikiPageByExternalReferenceCodeWikiPageExternalReferenceCodeWikiPageAttachmentByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetSiteWikiPageByExternalReferenceCodeWikiPageExternalReferenceCodeWikiPageAttachmentByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteWikiPageByExternalReferenceCodeWikiPageExternalReferenceCodeWikiPageAttachmentByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/wiki-pages/by-external-reference-code/{wikiPageExternalReferenceCode}/wiki-page-attachments/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Deletes the wiki page attachment and returns a 204 if the operation succeeds.
 */
export const deleteWikiPageAttachment = <ThrowOnError extends boolean = false>(options: Options<DeleteWikiPageAttachmentData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteWikiPageAttachmentResponses, unknown, ThrowOnError>({
        url: '/v1.0/wiki-page-attachments/{wikiPageAttachmentId}',
        ...options
    });
};

/**
 * Retrieves the wiki page attachment.
 */
export const getWikiPageAttachment = <ThrowOnError extends boolean = false>(options: Options<GetWikiPageAttachmentData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetWikiPageAttachmentResponses, unknown, ThrowOnError>({
        url: '/v1.0/wiki-page-attachments/{wikiPageAttachmentId}',
        ...options
    });
};

export const deleteWikiPageAttachmentBatch = <ThrowOnError extends boolean = false>(options?: Options<DeleteWikiPageAttachmentBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteWikiPageAttachmentBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/wiki-page-attachments/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Retrieves the wiki page's attachments.
 */
export const getWikiPageWikiPageAttachmentsPage = <ThrowOnError extends boolean = false>(options: Options<GetWikiPageWikiPageAttachmentsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetWikiPageWikiPageAttachmentsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/wiki-pages/{wikiPageId}/wiki-page-attachments',
        ...options
    });
};

/**
 * Creates an attachment for the wiki page. The request body must be `multipart/form-data` with two parts, the file's bytes (`file`), and an optional JSON string (`WikiPageAttachment`) with the metadata.
 */
export const postWikiPageWikiPageAttachment = <ThrowOnError extends boolean = false>(options: Options<PostWikiPageWikiPageAttachmentData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostWikiPageWikiPageAttachmentResponses, unknown, ThrowOnError>({
        ...formDataBodySerializer,
        url: '/v1.0/wiki-pages/{wikiPageId}/wiki-page-attachments',
        ...options,
        headers: {
            'Content-Type': null,
            ...options.headers
        }
    });
};

export const postWikiPageWikiPageAttachmentBatch = <ThrowOnError extends boolean = false>(options: Options<PostWikiPageWikiPageAttachmentBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostWikiPageWikiPageAttachmentBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/wiki-pages/{wikiPageId}/wiki-page-attachments/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postWikiPageWikiPageAttachmentsPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostWikiPageWikiPageAttachmentsPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostWikiPageWikiPageAttachmentsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/wiki-pages/{wikiPageId}/wiki-page-attachments/export-batch',
        ...options
    });
};

/**
 * Deletes the wiki page by external reference code.
 */
export const deleteSiteWikiPageByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteSiteWikiPageByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteSiteWikiPageByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/wiki-pages/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves the wiki page by external reference code
 */
export const getSiteWikiPageByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetSiteWikiPageByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetSiteWikiPageByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/wiki-pages/by-external-reference-code/{externalReferenceCode}',
        ...options
    });
};

/**
 * Updates the wiki page with the given external reference code, or creates it if it not exists.
 */
export const putSiteWikiPageByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PutSiteWikiPageByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutSiteWikiPageByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/sites/{siteId}/wiki-pages/by-external-reference-code/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Deletes the wiki page and returns a 204 if the operation succeeds.
 */
export const deleteWikiPage = <ThrowOnError extends boolean = false>(options: Options<DeleteWikiPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteWikiPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/wiki-pages/{wikiPageId}',
        ...options
    });
};

/**
 * Retrieves the wiki page
 */
export const getWikiPage = <ThrowOnError extends boolean = false>(options: Options<GetWikiPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetWikiPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/wiki-pages/{wikiPageId}',
        ...options
    });
};

/**
 * Replaces the wiki page with the information sent in the request body. Any missing fields are deleted, unless they are required.
 */
export const putWikiPage = <ThrowOnError extends boolean = false>(options: Options<PutWikiPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutWikiPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/wiki-pages/{wikiPageId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteWikiPageBatch = <ThrowOnError extends boolean = false>(options?: Options<DeleteWikiPageBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteWikiPageBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/wiki-pages/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const putWikiPageBatch = <ThrowOnError extends boolean = false>(options?: Options<PutWikiPageBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).put<PutWikiPageBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/wiki-pages/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Retrieves the wiki page's of a node. Results can be paginated, filtered, searched, and sorted.
 */
export const getWikiNodeWikiPagesPage = <ThrowOnError extends boolean = false>(options: Options<GetWikiNodeWikiPagesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetWikiNodeWikiPagesPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/wiki-nodes/{wikiNodeId}/wiki-pages',
        ...options
    });
};

/**
 * Creates a new wiki page
 */
export const postWikiNodeWikiPage = <ThrowOnError extends boolean = false>(options: Options<PostWikiNodeWikiPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostWikiNodeWikiPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/wiki-nodes/{wikiNodeId}/wiki-pages',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getWikiPagePermissionsPage = <ThrowOnError extends boolean = false>(options: Options<GetWikiPagePermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetWikiPagePermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/wiki-pages/{wikiPageId}/permissions',
        ...options
    });
};

export const putWikiPagePermissionsPage = <ThrowOnError extends boolean = false>(options: Options<PutWikiPagePermissionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutWikiPagePermissionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/wiki-pages/{wikiPageId}/permissions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves the child wiki page's of a wiki page.
 */
export const getWikiPageWikiPagesPage = <ThrowOnError extends boolean = false>(options: Options<GetWikiPageWikiPagesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetWikiPageWikiPagesPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/wiki-pages/{parentWikiPageId}/wiki-pages',
        ...options
    });
};

/**
 * Creates a child wiki page of the parent wiki page.
 */
export const postWikiPageWikiPage = <ThrowOnError extends boolean = false>(options: Options<PostWikiPageWikiPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostWikiPageWikiPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/wiki-pages/{parentWikiPageId}/wiki-pages',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postWikiNodeWikiPageBatch = <ThrowOnError extends boolean = false>(options: Options<PostWikiNodeWikiPageBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostWikiNodeWikiPageBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/wiki-nodes/{wikiNodeId}/wiki-pages/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postWikiNodeWikiPagesPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostWikiNodeWikiPagesPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostWikiNodeWikiPagesPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/wiki-nodes/{wikiNodeId}/wiki-pages/export-batch',
        ...options
    });
};

export const putWikiPageSubscribe = <ThrowOnError extends boolean = false>(options: Options<PutWikiPageSubscribeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutWikiPageSubscribeResponses, unknown, ThrowOnError>({
        url: '/v1.0/wiki-pages/{wikiPageId}/subscribe',
        ...options
    });
};

export const putWikiPageUnsubscribe = <ThrowOnError extends boolean = false>(options: Options<PutWikiPageUnsubscribeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutWikiPageUnsubscribeResponses, unknown, ThrowOnError>({
        url: '/v1.0/wiki-pages/{wikiPageId}/unsubscribe',
        ...options
    });
};