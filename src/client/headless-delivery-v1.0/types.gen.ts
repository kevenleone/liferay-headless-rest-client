// This file is auto-generated by @hey-api/openapi-ts

export type BlogPostingImageReadable = {
    /**
     * The image's relative URL.
     */
    readonly contentUrl?: string;
    /**
     * optional field with the content of the image in Base64, can be embedded with nestedFields
     */
    readonly contentValue?: string;
    /**
     * The image's content type (e.g., `application/png`, etc.).
     */
    readonly encodingFormat?: string;
    /**
     * The image's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The image's file extension.
     */
    readonly fileExtension?: string;
    /**
     * The image's ID.
     */
    readonly id?: number;
    /**
     * The image's size in bytes.
     */
    readonly sizeInBytes?: number;
    /**
     * The image's title text.
     */
    title?: string;
    viewableBy?: 'Anyone' | 'Members' | 'Owner';
    readonly 'x-class-name'?: string;
};

export type BlogPostingImageWritable = {
    /**
     * The image's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The image's title text.
     */
    title?: string;
    viewableBy?: 'Anyone' | 'Members' | 'Owner';
};

export type Facet = {
    facetCriteria?: string;
    facetValues?: Array<FacetValue>;
};

export type FacetValue = {
    numberOfOccurrences?: number;
    term?: string;
};

export type PageBlogPostingImageReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<BlogPostingImageReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageBlogPostingImageWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<BlogPostingImageWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PostSiteBlogPostingImageRequestBodyReadable = {
    blogPostingImage?: BlogPostingImageReadable;
    /**
     * File
     */
    file?: Blob | File;
};

export type PostSiteBlogPostingImageRequestBodyWritable = {
    blogPostingImage?: BlogPostingImageWritable;
    /**
     * File
     */
    file?: Blob | File;
};

export type MultipartBody = {
    values?: {
        [key: string]: string;
    };
};

/**
 * The blog post's average rating.
 */
export type AggregateRating = {
    /**
     * The highest possible rating (by default normalized to 1.0).
     */
    readonly bestRating?: number;
    /**
     * The average rating.
     */
    readonly ratingAverage?: number;
    /**
     * The number of ratings.
     */
    readonly ratingCount?: number;
    /**
     * The rating value.
     */
    readonly ratingValue?: number;
    /**
     * The lowest possible rating (by default normalized to 0.0).
     */
    readonly worstRating?: number;
    readonly 'x-class-name'?: string;
};

/**
 * Represents a blog post. See [BlogPosting](https://www.schema.org/BlogPosting) for more information.
 */
export type BlogPostingReadable = {
    /**
     * Block of actions allowed by the user making the request.
     */
    readonly actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    aggregateRating?: AggregateRating;
    /**
     * The blog post's subtitle.
     */
    alternativeHeadline?: string;
    /**
     * The blog post's body (content).
     */
    articleBody: string;
    creator?: CreatorReadable;
    /**
     * A list of the custom fields associated with the blog post.
     */
    customFields?: Array<CustomFieldReadable>;
    /**
     * The blog post's creation date.
     */
    readonly dateCreated?: string;
    /**
     * The blog post's most recent modification date.
     */
    readonly dateModified?: string;
    /**
     * The blog post's publication date.
     */
    datePublished?: string;
    /**
     * The blog post's description.
     */
    description?: string;
    /**
     * The blog post's media format (e.g., HTML, BBCode, etc.).
     */
    readonly encodingFormat?: string;
    /**
     * The blog post's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The blog post's relative URL.
     */
    friendlyUrlPath?: string;
    /**
     * The blog post's main title.
     */
    headline: string;
    /**
     * The blog post's identifier.
     */
    readonly id?: number;
    image?: ImageReadable;
    /**
     * A list of keywords describing the blog post.
     */
    keywords?: Array<string>;
    /**
     * The number of comments this blog post has received.
     */
    readonly numberOfComments?: number;
    /**
     * A list of related contents to this blog post.
     */
    relatedContents?: Array<RelatedContentReadable>;
    /**
     * A list of rendered blogs posts, which results from using a display page to process the blogs post and return HTML.
     */
    readonly renderedContents?: Array<RenderedContentReadable>;
    /**
     * The ID of the site to which this blog post is scoped.
     */
    readonly siteId?: number;
    /**
     * The categories associated with this blog post.
     */
    readonly taxonomyCategoryBriefs?: Array<TaxonomyCategoryBriefReadable>;
    viewableBy?: 'Anyone' | 'Members' | 'Owner';
    readonly 'x-class-name'?: string;
};

/**
 * Represents a blog post. See [BlogPosting](https://www.schema.org/BlogPosting) for more information.
 */
export type BlogPostingWritable = {
    /**
     * The blog post's subtitle.
     */
    alternativeHeadline?: string;
    /**
     * The blog post's body (content).
     */
    articleBody: string;
    creator?: CreatorWritable;
    /**
     * A list of the custom fields associated with the blog post.
     */
    customFields?: Array<CustomFieldWritable>;
    /**
     * The blog post's publication date.
     */
    datePublished?: string;
    /**
     * The blog post's description.
     */
    description?: string;
    /**
     * The blog post's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The blog post's relative URL.
     */
    friendlyUrlPath?: string;
    /**
     * The blog post's main title.
     */
    headline: string;
    image?: ImageWritable;
    /**
     * A list of keywords describing the blog post.
     */
    keywords?: Array<string>;
    /**
     * A list of related contents to this blog post.
     */
    relatedContents?: Array<RelatedContentWritable>;
    taxonomyCategoryIds?: Array<number>;
    viewableBy?: 'Anyone' | 'Members' | 'Owner';
};

/**
 * The wiki page's creator.
 */
export type CreatorReadable = {
    /**
     * The author's additional name (e.g., middle name).
     */
    readonly additionalName?: string;
    /**
     * The type of the content.
     */
    readonly contentType?: string;
    /**
     * The external reference code of the author.
     */
    readonly externalReferenceCode?: string;
    /**
     * The author's surname.
     */
    readonly familyName?: string;
    /**
     * The author's first name.
     */
    readonly givenName?: string;
    /**
     * The author's ID.
     */
    readonly id?: number;
    /**
     * A relative URL to the author's profile image.
     */
    readonly image?: string;
    /**
     * The author's full name.
     */
    readonly name?: string;
    /**
     * A relative URL to the author's user profile. Optional field, can be embedded with nestedFields.
     */
    readonly profileURL?: string;
    /**
     * A list of userGroups information.
     */
    userGroupBriefs?: Array<UserGroupBrief>;
    readonly 'x-class-name'?: string;
};

/**
 * A list of the custom fields associated with the wiki page.
 */
export type CustomFieldReadable = {
    readonly 'x-class-name'?: string;
    customValue?: CustomValueReadable;
    /**
     * The field type (e.g., image, text, etc.).
     */
    readonly dataType?: string;
    /**
     * The field's internal name. This is valid for comparisons and unique in the structured content.
     */
    name?: string;
};

/**
 * A list of the custom fields associated with the wiki page.
 */
export type CustomFieldWritable = {
    customValue?: CustomValueWritable;
    /**
     * The field's internal name. This is valid for comparisons and unique in the structured content.
     */
    name?: string;
};

/**
 * The field's value.
 */
export type CustomValueReadable = {
    readonly 'x-class-name'?: string;
    /**
     * The field's content value for simple types.
     */
    data?: {
        [key: string]: unknown;
    };
    /**
     * The localized field's content values for simple types.
     */
    data_i18n?: {
        [key: string]: string;
    };
    geo?: GeoReadable;
};

/**
 * The field's value.
 */
export type CustomValueWritable = {
    /**
     * The field's content value for simple types.
     */
    data?: {
        [key: string]: unknown;
    };
    /**
     * The localized field's content values for simple types.
     */
    data_i18n?: {
        [key: string]: string;
    };
    geo?: GeoWritable;
};

/**
 * A point determined by latitude and longitude.
 */
export type GeoReadable = {
    readonly 'x-class-name'?: string;
    /**
     * The latitude of a point in space.
     */
    latitude?: number;
    /**
     * The longitude of a point in space.
     */
    longitude?: number;
};

/**
 * A point determined by latitude and longitude.
 */
export type GeoWritable = {
    /**
     * The latitude of a point in space.
     */
    latitude?: number;
    /**
     * The longitude of a point in space.
     */
    longitude?: number;
};

/**
 * The blog post's cover image.
 */
export type ImageReadable = {
    /**
     * The text describing the image.
     */
    caption?: string;
    /**
     * The image's relative URL.
     */
    readonly contentUrl?: string;
    /**
     * optional field with the content of the image in Base64, can be embedded with nestedFields
     */
    readonly contentValue?: string;
    /**
     * The image's ID. This can be used to retrieve more information in the `Document` API.
     */
    imageId?: number;
    readonly 'x-class-name'?: string;
};

/**
 * The blog post's cover image.
 */
export type ImageWritable = {
    /**
     * The text describing the image.
     */
    caption?: string;
    /**
     * The image's ID. This can be used to retrieve more information in the `Document` API.
     */
    imageId?: number;
};

/**
 * A list of related contents to this wiki page.
 */
export type RelatedContentReadable = {
    /**
     * The type of the content.
     */
    contentType?: string;
    /**
     * The identifier of the resource.
     */
    id?: number;
    /**
     * The title of the content.
     */
    readonly title?: string;
    readonly 'x-class-name'?: string;
};

/**
 * A list of related contents to this wiki page.
 */
export type RelatedContentWritable = {
    /**
     * The type of the content.
     */
    contentType?: string;
    /**
     * The identifier of the resource.
     */
    id?: number;
};

/**
 * A list of rendered content, which results from using a template to process the content and return HTML.
 */
export type RenderedContentReadable = {
    /**
     * The ID of the template or display page used to render the content.
     */
    readonly contentTemplateId?: string;
    /**
     * The name of the template or display page used to render the content.
     */
    contentTemplateName?: string;
    /**
     * The localized names of the template or display page used to render the content.
     */
    contentTemplateName_i18n?: {
        [key: string]: string;
    };
    /**
     * Specifies if the template or display page are marked as default to display the content.
     */
    markedAsDefault?: boolean;
    /**
     * An absolute URL to the rendered content.
     */
    renderedContentURL?: string;
    /**
     * Optional field with the rendered content, can be embedded with nestedFields.
     */
    renderedContentValue?: string;
    readonly 'x-class-name'?: string;
};

/**
 * A list of rendered content, which results from using a template to process the content and return HTML.
 */
export type RenderedContentWritable = {
    /**
     * The name of the template or display page used to render the content.
     */
    contentTemplateName?: string;
    /**
     * The localized names of the template or display page used to render the content.
     */
    contentTemplateName_i18n?: {
        [key: string]: string;
    };
    /**
     * Specifies if the template or display page are marked as default to display the content.
     */
    markedAsDefault?: boolean;
    /**
     * An absolute URL to the rendered content.
     */
    renderedContentURL?: string;
    /**
     * Optional field with the rendered content, can be embedded with nestedFields.
     */
    renderedContentValue?: string;
};

/**
 * The categories associated with this wiki page.
 */
export type TaxonomyCategoryBriefReadable = {
    /**
     * Optional field with the embedded taxonomy category, can be embedded with nestedFields
     */
    readonly embeddedTaxonomyCategory?: {
        [key: string]: unknown;
    };
    /**
     * The category's ID. This can be used to retrieve more information in the `TaxonomyCategory` API.
     */
    readonly taxonomyCategoryId?: number;
    /**
     * The category's name.
     */
    readonly taxonomyCategoryName?: string;
    /**
     * The localized category's names.
     */
    readonly taxonomyCategoryName_i18n?: {
        [key: string]: string;
    };
    taxonomyCategoryReference?: TaxonomyCategoryReferenceReadable;
    readonly 'x-class-name'?: string;
};

/**
 * The categories associated with this wiki page.
 */
export type TaxonomyCategoryBriefWritable = {
    taxonomyCategoryReference?: TaxonomyCategoryReferenceWritable;
};

/**
 * A unique reference to a taxonomy category.
 */
export type TaxonomyCategoryReferenceReadable = {
    /**
     * The taxonomy category's external reference code.
     */
    externalReferenceCode: string;
    /**
     * The key of the site or asset library where the taxonomy category is located. It can be left out if the taxonomy category is in the same site as the page.
     */
    siteKey?: string;
    readonly 'x-class-name'?: string;
};

/**
 * A unique reference to a taxonomy category.
 */
export type TaxonomyCategoryReferenceWritable = {
    /**
     * The taxonomy category's external reference code.
     */
    externalReferenceCode: string;
    /**
     * The key of the site or asset library where the taxonomy category is located. It can be left out if the taxonomy category is in the same site as the page.
     */
    siteKey?: string;
};

/**
 * A list of userGroups information.
 */
export type UserGroupBrief = {
    /**
     * The ID of the user group.
     */
    readonly id?: number;
    /**
     * The name of the user group.
     */
    readonly name?: string;
    readonly 'x-class-name'?: string;
};

export type RatingReadable = {
    /**
     * Block of actions allowed by the user making the request.
     */
    readonly actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    /**
     * The best possible rating an asset can receive (normalized to 1.0 by default).
     */
    readonly bestRating?: number;
    creator?: CreatorReadable;
    /**
     * The rating's creation date.
     */
    readonly dateCreated?: string;
    /**
     * The last time a field of the rating changed.
     */
    readonly dateModified?: string;
    /**
     * The rating's ID.
     */
    readonly id?: number;
    /**
     * The rating's value.
     */
    ratingValue?: number;
    /**
     * The worst possible rating an asset can receive (normalized to 0.0 by default).
     */
    readonly worstRating?: number;
    readonly 'x-class-name'?: string;
};

export type RatingWritable = {
    creator?: CreatorWritable;
    /**
     * The rating's value.
     */
    ratingValue?: number;
};

export type PagePermission = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<Permission>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type Permission = {
    actionIds?: Array<string>;
    roleExternalReferenceCode?: string;
    roleName?: string;
    roleType?: string;
};

export type PageBlogPostingReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<BlogPostingReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageBlogPostingWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<BlogPostingWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type CommentReadable = {
    /**
     * Block of actions allowed by the user making the request.
     */
    readonly actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    creator?: CreatorReadable;
    /**
     * The comment's creation date.
     */
    readonly dateCreated?: string;
    /**
     * The comment's latest modification date.
     */
    readonly dateModified?: string;
    /**
     * The comment's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The comment's ID.
     */
    readonly id?: number;
    /**
     * The number of child comments on this comment.
     */
    readonly numberOfComments?: number;
    /**
     * the ID of the comment's parent, if it exists.
     */
    parentCommentId?: number;
    /**
     * The comment's text content.
     */
    text?: string;
    readonly 'x-class-name'?: string;
};

export type CommentWritable = {
    creator?: CreatorWritable;
    /**
     * The comment's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * the ID of the comment's parent, if it exists.
     */
    parentCommentId?: number;
    /**
     * The comment's text content.
     */
    text?: string;
};

export type PageCommentReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<CommentReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageCommentWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<CommentWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type ContentElement = {
    /**
     * The content's fields.
     */
    readonly content?: {
        [key: string]: unknown;
    };
    /**
     * The content set element's type.
     */
    readonly contentType?: string;
    /**
     * The content set element's ID.
     */
    readonly id?: number;
    /**
     * The content's title.
     */
    readonly title?: string;
    /**
     * The localized content's titles.
     */
    readonly title_i18n?: {
        [key: string]: string;
    };
    readonly 'x-class-name'?: string;
};

export type PageContentElementReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<ContentElement>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageContentElementWritable = {
    lastPage?: number;
    totalCount?: number;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type ContentSetElement = {
    /**
     * The content's fields.
     */
    readonly content?: {
        [key: string]: unknown;
    };
    /**
     * The content set element's type.
     */
    readonly contentType?: string;
    /**
     * The content set element's ID.
     */
    readonly id?: number;
    /**
     * The content's title.
     */
    readonly title?: string;
    /**
     * The localized content's titles.
     */
    readonly title_i18n?: {
        [key: string]: string;
    };
    readonly 'x-class-name'?: string;
};

export type PageContentSetElementReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<ContentSetElement>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageContentSetElementWritable = {
    lastPage?: number;
    totalCount?: number;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type ContentStructureReadable = {
    /**
     * The key of the asset library to which the content structure is scoped.
     */
    readonly assetLibraryKey?: string;
    /**
     * The list of languages the content structure has a translation for.
     */
    readonly availableLanguages?: Array<string>;
    /**
     * The list of the content structure's fields.
     */
    readonly contentStructureFields?: Array<ContentStructureFieldReadable>;
    creator?: CreatorReadable;
    /**
     * The content structure's creation date.
     */
    readonly dateCreated?: string;
    /**
     * The last time a field of the content structure changed.
     */
    readonly dateModified?: string;
    /**
     * The content structure's description.
     */
    readonly description?: string;
    /**
     * The localized content structure's description.
     */
    readonly description_i18n?: {
        [key: string]: string;
    };
    /**
     * The content structure's ID.
     */
    readonly id?: number;
    /**
     * The content structure's name.
     */
    readonly name?: string;
    /**
     * The localized content structure's names.
     */
    readonly name_i18n?: {
        [key: string]: string;
    };
    /**
     * The ID of the site to which the content structure is scoped.
     */
    readonly siteId?: number;
    readonly 'x-class-name'?: string;
};

export type ContentStructureWritable = {
    creator?: CreatorWritable;
};

/**
 * The list of the content structure's fields.
 */
export type ContentStructureFieldReadable = {
    /**
     * The form field's type (e.g., date, geolocation, text, etc.).
     */
    readonly dataType?: string;
    /**
     * The form field's input control type (e.g., text, textarea, select field, etc.).
     */
    readonly inputControl?: string;
    /**
     * The form field's label.
     */
    readonly label?: string;
    /**
     * The form field's labels.
     */
    readonly label_i18n?: {
        [key: string]: string;
    };
    /**
     * A flag that indicates whether the content is accessible in different languages.
     */
    readonly localizable?: boolean;
    /**
     * A flag that indicates whether the form field can have several values.
     */
    readonly multiple?: boolean;
    /**
     * The form field's name.
     */
    readonly name?: string;
    /**
     * The child content structure fields that depend on this form field.
     */
    readonly nestedContentStructureFields?: Array<ContentStructureFieldReadable>;
    /**
     * The list of different possible values.
     */
    readonly options?: Array<OptionReadable>;
    /**
     * The form field's default value.
     */
    readonly predefinedValue?: string;
    /**
     * The localized form field's default values.
     */
    readonly predefinedValue_i18n?: {
        [key: string]: string;
    };
    /**
     * A flag that indicates whether this content can be rendered (and answered) several times.
     */
    readonly repeatable?: boolean;
    /**
     * A flag that indicates whether this form field is required.
     */
    readonly required?: boolean;
    /**
     * A flag that indicates whether the structure's end target should render the field label.
     */
    readonly showLabel?: boolean;
    readonly 'x-class-name'?: string;
};

/**
 * The list of different possible values.
 */
export type OptionReadable = {
    /**
     * The option's label.
     */
    label?: string;
    /**
     * The localized option's labels.
     */
    label_i18n?: {
        [key: string]: string;
    };
    /**
     * The internal value of the field option.
     */
    value?: string;
    readonly 'x-class-name'?: string;
};

/**
 * The list of different possible values.
 */
export type OptionWritable = {
    /**
     * The option's label.
     */
    label?: string;
    /**
     * The localized option's labels.
     */
    label_i18n?: {
        [key: string]: string;
    };
    /**
     * The internal value of the field option.
     */
    value?: string;
};

export type PageContentStructureReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<ContentStructureReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageContentStructureWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<ContentStructureWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

/**
 * Represents a content template.
 */
export type ContentTemplateReadable = {
    /**
     * Block of actions allowed by the user making the request.
     */
    readonly actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    /**
     * The key of the asset library to which the content template is scoped.
     */
    readonly assetLibraryKey?: string;
    /**
     * The list of languages the content template has a translation for.
     */
    readonly availableLanguages?: Array<string>;
    /**
     * The ID of the `ContentStructure`.
     */
    contentStructureId: number;
    creator?: CreatorReadable;
    /**
     * The content template's creation date.
     */
    readonly dateCreated?: string;
    /**
     * The last time the content template changed.
     */
    readonly dateModified?: string;
    /**
     * the content template's description.
     */
    description?: string;
    /**
     * the localized content template's descriptions.
     */
    description_i18n?: {
        [key: string]: string;
    };
    /**
     * The content template's ID.
     */
    readonly id?: string;
    /**
     * the content template's name.
     */
    name: string;
    /**
     * the localized content template's name.
     */
    name_i18n?: {
        [key: string]: string;
    };
    /**
     * the content template's programming language.
     */
    programmingLanguage?: string;
    /**
     * The ID of the site to which the content template is scoped.
     */
    readonly siteId?: number;
    /**
     * The content template's script.
     */
    templateScript?: string;
    readonly 'x-class-name'?: string;
};

/**
 * Represents a content template.
 */
export type ContentTemplateWritable = {
    /**
     * The ID of the `ContentStructure`.
     */
    contentStructureId: number;
    creator?: CreatorWritable;
    /**
     * the content template's description.
     */
    description?: string;
    /**
     * the localized content template's descriptions.
     */
    description_i18n?: {
        [key: string]: string;
    };
    /**
     * the content template's name.
     */
    name: string;
    /**
     * the localized content template's name.
     */
    name_i18n?: {
        [key: string]: string;
    };
    /**
     * the content template's programming language.
     */
    programmingLanguage?: string;
    /**
     * The content template's script.
     */
    templateScript?: string;
};

export type PageContentTemplateReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<ContentTemplateReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageContentTemplateWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<ContentTemplateWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

/**
 * The list of fields that store the structured content's information.
 */
export type DataDefinitionFieldReadable = {
    customProperties?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    defaultValue?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    fieldType?: string;
    id?: number;
    indexable?: boolean;
    label?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    localizable?: boolean;
    name?: string;
    /**
     * A list of child data definition fields that depend on this resource.
     */
    nestedDataDefinitionFields?: Array<DataDefinitionFieldReadable>;
    readOnly?: boolean;
    repeatable?: boolean;
    required?: boolean;
    showLabel?: boolean;
    tip?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    visible?: boolean;
    readonly 'x-class-name'?: string;
    indexType?: 'all' | 'keyword' | 'none' | 'text';
};

/**
 * The list of fields that store the structured content's information.
 */
export type DataDefinitionFieldWritable = {
    customProperties?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    defaultValue?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    fieldType?: string;
    id?: number;
    indexable?: boolean;
    label?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    localizable?: boolean;
    name?: string;
    /**
     * A list of child data definition fields that depend on this resource.
     */
    nestedDataDefinitionFields?: Array<DataDefinitionFieldWritable>;
    readOnly?: boolean;
    repeatable?: boolean;
    required?: boolean;
    showLabel?: boolean;
    tip?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    visible?: boolean;
    indexType?: 'all' | 'keyword' | 'none' | 'text';
};

/**
 * The layout of the document data definition type fields.
 */
export type DataLayoutReadable = {
    contentType?: string;
    dataDefinitionId?: number;
    dataLayoutFields?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    dataLayoutKey?: string;
    dataLayoutPages?: Array<DataLayoutPageReadable>;
    dataRules?: Array<DataRuleReadable>;
    dateCreated?: string;
    dateModified?: string;
    description?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    id?: number;
    name?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    paginationMode?: string;
    siteId?: number;
    userId?: number;
    readonly 'x-class-name'?: string;
};

/**
 * The layout of the document data definition type fields.
 */
export type DataLayoutWritable = {
    contentType?: string;
    dataDefinitionId?: number;
    dataLayoutFields?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    dataLayoutKey?: string;
    dataLayoutPages?: Array<DataLayoutPageWritable>;
    dataRules?: Array<DataRuleWritable>;
    dateCreated?: string;
    dateModified?: string;
    description?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    id?: number;
    name?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    paginationMode?: string;
    siteId?: number;
    userId?: number;
};

export type DataLayoutColumnReadable = {
    columnSize?: number;
    fieldNames?: Array<string>;
    readonly 'x-class-name'?: string;
};

export type DataLayoutColumnWritable = {
    columnSize?: number;
    fieldNames?: Array<string>;
};

export type DataLayoutPageReadable = {
    dataLayoutRows?: Array<DataLayoutRowReadable>;
    description?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    title?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    readonly 'x-class-name'?: string;
};

export type DataLayoutPageWritable = {
    dataLayoutRows?: Array<DataLayoutRowWritable>;
    description?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    title?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
};

export type DataLayoutRowReadable = {
    dataLayoutColumns?: Array<DataLayoutColumnReadable>;
    readonly 'x-class-name'?: string;
};

export type DataLayoutRowWritable = {
    dataLayoutColumns?: Array<DataLayoutColumnWritable>;
};

export type DataRuleReadable = {
    actions?: Array<{
        [key: string]: {
            [key: string]: unknown;
        };
    }>;
    conditions?: Array<{
        [key: string]: {
            [key: string]: unknown;
        };
    }>;
    logicalOperator?: string;
    name?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    readonly 'x-class-name'?: string;
};

export type DataRuleWritable = {
    actions?: Array<{
        [key: string]: {
            [key: string]: unknown;
        };
    }>;
    conditions?: Array<{
        [key: string]: {
            [key: string]: unknown;
        };
    }>;
    logicalOperator?: string;
    name?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
};

/**
 * Represents a document data definition type.
 */
export type DocumentDataDefinitionTypeReadable = {
    /**
     * Block of actions allowed by the user making the request.
     */
    readonly actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    /**
     * The key of the asset library to which the document data definition type is scoped.
     */
    readonly assetLibraryKey?: string;
    /**
     * The list of languages the document data definition type has a translation for.
     */
    availableLanguages: Array<string>;
    creator?: CreatorReadable;
    /**
     * The list of the document data definition type's data definition fields.
     */
    dataDefinitionFields: Array<DataDefinitionFieldReadable>;
    dataLayout: DataLayoutReadable;
    /**
     * The document data definition type's creation date.
     */
    readonly dateCreated?: string;
    /**
     * The last time a field of the document data definition type changed.
     */
    readonly dateModified?: string;
    /**
     * The document data definition type's description.
     */
    description?: string;
    /**
     * The localized document data definition type's description.
     */
    description_i18n?: {
        [key: string]: string;
    };
    /**
     * The list of document data definition type's id associated with document type.
     */
    documentMetadataSetIds?: Array<number>;
    /**
     * The document data definition type's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The document data definition type's ID.
     */
    readonly id?: number;
    /**
     * The document data definition type's name.
     */
    name: string;
    /**
     * The localized document data definition type's names.
     */
    name_i18n?: {
        [key: string]: string;
    };
    /**
     * The ID of the site to which the document data definition type is scoped.
     */
    readonly siteId?: number;
    viewableBy?: 'Anyone' | 'Members' | 'Owner';
    readonly 'x-class-name'?: string;
};

/**
 * Represents a document data definition type.
 */
export type DocumentDataDefinitionTypeWritable = {
    /**
     * The list of languages the document data definition type has a translation for.
     */
    availableLanguages: Array<string>;
    creator?: CreatorWritable;
    /**
     * The list of the document data definition type's data definition fields.
     */
    dataDefinitionFields: Array<DataDefinitionFieldWritable>;
    dataLayout: DataLayoutWritable;
    /**
     * The document data definition type's description.
     */
    description?: string;
    /**
     * The localized document data definition type's description.
     */
    description_i18n?: {
        [key: string]: string;
    };
    /**
     * The list of document data definition type's id associated with document type.
     */
    documentMetadataSetIds?: Array<number>;
    /**
     * The document data definition type's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The document data definition type's name.
     */
    name: string;
    /**
     * The localized document data definition type's names.
     */
    name_i18n?: {
        [key: string]: string;
    };
    viewableBy?: 'Anyone' | 'Members' | 'Owner';
};

export type PageDocumentDataDefinitionTypeReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<DocumentDataDefinitionTypeReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageDocumentDataDefinitionTypeWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<DocumentDataDefinitionTypeWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

/**
 * Represents a document folder that can contain documents and other folders.
 */
export type DocumentFolderReadable = {
    /**
     * Block of actions allowed by the user making the request.
     */
    readonly actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    /**
     * The key of the asset library to which the folder is scoped.
     */
    readonly assetLibraryKey?: string;
    creator?: CreatorReadable;
    /**
     * A list of the custom fields associated with the folder.
     */
    customFields?: Array<CustomFieldReadable>;
    /**
     * The folder's creation date.
     */
    readonly dateCreated?: string;
    /**
     * The last time a field of the folder changed.
     */
    readonly dateModified?: string;
    /**
     * The folder's description.
     */
    description?: string;
    /**
     * The document folder's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The folder's ID.
     */
    readonly id?: number;
    /**
     * The folder's main title/name.
     */
    name: string;
    /**
     * The number of this folder's child folders.
     */
    readonly numberOfDocumentFolders?: number;
    /**
     * The number of documents in this folder.
     */
    readonly numberOfDocuments?: number;
    /**
     * The ID of the folder's parent, if it exists.
     */
    parentDocumentFolderId?: number;
    /**
     * The ID of the site to which this folder is scoped.
     */
    readonly siteId?: number;
    /**
     * A flag that indicates whether the user making the requests is subscribed to this folder.
     */
    readonly subscribed?: boolean;
    viewableBy?: 'Anyone' | 'Members' | 'Owner';
    readonly 'x-class-name'?: string;
};

/**
 * Represents a document folder that can contain documents and other folders.
 */
export type DocumentFolderWritable = {
    creator?: CreatorWritable;
    /**
     * A list of the custom fields associated with the folder.
     */
    customFields?: Array<CustomFieldWritable>;
    /**
     * The folder's description.
     */
    description?: string;
    /**
     * The document folder's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The folder's main title/name.
     */
    name: string;
    /**
     * The ID of the folder's parent, if it exists.
     */
    parentDocumentFolderId?: number;
    viewableBy?: 'Anyone' | 'Members' | 'Owner';
};

export type PageDocumentFolderReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<DocumentFolderReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageDocumentFolderWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<DocumentFolderWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

/**
 * Represents a Document Metadata Set.
 */
export type DocumentMetadataSetReadable = {
    /**
     * Block of actions allowed by the user making the request.
     */
    readonly actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    /**
     * The key of the asset library to which the Document Metadata Set is scoped.
     */
    readonly assetLibraryKey?: string;
    /**
     * The list of languages the navigation menu item has a translation for.
     */
    availableLanguages: Array<string>;
    /**
     * The list of fields that store the structured content's information.
     */
    dataDefinitionFields: Array<DataDefinitionFieldReadable>;
    dataLayout: DataLayoutReadable;
    /**
     * The Document Metadata Set's creation date.
     */
    readonly dateCreated?: string;
    /**
     * The last time a field of the Document Metadata Set changed.
     */
    readonly dateModified?: string;
    /**
     * The Document Metadata Set's description.
     */
    description?: string;
    /**
     * The localized Document Metadata Set descriptions.
     */
    description_i18n?: {
        [key: string]: string;
    };
    /**
     * The Document Metadata Set's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The ID of the Document Metadata Set.
     */
    readonly id?: number;
    /**
     * The Document Metadata Set's name.
     */
    name: string;
    /**
     * the localized Document Metadata Set's names.
     */
    name_i18n?: {
        [key: string]: string;
    };
    /**
     * The ID of the site to which this Document Metadata Set is scoped.
     */
    readonly siteId?: number;
    readonly 'x-class-name'?: string;
};

/**
 * Represents a Document Metadata Set.
 */
export type DocumentMetadataSetWritable = {
    /**
     * The list of languages the navigation menu item has a translation for.
     */
    availableLanguages: Array<string>;
    /**
     * The list of fields that store the structured content's information.
     */
    dataDefinitionFields: Array<DataDefinitionFieldWritable>;
    dataLayout: DataLayoutWritable;
    /**
     * The Document Metadata Set's description.
     */
    description?: string;
    /**
     * The localized Document Metadata Set descriptions.
     */
    description_i18n?: {
        [key: string]: string;
    };
    /**
     * The Document Metadata Set's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The Document Metadata Set's name.
     */
    name: string;
    /**
     * the localized Document Metadata Set's names.
     */
    name_i18n?: {
        [key: string]: string;
    };
};

export type PageDocumentMetadataSetReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<DocumentMetadataSetReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageDocumentMetadataSetWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<DocumentMetadataSetWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

/**
 * An array of images in several resolutions and sizes, created by the Adaptive Media framework.
 */
export type AdaptedImageReadable = {
    /**
     * The image's relative URL.
     */
    contentUrl?: string;
    /**
     * Optional field with the content of the image in Base64, can be embedded with nestedFields.
     */
    readonly contentValue?: string;
    /**
     * The image's height in pixels.
     */
    height?: number;
    /**
     * The name of the image's Adaptive Media image resolution.
     */
    resolutionName?: string;
    /**
     * The image's size in bytes.
     */
    sizeInBytes?: number;
    /**
     * The image's width in pixels.
     */
    width?: number;
    readonly 'x-class-name'?: string;
};

/**
 * An array of images in several resolutions and sizes, created by the Adaptive Media framework.
 */
export type AdaptedImageWritable = {
    /**
     * The image's relative URL.
     */
    contentUrl?: string;
    /**
     * The image's height in pixels.
     */
    height?: number;
    /**
     * The name of the image's Adaptive Media image resolution.
     */
    resolutionName?: string;
    /**
     * The image's size in bytes.
     */
    sizeInBytes?: number;
    /**
     * The image's width in pixels.
     */
    width?: number;
};

/**
 * A content document element that stores an image file.
 */
export type ContentDocumentReadable = {
    /**
     * Block of actions allowed by the user making the request.
     */
    readonly actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    /**
     * The type of content.
     */
    readonly contentType?: string;
    /**
     * The document's relative URL.
     */
    readonly contentUrl?: string;
    /**
     * optional field with the content of the document in Base64, can be embedded with nestedFields
     */
    readonly contentValue?: string;
    /**
     * The document's description.
     */
    description?: string;
    /**
     * The document's content type (e.g., `application/pdf`, etc.).
     */
    readonly encodingFormat?: string;
    /**
     * The document's file extension.
     */
    readonly fileExtension?: string;
    /**
     * The document's ID.
     */
    id?: number;
    /**
     * The document's file size in bytes.
     */
    readonly sizeInBytes?: number;
    /**
     * The document's title.
     */
    title?: string;
    readonly 'x-class-name'?: string;
};

/**
 * A content document element that stores an image file.
 */
export type ContentDocumentWritable = {
    /**
     * The document's description.
     */
    description?: string;
    /**
     * The document's ID.
     */
    id?: number;
    /**
     * The document's title.
     */
    title?: string;
};

/**
 * The list of fields that store the structured content's information.
 */
export type ContentFieldReadable = {
    contentFieldValue?: ContentFieldValueReadable;
    /**
     * The localized field's values.
     */
    contentFieldValue_i18n?: {
        [key: string]: ContentFieldValueReadable;
    };
    /**
     * The field type (e.g., image, text, etc.).
     */
    readonly dataType?: string;
    /**
     * The field's control type (e.g., text, text area, etc.).
     */
    readonly inputControl?: string;
    /**
     * The field's label.
     */
    readonly label?: string;
    /**
     * The localized field's labels.
     */
    readonly label_i18n?: {
        [key: string]: string;
    };
    /**
     * The field's internal name. This is valid for comparisons and unique in the structured content.
     */
    name?: string;
    /**
     * A list of child content fields that depend on this resource.
     */
    nestedContentFields?: Array<ContentFieldReadable>;
    /**
     * A flag that indicates whether this field can be rendered multiple times.
     */
    readonly repeatable?: boolean;
    readonly 'x-class-name'?: string;
};

/**
 * The list of fields that store the structured content's information.
 */
export type ContentFieldWritable = {
    contentFieldValue?: ContentFieldValueWritable;
    /**
     * The localized field's values.
     */
    contentFieldValue_i18n?: {
        [key: string]: ContentFieldValueWritable;
    };
    /**
     * The field's internal name. This is valid for comparisons and unique in the structured content.
     */
    name?: string;
    /**
     * A list of child content fields that depend on this resource.
     */
    nestedContentFields?: Array<ContentFieldWritable>;
};

/**
 * The localized field's values.
 */
export type ContentFieldValueReadable = {
    /**
     * The field's content for simple types.
     */
    data?: string;
    document?: ContentDocumentReadable;
    geo?: GeoReadable;
    image?: ContentDocumentReadable;
    /**
     * A link to a page on the server.
     */
    link?: string;
    structuredContentLink?: StructuredContentLinkReadable;
    /**
     * The field's visible value
     */
    value?: string;
    readonly 'x-class-name'?: string;
};

/**
 * The localized field's values.
 */
export type ContentFieldValueWritable = {
    /**
     * The field's content for simple types.
     */
    data?: string;
    document?: ContentDocumentWritable;
    geo?: GeoWritable;
    image?: ContentDocumentWritable;
    /**
     * A link to a page on the server.
     */
    link?: string;
    structuredContentLink?: StructuredContentLinkWritable;
    /**
     * The field's visible value
     */
    value?: string;
};

export type DocumentReadable = {
    /**
     * Block of actions allowed by the user making the request.
     */
    readonly actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    /**
     * An array of images in several resolutions and sizes, created by the Adaptive Media framework.
     */
    readonly adaptedImages?: Array<AdaptedImageReadable>;
    aggregateRating?: AggregateRating;
    /**
     * The key of the asset library to which the document is scoped.
     */
    readonly assetLibraryKey?: string;
    /**
     * The document's relative URL.
     */
    readonly contentUrl?: string;
    /**
     * The optional field with the content of the document in Base64, can be embedded with nestedFields.
     */
    readonly contentValue?: string;
    creator?: CreatorReadable;
    /**
     * A list of the custom fields associated with the document.
     */
    customFields?: Array<CustomFieldReadable>;
    /**
     * The document's creation date.
     */
    readonly dateCreated?: string;
    /**
     * The expiration date of the document.
     */
    dateExpired?: string;
    /**
     * The last time a field of the document changed.
     */
    readonly dateModified?: string;
    /**
     * The document's most recent publication date.
     */
    datePublished?: string;
    /**
     * The document's description.
     */
    description?: string;
    /**
     * The external reference code of the `DocumentFolder` where this document is stored.
     */
    documentFolderExternalReferenceCode?: string;
    /**
     * The ID of the `DocumentFolder` where this document is stored.
     */
    documentFolderId?: number;
    documentType?: DocumentTypeReadable;
    /**
     * The document's content type (e.g., `application/pdf`, etc.).
     */
    readonly encodingFormat?: string;
    /**
     * The document's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The document's file extension.
     */
    readonly fileExtension?: string;
    /**
     * The document's file name.
     */
    fileName?: string;
    /**
     * The document's file relative URL.
     */
    friendlyUrlPath?: string;
    /**
     * The document's ID.
     */
    readonly id?: number;
    /**
     * A list of keywords describing the document.
     */
    keywords?: Array<string>;
    /**
     * The number of comments on the document.
     */
    readonly numberOfComments?: number;
    /**
     * A list of related contents to this document.
     */
    readonly relatedContents?: Array<RelatedContentReadable>;
    /**
     * A list of rendered documents, which results from using a display page to process the document and return HTML.
     */
    readonly renderedContents?: Array<RenderedContentReadable>;
    /**
     * The ID of the site to which this document is scoped.
     */
    readonly siteId?: number;
    /**
     * The document's size in bytes.
     */
    readonly sizeInBytes?: number;
    /**
     * The categories associated with this document.
     */
    readonly taxonomyCategoryBriefs?: Array<TaxonomyCategoryBriefReadable>;
    /**
     * The document's main title/name.
     */
    title?: string;
    viewableBy?: 'Anyone' | 'Members' | 'Owner';
    readonly 'x-class-name'?: string;
};

export type DocumentWritable = {
    creator?: CreatorWritable;
    /**
     * A list of the custom fields associated with the document.
     */
    customFields?: Array<CustomFieldWritable>;
    /**
     * The expiration date of the document.
     */
    dateExpired?: string;
    /**
     * The document's most recent publication date.
     */
    datePublished?: string;
    /**
     * The document's description.
     */
    description?: string;
    /**
     * The external reference code of the `DocumentFolder` where this document is stored.
     */
    documentFolderExternalReferenceCode?: string;
    /**
     * The ID of the `DocumentFolder` where this document is stored.
     */
    documentFolderId?: number;
    documentType?: DocumentTypeWritable;
    /**
     * The document's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The document's file name.
     */
    fileName?: string;
    /**
     * The document's file relative URL.
     */
    friendlyUrlPath?: string;
    /**
     * A list of keywords describing the document.
     */
    keywords?: Array<string>;
    taxonomyCategoryIds?: Array<number>;
    /**
     * The document's main title/name.
     */
    title?: string;
    viewableBy?: 'Anyone' | 'Members' | 'Owner';
};

export type DocumentTypeReadable = {
    /**
     * The list of languages the document type has a translation for.
     */
    readonly availableLanguages?: Array<string>;
    /**
     * The list of content fields the document type has.
     */
    contentFields?: Array<ContentFieldReadable>;
    /**
     * The document type's description.
     */
    description?: string;
    /**
     * The localized document type's description.
     */
    readonly description_i18n?: {
        [key: string]: string;
    };
    /**
     * The document type's name.
     */
    name?: string;
    /**
     * The localized document type's name.
     */
    readonly name_i18n?: {
        [key: string]: string;
    };
    readonly 'x-class-name'?: string;
};

export type DocumentTypeWritable = {
    /**
     * The list of content fields the document type has.
     */
    contentFields?: Array<ContentFieldWritable>;
    /**
     * The document type's description.
     */
    description?: string;
    /**
     * The document type's name.
     */
    name?: string;
};

/**
 * Represents content that has fields and is rendered by a template backed by a `ContentStructure`. This is modeled internally as a `JournalArticle`.
 */
export type StructuredContentReadable = {
    /**
     * Block of actions allowed by the user making the request.
     */
    readonly actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    aggregateRating?: AggregateRating;
    /**
     * The key of the asset library to which the structure content is scoped.
     */
    readonly assetLibraryKey?: string;
    /**
     * The list of languages the structured content has a translation for.
     */
    readonly availableLanguages?: Array<string>;
    /**
     * The list of fields that store the structured content's information.
     */
    contentFields?: Array<ContentFieldReadable>;
    /**
     * The ID of the `ContentStructure`.
     */
    contentStructureId: number;
    creator?: CreatorReadable;
    /**
     * A list of the custom fields associated with the structured content.
     */
    customFields?: Array<CustomFieldReadable>;
    /**
     * The structured content's creation date.
     */
    readonly dateCreated?: string;
    /**
     * The expiration date of the structured content.
     */
    dateExpired?: string;
    /**
     * The last time any field of the structured content was changed.
     */
    readonly dateModified?: string;
    /**
     * The structured content's most recent publication date.
     */
    datePublished?: string;
    /**
     * The structured content's description.
     */
    description?: string;
    /**
     * The localized structured content's descriptions.
     */
    description_i18n?: {
        [key: string]: string;
    };
    /**
     * The structured content's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * A relative URL to the structured content's rendered content.
     */
    friendlyUrlPath?: string;
    /**
     * The localized relative URLs to the structured content's rendered content.
     */
    friendlyUrlPath_i18n?: {
        [key: string]: string;
    };
    /**
     * The structured content's ID.
     */
    readonly id?: number;
    /**
     * An identifier, independent of the database, that can be used to reference the structured content.
     */
    readonly key?: string;
    /**
     * A list of keywords describing the structured content.
     */
    keywords?: Array<string>;
    /**
     * Whether the web content article is not set to auto expire
     */
    neverExpire?: boolean;
    /**
     * The number of comments the structured content has received.
     */
    readonly numberOfComments?: number;
    /**
     * The structured content's priority.
     */
    priority?: number;
    /**
     * A list of related contents to this structured content.
     */
    relatedContents?: Array<RelatedContentReadable>;
    /**
     * A list of rendered content, which results from using a template to process the content and return HTML.
     */
    readonly renderedContents?: Array<RenderedContentReadable>;
    /**
     * The ID of the site to which this structured content is scoped.
     */
    readonly siteId?: number;
    /**
     * The ID of the folder where structured content is stored.
     */
    structuredContentFolderId?: number;
    /**
     * A flag that indicates whether the user making the requests is subscribed to this structured content.
     */
    readonly subscribed?: boolean;
    /**
     * The categories associated with this structured content.
     */
    readonly taxonomyCategoryBriefs?: Array<TaxonomyCategoryBriefReadable>;
    /**
     * The structured content's main title.
     */
    title: string;
    /**
     * The localized structured content's main titles.
     */
    title_i18n?: {
        [key: string]: string;
    };
    /**
     * A valid external identifier to reference this structured content.
     */
    readonly uuid?: string;
    viewableBy?: 'Anyone' | 'Members' | 'Owner';
    readonly 'x-class-name'?: string;
};

/**
 * Represents content that has fields and is rendered by a template backed by a `ContentStructure`. This is modeled internally as a `JournalArticle`.
 */
export type StructuredContentWritable = {
    /**
     * The list of fields that store the structured content's information.
     */
    contentFields?: Array<ContentFieldWritable>;
    /**
     * The ID of the `ContentStructure`.
     */
    contentStructureId: number;
    creator?: CreatorWritable;
    /**
     * A list of the custom fields associated with the structured content.
     */
    customFields?: Array<CustomFieldWritable>;
    /**
     * The expiration date of the structured content.
     */
    dateExpired?: string;
    /**
     * The structured content's most recent publication date.
     */
    datePublished?: string;
    /**
     * The structured content's description.
     */
    description?: string;
    /**
     * The localized structured content's descriptions.
     */
    description_i18n?: {
        [key: string]: string;
    };
    /**
     * The structured content's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * A relative URL to the structured content's rendered content.
     */
    friendlyUrlPath?: string;
    /**
     * The localized relative URLs to the structured content's rendered content.
     */
    friendlyUrlPath_i18n?: {
        [key: string]: string;
    };
    /**
     * A list of keywords describing the structured content.
     */
    keywords?: Array<string>;
    /**
     * Whether the web content article is not set to auto expire
     */
    neverExpire?: boolean;
    permissions?: Array<Permission>;
    /**
     * The structured content's priority.
     */
    priority?: number;
    /**
     * A list of related contents to this structured content.
     */
    relatedContents?: Array<RelatedContentWritable>;
    /**
     * The ID of the folder where structured content is stored.
     */
    structuredContentFolderId?: number;
    taxonomyCategoryIds?: Array<number>;
    /**
     * The structured content's main title.
     */
    title: string;
    /**
     * The localized structured content's main titles.
     */
    title_i18n?: {
        [key: string]: string;
    };
    viewableBy?: 'Anyone' | 'Members' | 'Owner';
};

/**
 * A link to structured content on the server.
 */
export type StructuredContentLinkReadable = {
    /**
     * The type of content.
     */
    readonly contentType?: string;
    embeddedStructuredContent?: StructuredContentReadable;
    /**
     * The resource's ID.
     */
    id?: number;
    /**
     * The resource's title.
     */
    title?: string;
    readonly 'x-class-name'?: string;
};

/**
 * A link to structured content on the server.
 */
export type StructuredContentLinkWritable = {
    embeddedStructuredContent?: StructuredContentWritable;
    /**
     * The resource's ID.
     */
    id?: number;
    /**
     * The resource's title.
     */
    title?: string;
};

export type PageDocumentReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<DocumentReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageDocumentWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<DocumentWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PatchDocumentRequestBodyReadable = {
    document?: DocumentReadable;
    /**
     * File
     */
    file?: Blob | File;
};

export type PatchDocumentRequestBodyWritable = {
    document?: DocumentWritable;
    /**
     * File
     */
    file?: Blob | File;
};

export type PostAssetLibraryDocumentRequestBodyReadable = {
    document?: DocumentReadable;
    /**
     * File
     */
    file?: Blob | File;
};

export type PostAssetLibraryDocumentRequestBodyWritable = {
    document?: DocumentWritable;
    /**
     * File
     */
    file?: Blob | File;
};

export type PostDocumentFolderDocumentRequestBodyReadable = {
    document?: DocumentReadable;
    /**
     * File
     */
    file?: Blob | File;
};

export type PostDocumentFolderDocumentRequestBodyWritable = {
    document?: DocumentWritable;
    /**
     * File
     */
    file?: Blob | File;
};

export type PostSiteDocumentRequestBodyReadable = {
    document?: DocumentReadable;
    /**
     * File
     */
    file?: Blob | File;
};

export type PostSiteDocumentRequestBodyWritable = {
    document?: DocumentWritable;
    /**
     * File
     */
    file?: Blob | File;
};

export type PutAssetLibraryDocumentByExternalReferenceCodeRequestBodyReadable = {
    document?: DocumentReadable;
    /**
     * File
     */
    file?: Blob | File;
};

export type PutAssetLibraryDocumentByExternalReferenceCodeRequestBodyWritable = {
    document?: DocumentWritable;
    /**
     * File
     */
    file?: Blob | File;
};

export type PutDocumentRequestBodyReadable = {
    document?: DocumentReadable;
    /**
     * File
     */
    file?: Blob | File;
};

export type PutDocumentRequestBodyWritable = {
    document?: DocumentWritable;
    /**
     * File
     */
    file?: Blob | File;
};

export type PutSiteDocumentByExternalReferenceCodeRequestBodyReadable = {
    document?: DocumentReadable;
    /**
     * File
     */
    file?: Blob | File;
};

export type PutSiteDocumentByExternalReferenceCodeRequestBodyWritable = {
    document?: DocumentWritable;
    /**
     * File
     */
    file?: Blob | File;
};

export type DocumentShortcutReadable = {
    /**
     * Block of actions allowed by the user making the request.
     */
    readonly actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    /**
     * The key of the asset library to which the document shortcut is scoped.
     */
    readonly assetLibraryKey?: string;
    /**
     * The document shortcut's creation date.
     */
    readonly dateCreated?: string;
    /**
     * The last time a field of the document shortcut changed.
     */
    readonly dateModified?: string;
    /**
     * The document shortcut's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The document shortcut's folder ID.
     */
    folderId?: number;
    /**
     * The document shortcut's ID.
     */
    readonly id?: number;
    /**
     * The ID of the site to which this document shortcut is scoped.
     */
    readonly siteId?: number;
    /**
     * The ID of the document to which this shortcut is scoped.
     */
    targetDocumentId?: number;
    /**
     * The title of the document to which this shortcut is scoped.
     */
    readonly title?: string;
    viewableBy?: 'Anyone' | 'Members' | 'Owner';
    readonly 'x-class-name'?: string;
};

export type DocumentShortcutWritable = {
    /**
     * The document shortcut's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The document shortcut's folder ID.
     */
    folderId?: number;
    /**
     * The ID of the document to which this shortcut is scoped.
     */
    targetDocumentId?: number;
    viewableBy?: 'Anyone' | 'Members' | 'Owner';
};

export type PageDocumentShortcutReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<DocumentShortcutReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageDocumentShortcutWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<DocumentShortcutWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

/**
 * Represents a Knowledge Base article (`KBArticle`), the main entity in the Knowledge Base API.
 */
export type KnowledgeBaseArticleReadable = {
    /**
     * Block of actions allowed by the user making the request.
     */
    readonly actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    aggregateRating?: AggregateRating;
    /**
     * The article's main content.
     */
    articleBody: string;
    creator?: CreatorReadable;
    /**
     * A list of the custom fields associated with the article.
     */
    customFields?: Array<CustomFieldReadable>;
    /**
     * The date the article was created.
     */
    readonly dateCreated?: string;
    /**
     * The last time the article's content or metadata changed.
     */
    readonly dateModified?: string;
    /**
     * The article's scheduled publication date.
     */
    datePublished?: string;
    /**
     * The article's description.
     */
    description?: string;
    /**
     * The article's media type (e.g., HTML, BBCode, etc.).
     */
    readonly encodingFormat?: string;
    /**
     * The article's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The article's relative URL.
     */
    friendlyUrlPath?: string;
    /**
     * The article's ID.
     */
    readonly id?: number;
    /**
     * A list of keywords describing the article.
     */
    keywords?: Array<string>;
    /**
     * The article's number attachments.
     */
    readonly numberOfAttachments?: number;
    /**
     * The number of this article's child articles.
     */
    readonly numberOfKnowledgeBaseArticles?: number;
    /**
     * The ID of the article's parent, if it exists.
     */
    parentKnowledgeBaseArticleId?: number;
    parentKnowledgeBaseFolder?: ParentKnowledgeBaseFolderReadable;
    /**
     * A list of related contents to this article.
     */
    readonly relatedContents?: Array<RelatedContentReadable>;
    /**
     * The ID of the site to which this article is scoped.
     */
    readonly siteId?: number;
    /**
     * A flag that indicates whether the user making the requests is subscribed to this article.
     */
    readonly subscribed?: boolean;
    /**
     * The categories associated with this article.
     */
    readonly taxonomyCategoryBriefs?: Array<TaxonomyCategoryBriefReadable>;
    /**
     * The article's main title.
     */
    title: string;
    viewableBy?: 'Anyone' | 'Members' | 'Owner';
    readonly 'x-class-name'?: string;
};

/**
 * Represents a Knowledge Base article (`KBArticle`), the main entity in the Knowledge Base API.
 */
export type KnowledgeBaseArticleWritable = {
    /**
     * The article's main content.
     */
    articleBody: string;
    creator?: CreatorWritable;
    /**
     * A list of the custom fields associated with the article.
     */
    customFields?: Array<CustomFieldWritable>;
    /**
     * The article's scheduled publication date.
     */
    datePublished?: string;
    /**
     * The article's description.
     */
    description?: string;
    /**
     * The article's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The article's relative URL.
     */
    friendlyUrlPath?: string;
    /**
     * A list of keywords describing the article.
     */
    keywords?: Array<string>;
    /**
     * The ID of the article's parent, if it exists.
     */
    parentKnowledgeBaseArticleId?: number;
    parentKnowledgeBaseFolder?: ParentKnowledgeBaseFolderWritable;
    parentKnowledgeBaseFolderId?: number;
    taxonomyCategoryIds?: Array<number>;
    /**
     * The article's main title.
     */
    title: string;
    viewableBy?: 'Anyone' | 'Members' | 'Owner';
};

/**
 * The folder's parent Knowledge Base folder, if it exists.
 */
export type ParentKnowledgeBaseFolderReadable = {
    /**
     * The parent folder's ID.
     */
    folderId?: number;
    /**
     * The parent folder's name.
     */
    folderName?: string;
    readonly 'x-class-name'?: string;
};

/**
 * The folder's parent Knowledge Base folder, if it exists.
 */
export type ParentKnowledgeBaseFolderWritable = {
    /**
     * The parent folder's ID.
     */
    folderId?: number;
    /**
     * The parent folder's name.
     */
    folderName?: string;
};

export type PageKnowledgeBaseArticleReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<KnowledgeBaseArticleReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageKnowledgeBaseArticleWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<KnowledgeBaseArticleWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type KnowledgeBaseAttachmentReadable = {
    /**
     * The file's relative URL.
     */
    readonly contentUrl?: string;
    /**
     * optional field with the content of the document in Base64, can be embedded with nestedFields
     */
    readonly contentValue?: string;
    /**
     * The file's media type (e.g., application/pdf, etc.).
     */
    readonly encodingFormat?: string;
    /**
     * The attachment's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The file's extension.
     */
    readonly fileExtension?: string;
    /**
     * The file's ID.
     */
    readonly id?: number;
    /**
     * The file's size in bytes.
     */
    readonly sizeInBytes?: number;
    /**
     * The file's main title.
     */
    title?: string;
    readonly 'x-class-name'?: string;
};

export type KnowledgeBaseAttachmentWritable = {
    /**
     * The attachment's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The file's main title.
     */
    title?: string;
};

export type PageKnowledgeBaseAttachmentReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<KnowledgeBaseAttachmentReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageKnowledgeBaseAttachmentWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<KnowledgeBaseAttachmentWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PostKnowledgeBaseArticleKnowledgeBaseAttachmentRequestBodyReadable = {
    /**
     * File
     */
    file?: Blob | File;
    knowledgeBaseAttachment?: KnowledgeBaseAttachmentReadable;
};

export type PostKnowledgeBaseArticleKnowledgeBaseAttachmentRequestBodyWritable = {
    /**
     * File
     */
    file?: Blob | File;
    knowledgeBaseAttachment?: KnowledgeBaseAttachmentWritable;
};

/**
 * Represents a folder for organizing Knowledge Base articles.
 */
export type KnowledgeBaseFolderReadable = {
    /**
     * Block of actions allowed by the user making the request.
     */
    readonly actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    creator?: CreatorReadable;
    /**
     * A list of the custom fields associated with the folder.
     */
    customFields?: Array<CustomFieldReadable>;
    /**
     * The date the folder was created.
     */
    readonly dateCreated?: string;
    /**
     * The last time the folder was modified.
     */
    readonly dateModified?: string;
    /**
     * The folder's description.
     */
    description?: string;
    /**
     * The folder's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The folder's ID.
     */
    readonly id?: number;
    /**
     * The folder's main title/name.
     */
    name: string;
    /**
     * The number of Knowledge Base articles in this folder.
     */
    readonly numberOfKnowledgeBaseArticles?: number;
    /**
     * The number of Knowledge Base folders in this folder.
     */
    readonly numberOfKnowledgeBaseFolders?: number;
    parentKnowledgeBaseFolder?: ParentKnowledgeBaseFolderReadable;
    /**
     * The ID of the site to which this folder is scoped.
     */
    readonly siteId?: number;
    viewableBy?: 'Anyone' | 'Members' | 'Owner';
    readonly 'x-class-name'?: string;
};

/**
 * Represents a folder for organizing Knowledge Base articles.
 */
export type KnowledgeBaseFolderWritable = {
    creator?: CreatorWritable;
    /**
     * A list of the custom fields associated with the folder.
     */
    customFields?: Array<CustomFieldWritable>;
    /**
     * The folder's description.
     */
    description?: string;
    /**
     * The folder's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The folder's main title/name.
     */
    name: string;
    parentKnowledgeBaseFolder?: ParentKnowledgeBaseFolderWritable;
    parentKnowledgeBaseFolderId?: number;
    viewableBy?: 'Anyone' | 'Members' | 'Owner';
};

export type PageKnowledgeBaseFolderReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<KnowledgeBaseFolderReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageKnowledgeBaseFolderWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<KnowledgeBaseFolderWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type LanguageReadable = {
    /**
     * The language's contry name.
     */
    countryName?: string;
    /**
     * The localized language's country name values.
     */
    countryName_i18n?: {
        [key: string]: string;
    };
    /**
     * The language's ID.
     */
    id?: string;
    /**
     * A flag that indicates whether the language has benn marked as default language.
     */
    markedAsDefault?: boolean;
    /**
     * The language's name.
     */
    name?: string;
    /**
     * The localized language's name values.
     */
    name_i18n?: {
        [key: string]: string;
    };
    readonly 'x-class-name'?: string;
};

export type LanguageWritable = {
    /**
     * The language's contry name.
     */
    countryName?: string;
    /**
     * The localized language's country name values.
     */
    countryName_i18n?: {
        [key: string]: string;
    };
    /**
     * The language's ID.
     */
    id?: string;
    /**
     * A flag that indicates whether the language has benn marked as default language.
     */
    markedAsDefault?: boolean;
    /**
     * The language's name.
     */
    name?: string;
    /**
     * The localized language's name values.
     */
    name_i18n?: {
        [key: string]: string;
    };
};

export type PageLanguageReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<LanguageReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageLanguageWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<LanguageWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type MessageBoardAttachmentReadable = {
    /**
     * Block of actions allowed by the user making the request.
     */
    readonly actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    /**
     * The file's relative URL.
     */
    readonly contentUrl?: string;
    /**
     * optional field with the content of the document in Base64, can be embedded with nestedFields
     */
    readonly contentValue?: string;
    /**
     * The file's media format (e.g., application/pdf, etc.).
     */
    readonly encodingFormat?: string;
    /**
     * The message board's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The file's extension.
     */
    readonly fileExtension?: string;
    /**
     * The file's ID.
     */
    readonly id?: number;
    /**
     * The file's size in bytes.
     */
    readonly sizeInBytes?: number;
    /**
     * The file's title.
     */
    title?: string;
    readonly 'x-class-name'?: string;
};

export type MessageBoardAttachmentWritable = {
    /**
     * The message board's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The file's title.
     */
    title?: string;
};

export type PageMessageBoardAttachmentReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<MessageBoardAttachmentReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageMessageBoardAttachmentWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<MessageBoardAttachmentWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PostMessageBoardMessageMessageBoardAttachmentRequestBodyReadable = {
    MessageBoardAttachment?: MessageBoardAttachmentReadable;
    /**
     * File
     */
    file?: Blob | File;
};

export type PostMessageBoardMessageMessageBoardAttachmentRequestBodyWritable = {
    MessageBoardAttachment?: MessageBoardAttachmentWritable;
    /**
     * File
     */
    file?: Blob | File;
};

export type PostMessageBoardThreadMessageBoardAttachmentRequestBodyReadable = {
    /**
     * File
     */
    file?: Blob | File;
    messageBoardAttachment?: MessageBoardAttachmentReadable;
};

export type PostMessageBoardThreadMessageBoardAttachmentRequestBodyWritable = {
    /**
     * File
     */
    file?: Blob | File;
    messageBoardAttachment?: MessageBoardAttachmentWritable;
};

/**
 * The thread's creator statistics (rank, join date, number of posts, ...)
 */
export type CreatorStatistics = {
    /**
     * Join date of the author.
     */
    readonly joinDate?: string;
    /**
     * Last post created by the author.
     */
    readonly lastPostDate?: string;
    /**
     * Number of posts publicated by the author.
     */
    readonly postsNumber?: number;
    /**
     * The rank of the author.
     */
    readonly rank?: string;
    readonly 'x-class-name'?: string;
};

export type MessageBoardMessageReadable = {
    /**
     * Block of actions allowed by the user making the request.
     */
    readonly actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    aggregateRating?: AggregateRating;
    /**
     * A flag that indicates whether the message's author is anonymous.
     */
    anonymous?: boolean;
    /**
     * The message's main content.
     */
    articleBody?: string;
    creator?: CreatorReadable;
    creatorStatistics?: CreatorStatistics;
    /**
     * A list of the custom fields associated with the blog post.
     */
    customFields?: Array<CustomFieldReadable>;
    /**
     * The date the message was created.
     */
    readonly dateCreated?: string;
    /**
     * The last time the content or metadata of the message was changed.
     */
    readonly dateModified?: string;
    /**
     * The message's media format (e.g., HTML, BBCode, etc.).
     */
    encodingFormat?: string;
    /**
     * The message's external reference code.
     */
    externalReferenceCode?: string;
    friendlyUrlPath?: string;
    hasCompanyMx?: boolean;
    /**
     * The message's main title.
     */
    headline?: string;
    /**
     * The message's ID.
     */
    readonly id?: number;
    /**
     * A list of keywords describing the message.
     */
    keywords?: Array<string>;
    /**
     * The ID of the Message Board Section to which this message is scoped.
     */
    messageBoardSectionId?: number;
    /**
     * The ID of the Message Board Thread to which this message is scoped.
     */
    readonly messageBoardThreadId?: number;
    modified?: boolean;
    /**
     * The number of the message's attachments.
     */
    readonly numberOfMessageBoardAttachments?: number;
    /**
     * The number of the message's child messages.
     */
    readonly numberOfMessageBoardMessages?: number;
    /**
     * The ID of the message's parent, if it exists.
     */
    parentMessageBoardMessageId?: number;
    /**
     * A list of related contents to this message.
     */
    readonly relatedContents?: Array<RelatedContentReadable>;
    /**
     * A flag that indicates whether the message is answering a question.
     */
    showAsAnswer?: boolean;
    /**
     * The ID of the site to which this message is scoped.
     */
    readonly siteId?: number;
    /**
     * The message's status.
     */
    readonly status?: string;
    /**
     * A flag that indicates whether the user making the requests is subscribed to this message.
     */
    readonly subscribed?: boolean;
    viewableBy?: 'Anyone' | 'Members' | 'Owner';
    readonly 'x-class-name'?: string;
};

export type MessageBoardMessageWritable = {
    /**
     * A flag that indicates whether the message's author is anonymous.
     */
    anonymous?: boolean;
    /**
     * The message's main content.
     */
    articleBody?: string;
    creator?: CreatorWritable;
    /**
     * A list of the custom fields associated with the blog post.
     */
    customFields?: Array<CustomFieldWritable>;
    /**
     * The message's media format (e.g., HTML, BBCode, etc.).
     */
    encodingFormat?: string;
    /**
     * The message's external reference code.
     */
    externalReferenceCode?: string;
    friendlyUrlPath?: string;
    hasCompanyMx?: boolean;
    /**
     * The message's main title.
     */
    headline?: string;
    /**
     * A list of keywords describing the message.
     */
    keywords?: Array<string>;
    /**
     * The ID of the Message Board Section to which this message is scoped.
     */
    messageBoardSectionId?: number;
    modified?: boolean;
    /**
     * The ID of the message's parent, if it exists.
     */
    parentMessageBoardMessageId?: number;
    /**
     * A flag that indicates whether the message is answering a question.
     */
    showAsAnswer?: boolean;
    viewableBy?: 'Anyone' | 'Members' | 'Owner';
};

export type PageMessageBoardMessageReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<MessageBoardMessageReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageMessageBoardMessageWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<MessageBoardMessageWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

/**
 * Represents a section/folder on a message board, used to organize messages.
 */
export type MessageBoardSectionReadable = {
    /**
     * Block of actions allowed by the user making the request.
     */
    readonly actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    creator?: CreatorReadable;
    /**
     * A list of the custom fields associated with the section.
     */
    customFields?: Array<CustomFieldReadable>;
    /**
     * The date the section was created.
     */
    readonly dateCreated?: string;
    /**
     * The last time the section was changed.
     */
    readonly dateModified?: string;
    /**
     * The section's description.
     */
    description?: string;
    friendlyUrlPath?: string;
    /**
     * The section's ID.
     */
    readonly id?: number;
    /**
     * The number of this section's child sections.
     */
    readonly numberOfMessageBoardSections?: number;
    /**
     * The number of message board threads in this section.
     */
    readonly numberOfMessageBoardThreads?: number;
    /**
     * The ID of the section parent's, if it exists.
     */
    parentMessageBoardSectionId?: number;
    /**
     * The ID of the site to which this section is scoped.
     */
    readonly siteId?: number;
    /**
     * A flag that indicates whether the user making the requests is subscribed to this section.
     */
    readonly subscribed?: boolean;
    /**
     * The section's main title.
     */
    title: string;
    viewableBy?: 'Anyone' | 'Members' | 'Owner';
    readonly 'x-class-name'?: string;
};

/**
 * Represents a section/folder on a message board, used to organize messages.
 */
export type MessageBoardSectionWritable = {
    creator?: CreatorWritable;
    /**
     * A list of the custom fields associated with the section.
     */
    customFields?: Array<CustomFieldWritable>;
    /**
     * The section's description.
     */
    description?: string;
    friendlyUrlPath?: string;
    /**
     * The ID of the section parent's, if it exists.
     */
    parentMessageBoardSectionId?: number;
    /**
     * The section's main title.
     */
    title: string;
    viewableBy?: 'Anyone' | 'Members' | 'Owner';
};

export type PageMessageBoardSectionReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<MessageBoardSectionReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageMessageBoardSectionWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<MessageBoardSectionWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

/**
 * Represents a discussion thread in a message board.
 */
export type MessageBoardThreadReadable = {
    /**
     * Block of actions allowed by the user making the request.
     */
    readonly actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    aggregateRating?: AggregateRating;
    /**
     * The thread's main body content (the message written as the thread's description).
     */
    articleBody?: string;
    creator?: CreatorReadable;
    creatorStatistics?: CreatorStatistics;
    /**
     * A list of the custom fields associated with the thread.
     */
    customFields?: Array<CustomFieldReadable>;
    /**
     * The date the thread was created.
     */
    readonly dateCreated?: string;
    /**
     * The last time any field of the thread changed.
     */
    readonly dateModified?: string;
    /**
     * The media format of the thread's content (e.g., HTML, BBCode, etc.).
     */
    encodingFormat?: string;
    friendlyUrlPath?: string;
    /**
     * A flag that indicates whether this thread has a message considered as valid
     */
    hasValidAnswer?: boolean;
    /**
     * The thread's main title.
     */
    headline: string;
    /**
     * The thread's ID.
     */
    readonly id?: number;
    /**
     * A list of keywords describing the thread.
     */
    keywords?: Array<string>;
    readonly lastPostDate?: string;
    /**
     * A flag that indicates whether this thread is locked.
     */
    readonly locked?: boolean;
    /**
     * The ID of the thread's message.
     */
    readonly messageBoardRootMessageId?: number;
    /**
     * The ID of the Message Board Section to which this message is scoped.
     */
    messageBoardSectionId?: number;
    /**
     * The number of the thread's attachments.
     */
    readonly numberOfMessageBoardAttachments?: number;
    /**
     * The number of the thread's messages.
     */
    readonly numberOfMessageBoardMessages?: number;
    /**
     * A list of related contents to this thread.
     */
    readonly relatedContents?: Array<RelatedContentReadable>;
    /**
     * A flag that indicates whether this thread has been seen.
     */
    seen?: boolean;
    /**
     * A flag that indicates whether this thread was posted as a question that can receive approved answers.
     */
    showAsQuestion?: boolean;
    /**
     * The ID of the site to which this thread is scoped.
     */
    readonly siteId?: number;
    /**
     * The thread's status.
     */
    readonly status?: string;
    /**
     * A flag that indicates whether the user making the requests is subscribed to this thread.
     */
    subscribed?: boolean;
    /**
     * The categories associated with this thread.
     */
    readonly taxonomyCategoryBriefs?: Array<TaxonomyCategoryBriefReadable>;
    /**
     * The thread's type.
     */
    threadType?: string;
    /**
     * The number of views of this thread.
     */
    readonly viewCount?: number;
    viewableBy?: 'Anyone' | 'Members' | 'Owner';
    readonly 'x-class-name'?: string;
};

/**
 * Represents a discussion thread in a message board.
 */
export type MessageBoardThreadWritable = {
    /**
     * The thread's main body content (the message written as the thread's description).
     */
    articleBody?: string;
    creator?: CreatorWritable;
    /**
     * A list of the custom fields associated with the thread.
     */
    customFields?: Array<CustomFieldWritable>;
    /**
     * The media format of the thread's content (e.g., HTML, BBCode, etc.).
     */
    encodingFormat?: string;
    friendlyUrlPath?: string;
    /**
     * A flag that indicates whether this thread has a message considered as valid
     */
    hasValidAnswer?: boolean;
    /**
     * The thread's main title.
     */
    headline: string;
    /**
     * A list of keywords describing the thread.
     */
    keywords?: Array<string>;
    /**
     * The ID of the Message Board Section to which this message is scoped.
     */
    messageBoardSectionId?: number;
    /**
     * A flag that indicates whether this thread has been seen.
     */
    seen?: boolean;
    /**
     * A flag that indicates whether this thread was posted as a question that can receive approved answers.
     */
    showAsQuestion?: boolean;
    /**
     * A flag that indicates whether the user making the requests is subscribed to this thread.
     */
    subscribed?: boolean;
    taxonomyCategoryIds?: Array<number>;
    /**
     * The thread's type.
     */
    threadType?: string;
    viewableBy?: 'Anyone' | 'Members' | 'Owner';
};

export type PageMessageBoardThreadReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<MessageBoardThreadReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageMessageBoardThreadWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<MessageBoardThreadWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type NavigationMenuReadable = {
    /**
     * Block of actions allowed by the user making the request.
     */
    readonly actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    creator?: CreatorReadable;
    /**
     * The navigation menu's creation date.
     */
    readonly dateCreated?: string;
    /**
     * The last time the navigation menu changed.
     */
    readonly dateModified?: string;
    /**
     * The navigation menu's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The navigation menu's ID.
     */
    readonly id?: number;
    /**
     * The navigation menu's name.
     */
    name?: string;
    /**
     * The list of navigation menu items this navigation menu has.
     */
    navigationMenuItems?: Array<NavigationMenuItemReadable>;
    permissions?: Array<Permission>;
    /**
     * The ID of the site to which this navigation menu is scoped.
     */
    readonly siteId?: number;
    readonly 'x-class-name'?: string;
    /**
     * The navigation menu's type (primary, secondary, social).
     */
    navigationType?: 'Primary' | 'Secondary' | 'Social';
};

export type NavigationMenuWritable = {
    creator?: CreatorWritable;
    /**
     * The navigation menu's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The navigation menu's name.
     */
    name?: string;
    /**
     * The list of navigation menu items this navigation menu has.
     */
    navigationMenuItems?: Array<NavigationMenuItemWritable>;
    permissions?: Array<Permission>;
    /**
     * The navigation menu's type (primary, secondary, social).
     */
    navigationType?: 'Primary' | 'Secondary' | 'Social';
};

/**
 * Represents a navigation menu item.
 */
export type NavigationMenuItemReadable = {
    /**
     * The list of languages the navigation menu item has a translation for.
     */
    readonly availableLanguages?: Array<string>;
    /**
     * The navigation menu item's content API REST URL.
     */
    contentURL?: string;
    creator?: CreatorReadable;
    /**
     * A list of the custom fields associated with the navigation menu item.
     */
    customFields?: Array<CustomFieldReadable>;
    /**
     * The navigation menu item's creation date.
     */
    readonly dateCreated?: string;
    /**
     * The last time the navigation menu item changed.
     */
    readonly dateModified?: string;
    /**
     * The navigation menu item's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The navigation menu item's ID.
     */
    id?: number;
    /**
     * The link to a page on the server.
     */
    link?: string;
    /**
     * The localized links to a page on the server.
     */
    link_i18n?: {
        [key: string]: string;
    };
    /**
     * The navigation menu item's name.
     */
    name?: string;
    /**
     * The localized navigation menu item's names.
     */
    name_i18n?: {
        [key: string]: string;
    };
    /**
     * The navigation menu items this navigation menu item has.
     */
    navigationMenuItems?: Array<NavigationMenuItemReadable>;
    /**
     * The ID of the navigation menu item's parent.
     */
    readonly parentNavigationMenuId?: number;
    /**
     * The navigation menu item's linked site page URL.
     */
    readonly sitePageURL?: string;
    /**
     * The navigation menu item's type.
     */
    type?: string;
    /**
     * The navigation menu item's type settings.
     */
    typeSettings: {
        [key: string]: string;
    };
    /**
     * The navigation menu item's linked URL.
     */
    url?: string;
    useCustomName?: boolean;
    readonly 'x-class-name'?: string;
};

/**
 * Represents a navigation menu item.
 */
export type NavigationMenuItemWritable = {
    /**
     * The navigation menu item's content API REST URL.
     */
    contentURL?: string;
    creator?: CreatorWritable;
    /**
     * A list of the custom fields associated with the navigation menu item.
     */
    customFields?: Array<CustomFieldWritable>;
    /**
     * The navigation menu item's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The navigation menu item's ID.
     */
    id?: number;
    /**
     * The link to a page on the server.
     */
    link?: string;
    /**
     * The localized links to a page on the server.
     */
    link_i18n?: {
        [key: string]: string;
    };
    /**
     * The navigation menu item's name.
     */
    name?: string;
    /**
     * The localized navigation menu item's names.
     */
    name_i18n?: {
        [key: string]: string;
    };
    /**
     * The navigation menu items this navigation menu item has.
     */
    navigationMenuItems?: Array<NavigationMenuItemWritable>;
    /**
     * The navigation menu item's type.
     */
    type?: string;
    /**
     * The navigation menu item's type settings.
     */
    typeSettings: {
        [key: string]: string;
    };
    /**
     * The navigation menu item's linked URL.
     */
    url?: string;
    useCustomName?: boolean;
};

export type PageNavigationMenuReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<NavigationMenuReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageNavigationMenuWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<NavigationMenuWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

/**
 * The Client Extension for the theme spritemap of a page
 */
export type ClientExtensionReadable = {
    clientExtensionConfig?: {
        [key: string]: string;
    };
    /**
     * The client extension's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The client extension's name.
     */
    readonly name?: string;
    readonly 'x-class-name'?: string;
};

/**
 * The Client Extension for the theme spritemap of a page
 */
export type ClientExtensionWritable = {
    clientExtensionConfig?: {
        [key: string]: string;
    };
    /**
     * The client extension's external reference code.
     */
    externalReferenceCode?: string;
};

/**
 * A list of custom metatags this page has.
 */
export type CustomMetaTagReadable = {
    /**
     * The custom metatag's key.
     */
    key?: string;
    /**
     * The custom metatag's value
     */
    value?: string;
    /**
     * The localized custom metatag's values.
     */
    value_i18n?: {
        [key: string]: string;
    };
    readonly 'x-class-name'?: string;
};

/**
 * A list of custom metatags this page has.
 */
export type CustomMetaTagWritable = {
    /**
     * The custom metatag's key.
     */
    key?: string;
    /**
     * The custom metatag's value
     */
    value?: string;
    /**
     * The localized custom metatag's values.
     */
    value_i18n?: {
        [key: string]: string;
    };
};

/**
 * Experience of the page that it's being retrieved.
 */
export type ExperienceReadable = {
    /**
     * the experience's key.
     */
    key?: string;
    /**
     * the experience's name.
     */
    name?: string;
    /**
     * the localized experience's names.
     */
    name_i18n?: {
        [key: string]: string;
    };
    /**
     * A list of segments the experience is used for.
     */
    segments?: Array<Segment>;
    readonly 'x-class-name'?: string;
};

/**
 * Experience of the page that it's being retrieved.
 */
export type ExperienceWritable = {
    /**
     * the experience's key.
     */
    key?: string;
    /**
     * the experience's name.
     */
    name?: string;
    /**
     * the localized experience's names.
     */
    name_i18n?: {
        [key: string]: string;
    };
};

/**
 * The page's master page.
 */
export type MasterPageReadable = {
    /**
     * The master page's key.
     */
    key?: string;
    /**
     * The master page's name.
     */
    name?: string;
    readonly 'x-class-name'?: string;
};

/**
 * The page's master page.
 */
export type MasterPageWritable = {
    /**
     * The master page's key.
     */
    key?: string;
    /**
     * The master page's name.
     */
    name?: string;
};

/**
 * The page's Open Graph settings.
 */
export type OpenGraphSettingsReadable = {
    /**
     * The Open Graph's description.
     */
    description?: string;
    /**
     * The localized Open Graph's descriptions.
     */
    description_i18n?: {
        [key: string]: string;
    };
    image?: ContentDocumentReadable;
    /**
     * The Open Graph's image alt.
     */
    imageAlt?: string;
    /**
     * The localized Open Graph's image alts.
     */
    imageAlt_i18n?: {
        [key: string]: string;
    };
    /**
     * The Open Graph's title.
     */
    title?: string;
    /**
     * The localized Open Graph's titles.
     */
    title_i18n?: {
        [key: string]: string;
    };
    readonly 'x-class-name'?: string;
};

/**
 * The page's Open Graph settings.
 */
export type OpenGraphSettingsWritable = {
    /**
     * The Open Graph's description.
     */
    description?: string;
    /**
     * The localized Open Graph's descriptions.
     */
    description_i18n?: {
        [key: string]: string;
    };
    image?: ContentDocumentWritable;
    /**
     * The Open Graph's image alt.
     */
    imageAlt?: string;
    /**
     * The localized Open Graph's image alts.
     */
    imageAlt_i18n?: {
        [key: string]: string;
    };
    /**
     * The Open Graph's title.
     */
    title?: string;
    /**
     * The localized Open Graph's titles.
     */
    title_i18n?: {
        [key: string]: string;
    };
};

export type OptionsReadable = {
    /**
     * The page rule condition's value.
     */
    value?: string;
    readonly 'x-class-name'?: string;
    /**
     * The page rule condition option's type.
     */
    type?: 'Equal' | 'NotEqual';
};

export type OptionsWritable = {
    /**
     * The page rule condition's value.
     */
    value?: string;
    /**
     * The page rule condition option's type.
     */
    type?: 'Equal' | 'NotEqual';
};

/**
 * Optional field with the structure of all the elements of the page. Can be embedded with nestedFields when retrieving the collection of site pages. When retrieving a single site page, it will automatically be included.
 */
export type PageDefinitionReadable = {
    pageElement?: PageElementReadable;
    /**
     * A list of the page rules this page has.
     */
    pageRules?: Array<PageRuleReadable>;
    settings?: SettingsReadable;
    /**
     * The version of the JSON generated by page definition.
     */
    version?: number;
    readonly 'x-class-name'?: string;
};

/**
 * Optional field with the structure of all the elements of the page. Can be embedded with nestedFields when retrieving the collection of site pages. When retrieving a single site page, it will automatically be included.
 */
export type PageDefinitionWritable = {
    pageElement?: PageElementWritable;
    /**
     * A list of the page rules this page has.
     */
    pageRules?: Array<PageRuleWritable>;
    settings?: SettingsWritable;
    /**
     * The version of the JSON generated by page definition.
     */
    version?: number;
};

/**
 * The page's page element.
 */
export type PageElementReadable = {
    /**
     * The page element's definition.
     */
    definition?: {
        [key: string]: unknown;
    };
    /**
     * The page element's ID.
     */
    id?: string;
    /**
     * A list of the page elements this page element has.
     */
    pageElements?: Array<PageElementReadable>;
    readonly 'x-class-name'?: string;
    /**
     * The page element's type (collection, collection item, column, drop zone, form, fragment, fragment drop zone, root, row, section or widget).
     */
    type?: 'Collection' | 'CollectionItem' | 'Column' | 'DropZone' | 'Form' | 'FormStep' | 'FormStepContainer' | 'Fragment' | 'FragmentDropZone' | 'Root' | 'Row' | 'Section' | 'Widget';
};

/**
 * The page's page element.
 */
export type PageElementWritable = {
    /**
     * The page element's definition.
     */
    definition?: {
        [key: string]: unknown;
    };
    /**
     * The page element's ID.
     */
    id?: string;
    /**
     * A list of the page elements this page element has.
     */
    pageElements?: Array<PageElementWritable>;
    /**
     * The page element's type (collection, collection item, column, drop zone, form, fragment, fragment drop zone, root, row, section or widget).
     */
    type?: 'Collection' | 'CollectionItem' | 'Column' | 'DropZone' | 'Form' | 'FormStep' | 'FormStepContainer' | 'Fragment' | 'FragmentDropZone' | 'Root' | 'Row' | 'Section' | 'Widget';
};

/**
 * A list of the page rules this page has.
 */
export type PageRuleReadable = {
    /**
     * The page rule ID.
     */
    id?: string;
    /**
     * The custom name of a Page rule.
     */
    name?: string;
    /**
     * A list of actions of a Page rule.
     */
    pageRuleActions?: Array<PageRuleActionReadable>;
    /**
     * A list of conditions of a Page rule.
     */
    pageRuleConditions?: Array<PageRuleConditionReadable>;
    readonly 'x-class-name'?: string;
    /**
     * The custom name of a Page rule.
     */
    conditionType?: 'All' | 'Any';
};

/**
 * A list of the page rules this page has.
 */
export type PageRuleWritable = {
    /**
     * The page rule ID.
     */
    id?: string;
    /**
     * The custom name of a Page rule.
     */
    name?: string;
    /**
     * A list of actions of a Page rule.
     */
    pageRuleActions?: Array<PageRuleActionWritable>;
    /**
     * A list of conditions of a Page rule.
     */
    pageRuleConditions?: Array<PageRuleConditionWritable>;
    /**
     * The custom name of a Page rule.
     */
    conditionType?: 'All' | 'Any';
};

/**
 * A list of actions of a Page rule.
 */
export type PageRuleActionReadable = {
    /**
     * The page rule action's ID.
     */
    id?: string;
    /**
     * The page rule condition's item ID.
     */
    itemId?: string;
    /**
     * The page rule action's type.
     */
    type?: string;
    readonly 'x-class-name'?: string;
};

/**
 * A list of actions of a Page rule.
 */
export type PageRuleActionWritable = {
    /**
     * The page rule action's ID.
     */
    id?: string;
    /**
     * The page rule condition's item ID.
     */
    itemId?: string;
    /**
     * The page rule action's type.
     */
    type?: string;
};

/**
 * A list of conditions of a Page rule.
 */
export type PageRuleConditionReadable = {
    /**
     * The page rule condition's field.
     */
    field?: string;
    /**
     * The page rule condition's ID.
     */
    id?: string;
    options?: OptionsReadable;
    /**
     * The page rule condition's type.
     */
    type?: string;
    readonly 'x-class-name'?: string;
};

/**
 * A list of conditions of a Page rule.
 */
export type PageRuleConditionWritable = {
    /**
     * The page rule condition's field.
     */
    field?: string;
    /**
     * The page rule condition's ID.
     */
    id?: string;
    options?: OptionsWritable;
    /**
     * The page rule condition's type.
     */
    type?: string;
};

/**
 * Settings of the page, such as SEO or OpenGraph.
 */
export type PageSettingsReadable = {
    /**
     * A list of custom metatags this page has.
     */
    customMetaTags?: Array<CustomMetaTagReadable>;
    /**
     * A flag that indicates whether the page is hidden from navigation.
     */
    hiddenFromNavigation?: boolean;
    openGraphSettings?: OpenGraphSettingsReadable;
    seoSettings?: SeoSettingsReadable;
    sitePageNavigationMenuSettings?: SitePageNavigationMenuSettingsReadable;
    readonly 'x-class-name'?: string;
};

/**
 * Settings of the page, such as SEO or OpenGraph.
 */
export type PageSettingsWritable = {
    /**
     * A list of custom metatags this page has.
     */
    customMetaTags?: Array<CustomMetaTagWritable>;
    /**
     * A flag that indicates whether the page is hidden from navigation.
     */
    hiddenFromNavigation?: boolean;
    openGraphSettings?: OpenGraphSettingsWritable;
    seoSettings?: SeoSettingsWritable;
    sitePageNavigationMenuSettings?: SitePageNavigationMenuSettingsWritable;
};

/**
 * The parent page or null if it is a top level page.
 */
export type ParentSitePageReadable = {
    /**
     * The relative URL of the parent page.
     */
    friendlyUrlPath?: string;
    readonly 'x-class-name'?: string;
};

/**
 * The parent page or null if it is a top level page.
 */
export type ParentSitePageWritable = {
    /**
     * The relative URL of the parent page.
     */
    friendlyUrlPath?: string;
};

/**
 * Metadata of the page such as it's master page and template.
 */
export type RenderedPageReadable = {
    /**
     * The ID of the master page used to render the content.
     */
    readonly masterPageId?: string;
    /**
     * The name of the master page used to render the content.
     */
    masterPageName?: string;
    /**
     * The ID of the template used to render the content.
     */
    readonly pageTemplateId?: string;
    /**
     * The name of the template used to render the content.
     */
    pageTemplateName?: string;
    /**
     * An absolute URL to the rendered page.
     */
    renderedPageURL?: string;
    readonly 'x-class-name'?: string;
};

/**
 * Metadata of the page such as it's master page and template.
 */
export type RenderedPageWritable = {
    /**
     * The name of the master page used to render the content.
     */
    masterPageName?: string;
    /**
     * The name of the template used to render the content.
     */
    pageTemplateName?: string;
    /**
     * An absolute URL to the rendered page.
     */
    renderedPageURL?: string;
};

/**
 * The page's SEO settings.
 */
export type SeoSettingsReadable = {
    /**
     * The canonical URL of the page, if it exists.
     */
    customCanonicalURL?: string;
    /**
     * The localized canonical URL of the page, if it exists.
     */
    customCanonicalURL_i18n?: {
        [key: string]: string;
    };
    /**
     * The page's description to be used as summary for search engines.
     */
    description?: string;
    /**
     * The localized descriptions of the page to be used as summary for search engines.
     */
    description_i18n?: {
        [key: string]: string;
    };
    /**
     * The page's main title to be used by search engines.
     */
    htmlTitle?: string;
    /**
     * The localized main titles of the page to be used by search engines.
     */
    htmlTitle_i18n?: {
        [key: string]: string;
    };
    /**
     * A tag telling search engines if and how they should crawl the page.
     */
    robots?: string;
    /**
     * A localized tag telling search engines if and how they should crawl the page.
     */
    robots_i18n?: {
        [key: string]: string;
    };
    /**
     * A list of target keywords of the page to be used by search engines.
     */
    seoKeywords?: string;
    /**
     * A list of localized target keywords of the page to be used by search engines.
     */
    seoKeywords_i18n?: {
        [key: string]: string;
    };
    siteMapSettings?: SiteMapSettingsReadable;
    readonly 'x-class-name'?: string;
};

/**
 * The page's SEO settings.
 */
export type SeoSettingsWritable = {
    /**
     * The canonical URL of the page, if it exists.
     */
    customCanonicalURL?: string;
    /**
     * The localized canonical URL of the page, if it exists.
     */
    customCanonicalURL_i18n?: {
        [key: string]: string;
    };
    /**
     * The page's description to be used as summary for search engines.
     */
    description?: string;
    /**
     * The localized descriptions of the page to be used as summary for search engines.
     */
    description_i18n?: {
        [key: string]: string;
    };
    /**
     * The page's main title to be used by search engines.
     */
    htmlTitle?: string;
    /**
     * The localized main titles of the page to be used by search engines.
     */
    htmlTitle_i18n?: {
        [key: string]: string;
    };
    /**
     * A tag telling search engines if and how they should crawl the page.
     */
    robots?: string;
    /**
     * A localized tag telling search engines if and how they should crawl the page.
     */
    robots_i18n?: {
        [key: string]: string;
    };
    /**
     * A list of target keywords of the page to be used by search engines.
     */
    seoKeywords?: string;
    /**
     * A list of localized target keywords of the page to be used by search engines.
     */
    seoKeywords_i18n?: {
        [key: string]: string;
    };
    siteMapSettings?: SiteMapSettingsWritable;
};

/**
 * Represents a set of users that meet certain criteria. Segments may be used to create customized experiences for users.
 */
export type Segment = {
    /**
     * A flag that indicates whether the segment is active.
     */
    readonly active?: boolean;
    /**
     * The segment's criteria.
     */
    readonly criteria: string;
    /**
     * The segment's criteria in JSON.
     */
    readonly criteriaValue?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    /**
     * The segment's creation date.
     */
    readonly dateCreated?: string;
    /**
     * The segment's most recent modification date.
     */
    readonly dateModified?: string;
    /**
     * The segment's ID.
     */
    readonly id?: number;
    /**
     * The segment's name.
     */
    readonly name: string;
    /**
     * The ID of the segment's site.
     */
    readonly siteId?: number;
    /**
     * The segment's source.
     */
    readonly source?: string;
    readonly 'x-class-name'?: string;
};

/**
 * The page's settings.
 */
export type SettingsReadable = {
    /**
     * The page's color scheme name.
     */
    colorSchemeName?: string;
    /**
     * The page's CSS.
     */
    css?: string;
    /**
     * The FavIcon of the page
     */
    favIcon?: {
        [key: string]: unknown;
    };
    /**
     * The client extensions for global css associated to the page.
     */
    globalCSSClientExtensions?: Array<ClientExtensionReadable>;
    /**
     * The client extensions for global js associated to the page.
     */
    globalJSClientExtensions?: Array<ClientExtensionReadable>;
    /**
     * The page's JavaScript.
     */
    javascript?: string;
    masterPage?: MasterPageReadable;
    styleBook?: StyleBookReadable;
    themeCSSClientExtension?: ClientExtensionReadable;
    /**
     * The page's theme name.
     */
    themeName?: string;
    /**
     * The page's theme settings.
     */
    themeSettings?: {
        [key: string]: unknown;
    };
    themeSpritemapClientExtension?: ClientExtensionReadable;
    readonly 'x-class-name'?: string;
};

/**
 * The page's settings.
 */
export type SettingsWritable = {
    /**
     * The page's color scheme name.
     */
    colorSchemeName?: string;
    /**
     * The page's CSS.
     */
    css?: string;
    /**
     * The FavIcon of the page
     */
    favIcon?: {
        [key: string]: unknown;
    };
    /**
     * The client extensions for global css associated to the page.
     */
    globalCSSClientExtensions?: Array<ClientExtensionWritable>;
    /**
     * The client extensions for global js associated to the page.
     */
    globalJSClientExtensions?: Array<ClientExtensionWritable>;
    /**
     * The page's JavaScript.
     */
    javascript?: string;
    masterPage?: MasterPageWritable;
    styleBook?: StyleBookWritable;
    themeCSSClientExtension?: ClientExtensionWritable;
    /**
     * The page's theme name.
     */
    themeName?: string;
    /**
     * The page's theme settings.
     */
    themeSettings?: {
        [key: string]: unknown;
    };
    themeSpritemapClientExtension?: ClientExtensionWritable;
};

/**
 * Represents settings related with the site map.
 */
export type SiteMapSettingsReadable = {
    /**
     * Whether search engines should crawl and index the page.
     */
    include?: boolean;
    /**
     * Whether search engines should crawl and index the child pages.
     */
    includeChildSitePages?: boolean;
    /**
     * How the page should be prioritized relative to other pages.
     */
    pagePriority?: number;
    readonly 'x-class-name'?: string;
    /**
     * Indicates how often a page is updated.
     */
    changeFrequency?: 'Always' | 'Hourly' | 'Daily' | 'Weekly' | 'Monthly' | 'Yearly' | 'Never';
};

/**
 * Represents settings related with the site map.
 */
export type SiteMapSettingsWritable = {
    /**
     * Whether search engines should crawl and index the page.
     */
    include?: boolean;
    /**
     * Whether search engines should crawl and index the child pages.
     */
    includeChildSitePages?: boolean;
    /**
     * How the page should be prioritized relative to other pages.
     */
    pagePriority?: number;
    /**
     * Indicates how often a page is updated.
     */
    changeFrequency?: 'Always' | 'Hourly' | 'Daily' | 'Weekly' | 'Monthly' | 'Yearly' | 'Never';
};

/**
 * Represents a site page. This is modeled internally as a `Layout`.
 */
export type SitePageReadable = {
    /**
     * Block of actions allowed by the user making the request.
     */
    readonly actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    aggregateRating?: AggregateRating;
    /**
     * The list of languages the page has a translation for.
     */
    readonly availableLanguages?: Array<string>;
    creator?: CreatorReadable;
    /**
     * Custom fields associated with the page.
     */
    customFields?: Array<CustomFieldReadable>;
    /**
     * The page's creation date.
     */
    readonly dateCreated?: string;
    /**
     * The last time any field of the page was changed.
     */
    readonly dateModified?: string;
    /**
     * The page's most recent publication date.
     */
    datePublished?: string;
    experience?: ExperienceReadable;
    /**
     * A relative URL to the page's rendered content.
     */
    friendlyUrlPath?: string;
    /**
     * The localized relative URLs to the page's rendered content.
     */
    friendlyUrlPath_i18n?: {
        [key: string]: string;
    };
    /**
     * The page ID.
     */
    readonly id?: number;
    /**
     * A list of keywords describing the page.
     */
    keywords?: Array<string>;
    pageDefinition?: PageDefinitionReadable;
    /**
     * The page's permissions.
     */
    pagePermissions?: Array<PagePermission>;
    pageSettings?: PageSettingsReadable;
    /**
     * The type of the page.
     */
    pageType?: string;
    parentSitePage?: ParentSitePageReadable;
    renderedPage?: RenderedPageReadable;
    /**
     * The ID of the site to which this page is scoped.
     */
    readonly siteId?: number;
    /**
     * The categories associated with this page.
     */
    taxonomyCategoryBriefs?: Array<TaxonomyCategoryBriefReadable>;
    /**
     * The page's title.
     */
    title: string;
    /**
     * The localized page's titles.
     */
    title_i18n?: {
        [key: string]: string;
    };
    /**
     * A valid external identifier to reference this page.
     */
    readonly uuid?: string;
    viewableBy?: 'Anyone' | 'Members' | 'Owner';
    readonly 'x-class-name'?: string;
};

/**
 * Represents a site page. This is modeled internally as a `Layout`.
 */
export type SitePageWritable = {
    creator?: CreatorWritable;
    /**
     * Custom fields associated with the page.
     */
    customFields?: Array<CustomFieldWritable>;
    /**
     * The page's most recent publication date.
     */
    datePublished?: string;
    experience?: ExperienceWritable;
    /**
     * A relative URL to the page's rendered content.
     */
    friendlyUrlPath?: string;
    /**
     * The localized relative URLs to the page's rendered content.
     */
    friendlyUrlPath_i18n?: {
        [key: string]: string;
    };
    /**
     * A list of keywords describing the page.
     */
    keywords?: Array<string>;
    pageDefinition?: PageDefinitionWritable;
    /**
     * The page's permissions.
     */
    pagePermissions?: Array<PagePermission>;
    pageSettings?: PageSettingsWritable;
    /**
     * The type of the page.
     */
    pageType?: string;
    parentSitePage?: ParentSitePageWritable;
    renderedPage?: RenderedPageWritable;
    /**
     * The categories associated with this page.
     */
    taxonomyCategoryBriefs?: Array<TaxonomyCategoryBriefWritable>;
    taxonomyCategoryIds?: Array<number>;
    /**
     * The page's title.
     */
    title: string;
    /**
     * The localized page's titles.
     */
    title_i18n?: {
        [key: string]: string;
    };
    viewableBy?: 'Anyone' | 'Members' | 'Owner';
};

/**
 * The page's site navigation menu settings.
 */
export type SitePageNavigationMenuSettingsReadable = {
    /**
     * The default parameter for a page.
     */
    queryString?: string;
    /**
     * The page's description to be used as summary for search engines.
     */
    target?: string;
    readonly 'x-class-name'?: string;
    /**
     * The target's type (specific frame or new tab).
     */
    targetType?: 'SpecificFrame' | 'NewTab';
};

/**
 * The page's site navigation menu settings.
 */
export type SitePageNavigationMenuSettingsWritable = {
    /**
     * The default parameter for a page.
     */
    queryString?: string;
    /**
     * The page's description to be used as summary for search engines.
     */
    target?: string;
    /**
     * The target's type (specific frame or new tab).
     */
    targetType?: 'SpecificFrame' | 'NewTab';
};

/**
 * The StyleBook that is applied to the page.
 */
export type StyleBookReadable = {
    /**
     * The stylebook's key.
     */
    key?: string;
    /**
     * The stylebook's name.
     */
    name?: string;
    readonly 'x-class-name'?: string;
};

/**
 * The StyleBook that is applied to the page.
 */
export type StyleBookWritable = {
    /**
     * The stylebook's key.
     */
    key?: string;
    /**
     * The stylebook's name.
     */
    name?: string;
};

export type PageSitePageReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<SitePageReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageSitePageWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<SitePageWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

/**
 * Represents a folder that can be used to organize structured content.
 */
export type StructuredContentFolderReadable = {
    /**
     * Block of actions allowed by the user making the request.
     */
    readonly actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    /**
     * The key of the asset library to which the folder is scoped.
     */
    readonly assetLibraryKey?: string;
    creator?: CreatorReadable;
    /**
     * A list of the custom fields associated with the folder.
     */
    customFields?: Array<CustomFieldReadable>;
    /**
     * The date the folder was created.
     */
    readonly dateCreated?: string;
    /**
     * The last time any of the folder's fields changed.
     */
    readonly dateModified?: string;
    /**
     * The folder's description.
     */
    description?: string;
    /**
     * The structured content folder's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The folder's ID.
     */
    readonly id?: number;
    /**
     * The folder's name.
     */
    name: string;
    /**
     * The number of structured content folders inside this folder.
     */
    readonly numberOfStructuredContentFolders?: number;
    /**
     * The number of structured content objects inside this folder.
     */
    readonly numberOfStructuredContents?: number;
    /**
     * The ID of the folder's parent, if it exists.
     */
    parentStructuredContentFolderId?: number;
    /**
     * The ID of the site to which this folder is scoped.
     */
    readonly siteId?: number;
    /**
     * A flag that indicates whether the user making the requests is subscribed to this folder.
     */
    readonly subscribed?: boolean;
    viewableBy?: 'Anyone' | 'Members' | 'Owner';
    readonly 'x-class-name'?: string;
};

/**
 * Represents a folder that can be used to organize structured content.
 */
export type StructuredContentFolderWritable = {
    creator?: CreatorWritable;
    /**
     * A list of the custom fields associated with the folder.
     */
    customFields?: Array<CustomFieldWritable>;
    /**
     * The folder's description.
     */
    description?: string;
    /**
     * The structured content folder's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The folder's name.
     */
    name: string;
    /**
     * The ID of the folder's parent, if it exists.
     */
    parentStructuredContentFolderId?: number;
    viewableBy?: 'Anyone' | 'Members' | 'Owner';
};

export type PageStructuredContentFolderReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<StructuredContentFolderReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageStructuredContentFolderWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<StructuredContentFolderWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageStructuredContentReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<StructuredContentReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageStructuredContentWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<StructuredContentWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type WikiNodeReadable = {
    /**
     * Block of actions allowed by the user making the request.
     */
    readonly actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    creator?: CreatorReadable;
    /**
     * The date the wiki node was created.
     */
    readonly dateCreated?: string;
    /**
     * The last time any of the wiki node's fields changed.
     */
    readonly dateModified?: string;
    /**
     * The wiki node's description.
     */
    description?: string;
    /**
     * The wiki node's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The wiki node's ID.
     */
    readonly id?: number;
    /**
     * The wiki node's name.
     */
    name?: string;
    /**
     * The number of child wiki page on this wiki node.
     */
    readonly numberOfWikiPages?: number;
    /**
     * The ID of the site to which this wiki node is scoped.
     */
    readonly siteId?: number;
    /**
     * A flag that indicates whether the user making the requests is subscribed to this wiki node.
     */
    readonly subscribed?: boolean;
    viewableBy?: 'Anyone' | 'Members' | 'Owner';
    readonly 'x-class-name'?: string;
};

export type WikiNodeWritable = {
    creator?: CreatorWritable;
    /**
     * The wiki node's description.
     */
    description?: string;
    /**
     * The wiki node's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The wiki node's name.
     */
    name?: string;
    viewableBy?: 'Anyone' | 'Members' | 'Owner';
};

export type PageWikiNodeReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<WikiNodeReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageWikiNodeWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<WikiNodeWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type WikiPageAttachmentReadable = {
    /**
     * Block of actions allowed by the user making the request.
     */
    readonly actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    /**
     * The file's relative URL.
     */
    readonly contentUrl?: string;
    /**
     * Optional field with the content of the document in Base64, can be embedded with nestedFields.
     */
    readonly contentValue?: string;
    /**
     * The file's media format (e.g., application/pdf, etc.).
     */
    readonly encodingFormat?: string;
    externalReferenceCode?: string;
    /**
     * The file's extension.
     */
    readonly fileExtension?: string;
    /**
     * The file's ID.
     */
    readonly id?: number;
    /**
     * The file's size in bytes.
     */
    readonly sizeInBytes?: number;
    /**
     * The file's title.
     */
    title?: string;
    readonly 'x-class-name'?: string;
};

export type WikiPageAttachmentWritable = {
    externalReferenceCode?: string;
    /**
     * The file's title.
     */
    title?: string;
};

export type PageWikiPageAttachmentReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<WikiPageAttachmentReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageWikiPageAttachmentWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<WikiPageAttachmentWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PostWikiPageWikiPageAttachmentRequestBodyReadable = {
    WikiPageAttachment?: WikiPageAttachmentReadable;
    /**
     * File
     */
    file?: Blob | File;
};

export type PostWikiPageWikiPageAttachmentRequestBodyWritable = {
    WikiPageAttachment?: WikiPageAttachmentWritable;
    /**
     * File
     */
    file?: Blob | File;
};

/**
 * Represents a wiki page.
 */
export type WikiPageReadable = {
    /**
     * Block of actions allowed by the user making the request.
     */
    readonly actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    aggregateRating?: AggregateRating;
    /**
     * The wiki page's content.
     */
    content?: string;
    creator?: CreatorReadable;
    /**
     * A list of the custom fields associated with the wiki page.
     */
    customFields?: Array<CustomFieldReadable>;
    /**
     * The date the wiki page was created.
     */
    readonly dateCreated?: string;
    /**
     * The last time any of the wiki page's fields changed.
     */
    readonly dateModified?: string;
    /**
     * The wiki page's description.
     */
    description?: string;
    /**
     * The wiki page's media format (e.g., HTML, BBCode, etc.).
     */
    encodingFormat: string;
    /**
     * The wiki page's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The wiki page's main title.
     */
    headline: string;
    /**
     * The wiki page's ID.
     */
    readonly id?: number;
    /**
     * A list of keywords describing the blog post.
     */
    keywords?: Array<string>;
    /**
     * The wiki page's number attachments.
     */
    readonly numberOfAttachments?: number;
    /**
     * The number of child wiki page on this wiki page.
     */
    readonly numberOfWikiPages?: number;
    /**
     * The ID of the wiki page's parent, if it exists.
     */
    parentWikiPageId?: number;
    /**
     * A list of related contents to this wiki page.
     */
    readonly relatedContents?: Array<RelatedContentReadable>;
    /**
     * The ID of the site to which this wiki page is scoped.
     */
    readonly siteId?: number;
    /**
     * A flag that indicates whether the user making the requests is subscribed to this wiki page.
     */
    readonly subscribed?: boolean;
    /**
     * The categories associated with this wiki page.
     */
    readonly taxonomyCategoryBriefs?: Array<TaxonomyCategoryBriefReadable>;
    viewableBy?: 'Anyone' | 'Members' | 'Owner';
    /**
     * The ID of the wiki node to which the wiki page belongs.
     */
    wikiNodeId?: number;
    readonly 'x-class-name'?: string;
};

/**
 * Represents a wiki page.
 */
export type WikiPageWritable = {
    /**
     * The wiki page's content.
     */
    content?: string;
    creator?: CreatorWritable;
    /**
     * A list of the custom fields associated with the wiki page.
     */
    customFields?: Array<CustomFieldWritable>;
    /**
     * The wiki page's description.
     */
    description?: string;
    /**
     * The wiki page's media format (e.g., HTML, BBCode, etc.).
     */
    encodingFormat: string;
    /**
     * The wiki page's external reference code.
     */
    externalReferenceCode?: string;
    /**
     * The wiki page's main title.
     */
    headline: string;
    /**
     * A list of keywords describing the blog post.
     */
    keywords?: Array<string>;
    /**
     * The ID of the wiki page's parent, if it exists.
     */
    parentWikiPageId?: number;
    taxonomyCategoryIds?: Array<number>;
    viewableBy?: 'Anyone' | 'Members' | 'Owner';
    /**
     * The ID of the wiki node to which the wiki page belongs.
     */
    wikiNodeId?: number;
};

export type PageWikiPageReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<WikiPageReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageWikiPageWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<WikiPageWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type DeleteBlogPostingImageData = {
    body?: never;
    path: {
        blogPostingImageId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/blog-posting-images/{blogPostingImageId}';
};

export type DeleteBlogPostingImageResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetBlogPostingImageData = {
    body?: never;
    path: {
        blogPostingImageId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/blog-posting-images/{blogPostingImageId}';
};

export type GetBlogPostingImageResponses = {
    /**
     * default response
     */
    default: BlogPostingImageReadable;
};

export type GetBlogPostingImageResponse = GetBlogPostingImageResponses[keyof GetBlogPostingImageResponses];

export type DeleteBlogPostingImageBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/blog-posting-images/batch';
};

export type DeleteBlogPostingImageBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteSiteBlogPostingImageByExternalReferenceCodeData = {
    body?: never;
    path: {
        siteId: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/blog-posting-images/by-external-reference-code/{externalReferenceCode}';
};

export type DeleteSiteBlogPostingImageByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSiteBlogPostingImageByExternalReferenceCodeData = {
    body?: never;
    path: {
        siteId: string;
        externalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/blog-posting-images/by-external-reference-code/{externalReferenceCode}';
};

export type GetSiteBlogPostingImageByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: BlogPostingImageReadable;
};

export type GetSiteBlogPostingImageByExternalReferenceCodeResponse = GetSiteBlogPostingImageByExternalReferenceCodeResponses[keyof GetSiteBlogPostingImageByExternalReferenceCodeResponses];

export type GetSiteBlogPostingImagesPageData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/blog-posting-images';
};

export type GetSiteBlogPostingImagesPageResponses = {
    /**
     * default response
     */
    default: PageBlogPostingImageReadable;
};

export type GetSiteBlogPostingImagesPageResponse = GetSiteBlogPostingImagesPageResponses[keyof GetSiteBlogPostingImagesPageResponses];

export type PostSiteBlogPostingImageData = {
    body?: PostSiteBlogPostingImageRequestBodyWritable;
    path: {
        siteId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/blog-posting-images';
};

export type PostSiteBlogPostingImageResponses = {
    /**
     * default response
     */
    default: BlogPostingImageReadable;
};

export type PostSiteBlogPostingImageResponse = PostSiteBlogPostingImageResponses[keyof PostSiteBlogPostingImageResponses];

export type PostSiteBlogPostingImageBatchData = {
    body?: MultipartBody;
    path: {
        siteId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/blog-posting-images/batch';
};

export type PostSiteBlogPostingImageBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostSiteBlogPostingImagesPageExportBatchData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/blog-posting-images/export-batch';
};

export type PostSiteBlogPostingImagesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteBlogPostingData = {
    body?: never;
    path: {
        blogPostingId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/blog-postings/{blogPostingId}';
};

export type DeleteBlogPostingResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetBlogPostingData = {
    body?: never;
    path: {
        blogPostingId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/blog-postings/{blogPostingId}';
};

export type GetBlogPostingResponses = {
    /**
     * default response
     */
    default: BlogPostingReadable;
};

export type GetBlogPostingResponse = GetBlogPostingResponses[keyof GetBlogPostingResponses];

export type PatchBlogPostingData = {
    body?: BlogPostingWritable;
    path: {
        blogPostingId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/blog-postings/{blogPostingId}';
};

export type PatchBlogPostingResponses = {
    /**
     * default response
     */
    default: BlogPostingReadable;
};

export type PatchBlogPostingResponse = PatchBlogPostingResponses[keyof PatchBlogPostingResponses];

export type PutBlogPostingData = {
    body?: BlogPostingWritable;
    path: {
        blogPostingId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/blog-postings/{blogPostingId}';
};

export type PutBlogPostingResponses = {
    /**
     * default response
     */
    default: BlogPostingReadable;
};

export type PutBlogPostingResponse = PutBlogPostingResponses[keyof PutBlogPostingResponses];

export type DeleteBlogPostingBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/blog-postings/batch';
};

export type DeleteBlogPostingBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutBlogPostingBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/blog-postings/batch';
};

export type PutBlogPostingBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteBlogPostingMyRatingData = {
    body?: never;
    path: {
        blogPostingId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/blog-postings/{blogPostingId}/my-rating';
};

export type DeleteBlogPostingMyRatingResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetBlogPostingMyRatingData = {
    body?: never;
    path: {
        blogPostingId: string;
    };
    query?: {
        fields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/blog-postings/{blogPostingId}/my-rating';
};

export type GetBlogPostingMyRatingResponses = {
    /**
     * default response
     */
    default: RatingReadable;
};

export type GetBlogPostingMyRatingResponse = GetBlogPostingMyRatingResponses[keyof GetBlogPostingMyRatingResponses];

export type PostBlogPostingMyRatingData = {
    body?: RatingWritable;
    path: {
        blogPostingId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/blog-postings/{blogPostingId}/my-rating';
};

export type PostBlogPostingMyRatingResponses = {
    /**
     * default response
     */
    default: RatingReadable;
};

export type PostBlogPostingMyRatingResponse = PostBlogPostingMyRatingResponses[keyof PostBlogPostingMyRatingResponses];

export type PutBlogPostingMyRatingData = {
    body?: RatingWritable;
    path: {
        blogPostingId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/blog-postings/{blogPostingId}/my-rating';
};

export type PutBlogPostingMyRatingResponses = {
    /**
     * default response
     */
    default: RatingReadable;
};

export type PutBlogPostingMyRatingResponse = PutBlogPostingMyRatingResponses[keyof PutBlogPostingMyRatingResponses];

export type DeleteSiteBlogPostingByExternalReferenceCodeData = {
    body?: never;
    path: {
        siteId: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/blog-postings/by-external-reference-code/{externalReferenceCode}';
};

export type DeleteSiteBlogPostingByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSiteBlogPostingByExternalReferenceCodeData = {
    body?: never;
    path: {
        siteId: string;
        externalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/blog-postings/by-external-reference-code/{externalReferenceCode}';
};

export type GetSiteBlogPostingByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: BlogPostingReadable;
};

export type GetSiteBlogPostingByExternalReferenceCodeResponse = GetSiteBlogPostingByExternalReferenceCodeResponses[keyof GetSiteBlogPostingByExternalReferenceCodeResponses];

export type PutSiteBlogPostingByExternalReferenceCodeData = {
    body?: BlogPostingWritable;
    path: {
        siteId: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/blog-postings/by-external-reference-code/{externalReferenceCode}';
};

export type PutSiteBlogPostingByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: BlogPostingReadable;
};

export type PutSiteBlogPostingByExternalReferenceCodeResponse = PutSiteBlogPostingByExternalReferenceCodeResponses[keyof PutSiteBlogPostingByExternalReferenceCodeResponses];

export type GetBlogPostingPermissionsPageData = {
    body?: never;
    path: {
        blogPostingId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
        roleNames?: string;
    };
    url: '/o/headless-delivery/v1.0/blog-postings/{blogPostingId}/permissions';
};

export type GetBlogPostingPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type GetBlogPostingPermissionsPageResponse = GetBlogPostingPermissionsPageResponses[keyof GetBlogPostingPermissionsPageResponses];

export type PutBlogPostingPermissionsPageData = {
    body?: Array<Permission>;
    path: {
        blogPostingId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/blog-postings/{blogPostingId}/permissions';
};

export type PutBlogPostingPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type PutBlogPostingPermissionsPageResponse = PutBlogPostingPermissionsPageResponses[keyof PutBlogPostingPermissionsPageResponses];

export type GetBlogPostingRenderedContentByDisplayPageDisplayPageKeyData = {
    body?: never;
    path: {
        blogPostingId: string;
        displayPageKey: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/blog-postings/{blogPostingId}/rendered-content-by-display-page/{displayPageKey}';
};

export type GetBlogPostingRenderedContentByDisplayPageDisplayPageKeyResponses = {
    /**
     * default response
     */
    default: string;
};

export type GetBlogPostingRenderedContentByDisplayPageDisplayPageKeyResponse = GetBlogPostingRenderedContentByDisplayPageDisplayPageKeyResponses[keyof GetBlogPostingRenderedContentByDisplayPageDisplayPageKeyResponses];

export type GetSiteBlogPostingPermissionsPageData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
        roleNames?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/blog-postings/permissions';
};

export type GetSiteBlogPostingPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type GetSiteBlogPostingPermissionsPageResponse = GetSiteBlogPostingPermissionsPageResponses[keyof GetSiteBlogPostingPermissionsPageResponses];

export type PutSiteBlogPostingPermissionsPageData = {
    body?: Array<Permission>;
    path: {
        siteId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/blog-postings/permissions';
};

export type PutSiteBlogPostingPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type PutSiteBlogPostingPermissionsPageResponse = PutSiteBlogPostingPermissionsPageResponses[keyof PutSiteBlogPostingPermissionsPageResponses];

export type GetSiteBlogPostingsPageData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/blog-postings';
};

export type GetSiteBlogPostingsPageResponses = {
    /**
     * default response
     */
    default: PageBlogPostingReadable;
};

export type GetSiteBlogPostingsPageResponse = GetSiteBlogPostingsPageResponses[keyof GetSiteBlogPostingsPageResponses];

export type PostSiteBlogPostingData = {
    body?: BlogPostingWritable;
    path: {
        siteId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/blog-postings';
};

export type PostSiteBlogPostingResponses = {
    /**
     * default response
     */
    default: BlogPostingReadable;
};

export type PostSiteBlogPostingResponse = PostSiteBlogPostingResponses[keyof PostSiteBlogPostingResponses];

export type PostSiteBlogPostingBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        siteId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/blog-postings/batch';
};

export type PostSiteBlogPostingBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostSiteBlogPostingsPageExportBatchData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/blog-postings/export-batch';
};

export type PostSiteBlogPostingsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutSiteBlogPostingSubscribeData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/blog-postings/subscribe';
};

export type PutSiteBlogPostingSubscribeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutSiteBlogPostingUnsubscribeData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/blog-postings/unsubscribe';
};

export type PutSiteBlogPostingUnsubscribeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteCommentData = {
    body?: never;
    path: {
        commentId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/comments/{commentId}';
};

export type DeleteCommentResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetCommentData = {
    body?: never;
    path: {
        commentId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/comments/{commentId}';
};

export type GetCommentResponses = {
    /**
     * default response
     */
    default: CommentReadable;
};

export type GetCommentResponse = GetCommentResponses[keyof GetCommentResponses];

export type PutCommentData = {
    body?: CommentWritable;
    path: {
        commentId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/comments/{commentId}';
};

export type PutCommentResponses = {
    /**
     * default response
     */
    default: CommentReadable;
};

export type PutCommentResponse = PutCommentResponses[keyof PutCommentResponses];

export type DeleteCommentBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/comments/batch';
};

export type DeleteCommentBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutCommentBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/comments/batch';
};

export type PutCommentBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteSiteBlogPostingByExternalReferenceCodeBlogPostingExternalReferenceCodeCommentByExternalReferenceCodeData = {
    body?: never;
    path: {
        siteId: string;
        blogPostingExternalReferenceCode: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/blog-postings/by-external-reference-code/{blogPostingExternalReferenceCode}/comments/by-external-reference-code/{externalReferenceCode}';
};

export type DeleteSiteBlogPostingByExternalReferenceCodeBlogPostingExternalReferenceCodeCommentByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSiteBlogPostingByExternalReferenceCodeBlogPostingExternalReferenceCodeCommentByExternalReferenceCodeData = {
    body?: never;
    path: {
        siteId: string;
        blogPostingExternalReferenceCode: string;
        externalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/blog-postings/by-external-reference-code/{blogPostingExternalReferenceCode}/comments/by-external-reference-code/{externalReferenceCode}';
};

export type GetSiteBlogPostingByExternalReferenceCodeBlogPostingExternalReferenceCodeCommentByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: CommentReadable;
};

export type GetSiteBlogPostingByExternalReferenceCodeBlogPostingExternalReferenceCodeCommentByExternalReferenceCodeResponse = GetSiteBlogPostingByExternalReferenceCodeBlogPostingExternalReferenceCodeCommentByExternalReferenceCodeResponses[keyof GetSiteBlogPostingByExternalReferenceCodeBlogPostingExternalReferenceCodeCommentByExternalReferenceCodeResponses];

export type PutSiteBlogPostingByExternalReferenceCodeBlogPostingExternalReferenceCodeCommentByExternalReferenceCodeData = {
    body?: CommentWritable;
    path: {
        siteId: string;
        blogPostingExternalReferenceCode: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/blog-postings/by-external-reference-code/{blogPostingExternalReferenceCode}/comments/by-external-reference-code/{externalReferenceCode}';
};

export type PutSiteBlogPostingByExternalReferenceCodeBlogPostingExternalReferenceCodeCommentByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: CommentReadable;
};

export type PutSiteBlogPostingByExternalReferenceCodeBlogPostingExternalReferenceCodeCommentByExternalReferenceCodeResponse = PutSiteBlogPostingByExternalReferenceCodeBlogPostingExternalReferenceCodeCommentByExternalReferenceCodeResponses[keyof PutSiteBlogPostingByExternalReferenceCodeBlogPostingExternalReferenceCodeCommentByExternalReferenceCodeResponses];

export type DeleteSiteCommentByExternalReferenceCodeParentCommentExternalReferenceCodeCommentByExternalReferenceCodeData = {
    body?: never;
    path: {
        siteId: string;
        parentCommentExternalReferenceCode: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/comments/by-external-reference-code/{parentCommentExternalReferenceCode}/comments/by-external-reference-code/{externalReferenceCode}';
};

export type DeleteSiteCommentByExternalReferenceCodeParentCommentExternalReferenceCodeCommentByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSiteCommentByExternalReferenceCodeParentCommentExternalReferenceCodeCommentByExternalReferenceCodeData = {
    body?: never;
    path: {
        siteId: string;
        parentCommentExternalReferenceCode: string;
        externalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/comments/by-external-reference-code/{parentCommentExternalReferenceCode}/comments/by-external-reference-code/{externalReferenceCode}';
};

export type GetSiteCommentByExternalReferenceCodeParentCommentExternalReferenceCodeCommentByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: CommentReadable;
};

export type GetSiteCommentByExternalReferenceCodeParentCommentExternalReferenceCodeCommentByExternalReferenceCodeResponse = GetSiteCommentByExternalReferenceCodeParentCommentExternalReferenceCodeCommentByExternalReferenceCodeResponses[keyof GetSiteCommentByExternalReferenceCodeParentCommentExternalReferenceCodeCommentByExternalReferenceCodeResponses];

export type PutSiteCommentByExternalReferenceCodeParentCommentExternalReferenceCodeCommentByExternalReferenceCodeData = {
    body?: CommentWritable;
    path: {
        siteId: string;
        parentCommentExternalReferenceCode: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/comments/by-external-reference-code/{parentCommentExternalReferenceCode}/comments/by-external-reference-code/{externalReferenceCode}';
};

export type PutSiteCommentByExternalReferenceCodeParentCommentExternalReferenceCodeCommentByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: CommentReadable;
};

export type PutSiteCommentByExternalReferenceCodeParentCommentExternalReferenceCodeCommentByExternalReferenceCodeResponse = PutSiteCommentByExternalReferenceCodeParentCommentExternalReferenceCodeCommentByExternalReferenceCodeResponses[keyof PutSiteCommentByExternalReferenceCodeParentCommentExternalReferenceCodeCommentByExternalReferenceCodeResponses];

export type DeleteSiteDocumentByExternalReferenceCodeDocumentExternalReferenceCodeCommentByExternalReferenceCodeData = {
    body?: never;
    path: {
        siteId: string;
        documentExternalReferenceCode: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/documents/by-external-reference-code/{documentExternalReferenceCode}/comments/by-external-reference-code/{externalReferenceCode}';
};

export type DeleteSiteDocumentByExternalReferenceCodeDocumentExternalReferenceCodeCommentByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSiteDocumentByExternalReferenceCodeDocumentExternalReferenceCodeCommentByExternalReferenceCodeData = {
    body?: never;
    path: {
        siteId: string;
        documentExternalReferenceCode: string;
        externalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/documents/by-external-reference-code/{documentExternalReferenceCode}/comments/by-external-reference-code/{externalReferenceCode}';
};

export type GetSiteDocumentByExternalReferenceCodeDocumentExternalReferenceCodeCommentByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: CommentReadable;
};

export type GetSiteDocumentByExternalReferenceCodeDocumentExternalReferenceCodeCommentByExternalReferenceCodeResponse = GetSiteDocumentByExternalReferenceCodeDocumentExternalReferenceCodeCommentByExternalReferenceCodeResponses[keyof GetSiteDocumentByExternalReferenceCodeDocumentExternalReferenceCodeCommentByExternalReferenceCodeResponses];

export type PutSiteDocumentByExternalReferenceCodeDocumentExternalReferenceCodeCommentByExternalReferenceCodeData = {
    body?: CommentWritable;
    path: {
        siteId: string;
        documentExternalReferenceCode: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/documents/by-external-reference-code/{documentExternalReferenceCode}/comments/by-external-reference-code/{externalReferenceCode}';
};

export type PutSiteDocumentByExternalReferenceCodeDocumentExternalReferenceCodeCommentByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: CommentReadable;
};

export type PutSiteDocumentByExternalReferenceCodeDocumentExternalReferenceCodeCommentByExternalReferenceCodeResponse = PutSiteDocumentByExternalReferenceCodeDocumentExternalReferenceCodeCommentByExternalReferenceCodeResponses[keyof PutSiteDocumentByExternalReferenceCodeDocumentExternalReferenceCodeCommentByExternalReferenceCodeResponses];

export type DeleteSiteStructuredContentByExternalReferenceCodeStructuredContentExternalReferenceCodeCommentByExternalReferenceCodeData = {
    body?: never;
    path: {
        siteId: string;
        structuredContentExternalReferenceCode: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/structured-contents/by-external-reference-code/{structuredContentExternalReferenceCode}/comments/by-external-reference-code/{externalReferenceCode}';
};

export type DeleteSiteStructuredContentByExternalReferenceCodeStructuredContentExternalReferenceCodeCommentByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSiteStructuredContentByExternalReferenceCodeStructuredContentExternalReferenceCodeCommentByExternalReferenceCodeData = {
    body?: never;
    path: {
        siteId: string;
        structuredContentExternalReferenceCode: string;
        externalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/structured-contents/by-external-reference-code/{structuredContentExternalReferenceCode}/comments/by-external-reference-code/{externalReferenceCode}';
};

export type GetSiteStructuredContentByExternalReferenceCodeStructuredContentExternalReferenceCodeCommentByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: CommentReadable;
};

export type GetSiteStructuredContentByExternalReferenceCodeStructuredContentExternalReferenceCodeCommentByExternalReferenceCodeResponse = GetSiteStructuredContentByExternalReferenceCodeStructuredContentExternalReferenceCodeCommentByExternalReferenceCodeResponses[keyof GetSiteStructuredContentByExternalReferenceCodeStructuredContentExternalReferenceCodeCommentByExternalReferenceCodeResponses];

export type PutSiteStructuredContentByExternalReferenceCodeStructuredContentExternalReferenceCodeCommentByExternalReferenceCodeData = {
    body?: CommentWritable;
    path: {
        siteId: string;
        structuredContentExternalReferenceCode: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/structured-contents/by-external-reference-code/{structuredContentExternalReferenceCode}/comments/by-external-reference-code/{externalReferenceCode}';
};

export type PutSiteStructuredContentByExternalReferenceCodeStructuredContentExternalReferenceCodeCommentByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: CommentReadable;
};

export type PutSiteStructuredContentByExternalReferenceCodeStructuredContentExternalReferenceCodeCommentByExternalReferenceCodeResponse = PutSiteStructuredContentByExternalReferenceCodeStructuredContentExternalReferenceCodeCommentByExternalReferenceCodeResponses[keyof PutSiteStructuredContentByExternalReferenceCodeStructuredContentExternalReferenceCodeCommentByExternalReferenceCodeResponses];

export type GetBlogPostingCommentsPageData = {
    body?: never;
    path: {
        blogPostingId: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-delivery/v1.0/blog-postings/{blogPostingId}/comments';
};

export type GetBlogPostingCommentsPageResponses = {
    /**
     * default response
     */
    default: PageCommentReadable;
};

export type GetBlogPostingCommentsPageResponse = GetBlogPostingCommentsPageResponses[keyof GetBlogPostingCommentsPageResponses];

export type PostBlogPostingCommentData = {
    body?: CommentWritable;
    path: {
        blogPostingId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/blog-postings/{blogPostingId}/comments';
};

export type PostBlogPostingCommentResponses = {
    /**
     * default response
     */
    default: CommentReadable;
};

export type PostBlogPostingCommentResponse = PostBlogPostingCommentResponses[keyof PostBlogPostingCommentResponses];

export type GetCommentCommentsPageData = {
    body?: never;
    path: {
        parentCommentId: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-delivery/v1.0/comments/{parentCommentId}/comments';
};

export type GetCommentCommentsPageResponses = {
    /**
     * default response
     */
    default: PageCommentReadable;
};

export type GetCommentCommentsPageResponse = GetCommentCommentsPageResponses[keyof GetCommentCommentsPageResponses];

export type PostCommentCommentData = {
    body?: CommentWritable;
    path: {
        parentCommentId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/comments/{parentCommentId}/comments';
};

export type PostCommentCommentResponses = {
    /**
     * default response
     */
    default: CommentReadable;
};

export type PostCommentCommentResponse = PostCommentCommentResponses[keyof PostCommentCommentResponses];

export type GetDocumentCommentsPageData = {
    body?: never;
    path: {
        documentId: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-delivery/v1.0/documents/{documentId}/comments';
};

export type GetDocumentCommentsPageResponses = {
    /**
     * default response
     */
    default: PageCommentReadable;
};

export type GetDocumentCommentsPageResponse = GetDocumentCommentsPageResponses[keyof GetDocumentCommentsPageResponses];

export type PostDocumentCommentData = {
    body?: CommentWritable;
    path: {
        documentId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/documents/{documentId}/comments';
};

export type PostDocumentCommentResponses = {
    /**
     * default response
     */
    default: CommentReadable;
};

export type PostDocumentCommentResponse = PostDocumentCommentResponses[keyof PostDocumentCommentResponses];

export type GetStructuredContentCommentsPageData = {
    body?: never;
    path: {
        structuredContentId: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-delivery/v1.0/structured-contents/{structuredContentId}/comments';
};

export type GetStructuredContentCommentsPageResponses = {
    /**
     * default response
     */
    default: PageCommentReadable;
};

export type GetStructuredContentCommentsPageResponse = GetStructuredContentCommentsPageResponses[keyof GetStructuredContentCommentsPageResponses];

export type PostStructuredContentCommentData = {
    body?: CommentWritable;
    path: {
        structuredContentId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/structured-contents/{structuredContentId}/comments';
};

export type PostStructuredContentCommentResponses = {
    /**
     * default response
     */
    default: CommentReadable;
};

export type PostStructuredContentCommentResponse = PostStructuredContentCommentResponses[keyof PostStructuredContentCommentResponses];

export type PostBlogPostingCommentBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        blogPostingId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/blog-postings/{blogPostingId}/comments/batch';
};

export type PostBlogPostingCommentBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostBlogPostingCommentsPageExportBatchData = {
    body?: never;
    path: {
        blogPostingId: string;
    };
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-delivery/v1.0/blog-postings/{blogPostingId}/comments/export-batch';
};

export type PostBlogPostingCommentsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostDocumentCommentBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        documentId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/documents/{documentId}/comments/batch';
};

export type PostDocumentCommentBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostDocumentCommentsPageExportBatchData = {
    body?: never;
    path: {
        documentId: string;
    };
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-delivery/v1.0/documents/{documentId}/comments/export-batch';
};

export type PostDocumentCommentsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostStructuredContentCommentBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        structuredContentId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/structured-contents/{structuredContentId}/comments/batch';
};

export type PostStructuredContentCommentBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostStructuredContentCommentsPageExportBatchData = {
    body?: never;
    path: {
        structuredContentId: string;
    };
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-delivery/v1.0/structured-contents/{structuredContentId}/comments/export-batch';
};

export type PostStructuredContentCommentsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetAssetLibraryContentElementsPageData = {
    body?: never;
    path: {
        assetLibraryId: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
        nestedFields?: string;
    };
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/content-elements';
};

export type GetAssetLibraryContentElementsPageResponses = {
    /**
     * default response
     */
    default: PageContentElementReadable;
};

export type GetAssetLibraryContentElementsPageResponse = GetAssetLibraryContentElementsPageResponses[keyof GetAssetLibraryContentElementsPageResponses];

export type GetSiteContentElementsPageData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
        nestedFields?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/content-elements';
};

export type GetSiteContentElementsPageResponses = {
    /**
     * default response
     */
    default: PageContentElementReadable;
};

export type GetSiteContentElementsPageResponse = GetSiteContentElementsPageResponses[keyof GetSiteContentElementsPageResponses];

export type PostAssetLibraryContentElementsPageExportBatchData = {
    body?: never;
    path: {
        assetLibraryId: string;
    };
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/content-elements/export-batch';
};

export type PostAssetLibraryContentElementsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostSiteContentElementsPageExportBatchData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/content-elements/export-batch';
};

export type PostSiteContentElementsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetAssetLibraryContentSetByKeyContentSetElementsPageData = {
    body?: never;
    path: {
        assetLibraryId: string;
        key: string;
    };
    query?: {
        fields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        nestedFields?: string;
    };
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/content-sets/by-key/{key}/content-set-elements';
};

export type GetAssetLibraryContentSetByKeyContentSetElementsPageResponses = {
    /**
     * default response
     */
    default: PageContentSetElementReadable;
};

export type GetAssetLibraryContentSetByKeyContentSetElementsPageResponse = GetAssetLibraryContentSetByKeyContentSetElementsPageResponses[keyof GetAssetLibraryContentSetByKeyContentSetElementsPageResponses];

export type GetAssetLibraryContentSetByUuidContentSetElementsPageData = {
    body?: never;
    path: {
        assetLibraryId: string;
        uuid: string;
    };
    query?: {
        fields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        nestedFields?: string;
    };
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/content-sets/by-uuid/{uuid}/content-set-elements';
};

export type GetAssetLibraryContentSetByUuidContentSetElementsPageResponses = {
    /**
     * default response
     */
    default: PageContentSetElementReadable;
};

export type GetAssetLibraryContentSetByUuidContentSetElementsPageResponse = GetAssetLibraryContentSetByUuidContentSetElementsPageResponses[keyof GetAssetLibraryContentSetByUuidContentSetElementsPageResponses];

export type GetContentSetContentSetElementsPageData = {
    body?: never;
    path: {
        contentSetId: string;
    };
    query?: {
        fields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        nestedFields?: string;
    };
    url: '/o/headless-delivery/v1.0/content-sets/{contentSetId}/content-set-elements';
};

export type GetContentSetContentSetElementsPageResponses = {
    /**
     * default response
     */
    default: PageContentSetElementReadable;
};

export type GetContentSetContentSetElementsPageResponse = GetContentSetContentSetElementsPageResponses[keyof GetContentSetContentSetElementsPageResponses];

export type GetSiteContentSetByKeyContentSetElementsPageData = {
    body?: never;
    path: {
        siteId: string;
        key: string;
    };
    query?: {
        fields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        nestedFields?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/content-sets/by-key/{key}/content-set-elements';
};

export type GetSiteContentSetByKeyContentSetElementsPageResponses = {
    /**
     * default response
     */
    default: PageContentSetElementReadable;
};

export type GetSiteContentSetByKeyContentSetElementsPageResponse = GetSiteContentSetByKeyContentSetElementsPageResponses[keyof GetSiteContentSetByKeyContentSetElementsPageResponses];

export type GetSiteContentSetByUuidContentSetElementsPageData = {
    body?: never;
    path: {
        siteId: string;
        uuid: string;
    };
    query?: {
        fields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        nestedFields?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/content-sets/by-uuid/{uuid}/content-set-elements';
};

export type GetSiteContentSetByUuidContentSetElementsPageResponses = {
    /**
     * default response
     */
    default: PageContentSetElementReadable;
};

export type GetSiteContentSetByUuidContentSetElementsPageResponse = GetSiteContentSetByUuidContentSetElementsPageResponses[keyof GetSiteContentSetByUuidContentSetElementsPageResponses];

export type GetSiteContentSetProviderByKeyContentSetElementsPageData = {
    body?: never;
    path: {
        siteId: string;
        key: string;
    };
    query?: {
        fields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        nestedFields?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/content-set-providers/by-key/{key}/content-set-elements';
};

export type GetSiteContentSetProviderByKeyContentSetElementsPageResponses = {
    /**
     * default response
     */
    default: PageContentSetElementReadable;
};

export type GetSiteContentSetProviderByKeyContentSetElementsPageResponse = GetSiteContentSetProviderByKeyContentSetElementsPageResponses[keyof GetSiteContentSetProviderByKeyContentSetElementsPageResponses];

export type GetAssetLibraryContentStructurePermissionsPageData = {
    body?: never;
    path: {
        assetLibraryId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
        roleNames?: string;
    };
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/content-structures/permissions';
};

export type GetAssetLibraryContentStructurePermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type GetAssetLibraryContentStructurePermissionsPageResponse = GetAssetLibraryContentStructurePermissionsPageResponses[keyof GetAssetLibraryContentStructurePermissionsPageResponses];

export type PutAssetLibraryContentStructurePermissionsPageData = {
    body?: Array<Permission>;
    path: {
        assetLibraryId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/content-structures/permissions';
};

export type PutAssetLibraryContentStructurePermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type PutAssetLibraryContentStructurePermissionsPageResponse = PutAssetLibraryContentStructurePermissionsPageResponses[keyof PutAssetLibraryContentStructurePermissionsPageResponses];

export type GetAssetLibraryContentStructuresPageData = {
    body?: never;
    path: {
        assetLibraryId: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/content-structures';
};

export type GetAssetLibraryContentStructuresPageResponses = {
    /**
     * default response
     */
    default: PageContentStructureReadable;
};

export type GetAssetLibraryContentStructuresPageResponse = GetAssetLibraryContentStructuresPageResponses[keyof GetAssetLibraryContentStructuresPageResponses];

export type GetContentStructureData = {
    body?: never;
    path: {
        contentStructureId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/content-structures/{contentStructureId}';
};

export type GetContentStructureResponses = {
    /**
     * default response
     */
    default: ContentStructureReadable;
};

export type GetContentStructureResponse = GetContentStructureResponses[keyof GetContentStructureResponses];

export type GetContentStructurePermissionsPageData = {
    body?: never;
    path: {
        contentStructureId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
        roleNames?: string;
    };
    url: '/o/headless-delivery/v1.0/content-structures/{contentStructureId}/permissions';
};

export type GetContentStructurePermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type GetContentStructurePermissionsPageResponse = GetContentStructurePermissionsPageResponses[keyof GetContentStructurePermissionsPageResponses];

export type PutContentStructurePermissionsPageData = {
    body?: Array<Permission>;
    path: {
        contentStructureId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/content-structures/{contentStructureId}/permissions';
};

export type PutContentStructurePermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type PutContentStructurePermissionsPageResponse = PutContentStructurePermissionsPageResponses[keyof PutContentStructurePermissionsPageResponses];

export type GetSiteContentStructurePermissionsPageData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
        roleNames?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/content-structures/permissions';
};

export type GetSiteContentStructurePermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type GetSiteContentStructurePermissionsPageResponse = GetSiteContentStructurePermissionsPageResponses[keyof GetSiteContentStructurePermissionsPageResponses];

export type PutSiteContentStructurePermissionsPageData = {
    body?: Array<Permission>;
    path: {
        siteId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/content-structures/permissions';
};

export type PutSiteContentStructurePermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type PutSiteContentStructurePermissionsPageResponse = PutSiteContentStructurePermissionsPageResponses[keyof PutSiteContentStructurePermissionsPageResponses];

export type GetSiteContentStructuresPageData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/content-structures';
};

export type GetSiteContentStructuresPageResponses = {
    /**
     * default response
     */
    default: PageContentStructureReadable;
};

export type GetSiteContentStructuresPageResponse = GetSiteContentStructuresPageResponses[keyof GetSiteContentStructuresPageResponses];

export type PostAssetLibraryContentStructuresPageExportBatchData = {
    body?: never;
    path: {
        assetLibraryId: string;
    };
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/content-structures/export-batch';
};

export type PostAssetLibraryContentStructuresPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostSiteContentStructuresPageExportBatchData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/content-structures/export-batch';
};

export type PostSiteContentStructuresPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetAssetLibraryContentTemplatesPageData = {
    body?: never;
    path: {
        assetLibraryId: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/content-templates';
};

export type GetAssetLibraryContentTemplatesPageResponses = {
    /**
     * default response
     */
    default: PageContentTemplateReadable;
};

export type GetAssetLibraryContentTemplatesPageResponse = GetAssetLibraryContentTemplatesPageResponses[keyof GetAssetLibraryContentTemplatesPageResponses];

export type GetSiteContentTemplateData = {
    body?: never;
    path: {
        siteId: string;
        contentTemplateId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/content-templates/{contentTemplateId}';
};

export type GetSiteContentTemplateResponses = {
    /**
     * default response
     */
    default: ContentTemplateReadable;
};

export type GetSiteContentTemplateResponse = GetSiteContentTemplateResponses[keyof GetSiteContentTemplateResponses];

export type GetSiteContentTemplatesPageData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/content-templates';
};

export type GetSiteContentTemplatesPageResponses = {
    /**
     * default response
     */
    default: PageContentTemplateReadable;
};

export type GetSiteContentTemplatesPageResponse = GetSiteContentTemplatesPageResponses[keyof GetSiteContentTemplatesPageResponses];

export type PostAssetLibraryContentTemplatesPageExportBatchData = {
    body?: never;
    path: {
        assetLibraryId: string;
    };
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/content-templates/export-batch';
};

export type PostAssetLibraryContentTemplatesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostSiteContentTemplatesPageExportBatchData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/content-templates/export-batch';
};

export type PostSiteContentTemplatesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteDocumentDataDefinitionTypeData = {
    body?: never;
    path: {
        documentDataDefinitionTypeId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/document-data-definition-types/{documentDataDefinitionTypeId}';
};

export type DeleteDocumentDataDefinitionTypeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetDocumentDataDefinitionTypeData = {
    body?: never;
    path: {
        documentDataDefinitionTypeId: string;
    };
    query?: {
        fields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/document-data-definition-types/{documentDataDefinitionTypeId}';
};

export type GetDocumentDataDefinitionTypeResponses = {
    /**
     * default response
     */
    default: DocumentDataDefinitionTypeReadable;
};

export type GetDocumentDataDefinitionTypeResponse = GetDocumentDataDefinitionTypeResponses[keyof GetDocumentDataDefinitionTypeResponses];

export type DeleteDocumentDataDefinitionTypeBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/document-data-definition-types/batch';
};

export type DeleteDocumentDataDefinitionTypeBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetAssetLibraryDocumentDataDefinitionTypesPageData = {
    body?: never;
    path: {
        assetLibraryId: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/document-data-definition-types';
};

export type GetAssetLibraryDocumentDataDefinitionTypesPageResponses = {
    /**
     * default response
     */
    default: PageDocumentDataDefinitionTypeReadable;
};

export type GetAssetLibraryDocumentDataDefinitionTypesPageResponse = GetAssetLibraryDocumentDataDefinitionTypesPageResponses[keyof GetAssetLibraryDocumentDataDefinitionTypesPageResponses];

export type PostAssetLibraryDocumentDataDefinitionTypeData = {
    body?: DocumentDataDefinitionTypeWritable;
    path: {
        assetLibraryId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/document-data-definition-types';
};

export type PostAssetLibraryDocumentDataDefinitionTypeResponses = {
    /**
     * default response
     */
    default: DocumentDataDefinitionTypeReadable;
};

export type PostAssetLibraryDocumentDataDefinitionTypeResponse = PostAssetLibraryDocumentDataDefinitionTypeResponses[keyof PostAssetLibraryDocumentDataDefinitionTypeResponses];

export type GetSiteDocumentDataDefinitionTypesPageData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/document-data-definition-types';
};

export type GetSiteDocumentDataDefinitionTypesPageResponses = {
    /**
     * default response
     */
    default: PageDocumentDataDefinitionTypeReadable;
};

export type GetSiteDocumentDataDefinitionTypesPageResponse = GetSiteDocumentDataDefinitionTypesPageResponses[keyof GetSiteDocumentDataDefinitionTypesPageResponses];

export type PostSiteDocumentDataDefinitionTypeData = {
    body?: DocumentDataDefinitionTypeWritable;
    path: {
        siteId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/document-data-definition-types';
};

export type PostSiteDocumentDataDefinitionTypeResponses = {
    /**
     * default response
     */
    default: DocumentDataDefinitionTypeReadable;
};

export type PostSiteDocumentDataDefinitionTypeResponse = PostSiteDocumentDataDefinitionTypeResponses[keyof PostSiteDocumentDataDefinitionTypeResponses];

export type PostAssetLibraryDocumentDataDefinitionTypeBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        assetLibraryId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/document-data-definition-types/batch';
};

export type PostAssetLibraryDocumentDataDefinitionTypeBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostAssetLibraryDocumentDataDefinitionTypesPageExportBatchData = {
    body?: never;
    path: {
        assetLibraryId: string;
    };
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/document-data-definition-types/export-batch';
};

export type PostAssetLibraryDocumentDataDefinitionTypesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostSiteDocumentDataDefinitionTypeBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        siteId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/document-data-definition-types/batch';
};

export type PostSiteDocumentDataDefinitionTypeBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostSiteDocumentDataDefinitionTypesPageExportBatchData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/document-data-definition-types/export-batch';
};

export type PostSiteDocumentDataDefinitionTypesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteDocumentFolderData = {
    body?: never;
    path: {
        documentFolderId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/document-folders/{documentFolderId}';
};

export type DeleteDocumentFolderResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetDocumentFolderData = {
    body?: never;
    path: {
        documentFolderId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/document-folders/{documentFolderId}';
};

export type GetDocumentFolderResponses = {
    /**
     * default response
     */
    default: DocumentFolderReadable;
};

export type GetDocumentFolderResponse = GetDocumentFolderResponses[keyof GetDocumentFolderResponses];

export type PatchDocumentFolderData = {
    body?: DocumentFolderWritable;
    path: {
        documentFolderId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/document-folders/{documentFolderId}';
};

export type PatchDocumentFolderResponses = {
    /**
     * default response
     */
    default: DocumentFolderReadable;
};

export type PatchDocumentFolderResponse = PatchDocumentFolderResponses[keyof PatchDocumentFolderResponses];

export type PutDocumentFolderData = {
    body?: DocumentFolderWritable;
    path: {
        documentFolderId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/document-folders/{documentFolderId}';
};

export type PutDocumentFolderResponses = {
    /**
     * default response
     */
    default: DocumentFolderReadable;
};

export type PutDocumentFolderResponse = PutDocumentFolderResponses[keyof PutDocumentFolderResponses];

export type DeleteDocumentFolderBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/document-folders/batch';
};

export type DeleteDocumentFolderBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutDocumentFolderBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/document-folders/batch';
};

export type PutDocumentFolderBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteDocumentFolderMyRatingData = {
    body?: never;
    path: {
        documentFolderId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/document-folders/{documentFolderId}/my-rating';
};

export type DeleteDocumentFolderMyRatingResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetDocumentFolderMyRatingData = {
    body?: never;
    path: {
        documentFolderId: string;
    };
    query?: {
        fields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/document-folders/{documentFolderId}/my-rating';
};

export type GetDocumentFolderMyRatingResponses = {
    /**
     * default response
     */
    default: RatingReadable;
};

export type GetDocumentFolderMyRatingResponse = GetDocumentFolderMyRatingResponses[keyof GetDocumentFolderMyRatingResponses];

export type PostDocumentFolderMyRatingData = {
    body?: RatingWritable;
    path: {
        documentFolderId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/document-folders/{documentFolderId}/my-rating';
};

export type PostDocumentFolderMyRatingResponses = {
    /**
     * default response
     */
    default: RatingReadable;
};

export type PostDocumentFolderMyRatingResponse = PostDocumentFolderMyRatingResponses[keyof PostDocumentFolderMyRatingResponses];

export type PutDocumentFolderMyRatingData = {
    body?: RatingWritable;
    path: {
        documentFolderId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/document-folders/{documentFolderId}/my-rating';
};

export type PutDocumentFolderMyRatingResponses = {
    /**
     * default response
     */
    default: RatingReadable;
};

export type PutDocumentFolderMyRatingResponse = PutDocumentFolderMyRatingResponses[keyof PutDocumentFolderMyRatingResponses];

export type DeleteSiteDocumentsFolderByExternalReferenceCodeData = {
    body?: never;
    path: {
        siteId: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/documents-folder/by-external-reference-code/{externalReferenceCode}';
};

export type DeleteSiteDocumentsFolderByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSiteDocumentsFolderByExternalReferenceCodeData = {
    body?: never;
    path: {
        siteId: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/documents-folder/by-external-reference-code/{externalReferenceCode}';
};

export type GetSiteDocumentsFolderByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: DocumentFolderReadable;
};

export type GetSiteDocumentsFolderByExternalReferenceCodeResponse = GetSiteDocumentsFolderByExternalReferenceCodeResponses[keyof GetSiteDocumentsFolderByExternalReferenceCodeResponses];

export type PutSiteDocumentsFolderByExternalReferenceCodeData = {
    body?: DocumentFolderWritable;
    path: {
        siteId: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/documents-folder/by-external-reference-code/{externalReferenceCode}';
};

export type PutSiteDocumentsFolderByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: DocumentFolderReadable;
};

export type PutSiteDocumentsFolderByExternalReferenceCodeResponse = PutSiteDocumentsFolderByExternalReferenceCodeResponses[keyof PutSiteDocumentsFolderByExternalReferenceCodeResponses];

export type GetAssetLibraryDocumentFolderPermissionsPageData = {
    body?: never;
    path: {
        assetLibraryId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
        roleNames?: string;
    };
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/document-folders/permissions';
};

export type GetAssetLibraryDocumentFolderPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type GetAssetLibraryDocumentFolderPermissionsPageResponse = GetAssetLibraryDocumentFolderPermissionsPageResponses[keyof GetAssetLibraryDocumentFolderPermissionsPageResponses];

export type PutAssetLibraryDocumentFolderPermissionsPageData = {
    body?: Array<Permission>;
    path: {
        assetLibraryId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/document-folders/permissions';
};

export type PutAssetLibraryDocumentFolderPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type PutAssetLibraryDocumentFolderPermissionsPageResponse = PutAssetLibraryDocumentFolderPermissionsPageResponses[keyof PutAssetLibraryDocumentFolderPermissionsPageResponses];

export type GetAssetLibraryDocumentFoldersPageData = {
    body?: never;
    path: {
        assetLibraryId: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        flatten?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/document-folders';
};

export type GetAssetLibraryDocumentFoldersPageResponses = {
    /**
     * default response
     */
    default: PageDocumentFolderReadable;
};

export type GetAssetLibraryDocumentFoldersPageResponse = GetAssetLibraryDocumentFoldersPageResponses[keyof GetAssetLibraryDocumentFoldersPageResponses];

export type PostAssetLibraryDocumentFolderData = {
    body?: DocumentFolderWritable;
    path: {
        assetLibraryId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/document-folders';
};

export type PostAssetLibraryDocumentFolderResponses = {
    /**
     * default response
     */
    default: DocumentFolderReadable;
};

export type PostAssetLibraryDocumentFolderResponse = PostAssetLibraryDocumentFolderResponses[keyof PostAssetLibraryDocumentFolderResponses];

export type GetAssetLibraryDocumentFoldersRatedByMePageData = {
    body?: never;
    path: {
        assetLibraryId: string;
    };
    query?: {
        page?: string;
        pageSize?: string;
        nestedFields?: string;
    };
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/document-folders/rated-by-me';
};

export type GetAssetLibraryDocumentFoldersRatedByMePageResponses = {
    /**
     * default response
     */
    default: PageDocumentFolderReadable;
};

export type GetAssetLibraryDocumentFoldersRatedByMePageResponse = GetAssetLibraryDocumentFoldersRatedByMePageResponses[keyof GetAssetLibraryDocumentFoldersRatedByMePageResponses];

export type GetDocumentFolderDocumentFoldersPageData = {
    body?: never;
    path: {
        parentDocumentFolderId: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        flatten?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-delivery/v1.0/document-folders/{parentDocumentFolderId}/document-folders';
};

export type GetDocumentFolderDocumentFoldersPageResponses = {
    /**
     * default response
     */
    default: PageDocumentFolderReadable;
};

export type GetDocumentFolderDocumentFoldersPageResponse = GetDocumentFolderDocumentFoldersPageResponses[keyof GetDocumentFolderDocumentFoldersPageResponses];

export type PostDocumentFolderDocumentFolderData = {
    body?: DocumentFolderWritable;
    path: {
        parentDocumentFolderId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/document-folders/{parentDocumentFolderId}/document-folders';
};

export type PostDocumentFolderDocumentFolderResponses = {
    /**
     * default response
     */
    default: DocumentFolderReadable;
};

export type PostDocumentFolderDocumentFolderResponse = PostDocumentFolderDocumentFolderResponses[keyof PostDocumentFolderDocumentFolderResponses];

export type GetDocumentFolderPermissionsPageData = {
    body?: never;
    path: {
        documentFolderId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
        roleNames?: string;
    };
    url: '/o/headless-delivery/v1.0/document-folders/{documentFolderId}/permissions';
};

export type GetDocumentFolderPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type GetDocumentFolderPermissionsPageResponse = GetDocumentFolderPermissionsPageResponses[keyof GetDocumentFolderPermissionsPageResponses];

export type PutDocumentFolderPermissionsPageData = {
    body?: Array<Permission>;
    path: {
        documentFolderId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/document-folders/{documentFolderId}/permissions';
};

export type PutDocumentFolderPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type PutDocumentFolderPermissionsPageResponse = PutDocumentFolderPermissionsPageResponses[keyof PutDocumentFolderPermissionsPageResponses];

export type GetSiteDocumentFolderPermissionsPageData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
        roleNames?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/document-folders/permissions';
};

export type GetSiteDocumentFolderPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type GetSiteDocumentFolderPermissionsPageResponse = GetSiteDocumentFolderPermissionsPageResponses[keyof GetSiteDocumentFolderPermissionsPageResponses];

export type PutSiteDocumentFolderPermissionsPageData = {
    body?: Array<Permission>;
    path: {
        siteId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/document-folders/permissions';
};

export type PutSiteDocumentFolderPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type PutSiteDocumentFolderPermissionsPageResponse = PutSiteDocumentFolderPermissionsPageResponses[keyof PutSiteDocumentFolderPermissionsPageResponses];

export type GetSiteDocumentFoldersPageData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        flatten?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/document-folders';
};

export type GetSiteDocumentFoldersPageResponses = {
    /**
     * default response
     */
    default: PageDocumentFolderReadable;
};

export type GetSiteDocumentFoldersPageResponse = GetSiteDocumentFoldersPageResponses[keyof GetSiteDocumentFoldersPageResponses];

export type PostSiteDocumentFolderData = {
    body?: DocumentFolderWritable;
    path: {
        siteId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/document-folders';
};

export type PostSiteDocumentFolderResponses = {
    /**
     * default response
     */
    default: DocumentFolderReadable;
};

export type PostSiteDocumentFolderResponse = PostSiteDocumentFolderResponses[keyof PostSiteDocumentFolderResponses];

export type GetSiteDocumentFoldersRatedByMePageData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        page?: string;
        pageSize?: string;
        nestedFields?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/document-folders/rated-by-me';
};

export type GetSiteDocumentFoldersRatedByMePageResponses = {
    /**
     * default response
     */
    default: PageDocumentFolderReadable;
};

export type GetSiteDocumentFoldersRatedByMePageResponse = GetSiteDocumentFoldersRatedByMePageResponses[keyof GetSiteDocumentFoldersRatedByMePageResponses];

export type PostAssetLibraryDocumentFolderBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        assetLibraryId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/document-folders/batch';
};

export type PostAssetLibraryDocumentFolderBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostAssetLibraryDocumentFoldersPageExportBatchData = {
    body?: never;
    path: {
        assetLibraryId: string;
    };
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/document-folders/export-batch';
};

export type PostAssetLibraryDocumentFoldersPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostSiteDocumentFolderBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        siteId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/document-folders/batch';
};

export type PostSiteDocumentFolderBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostSiteDocumentFoldersPageExportBatchData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/document-folders/export-batch';
};

export type PostSiteDocumentFoldersPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutDocumentFolderSubscribeData = {
    body?: never;
    path: {
        documentFolderId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/document-folders/{documentFolderId}/subscribe';
};

export type PutDocumentFolderSubscribeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutDocumentFolderUnsubscribeData = {
    body?: never;
    path: {
        documentFolderId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/document-folders/{documentFolderId}/unsubscribe';
};

export type PutDocumentFolderUnsubscribeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteAssetLibraryDocumentMetadataSetByExternalReferenceCodeData = {
    body?: never;
    path: {
        assetLibraryId: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/document-metadata-sets/by-external-reference-code/{externalReferenceCode}';
};

export type DeleteAssetLibraryDocumentMetadataSetByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetAssetLibraryDocumentMetadataSetByExternalReferenceCodeData = {
    body?: never;
    path: {
        assetLibraryId: string;
        externalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/document-metadata-sets/by-external-reference-code/{externalReferenceCode}';
};

export type GetAssetLibraryDocumentMetadataSetByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: DocumentMetadataSetReadable;
};

export type GetAssetLibraryDocumentMetadataSetByExternalReferenceCodeResponse = GetAssetLibraryDocumentMetadataSetByExternalReferenceCodeResponses[keyof GetAssetLibraryDocumentMetadataSetByExternalReferenceCodeResponses];

export type PutAssetLibraryDocumentMetadataSetByExternalReferenceCodeData = {
    body?: DocumentMetadataSetWritable;
    path: {
        assetLibraryId: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/document-metadata-sets/by-external-reference-code/{externalReferenceCode}';
};

export type PutAssetLibraryDocumentMetadataSetByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: DocumentMetadataSetReadable;
};

export type PutAssetLibraryDocumentMetadataSetByExternalReferenceCodeResponse = PutAssetLibraryDocumentMetadataSetByExternalReferenceCodeResponses[keyof PutAssetLibraryDocumentMetadataSetByExternalReferenceCodeResponses];

export type DeleteDocumentMetadataSetData = {
    body?: never;
    path: {
        documentMetadataSetId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/document-metadata-sets/{documentMetadataSetId}';
};

export type DeleteDocumentMetadataSetResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetDocumentMetadataSetData = {
    body?: never;
    path: {
        documentMetadataSetId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/document-metadata-sets/{documentMetadataSetId}';
};

export type GetDocumentMetadataSetResponses = {
    /**
     * default response
     */
    default: DocumentMetadataSetReadable;
};

export type GetDocumentMetadataSetResponse = GetDocumentMetadataSetResponses[keyof GetDocumentMetadataSetResponses];

export type DeleteDocumentMetadataSetBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/document-metadata-sets/batch';
};

export type DeleteDocumentMetadataSetBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteSiteDocumentMetadataSetByExternalReferenceCodeData = {
    body?: never;
    path: {
        siteId: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/document-metadata-sets/by-external-reference-code/{externalReferenceCode}';
};

export type DeleteSiteDocumentMetadataSetByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSiteDocumentMetadataSetByExternalReferenceCodeData = {
    body?: never;
    path: {
        siteId: string;
        externalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/document-metadata-sets/by-external-reference-code/{externalReferenceCode}';
};

export type GetSiteDocumentMetadataSetByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: DocumentMetadataSetReadable;
};

export type GetSiteDocumentMetadataSetByExternalReferenceCodeResponse = GetSiteDocumentMetadataSetByExternalReferenceCodeResponses[keyof GetSiteDocumentMetadataSetByExternalReferenceCodeResponses];

export type PutSiteDocumentMetadataSetByExternalReferenceCodeData = {
    body?: DocumentMetadataSetWritable;
    path: {
        siteId: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/document-metadata-sets/by-external-reference-code/{externalReferenceCode}';
};

export type PutSiteDocumentMetadataSetByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: DocumentMetadataSetReadable;
};

export type PutSiteDocumentMetadataSetByExternalReferenceCodeResponse = PutSiteDocumentMetadataSetByExternalReferenceCodeResponses[keyof PutSiteDocumentMetadataSetByExternalReferenceCodeResponses];

export type GetAssetLibraryDocumentMetadataSetsPageData = {
    body?: never;
    path: {
        assetLibraryId: string;
    };
    query?: {
        fields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        nestedFields?: string;
    };
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/document-metadata-sets';
};

export type GetAssetLibraryDocumentMetadataSetsPageResponses = {
    /**
     * default response
     */
    default: PageDocumentMetadataSetReadable;
};

export type GetAssetLibraryDocumentMetadataSetsPageResponse = GetAssetLibraryDocumentMetadataSetsPageResponses[keyof GetAssetLibraryDocumentMetadataSetsPageResponses];

export type PostAssetLibraryDocumentMetadataSetData = {
    body?: DocumentMetadataSetWritable;
    path: {
        assetLibraryId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/document-metadata-sets';
};

export type PostAssetLibraryDocumentMetadataSetResponses = {
    /**
     * default response
     */
    default: DocumentMetadataSetReadable;
};

export type PostAssetLibraryDocumentMetadataSetResponse = PostAssetLibraryDocumentMetadataSetResponses[keyof PostAssetLibraryDocumentMetadataSetResponses];

export type GetSiteDocumentMetadataSetsPageData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        fields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        nestedFields?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/document-metadata-sets';
};

export type GetSiteDocumentMetadataSetsPageResponses = {
    /**
     * default response
     */
    default: PageDocumentMetadataSetReadable;
};

export type GetSiteDocumentMetadataSetsPageResponse = GetSiteDocumentMetadataSetsPageResponses[keyof GetSiteDocumentMetadataSetsPageResponses];

export type PostSiteDocumentMetadataSetData = {
    body?: DocumentMetadataSetWritable;
    path: {
        siteId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/document-metadata-sets';
};

export type PostSiteDocumentMetadataSetResponses = {
    /**
     * default response
     */
    default: DocumentMetadataSetReadable;
};

export type PostSiteDocumentMetadataSetResponse = PostSiteDocumentMetadataSetResponses[keyof PostSiteDocumentMetadataSetResponses];

export type PostAssetLibraryDocumentMetadataSetBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        assetLibraryId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/document-metadata-sets/batch';
};

export type PostAssetLibraryDocumentMetadataSetBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostAssetLibraryDocumentMetadataSetsPageExportBatchData = {
    body?: never;
    path: {
        assetLibraryId: string;
    };
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/document-metadata-sets/export-batch';
};

export type PostAssetLibraryDocumentMetadataSetsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostSiteDocumentMetadataSetBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        siteId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/document-metadata-sets/batch';
};

export type PostSiteDocumentMetadataSetBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostSiteDocumentMetadataSetsPageExportBatchData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/document-metadata-sets/export-batch';
};

export type PostSiteDocumentMetadataSetsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteAssetLibraryDocumentByExternalReferenceCodeData = {
    body?: never;
    path: {
        assetLibraryId: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/documents/by-external-reference-code/{externalReferenceCode}';
};

export type DeleteAssetLibraryDocumentByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetAssetLibraryDocumentByExternalReferenceCodeData = {
    body?: never;
    path: {
        assetLibraryId: string;
        externalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/documents/by-external-reference-code/{externalReferenceCode}';
};

export type GetAssetLibraryDocumentByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: DocumentReadable;
};

export type GetAssetLibraryDocumentByExternalReferenceCodeResponse = GetAssetLibraryDocumentByExternalReferenceCodeResponses[keyof GetAssetLibraryDocumentByExternalReferenceCodeResponses];

export type PutAssetLibraryDocumentByExternalReferenceCodeData = {
    body?: PutAssetLibraryDocumentByExternalReferenceCodeRequestBodyWritable;
    path: {
        assetLibraryId: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/documents/by-external-reference-code/{externalReferenceCode}';
};

export type PutAssetLibraryDocumentByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: DocumentReadable;
};

export type PutAssetLibraryDocumentByExternalReferenceCodeResponse = PutAssetLibraryDocumentByExternalReferenceCodeResponses[keyof PutAssetLibraryDocumentByExternalReferenceCodeResponses];

export type DeleteDocumentData = {
    body?: never;
    path: {
        documentId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/documents/{documentId}';
};

export type DeleteDocumentResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetDocumentData = {
    body?: never;
    path: {
        documentId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/documents/{documentId}';
};

export type GetDocumentResponses = {
    /**
     * default response
     */
    default: DocumentReadable;
};

export type GetDocumentResponse = GetDocumentResponses[keyof GetDocumentResponses];

export type PatchDocumentData = {
    body?: PatchDocumentRequestBodyWritable;
    path: {
        documentId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/documents/{documentId}';
};

export type PatchDocumentResponses = {
    /**
     * default response
     */
    default: DocumentReadable;
};

export type PatchDocumentResponse = PatchDocumentResponses[keyof PatchDocumentResponses];

export type PutDocumentData = {
    body?: PutDocumentRequestBodyWritable;
    path: {
        documentId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/documents/{documentId}';
};

export type PutDocumentResponses = {
    /**
     * default response
     */
    default: DocumentReadable;
};

export type PutDocumentResponse = PutDocumentResponses[keyof PutDocumentResponses];

export type DeleteDocumentBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/documents/batch';
};

export type DeleteDocumentBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutDocumentBatchData = {
    body?: MultipartBody;
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/documents/batch';
};

export type PutDocumentBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteDocumentMyRatingData = {
    body?: never;
    path: {
        documentId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/documents/{documentId}/my-rating';
};

export type DeleteDocumentMyRatingResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetDocumentMyRatingData = {
    body?: never;
    path: {
        documentId: string;
    };
    query?: {
        fields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/documents/{documentId}/my-rating';
};

export type GetDocumentMyRatingResponses = {
    /**
     * default response
     */
    default: RatingReadable;
};

export type GetDocumentMyRatingResponse = GetDocumentMyRatingResponses[keyof GetDocumentMyRatingResponses];

export type PostDocumentMyRatingData = {
    body?: RatingWritable;
    path: {
        documentId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/documents/{documentId}/my-rating';
};

export type PostDocumentMyRatingResponses = {
    /**
     * default response
     */
    default: RatingReadable;
};

export type PostDocumentMyRatingResponse = PostDocumentMyRatingResponses[keyof PostDocumentMyRatingResponses];

export type PutDocumentMyRatingData = {
    body?: RatingWritable;
    path: {
        documentId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/documents/{documentId}/my-rating';
};

export type PutDocumentMyRatingResponses = {
    /**
     * default response
     */
    default: RatingReadable;
};

export type PutDocumentMyRatingResponse = PutDocumentMyRatingResponses[keyof PutDocumentMyRatingResponses];

export type DeleteSiteDocumentByExternalReferenceCodeData = {
    body?: never;
    path: {
        siteId: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/documents/by-external-reference-code/{externalReferenceCode}';
};

export type DeleteSiteDocumentByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSiteDocumentByExternalReferenceCodeData = {
    body?: never;
    path: {
        siteId: string;
        externalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/documents/by-external-reference-code/{externalReferenceCode}';
};

export type GetSiteDocumentByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: DocumentReadable;
};

export type GetSiteDocumentByExternalReferenceCodeResponse = GetSiteDocumentByExternalReferenceCodeResponses[keyof GetSiteDocumentByExternalReferenceCodeResponses];

export type PutSiteDocumentByExternalReferenceCodeData = {
    body?: PutSiteDocumentByExternalReferenceCodeRequestBodyWritable;
    path: {
        siteId: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/documents/by-external-reference-code/{externalReferenceCode}';
};

export type PutSiteDocumentByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: DocumentReadable;
};

export type PutSiteDocumentByExternalReferenceCodeResponse = PutSiteDocumentByExternalReferenceCodeResponses[keyof PutSiteDocumentByExternalReferenceCodeResponses];

export type GetAssetLibraryDocumentPermissionsPageData = {
    body?: never;
    path: {
        assetLibraryId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
        roleNames?: string;
    };
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/documents/permissions';
};

export type GetAssetLibraryDocumentPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type GetAssetLibraryDocumentPermissionsPageResponse = GetAssetLibraryDocumentPermissionsPageResponses[keyof GetAssetLibraryDocumentPermissionsPageResponses];

export type PutAssetLibraryDocumentPermissionsPageData = {
    body?: Array<Permission>;
    path: {
        assetLibraryId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/documents/permissions';
};

export type PutAssetLibraryDocumentPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type PutAssetLibraryDocumentPermissionsPageResponse = PutAssetLibraryDocumentPermissionsPageResponses[keyof PutAssetLibraryDocumentPermissionsPageResponses];

export type GetAssetLibraryDocumentsPageData = {
    body?: never;
    path: {
        assetLibraryId: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        flatten?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/documents';
};

export type GetAssetLibraryDocumentsPageResponses = {
    /**
     * default response
     */
    default: PageDocumentReadable;
};

export type GetAssetLibraryDocumentsPageResponse = GetAssetLibraryDocumentsPageResponses[keyof GetAssetLibraryDocumentsPageResponses];

export type PostAssetLibraryDocumentData = {
    body?: PostAssetLibraryDocumentRequestBodyWritable;
    path: {
        assetLibraryId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/documents';
};

export type PostAssetLibraryDocumentResponses = {
    /**
     * default response
     */
    default: DocumentReadable;
};

export type PostAssetLibraryDocumentResponse = PostAssetLibraryDocumentResponses[keyof PostAssetLibraryDocumentResponses];

export type GetAssetLibraryDocumentsRatedByMePageData = {
    body?: never;
    path: {
        assetLibraryId: string;
    };
    query?: {
        page?: string;
        pageSize?: string;
        nestedFields?: string;
    };
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/documents/rated-by-me';
};

export type GetAssetLibraryDocumentsRatedByMePageResponses = {
    /**
     * default response
     */
    default: PageDocumentReadable;
};

export type GetAssetLibraryDocumentsRatedByMePageResponse = GetAssetLibraryDocumentsRatedByMePageResponses[keyof GetAssetLibraryDocumentsRatedByMePageResponses];

export type GetDocumentFolderDocumentsPageData = {
    body?: never;
    path: {
        documentFolderId: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        flatten?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-delivery/v1.0/document-folders/{documentFolderId}/documents';
};

export type GetDocumentFolderDocumentsPageResponses = {
    /**
     * default response
     */
    default: PageDocumentReadable;
};

export type GetDocumentFolderDocumentsPageResponse = GetDocumentFolderDocumentsPageResponses[keyof GetDocumentFolderDocumentsPageResponses];

export type PostDocumentFolderDocumentData = {
    body?: PostDocumentFolderDocumentRequestBodyWritable;
    path: {
        documentFolderId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/document-folders/{documentFolderId}/documents';
};

export type PostDocumentFolderDocumentResponses = {
    /**
     * default response
     */
    default: DocumentReadable;
};

export type PostDocumentFolderDocumentResponse = PostDocumentFolderDocumentResponses[keyof PostDocumentFolderDocumentResponses];

export type GetDocumentPermissionsPageData = {
    body?: never;
    path: {
        documentId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
        roleNames?: string;
    };
    url: '/o/headless-delivery/v1.0/documents/{documentId}/permissions';
};

export type GetDocumentPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type GetDocumentPermissionsPageResponse = GetDocumentPermissionsPageResponses[keyof GetDocumentPermissionsPageResponses];

export type PutDocumentPermissionsPageData = {
    body?: Array<Permission>;
    path: {
        documentId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/documents/{documentId}/permissions';
};

export type PutDocumentPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type PutDocumentPermissionsPageResponse = PutDocumentPermissionsPageResponses[keyof PutDocumentPermissionsPageResponses];

export type GetDocumentRenderedContentByDisplayPageDisplayPageKeyData = {
    body?: never;
    path: {
        documentId: string;
        displayPageKey: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/documents/{documentId}/rendered-content-by-display-page/{displayPageKey}';
};

export type GetDocumentRenderedContentByDisplayPageDisplayPageKeyResponses = {
    /**
     * default response
     */
    default: string;
};

export type GetDocumentRenderedContentByDisplayPageDisplayPageKeyResponse = GetDocumentRenderedContentByDisplayPageDisplayPageKeyResponses[keyof GetDocumentRenderedContentByDisplayPageDisplayPageKeyResponses];

export type GetSiteDocumentPermissionsPageData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
        roleNames?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/documents/permissions';
};

export type GetSiteDocumentPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type GetSiteDocumentPermissionsPageResponse = GetSiteDocumentPermissionsPageResponses[keyof GetSiteDocumentPermissionsPageResponses];

export type PutSiteDocumentPermissionsPageData = {
    body?: Array<Permission>;
    path: {
        siteId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/documents/permissions';
};

export type PutSiteDocumentPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type PutSiteDocumentPermissionsPageResponse = PutSiteDocumentPermissionsPageResponses[keyof PutSiteDocumentPermissionsPageResponses];

export type GetSiteDocumentsPageData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        flatten?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/documents';
};

export type GetSiteDocumentsPageResponses = {
    /**
     * default response
     */
    default: PageDocumentReadable;
};

export type GetSiteDocumentsPageResponse = GetSiteDocumentsPageResponses[keyof GetSiteDocumentsPageResponses];

export type PostSiteDocumentData = {
    body?: PostSiteDocumentRequestBodyWritable;
    path: {
        siteId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/documents';
};

export type PostSiteDocumentResponses = {
    /**
     * default response
     */
    default: DocumentReadable;
};

export type PostSiteDocumentResponse = PostSiteDocumentResponses[keyof PostSiteDocumentResponses];

export type GetSiteDocumentsRatedByMePageData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        page?: string;
        pageSize?: string;
        nestedFields?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/documents/rated-by-me';
};

export type GetSiteDocumentsRatedByMePageResponses = {
    /**
     * default response
     */
    default: PageDocumentReadable;
};

export type GetSiteDocumentsRatedByMePageResponse = GetSiteDocumentsRatedByMePageResponses[keyof GetSiteDocumentsRatedByMePageResponses];

export type PostAssetLibraryDocumentBatchData = {
    body?: MultipartBody;
    path: {
        assetLibraryId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/documents/batch';
};

export type PostAssetLibraryDocumentBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostAssetLibraryDocumentsPageExportBatchData = {
    body?: never;
    path: {
        assetLibraryId: string;
    };
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/documents/export-batch';
};

export type PostAssetLibraryDocumentsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostDocumentFolderDocumentBatchData = {
    body?: MultipartBody;
    path: {
        documentFolderId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/document-folders/{documentFolderId}/documents/batch';
};

export type PostDocumentFolderDocumentBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostDocumentFolderDocumentsPageExportBatchData = {
    body?: never;
    path: {
        documentFolderId: string;
    };
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-delivery/v1.0/document-folders/{documentFolderId}/documents/export-batch';
};

export type PostDocumentFolderDocumentsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostSiteDocumentBatchData = {
    body?: MultipartBody;
    path: {
        siteId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/documents/batch';
};

export type PostSiteDocumentBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostSiteDocumentsPageExportBatchData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/documents/export-batch';
};

export type PostSiteDocumentsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteDocumentShortcutData = {
    body?: never;
    path: {
        documentShortcutId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/document-shortcuts/{documentShortcutId}';
};

export type DeleteDocumentShortcutResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetDocumentShortcutData = {
    body?: never;
    path: {
        documentShortcutId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/document-shortcuts/{documentShortcutId}';
};

export type GetDocumentShortcutResponses = {
    /**
     * default response
     */
    default: DocumentShortcutReadable;
};

export type GetDocumentShortcutResponse = GetDocumentShortcutResponses[keyof GetDocumentShortcutResponses];

export type PatchDocumentShortcutData = {
    body?: DocumentShortcutWritable;
    path: {
        documentShortcutId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/document-shortcuts/{documentShortcutId}';
};

export type PatchDocumentShortcutResponses = {
    /**
     * default response
     */
    default: DocumentShortcutReadable;
};

export type PatchDocumentShortcutResponse = PatchDocumentShortcutResponses[keyof PatchDocumentShortcutResponses];

export type PutDocumentShortcutData = {
    body?: DocumentShortcutWritable;
    path: {
        documentShortcutId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/document-shortcuts/{documentShortcutId}';
};

export type PutDocumentShortcutResponses = {
    /**
     * default response
     */
    default: DocumentShortcutReadable;
};

export type PutDocumentShortcutResponse = PutDocumentShortcutResponses[keyof PutDocumentShortcutResponses];

export type DeleteDocumentShortcutBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/document-shortcuts/batch';
};

export type DeleteDocumentShortcutBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutDocumentShortcutBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/document-shortcuts/batch';
};

export type PutDocumentShortcutBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteSiteDocumentShortcutByExternalReferenceCodeData = {
    body?: never;
    path: {
        siteId: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/document-shortcuts/by-external-reference-code/{externalReferenceCode}';
};

export type DeleteSiteDocumentShortcutByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSiteDocumentShortcutByExternalReferenceCodeData = {
    body?: never;
    path: {
        siteId: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/document-shortcuts/by-external-reference-code/{externalReferenceCode}';
};

export type GetSiteDocumentShortcutByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: DocumentShortcutReadable;
};

export type GetSiteDocumentShortcutByExternalReferenceCodeResponse = GetSiteDocumentShortcutByExternalReferenceCodeResponses[keyof GetSiteDocumentShortcutByExternalReferenceCodeResponses];

export type PutSiteDocumentShortcutByExternalReferenceCodeData = {
    body?: DocumentShortcutWritable;
    path: {
        siteId: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/document-shortcuts/by-external-reference-code/{externalReferenceCode}';
};

export type PutSiteDocumentShortcutByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: DocumentShortcutReadable;
};

export type PutSiteDocumentShortcutByExternalReferenceCodeResponse = PutSiteDocumentShortcutByExternalReferenceCodeResponses[keyof PutSiteDocumentShortcutByExternalReferenceCodeResponses];

export type GetAssetLibraryDocumentShortcutsPageData = {
    body?: never;
    path: {
        assetLibraryId: string;
    };
    query?: {
        fields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        nestedFields?: string;
    };
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/document-shortcuts';
};

export type GetAssetLibraryDocumentShortcutsPageResponses = {
    /**
     * default response
     */
    default: PageDocumentShortcutReadable;
};

export type GetAssetLibraryDocumentShortcutsPageResponse = GetAssetLibraryDocumentShortcutsPageResponses[keyof GetAssetLibraryDocumentShortcutsPageResponses];

export type PostAssetLibraryDocumentShortcutData = {
    body?: DocumentShortcutWritable;
    path: {
        assetLibraryId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/document-shortcuts';
};

export type PostAssetLibraryDocumentShortcutResponses = {
    /**
     * default response
     */
    default: DocumentShortcutReadable;
};

export type PostAssetLibraryDocumentShortcutResponse = PostAssetLibraryDocumentShortcutResponses[keyof PostAssetLibraryDocumentShortcutResponses];

export type GetSiteDocumentShortcutsPageData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        fields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        nestedFields?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/document-shortcuts';
};

export type GetSiteDocumentShortcutsPageResponses = {
    /**
     * default response
     */
    default: PageDocumentShortcutReadable;
};

export type GetSiteDocumentShortcutsPageResponse = GetSiteDocumentShortcutsPageResponses[keyof GetSiteDocumentShortcutsPageResponses];

export type PostSiteDocumentShortcutData = {
    body?: DocumentShortcutWritable;
    path: {
        siteId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/document-shortcuts';
};

export type PostSiteDocumentShortcutResponses = {
    /**
     * default response
     */
    default: DocumentShortcutReadable;
};

export type PostSiteDocumentShortcutResponse = PostSiteDocumentShortcutResponses[keyof PostSiteDocumentShortcutResponses];

export type PostAssetLibraryDocumentShortcutBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        assetLibraryId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/document-shortcuts/batch';
};

export type PostAssetLibraryDocumentShortcutBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostAssetLibraryDocumentShortcutsPageExportBatchData = {
    body?: never;
    path: {
        assetLibraryId: string;
    };
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/document-shortcuts/export-batch';
};

export type PostAssetLibraryDocumentShortcutsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostSiteDocumentShortcutBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        siteId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/document-shortcuts/batch';
};

export type PostSiteDocumentShortcutBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostSiteDocumentShortcutsPageExportBatchData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/document-shortcuts/export-batch';
};

export type PostSiteDocumentShortcutsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteKnowledgeBaseArticleData = {
    body?: never;
    path: {
        knowledgeBaseArticleId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/knowledge-base-articles/{knowledgeBaseArticleId}';
};

export type DeleteKnowledgeBaseArticleResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetKnowledgeBaseArticleData = {
    body?: never;
    path: {
        knowledgeBaseArticleId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/knowledge-base-articles/{knowledgeBaseArticleId}';
};

export type GetKnowledgeBaseArticleResponses = {
    /**
     * default response
     */
    default: KnowledgeBaseArticleReadable;
};

export type GetKnowledgeBaseArticleResponse = GetKnowledgeBaseArticleResponses[keyof GetKnowledgeBaseArticleResponses];

export type PatchKnowledgeBaseArticleData = {
    body?: KnowledgeBaseArticleWritable;
    path: {
        knowledgeBaseArticleId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/knowledge-base-articles/{knowledgeBaseArticleId}';
};

export type PatchKnowledgeBaseArticleResponses = {
    /**
     * default response
     */
    default: KnowledgeBaseArticleReadable;
};

export type PatchKnowledgeBaseArticleResponse = PatchKnowledgeBaseArticleResponses[keyof PatchKnowledgeBaseArticleResponses];

export type PutKnowledgeBaseArticleData = {
    body?: KnowledgeBaseArticleWritable;
    path: {
        knowledgeBaseArticleId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/knowledge-base-articles/{knowledgeBaseArticleId}';
};

export type PutKnowledgeBaseArticleResponses = {
    /**
     * default response
     */
    default: KnowledgeBaseArticleReadable;
};

export type PutKnowledgeBaseArticleResponse = PutKnowledgeBaseArticleResponses[keyof PutKnowledgeBaseArticleResponses];

export type DeleteKnowledgeBaseArticleBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/knowledge-base-articles/batch';
};

export type DeleteKnowledgeBaseArticleBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutKnowledgeBaseArticleBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/knowledge-base-articles/batch';
};

export type PutKnowledgeBaseArticleBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteKnowledgeBaseArticleMyRatingData = {
    body?: never;
    path: {
        knowledgeBaseArticleId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/knowledge-base-articles/{knowledgeBaseArticleId}/my-rating';
};

export type DeleteKnowledgeBaseArticleMyRatingResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetKnowledgeBaseArticleMyRatingData = {
    body?: never;
    path: {
        knowledgeBaseArticleId: string;
    };
    query?: {
        fields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/knowledge-base-articles/{knowledgeBaseArticleId}/my-rating';
};

export type GetKnowledgeBaseArticleMyRatingResponses = {
    /**
     * default response
     */
    default: RatingReadable;
};

export type GetKnowledgeBaseArticleMyRatingResponse = GetKnowledgeBaseArticleMyRatingResponses[keyof GetKnowledgeBaseArticleMyRatingResponses];

export type PostKnowledgeBaseArticleMyRatingData = {
    body?: RatingWritable;
    path: {
        knowledgeBaseArticleId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/knowledge-base-articles/{knowledgeBaseArticleId}/my-rating';
};

export type PostKnowledgeBaseArticleMyRatingResponses = {
    /**
     * default response
     */
    default: RatingReadable;
};

export type PostKnowledgeBaseArticleMyRatingResponse = PostKnowledgeBaseArticleMyRatingResponses[keyof PostKnowledgeBaseArticleMyRatingResponses];

export type PutKnowledgeBaseArticleMyRatingData = {
    body?: RatingWritable;
    path: {
        knowledgeBaseArticleId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/knowledge-base-articles/{knowledgeBaseArticleId}/my-rating';
};

export type PutKnowledgeBaseArticleMyRatingResponses = {
    /**
     * default response
     */
    default: RatingReadable;
};

export type PutKnowledgeBaseArticleMyRatingResponse = PutKnowledgeBaseArticleMyRatingResponses[keyof PutKnowledgeBaseArticleMyRatingResponses];

export type DeleteSiteKnowledgeBaseArticleByExternalReferenceCodeData = {
    body?: never;
    path: {
        siteId: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/knowledge-base-articles/by-external-reference-code/{externalReferenceCode}';
};

export type DeleteSiteKnowledgeBaseArticleByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSiteKnowledgeBaseArticleByExternalReferenceCodeData = {
    body?: never;
    path: {
        siteId: string;
        externalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/knowledge-base-articles/by-external-reference-code/{externalReferenceCode}';
};

export type GetSiteKnowledgeBaseArticleByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: KnowledgeBaseArticleReadable;
};

export type GetSiteKnowledgeBaseArticleByExternalReferenceCodeResponse = GetSiteKnowledgeBaseArticleByExternalReferenceCodeResponses[keyof GetSiteKnowledgeBaseArticleByExternalReferenceCodeResponses];

export type PutSiteKnowledgeBaseArticleByExternalReferenceCodeData = {
    body?: KnowledgeBaseArticleWritable;
    path: {
        siteId: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/knowledge-base-articles/by-external-reference-code/{externalReferenceCode}';
};

export type PutSiteKnowledgeBaseArticleByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: KnowledgeBaseArticleReadable;
};

export type PutSiteKnowledgeBaseArticleByExternalReferenceCodeResponse = PutSiteKnowledgeBaseArticleByExternalReferenceCodeResponses[keyof PutSiteKnowledgeBaseArticleByExternalReferenceCodeResponses];

export type GetKnowledgeBaseArticleKnowledgeBaseArticlesPageData = {
    body?: never;
    path: {
        parentKnowledgeBaseArticleId: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        flatten?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-delivery/v1.0/knowledge-base-articles/{parentKnowledgeBaseArticleId}/knowledge-base-articles';
};

export type GetKnowledgeBaseArticleKnowledgeBaseArticlesPageResponses = {
    /**
     * default response
     */
    default: PageKnowledgeBaseArticleReadable;
};

export type GetKnowledgeBaseArticleKnowledgeBaseArticlesPageResponse = GetKnowledgeBaseArticleKnowledgeBaseArticlesPageResponses[keyof GetKnowledgeBaseArticleKnowledgeBaseArticlesPageResponses];

export type PostKnowledgeBaseArticleKnowledgeBaseArticleData = {
    body?: KnowledgeBaseArticleWritable;
    path: {
        parentKnowledgeBaseArticleId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/knowledge-base-articles/{parentKnowledgeBaseArticleId}/knowledge-base-articles';
};

export type PostKnowledgeBaseArticleKnowledgeBaseArticleResponses = {
    /**
     * default response
     */
    default: KnowledgeBaseArticleReadable;
};

export type PostKnowledgeBaseArticleKnowledgeBaseArticleResponse = PostKnowledgeBaseArticleKnowledgeBaseArticleResponses[keyof PostKnowledgeBaseArticleKnowledgeBaseArticleResponses];

export type GetKnowledgeBaseArticlePermissionsPageData = {
    body?: never;
    path: {
        knowledgeBaseArticleId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
        roleNames?: string;
    };
    url: '/o/headless-delivery/v1.0/knowledge-base-articles/{knowledgeBaseArticleId}/permissions';
};

export type GetKnowledgeBaseArticlePermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type GetKnowledgeBaseArticlePermissionsPageResponse = GetKnowledgeBaseArticlePermissionsPageResponses[keyof GetKnowledgeBaseArticlePermissionsPageResponses];

export type PutKnowledgeBaseArticlePermissionsPageData = {
    body?: Array<Permission>;
    path: {
        knowledgeBaseArticleId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/knowledge-base-articles/{knowledgeBaseArticleId}/permissions';
};

export type PutKnowledgeBaseArticlePermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type PutKnowledgeBaseArticlePermissionsPageResponse = PutKnowledgeBaseArticlePermissionsPageResponses[keyof PutKnowledgeBaseArticlePermissionsPageResponses];

export type GetKnowledgeBaseFolderKnowledgeBaseArticlesPageData = {
    body?: never;
    path: {
        knowledgeBaseFolderId: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        flatten?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-delivery/v1.0/knowledge-base-folders/{knowledgeBaseFolderId}/knowledge-base-articles';
};

export type GetKnowledgeBaseFolderKnowledgeBaseArticlesPageResponses = {
    /**
     * default response
     */
    default: PageKnowledgeBaseArticleReadable;
};

export type GetKnowledgeBaseFolderKnowledgeBaseArticlesPageResponse = GetKnowledgeBaseFolderKnowledgeBaseArticlesPageResponses[keyof GetKnowledgeBaseFolderKnowledgeBaseArticlesPageResponses];

export type PostKnowledgeBaseFolderKnowledgeBaseArticleData = {
    body?: KnowledgeBaseArticleWritable;
    path: {
        knowledgeBaseFolderId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/knowledge-base-folders/{knowledgeBaseFolderId}/knowledge-base-articles';
};

export type PostKnowledgeBaseFolderKnowledgeBaseArticleResponses = {
    /**
     * default response
     */
    default: KnowledgeBaseArticleReadable;
};

export type PostKnowledgeBaseFolderKnowledgeBaseArticleResponse = PostKnowledgeBaseFolderKnowledgeBaseArticleResponses[keyof PostKnowledgeBaseFolderKnowledgeBaseArticleResponses];

export type GetSiteKnowledgeBaseArticlePermissionsPageData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
        roleNames?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/knowledge-base-articles/permissions';
};

export type GetSiteKnowledgeBaseArticlePermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type GetSiteKnowledgeBaseArticlePermissionsPageResponse = GetSiteKnowledgeBaseArticlePermissionsPageResponses[keyof GetSiteKnowledgeBaseArticlePermissionsPageResponses];

export type PutSiteKnowledgeBaseArticlePermissionsPageData = {
    body?: Array<Permission>;
    path: {
        siteId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/knowledge-base-articles/permissions';
};

export type PutSiteKnowledgeBaseArticlePermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type PutSiteKnowledgeBaseArticlePermissionsPageResponse = PutSiteKnowledgeBaseArticlePermissionsPageResponses[keyof PutSiteKnowledgeBaseArticlePermissionsPageResponses];

export type GetSiteKnowledgeBaseArticlesPageData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        flatten?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/knowledge-base-articles';
};

export type GetSiteKnowledgeBaseArticlesPageResponses = {
    /**
     * default response
     */
    default: PageKnowledgeBaseArticleReadable;
};

export type GetSiteKnowledgeBaseArticlesPageResponse = GetSiteKnowledgeBaseArticlesPageResponses[keyof GetSiteKnowledgeBaseArticlesPageResponses];

export type PostSiteKnowledgeBaseArticleData = {
    body?: KnowledgeBaseArticleWritable;
    path: {
        siteId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/knowledge-base-articles';
};

export type PostSiteKnowledgeBaseArticleResponses = {
    /**
     * default response
     */
    default: KnowledgeBaseArticleReadable;
};

export type PostSiteKnowledgeBaseArticleResponse = PostSiteKnowledgeBaseArticleResponses[keyof PostSiteKnowledgeBaseArticleResponses];

export type PostKnowledgeBaseFolderKnowledgeBaseArticleBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        knowledgeBaseFolderId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/knowledge-base-folders/{knowledgeBaseFolderId}/knowledge-base-articles/batch';
};

export type PostKnowledgeBaseFolderKnowledgeBaseArticleBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostKnowledgeBaseFolderKnowledgeBaseArticlesPageExportBatchData = {
    body?: never;
    path: {
        knowledgeBaseFolderId: string;
    };
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-delivery/v1.0/knowledge-base-folders/{knowledgeBaseFolderId}/knowledge-base-articles/export-batch';
};

export type PostKnowledgeBaseFolderKnowledgeBaseArticlesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostSiteKnowledgeBaseArticleBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        siteId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/knowledge-base-articles/batch';
};

export type PostSiteKnowledgeBaseArticleBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostSiteKnowledgeBaseArticlesPageExportBatchData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/knowledge-base-articles/export-batch';
};

export type PostSiteKnowledgeBaseArticlesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutKnowledgeBaseArticleSubscribeData = {
    body?: never;
    path: {
        knowledgeBaseArticleId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/knowledge-base-articles/{knowledgeBaseArticleId}/subscribe';
};

export type PutKnowledgeBaseArticleSubscribeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutKnowledgeBaseArticleUnsubscribeData = {
    body?: never;
    path: {
        knowledgeBaseArticleId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/knowledge-base-articles/{knowledgeBaseArticleId}/unsubscribe';
};

export type PutKnowledgeBaseArticleUnsubscribeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutSiteKnowledgeBaseArticleSubscribeData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/knowledge-base-articles/subscribe';
};

export type PutSiteKnowledgeBaseArticleSubscribeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutSiteKnowledgeBaseArticleUnsubscribeData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/knowledge-base-articles/unsubscribe';
};

export type PutSiteKnowledgeBaseArticleUnsubscribeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteKnowledgeBaseAttachmentData = {
    body?: never;
    path: {
        knowledgeBaseAttachmentId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/knowledge-base-attachments/{knowledgeBaseAttachmentId}';
};

export type DeleteKnowledgeBaseAttachmentResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetKnowledgeBaseAttachmentData = {
    body?: never;
    path: {
        knowledgeBaseAttachmentId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/knowledge-base-attachments/{knowledgeBaseAttachmentId}';
};

export type GetKnowledgeBaseAttachmentResponses = {
    /**
     * default response
     */
    default: KnowledgeBaseAttachmentReadable;
};

export type GetKnowledgeBaseAttachmentResponse = GetKnowledgeBaseAttachmentResponses[keyof GetKnowledgeBaseAttachmentResponses];

export type DeleteKnowledgeBaseAttachmentBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/knowledge-base-attachments/batch';
};

export type DeleteKnowledgeBaseAttachmentBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteSiteKnowledgeBaseArticleByExternalReferenceCodeKnowledgeBaseArticleExternalReferenceCodeKnowledgeBaseAttachmentByExternalReferenceCodeData = {
    body?: never;
    path: {
        siteId: string;
        knowledgeBaseArticleExternalReferenceCode: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/knowledge-base-articles/by-external-reference-code/{knowledgeBaseArticleExternalReferenceCode}/knowledge-base-attachments/by-external-reference-code/{externalReferenceCode}';
};

export type DeleteSiteKnowledgeBaseArticleByExternalReferenceCodeKnowledgeBaseArticleExternalReferenceCodeKnowledgeBaseAttachmentByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSiteKnowledgeBaseArticleByExternalReferenceCodeKnowledgeBaseArticleExternalReferenceCodeKnowledgeBaseAttachmentByExternalReferenceCodeData = {
    body?: never;
    path: {
        siteId: string;
        knowledgeBaseArticleExternalReferenceCode: string;
        externalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/knowledge-base-articles/by-external-reference-code/{knowledgeBaseArticleExternalReferenceCode}/knowledge-base-attachments/by-external-reference-code/{externalReferenceCode}';
};

export type GetSiteKnowledgeBaseArticleByExternalReferenceCodeKnowledgeBaseArticleExternalReferenceCodeKnowledgeBaseAttachmentByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: KnowledgeBaseAttachmentReadable;
};

export type GetSiteKnowledgeBaseArticleByExternalReferenceCodeKnowledgeBaseArticleExternalReferenceCodeKnowledgeBaseAttachmentByExternalReferenceCodeResponse = GetSiteKnowledgeBaseArticleByExternalReferenceCodeKnowledgeBaseArticleExternalReferenceCodeKnowledgeBaseAttachmentByExternalReferenceCodeResponses[keyof GetSiteKnowledgeBaseArticleByExternalReferenceCodeKnowledgeBaseArticleExternalReferenceCodeKnowledgeBaseAttachmentByExternalReferenceCodeResponses];

export type GetKnowledgeBaseArticleKnowledgeBaseAttachmentsPageData = {
    body?: never;
    path: {
        knowledgeBaseArticleId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/knowledge-base-articles/{knowledgeBaseArticleId}/knowledge-base-attachments';
};

export type GetKnowledgeBaseArticleKnowledgeBaseAttachmentsPageResponses = {
    /**
     * default response
     */
    default: PageKnowledgeBaseAttachmentReadable;
};

export type GetKnowledgeBaseArticleKnowledgeBaseAttachmentsPageResponse = GetKnowledgeBaseArticleKnowledgeBaseAttachmentsPageResponses[keyof GetKnowledgeBaseArticleKnowledgeBaseAttachmentsPageResponses];

export type PostKnowledgeBaseArticleKnowledgeBaseAttachmentData = {
    body?: PostKnowledgeBaseArticleKnowledgeBaseAttachmentRequestBodyWritable;
    path: {
        knowledgeBaseArticleId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/knowledge-base-articles/{knowledgeBaseArticleId}/knowledge-base-attachments';
};

export type PostKnowledgeBaseArticleKnowledgeBaseAttachmentResponses = {
    /**
     * default response
     */
    default: KnowledgeBaseAttachmentReadable;
};

export type PostKnowledgeBaseArticleKnowledgeBaseAttachmentResponse = PostKnowledgeBaseArticleKnowledgeBaseAttachmentResponses[keyof PostKnowledgeBaseArticleKnowledgeBaseAttachmentResponses];

export type PostKnowledgeBaseArticleKnowledgeBaseAttachmentBatchData = {
    body?: MultipartBody;
    path: {
        knowledgeBaseArticleId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/knowledge-base-articles/{knowledgeBaseArticleId}/knowledge-base-attachments/batch';
};

export type PostKnowledgeBaseArticleKnowledgeBaseAttachmentBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostKnowledgeBaseArticleKnowledgeBaseAttachmentsPageExportBatchData = {
    body?: never;
    path: {
        knowledgeBaseArticleId: string;
    };
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-delivery/v1.0/knowledge-base-articles/{knowledgeBaseArticleId}/knowledge-base-attachments/export-batch';
};

export type PostKnowledgeBaseArticleKnowledgeBaseAttachmentsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteKnowledgeBaseFolderData = {
    body?: never;
    path: {
        knowledgeBaseFolderId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/knowledge-base-folders/{knowledgeBaseFolderId}';
};

export type DeleteKnowledgeBaseFolderResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetKnowledgeBaseFolderData = {
    body?: never;
    path: {
        knowledgeBaseFolderId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/knowledge-base-folders/{knowledgeBaseFolderId}';
};

export type GetKnowledgeBaseFolderResponses = {
    /**
     * default response
     */
    default: KnowledgeBaseFolderReadable;
};

export type GetKnowledgeBaseFolderResponse = GetKnowledgeBaseFolderResponses[keyof GetKnowledgeBaseFolderResponses];

export type PatchKnowledgeBaseFolderData = {
    body?: KnowledgeBaseFolderWritable;
    path: {
        knowledgeBaseFolderId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/knowledge-base-folders/{knowledgeBaseFolderId}';
};

export type PatchKnowledgeBaseFolderResponses = {
    /**
     * default response
     */
    default: KnowledgeBaseFolderReadable;
};

export type PatchKnowledgeBaseFolderResponse = PatchKnowledgeBaseFolderResponses[keyof PatchKnowledgeBaseFolderResponses];

export type PutKnowledgeBaseFolderData = {
    body?: KnowledgeBaseFolderWritable;
    path: {
        knowledgeBaseFolderId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/knowledge-base-folders/{knowledgeBaseFolderId}';
};

export type PutKnowledgeBaseFolderResponses = {
    /**
     * default response
     */
    default: KnowledgeBaseFolderReadable;
};

export type PutKnowledgeBaseFolderResponse = PutKnowledgeBaseFolderResponses[keyof PutKnowledgeBaseFolderResponses];

export type DeleteKnowledgeBaseFolderBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/knowledge-base-folders/batch';
};

export type DeleteKnowledgeBaseFolderBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutKnowledgeBaseFolderBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/knowledge-base-folders/batch';
};

export type PutKnowledgeBaseFolderBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteSiteKnowledgeBaseFolderByExternalReferenceCodeData = {
    body?: never;
    path: {
        siteId: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/knowledge-base-folders/by-external-reference-code/{externalReferenceCode}';
};

export type DeleteSiteKnowledgeBaseFolderByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSiteKnowledgeBaseFolderByExternalReferenceCodeData = {
    body?: never;
    path: {
        siteId: string;
        externalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/knowledge-base-folders/by-external-reference-code/{externalReferenceCode}';
};

export type GetSiteKnowledgeBaseFolderByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: KnowledgeBaseFolderReadable;
};

export type GetSiteKnowledgeBaseFolderByExternalReferenceCodeResponse = GetSiteKnowledgeBaseFolderByExternalReferenceCodeResponses[keyof GetSiteKnowledgeBaseFolderByExternalReferenceCodeResponses];

export type PutSiteKnowledgeBaseFolderByExternalReferenceCodeData = {
    body?: KnowledgeBaseFolderWritable;
    path: {
        siteId: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/knowledge-base-folders/by-external-reference-code/{externalReferenceCode}';
};

export type PutSiteKnowledgeBaseFolderByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: KnowledgeBaseFolderReadable;
};

export type PutSiteKnowledgeBaseFolderByExternalReferenceCodeResponse = PutSiteKnowledgeBaseFolderByExternalReferenceCodeResponses[keyof PutSiteKnowledgeBaseFolderByExternalReferenceCodeResponses];

export type GetKnowledgeBaseFolderKnowledgeBaseFoldersPageData = {
    body?: never;
    path: {
        parentKnowledgeBaseFolderId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/knowledge-base-folders/{parentKnowledgeBaseFolderId}/knowledge-base-folders';
};

export type GetKnowledgeBaseFolderKnowledgeBaseFoldersPageResponses = {
    /**
     * default response
     */
    default: PageKnowledgeBaseFolderReadable;
};

export type GetKnowledgeBaseFolderKnowledgeBaseFoldersPageResponse = GetKnowledgeBaseFolderKnowledgeBaseFoldersPageResponses[keyof GetKnowledgeBaseFolderKnowledgeBaseFoldersPageResponses];

export type PostKnowledgeBaseFolderKnowledgeBaseFolderData = {
    body?: KnowledgeBaseFolderWritable;
    path: {
        parentKnowledgeBaseFolderId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/knowledge-base-folders/{parentKnowledgeBaseFolderId}/knowledge-base-folders';
};

export type PostKnowledgeBaseFolderKnowledgeBaseFolderResponses = {
    /**
     * default response
     */
    default: KnowledgeBaseFolderReadable;
};

export type PostKnowledgeBaseFolderKnowledgeBaseFolderResponse = PostKnowledgeBaseFolderKnowledgeBaseFolderResponses[keyof PostKnowledgeBaseFolderKnowledgeBaseFolderResponses];

export type GetKnowledgeBaseFolderPermissionsPageData = {
    body?: never;
    path: {
        knowledgeBaseFolderId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
        roleNames?: string;
    };
    url: '/o/headless-delivery/v1.0/knowledge-base-folders/{knowledgeBaseFolderId}/permissions';
};

export type GetKnowledgeBaseFolderPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type GetKnowledgeBaseFolderPermissionsPageResponse = GetKnowledgeBaseFolderPermissionsPageResponses[keyof GetKnowledgeBaseFolderPermissionsPageResponses];

export type PutKnowledgeBaseFolderPermissionsPageData = {
    body?: Array<Permission>;
    path: {
        knowledgeBaseFolderId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/knowledge-base-folders/{knowledgeBaseFolderId}/permissions';
};

export type PutKnowledgeBaseFolderPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type PutKnowledgeBaseFolderPermissionsPageResponse = PutKnowledgeBaseFolderPermissionsPageResponses[keyof PutKnowledgeBaseFolderPermissionsPageResponses];

export type GetSiteKnowledgeBaseFolderPermissionsPageData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
        roleNames?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/knowledge-base-folders/permissions';
};

export type GetSiteKnowledgeBaseFolderPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type GetSiteKnowledgeBaseFolderPermissionsPageResponse = GetSiteKnowledgeBaseFolderPermissionsPageResponses[keyof GetSiteKnowledgeBaseFolderPermissionsPageResponses];

export type PutSiteKnowledgeBaseFolderPermissionsPageData = {
    body?: Array<Permission>;
    path: {
        siteId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/knowledge-base-folders/permissions';
};

export type PutSiteKnowledgeBaseFolderPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type PutSiteKnowledgeBaseFolderPermissionsPageResponse = PutSiteKnowledgeBaseFolderPermissionsPageResponses[keyof PutSiteKnowledgeBaseFolderPermissionsPageResponses];

export type GetSiteKnowledgeBaseFoldersPageData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/knowledge-base-folders';
};

export type GetSiteKnowledgeBaseFoldersPageResponses = {
    /**
     * default response
     */
    default: PageKnowledgeBaseFolderReadable;
};

export type GetSiteKnowledgeBaseFoldersPageResponse = GetSiteKnowledgeBaseFoldersPageResponses[keyof GetSiteKnowledgeBaseFoldersPageResponses];

export type PostSiteKnowledgeBaseFolderData = {
    body?: KnowledgeBaseFolderWritable;
    path: {
        siteId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/knowledge-base-folders';
};

export type PostSiteKnowledgeBaseFolderResponses = {
    /**
     * default response
     */
    default: KnowledgeBaseFolderReadable;
};

export type PostSiteKnowledgeBaseFolderResponse = PostSiteKnowledgeBaseFolderResponses[keyof PostSiteKnowledgeBaseFolderResponses];

export type PostSiteKnowledgeBaseFolderBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        siteId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/knowledge-base-folders/batch';
};

export type PostSiteKnowledgeBaseFolderBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostSiteKnowledgeBaseFoldersPageExportBatchData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/knowledge-base-folders/export-batch';
};

export type PostSiteKnowledgeBaseFoldersPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetAssetLibraryLanguagesPageData = {
    body?: never;
    path: {
        assetLibraryId: string;
    };
    query?: {
        fields?: string;
        restrictFields?: string;
        nestedFields?: string;
    };
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/languages';
};

export type GetAssetLibraryLanguagesPageResponses = {
    /**
     * default response
     */
    default: PageLanguageReadable;
};

export type GetAssetLibraryLanguagesPageResponse = GetAssetLibraryLanguagesPageResponses[keyof GetAssetLibraryLanguagesPageResponses];

export type GetSiteLanguagesPageData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        fields?: string;
        restrictFields?: string;
        nestedFields?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/languages';
};

export type GetSiteLanguagesPageResponses = {
    /**
     * default response
     */
    default: PageLanguageReadable;
};

export type GetSiteLanguagesPageResponse = GetSiteLanguagesPageResponses[keyof GetSiteLanguagesPageResponses];

export type PostAssetLibraryLanguagesPageExportBatchData = {
    body?: never;
    path: {
        assetLibraryId: string;
    };
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/languages/export-batch';
};

export type PostAssetLibraryLanguagesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostSiteLanguagesPageExportBatchData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/languages/export-batch';
};

export type PostSiteLanguagesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteMessageBoardAttachmentData = {
    body?: never;
    path: {
        messageBoardAttachmentId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/message-board-attachments/{messageBoardAttachmentId}';
};

export type DeleteMessageBoardAttachmentResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetMessageBoardAttachmentData = {
    body?: never;
    path: {
        messageBoardAttachmentId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/message-board-attachments/{messageBoardAttachmentId}';
};

export type GetMessageBoardAttachmentResponses = {
    /**
     * default response
     */
    default: MessageBoardAttachmentReadable;
};

export type GetMessageBoardAttachmentResponse = GetMessageBoardAttachmentResponses[keyof GetMessageBoardAttachmentResponses];

export type DeleteMessageBoardAttachmentBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/message-board-attachments/batch';
};

export type DeleteMessageBoardAttachmentBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteSiteMessageBoardMessageByExternalReferenceCodeMessageBoardMessageExternalReferenceCodeMessageBoardAttachmentByExternalReferenceCodeData = {
    body?: never;
    path: {
        siteId: string;
        messageBoardMessageExternalReferenceCode: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/message-board-messages/by-external-reference-code/{messageBoardMessageExternalReferenceCode}/message-board-attachments/by-external-reference-code/{externalReferenceCode}';
};

export type DeleteSiteMessageBoardMessageByExternalReferenceCodeMessageBoardMessageExternalReferenceCodeMessageBoardAttachmentByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSiteMessageBoardMessageByExternalReferenceCodeMessageBoardMessageExternalReferenceCodeMessageBoardAttachmentByExternalReferenceCodeData = {
    body?: never;
    path: {
        siteId: string;
        messageBoardMessageExternalReferenceCode: string;
        externalReferenceCode: string;
    };
    query?: {
        fields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/message-board-messages/by-external-reference-code/{messageBoardMessageExternalReferenceCode}/message-board-attachments/by-external-reference-code/{externalReferenceCode}';
};

export type GetSiteMessageBoardMessageByExternalReferenceCodeMessageBoardMessageExternalReferenceCodeMessageBoardAttachmentByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: MessageBoardAttachmentReadable;
};

export type GetSiteMessageBoardMessageByExternalReferenceCodeMessageBoardMessageExternalReferenceCodeMessageBoardAttachmentByExternalReferenceCodeResponse = GetSiteMessageBoardMessageByExternalReferenceCodeMessageBoardMessageExternalReferenceCodeMessageBoardAttachmentByExternalReferenceCodeResponses[keyof GetSiteMessageBoardMessageByExternalReferenceCodeMessageBoardMessageExternalReferenceCodeMessageBoardAttachmentByExternalReferenceCodeResponses];

export type GetMessageBoardMessageMessageBoardAttachmentsPageData = {
    body?: never;
    path: {
        messageBoardMessageId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/message-board-messages/{messageBoardMessageId}/message-board-attachments';
};

export type GetMessageBoardMessageMessageBoardAttachmentsPageResponses = {
    /**
     * default response
     */
    default: PageMessageBoardAttachmentReadable;
};

export type GetMessageBoardMessageMessageBoardAttachmentsPageResponse = GetMessageBoardMessageMessageBoardAttachmentsPageResponses[keyof GetMessageBoardMessageMessageBoardAttachmentsPageResponses];

export type PostMessageBoardMessageMessageBoardAttachmentData = {
    body?: PostMessageBoardMessageMessageBoardAttachmentRequestBodyWritable;
    path: {
        messageBoardMessageId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/message-board-messages/{messageBoardMessageId}/message-board-attachments';
};

export type PostMessageBoardMessageMessageBoardAttachmentResponses = {
    /**
     * default response
     */
    default: MessageBoardAttachmentReadable;
};

export type PostMessageBoardMessageMessageBoardAttachmentResponse = PostMessageBoardMessageMessageBoardAttachmentResponses[keyof PostMessageBoardMessageMessageBoardAttachmentResponses];

export type GetMessageBoardThreadMessageBoardAttachmentsPageData = {
    body?: never;
    path: {
        messageBoardThreadId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/message-board-threads/{messageBoardThreadId}/message-board-attachments';
};

export type GetMessageBoardThreadMessageBoardAttachmentsPageResponses = {
    /**
     * default response
     */
    default: PageMessageBoardAttachmentReadable;
};

export type GetMessageBoardThreadMessageBoardAttachmentsPageResponse = GetMessageBoardThreadMessageBoardAttachmentsPageResponses[keyof GetMessageBoardThreadMessageBoardAttachmentsPageResponses];

export type PostMessageBoardThreadMessageBoardAttachmentData = {
    body?: PostMessageBoardThreadMessageBoardAttachmentRequestBodyWritable;
    path: {
        messageBoardThreadId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/message-board-threads/{messageBoardThreadId}/message-board-attachments';
};

export type PostMessageBoardThreadMessageBoardAttachmentResponses = {
    /**
     * default response
     */
    default: MessageBoardAttachmentReadable;
};

export type PostMessageBoardThreadMessageBoardAttachmentResponse = PostMessageBoardThreadMessageBoardAttachmentResponses[keyof PostMessageBoardThreadMessageBoardAttachmentResponses];

export type PostMessageBoardMessageMessageBoardAttachmentBatchData = {
    body?: MultipartBody;
    path: {
        messageBoardMessageId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/message-board-messages/{messageBoardMessageId}/message-board-attachments/batch';
};

export type PostMessageBoardMessageMessageBoardAttachmentBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostMessageBoardMessageMessageBoardAttachmentsPageExportBatchData = {
    body?: never;
    path: {
        messageBoardMessageId: string;
    };
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-delivery/v1.0/message-board-messages/{messageBoardMessageId}/message-board-attachments/export-batch';
};

export type PostMessageBoardMessageMessageBoardAttachmentsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostMessageBoardThreadMessageBoardAttachmentBatchData = {
    body?: MultipartBody;
    path: {
        messageBoardThreadId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/message-board-threads/{messageBoardThreadId}/message-board-attachments/batch';
};

export type PostMessageBoardThreadMessageBoardAttachmentBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostMessageBoardThreadMessageBoardAttachmentsPageExportBatchData = {
    body?: never;
    path: {
        messageBoardThreadId: string;
    };
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-delivery/v1.0/message-board-threads/{messageBoardThreadId}/message-board-attachments/export-batch';
};

export type PostMessageBoardThreadMessageBoardAttachmentsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteMessageBoardMessageData = {
    body?: never;
    path: {
        messageBoardMessageId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/message-board-messages/{messageBoardMessageId}';
};

export type DeleteMessageBoardMessageResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetMessageBoardMessageData = {
    body?: never;
    path: {
        messageBoardMessageId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/message-board-messages/{messageBoardMessageId}';
};

export type GetMessageBoardMessageResponses = {
    /**
     * default response
     */
    default: MessageBoardMessageReadable;
};

export type GetMessageBoardMessageResponse = GetMessageBoardMessageResponses[keyof GetMessageBoardMessageResponses];

export type PatchMessageBoardMessageData = {
    body?: MessageBoardMessageWritable;
    path: {
        messageBoardMessageId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/message-board-messages/{messageBoardMessageId}';
};

export type PatchMessageBoardMessageResponses = {
    /**
     * default response
     */
    default: MessageBoardMessageReadable;
};

export type PatchMessageBoardMessageResponse = PatchMessageBoardMessageResponses[keyof PatchMessageBoardMessageResponses];

export type PutMessageBoardMessageData = {
    body?: MessageBoardMessageWritable;
    path: {
        messageBoardMessageId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/message-board-messages/{messageBoardMessageId}';
};

export type PutMessageBoardMessageResponses = {
    /**
     * default response
     */
    default: MessageBoardMessageReadable;
};

export type PutMessageBoardMessageResponse = PutMessageBoardMessageResponses[keyof PutMessageBoardMessageResponses];

export type DeleteMessageBoardMessageBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/message-board-messages/batch';
};

export type DeleteMessageBoardMessageBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutMessageBoardMessageBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/message-board-messages/batch';
};

export type PutMessageBoardMessageBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteMessageBoardMessageMyRatingData = {
    body?: never;
    path: {
        messageBoardMessageId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/message-board-messages/{messageBoardMessageId}/my-rating';
};

export type DeleteMessageBoardMessageMyRatingResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetMessageBoardMessageMyRatingData = {
    body?: never;
    path: {
        messageBoardMessageId: string;
    };
    query?: {
        fields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/message-board-messages/{messageBoardMessageId}/my-rating';
};

export type GetMessageBoardMessageMyRatingResponses = {
    /**
     * default response
     */
    default: RatingReadable;
};

export type GetMessageBoardMessageMyRatingResponse = GetMessageBoardMessageMyRatingResponses[keyof GetMessageBoardMessageMyRatingResponses];

export type PostMessageBoardMessageMyRatingData = {
    body?: RatingWritable;
    path: {
        messageBoardMessageId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/message-board-messages/{messageBoardMessageId}/my-rating';
};

export type PostMessageBoardMessageMyRatingResponses = {
    /**
     * default response
     */
    default: RatingReadable;
};

export type PostMessageBoardMessageMyRatingResponse = PostMessageBoardMessageMyRatingResponses[keyof PostMessageBoardMessageMyRatingResponses];

export type PutMessageBoardMessageMyRatingData = {
    body?: RatingWritable;
    path: {
        messageBoardMessageId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/message-board-messages/{messageBoardMessageId}/my-rating';
};

export type PutMessageBoardMessageMyRatingResponses = {
    /**
     * default response
     */
    default: RatingReadable;
};

export type PutMessageBoardMessageMyRatingResponse = PutMessageBoardMessageMyRatingResponses[keyof PutMessageBoardMessageMyRatingResponses];

export type DeleteSiteMessageBoardMessageByExternalReferenceCodeData = {
    body?: never;
    path: {
        siteId: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/message-board-messages/by-external-reference-code/{externalReferenceCode}';
};

export type DeleteSiteMessageBoardMessageByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSiteMessageBoardMessageByExternalReferenceCodeData = {
    body?: never;
    path: {
        siteId: string;
        externalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/message-board-messages/by-external-reference-code/{externalReferenceCode}';
};

export type GetSiteMessageBoardMessageByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: MessageBoardMessageReadable;
};

export type GetSiteMessageBoardMessageByExternalReferenceCodeResponse = GetSiteMessageBoardMessageByExternalReferenceCodeResponses[keyof GetSiteMessageBoardMessageByExternalReferenceCodeResponses];

export type PutSiteMessageBoardMessageByExternalReferenceCodeData = {
    body?: MessageBoardMessageWritable;
    path: {
        siteId: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/message-board-messages/by-external-reference-code/{externalReferenceCode}';
};

export type PutSiteMessageBoardMessageByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: MessageBoardMessageReadable;
};

export type PutSiteMessageBoardMessageByExternalReferenceCodeResponse = PutSiteMessageBoardMessageByExternalReferenceCodeResponses[keyof PutSiteMessageBoardMessageByExternalReferenceCodeResponses];

export type GetMessageBoardMessageMessageBoardMessagesPageData = {
    body?: never;
    path: {
        parentMessageBoardMessageId: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        flatten?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-delivery/v1.0/message-board-messages/{parentMessageBoardMessageId}/message-board-messages';
};

export type GetMessageBoardMessageMessageBoardMessagesPageResponses = {
    /**
     * default response
     */
    default: PageMessageBoardMessageReadable;
};

export type GetMessageBoardMessageMessageBoardMessagesPageResponse = GetMessageBoardMessageMessageBoardMessagesPageResponses[keyof GetMessageBoardMessageMessageBoardMessagesPageResponses];

export type PostMessageBoardMessageMessageBoardMessageData = {
    body?: MessageBoardMessageWritable;
    path: {
        parentMessageBoardMessageId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/message-board-messages/{parentMessageBoardMessageId}/message-board-messages';
};

export type PostMessageBoardMessageMessageBoardMessageResponses = {
    /**
     * default response
     */
    default: MessageBoardMessageReadable;
};

export type PostMessageBoardMessageMessageBoardMessageResponse = PostMessageBoardMessageMessageBoardMessageResponses[keyof PostMessageBoardMessageMessageBoardMessageResponses];

export type GetMessageBoardMessagePermissionsPageData = {
    body?: never;
    path: {
        messageBoardMessageId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
        roleNames?: string;
    };
    url: '/o/headless-delivery/v1.0/message-board-messages/{messageBoardMessageId}/permissions';
};

export type GetMessageBoardMessagePermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type GetMessageBoardMessagePermissionsPageResponse = GetMessageBoardMessagePermissionsPageResponses[keyof GetMessageBoardMessagePermissionsPageResponses];

export type PutMessageBoardMessagePermissionsPageData = {
    body?: Array<Permission>;
    path: {
        messageBoardMessageId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/message-board-messages/{messageBoardMessageId}/permissions';
};

export type PutMessageBoardMessagePermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type PutMessageBoardMessagePermissionsPageResponse = PutMessageBoardMessagePermissionsPageResponses[keyof PutMessageBoardMessagePermissionsPageResponses];

export type GetMessageBoardThreadMessageBoardMessagesPageData = {
    body?: never;
    path: {
        messageBoardThreadId: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-delivery/v1.0/message-board-threads/{messageBoardThreadId}/message-board-messages';
};

export type GetMessageBoardThreadMessageBoardMessagesPageResponses = {
    /**
     * default response
     */
    default: PageMessageBoardMessageReadable;
};

export type GetMessageBoardThreadMessageBoardMessagesPageResponse = GetMessageBoardThreadMessageBoardMessagesPageResponses[keyof GetMessageBoardThreadMessageBoardMessagesPageResponses];

export type PostMessageBoardThreadMessageBoardMessageData = {
    body?: MessageBoardMessageWritable;
    path: {
        messageBoardThreadId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/message-board-threads/{messageBoardThreadId}/message-board-messages';
};

export type PostMessageBoardThreadMessageBoardMessageResponses = {
    /**
     * default response
     */
    default: MessageBoardMessageReadable;
};

export type PostMessageBoardThreadMessageBoardMessageResponse = PostMessageBoardThreadMessageBoardMessageResponses[keyof PostMessageBoardThreadMessageBoardMessageResponses];

export type GetSiteMessageBoardMessageByFriendlyUrlPathData = {
    body?: never;
    path: {
        siteId: string;
        friendlyUrlPath: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/message-board-messages/by-friendly-url-path/{friendlyUrlPath}';
};

export type GetSiteMessageBoardMessageByFriendlyUrlPathResponses = {
    /**
     * default response
     */
    default: MessageBoardMessageReadable;
};

export type GetSiteMessageBoardMessageByFriendlyUrlPathResponse = GetSiteMessageBoardMessageByFriendlyUrlPathResponses[keyof GetSiteMessageBoardMessageByFriendlyUrlPathResponses];

export type GetSiteMessageBoardMessagePermissionsPageData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
        roleNames?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/message-board-messages/permissions';
};

export type GetSiteMessageBoardMessagePermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type GetSiteMessageBoardMessagePermissionsPageResponse = GetSiteMessageBoardMessagePermissionsPageResponses[keyof GetSiteMessageBoardMessagePermissionsPageResponses];

export type PutSiteMessageBoardMessagePermissionsPageData = {
    body?: Array<Permission>;
    path: {
        siteId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/message-board-messages/permissions';
};

export type PutSiteMessageBoardMessagePermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type PutSiteMessageBoardMessagePermissionsPageResponse = PutSiteMessageBoardMessagePermissionsPageResponses[keyof PutSiteMessageBoardMessagePermissionsPageResponses];

export type GetSiteMessageBoardMessagesPageData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        flatten?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/message-board-messages';
};

export type GetSiteMessageBoardMessagesPageResponses = {
    /**
     * default response
     */
    default: PageMessageBoardMessageReadable;
};

export type GetSiteMessageBoardMessagesPageResponse = GetSiteMessageBoardMessagesPageResponses[keyof GetSiteMessageBoardMessagesPageResponses];

export type GetSiteUserMessageBoardMessagesActivityPageData = {
    body?: never;
    path: {
        siteId: string;
        userId: string;
    };
    query?: {
        page?: string;
        pageSize?: string;
        nestedFields?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/{userId}/message-board-messages/activity';
};

export type GetSiteUserMessageBoardMessagesActivityPageResponses = {
    /**
     * default response
     */
    default: PageMessageBoardMessageReadable;
};

export type GetSiteUserMessageBoardMessagesActivityPageResponse = GetSiteUserMessageBoardMessagesActivityPageResponses[keyof GetSiteUserMessageBoardMessagesActivityPageResponses];

export type PostMessageBoardThreadMessageBoardMessageBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        messageBoardThreadId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/message-board-threads/{messageBoardThreadId}/message-board-messages/batch';
};

export type PostMessageBoardThreadMessageBoardMessageBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostMessageBoardThreadMessageBoardMessagesPageExportBatchData = {
    body?: never;
    path: {
        messageBoardThreadId: string;
    };
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-delivery/v1.0/message-board-threads/{messageBoardThreadId}/message-board-messages/export-batch';
};

export type PostMessageBoardThreadMessageBoardMessagesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostSiteMessageBoardMessagesPageExportBatchData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/message-board-messages/export-batch';
};

export type PostSiteMessageBoardMessagesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutMessageBoardMessageMarkAsAnswerData = {
    body?: never;
    path: {
        messageBoardMessageId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/message-board-messages/{messageBoardMessageId}/mark-as-answer';
};

export type PutMessageBoardMessageMarkAsAnswerResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutMessageBoardMessageSubscribeData = {
    body?: never;
    path: {
        messageBoardMessageId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/message-board-messages/{messageBoardMessageId}/subscribe';
};

export type PutMessageBoardMessageSubscribeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutMessageBoardMessageUnmarkAsAnswerData = {
    body?: never;
    path: {
        messageBoardMessageId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/message-board-messages/{messageBoardMessageId}/unmark-as-answer';
};

export type PutMessageBoardMessageUnmarkAsAnswerResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutMessageBoardMessageUnsubscribeData = {
    body?: never;
    path: {
        messageBoardMessageId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/message-board-messages/{messageBoardMessageId}/unsubscribe';
};

export type PutMessageBoardMessageUnsubscribeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteMessageBoardSectionData = {
    body?: never;
    path: {
        messageBoardSectionId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/message-board-sections/{messageBoardSectionId}';
};

export type DeleteMessageBoardSectionResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetMessageBoardSectionData = {
    body?: never;
    path: {
        messageBoardSectionId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/message-board-sections/{messageBoardSectionId}';
};

export type GetMessageBoardSectionResponses = {
    /**
     * default response
     */
    default: MessageBoardSectionReadable;
};

export type GetMessageBoardSectionResponse = GetMessageBoardSectionResponses[keyof GetMessageBoardSectionResponses];

export type PatchMessageBoardSectionData = {
    body?: MessageBoardSectionWritable;
    path: {
        messageBoardSectionId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/message-board-sections/{messageBoardSectionId}';
};

export type PatchMessageBoardSectionResponses = {
    /**
     * default response
     */
    default: MessageBoardSectionReadable;
};

export type PatchMessageBoardSectionResponse = PatchMessageBoardSectionResponses[keyof PatchMessageBoardSectionResponses];

export type PutMessageBoardSectionData = {
    body?: MessageBoardSectionWritable;
    path: {
        messageBoardSectionId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/message-board-sections/{messageBoardSectionId}';
};

export type PutMessageBoardSectionResponses = {
    /**
     * default response
     */
    default: MessageBoardSectionReadable;
};

export type PutMessageBoardSectionResponse = PutMessageBoardSectionResponses[keyof PutMessageBoardSectionResponses];

export type DeleteMessageBoardSectionBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/message-board-sections/batch';
};

export type DeleteMessageBoardSectionBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutMessageBoardSectionBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/message-board-sections/batch';
};

export type PutMessageBoardSectionBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetMessageBoardSectionMessageBoardSectionsPageData = {
    body?: never;
    path: {
        parentMessageBoardSectionId: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-delivery/v1.0/message-board-sections/{parentMessageBoardSectionId}/message-board-sections';
};

export type GetMessageBoardSectionMessageBoardSectionsPageResponses = {
    /**
     * default response
     */
    default: PageMessageBoardSectionReadable;
};

export type GetMessageBoardSectionMessageBoardSectionsPageResponse = GetMessageBoardSectionMessageBoardSectionsPageResponses[keyof GetMessageBoardSectionMessageBoardSectionsPageResponses];

export type PostMessageBoardSectionMessageBoardSectionData = {
    body?: MessageBoardSectionWritable;
    path: {
        parentMessageBoardSectionId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/message-board-sections/{parentMessageBoardSectionId}/message-board-sections';
};

export type PostMessageBoardSectionMessageBoardSectionResponses = {
    /**
     * default response
     */
    default: MessageBoardSectionReadable;
};

export type PostMessageBoardSectionMessageBoardSectionResponse = PostMessageBoardSectionMessageBoardSectionResponses[keyof PostMessageBoardSectionMessageBoardSectionResponses];

export type GetMessageBoardSectionPermissionsPageData = {
    body?: never;
    path: {
        messageBoardSectionId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
        roleNames?: string;
    };
    url: '/o/headless-delivery/v1.0/message-board-sections/{messageBoardSectionId}/permissions';
};

export type GetMessageBoardSectionPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type GetMessageBoardSectionPermissionsPageResponse = GetMessageBoardSectionPermissionsPageResponses[keyof GetMessageBoardSectionPermissionsPageResponses];

export type PutMessageBoardSectionPermissionsPageData = {
    body?: Array<Permission>;
    path: {
        messageBoardSectionId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/message-board-sections/{messageBoardSectionId}/permissions';
};

export type PutMessageBoardSectionPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type PutMessageBoardSectionPermissionsPageResponse = PutMessageBoardSectionPermissionsPageResponses[keyof PutMessageBoardSectionPermissionsPageResponses];

export type GetSiteMessageBoardSectionByFriendlyUrlPathData = {
    body?: never;
    path: {
        siteId: string;
        friendlyUrlPath: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/message-board-section/by-friendly-url-path/{friendlyUrlPath}';
};

export type GetSiteMessageBoardSectionByFriendlyUrlPathResponses = {
    /**
     * default response
     */
    default: MessageBoardSectionReadable;
};

export type GetSiteMessageBoardSectionByFriendlyUrlPathResponse = GetSiteMessageBoardSectionByFriendlyUrlPathResponses[keyof GetSiteMessageBoardSectionByFriendlyUrlPathResponses];

export type GetSiteMessageBoardSectionPermissionsPageData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
        roleNames?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/message-board-sections/permissions';
};

export type GetSiteMessageBoardSectionPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type GetSiteMessageBoardSectionPermissionsPageResponse = GetSiteMessageBoardSectionPermissionsPageResponses[keyof GetSiteMessageBoardSectionPermissionsPageResponses];

export type PutSiteMessageBoardSectionPermissionsPageData = {
    body?: Array<Permission>;
    path: {
        siteId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/message-board-sections/permissions';
};

export type PutSiteMessageBoardSectionPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type PutSiteMessageBoardSectionPermissionsPageResponse = PutSiteMessageBoardSectionPermissionsPageResponses[keyof PutSiteMessageBoardSectionPermissionsPageResponses];

export type GetSiteMessageBoardSectionsPageData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        flatten?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/message-board-sections';
};

export type GetSiteMessageBoardSectionsPageResponses = {
    /**
     * default response
     */
    default: PageMessageBoardSectionReadable;
};

export type GetSiteMessageBoardSectionsPageResponse = GetSiteMessageBoardSectionsPageResponses[keyof GetSiteMessageBoardSectionsPageResponses];

export type PostSiteMessageBoardSectionData = {
    body?: MessageBoardSectionWritable;
    path: {
        siteId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/message-board-sections';
};

export type PostSiteMessageBoardSectionResponses = {
    /**
     * default response
     */
    default: MessageBoardSectionReadable;
};

export type PostSiteMessageBoardSectionResponse = PostSiteMessageBoardSectionResponses[keyof PostSiteMessageBoardSectionResponses];

export type PostSiteMessageBoardSectionBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        siteId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/message-board-sections/batch';
};

export type PostSiteMessageBoardSectionBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostSiteMessageBoardSectionsPageExportBatchData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/message-board-sections/export-batch';
};

export type PostSiteMessageBoardSectionsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutMessageBoardSectionSubscribeData = {
    body?: never;
    path: {
        messageBoardSectionId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/message-board-sections/{messageBoardSectionId}/subscribe';
};

export type PutMessageBoardSectionSubscribeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutMessageBoardSectionUnsubscribeData = {
    body?: never;
    path: {
        messageBoardSectionId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/message-board-sections/{messageBoardSectionId}/unsubscribe';
};

export type PutMessageBoardSectionUnsubscribeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteMessageBoardThreadData = {
    body?: never;
    path: {
        messageBoardThreadId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/message-board-threads/{messageBoardThreadId}';
};

export type DeleteMessageBoardThreadResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetMessageBoardThreadData = {
    body?: never;
    path: {
        messageBoardThreadId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/message-board-threads/{messageBoardThreadId}';
};

export type GetMessageBoardThreadResponses = {
    /**
     * default response
     */
    default: MessageBoardThreadReadable;
};

export type GetMessageBoardThreadResponse = GetMessageBoardThreadResponses[keyof GetMessageBoardThreadResponses];

export type PatchMessageBoardThreadData = {
    body?: MessageBoardThreadWritable;
    path: {
        messageBoardThreadId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/message-board-threads/{messageBoardThreadId}';
};

export type PatchMessageBoardThreadResponses = {
    /**
     * default response
     */
    default: MessageBoardThreadReadable;
};

export type PatchMessageBoardThreadResponse = PatchMessageBoardThreadResponses[keyof PatchMessageBoardThreadResponses];

export type PutMessageBoardThreadData = {
    body?: MessageBoardThreadWritable;
    path: {
        messageBoardThreadId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/message-board-threads/{messageBoardThreadId}';
};

export type PutMessageBoardThreadResponses = {
    /**
     * default response
     */
    default: MessageBoardThreadReadable;
};

export type PutMessageBoardThreadResponse = PutMessageBoardThreadResponses[keyof PutMessageBoardThreadResponses];

export type DeleteMessageBoardThreadBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/message-board-threads/batch';
};

export type DeleteMessageBoardThreadBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutMessageBoardThreadBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/message-board-threads/batch';
};

export type PutMessageBoardThreadBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteMessageBoardThreadMyRatingData = {
    body?: never;
    path: {
        messageBoardThreadId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/message-board-threads/{messageBoardThreadId}/my-rating';
};

export type DeleteMessageBoardThreadMyRatingResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetMessageBoardThreadMyRatingData = {
    body?: never;
    path: {
        messageBoardThreadId: string;
    };
    query?: {
        fields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/message-board-threads/{messageBoardThreadId}/my-rating';
};

export type GetMessageBoardThreadMyRatingResponses = {
    /**
     * default response
     */
    default: RatingReadable;
};

export type GetMessageBoardThreadMyRatingResponse = GetMessageBoardThreadMyRatingResponses[keyof GetMessageBoardThreadMyRatingResponses];

export type PostMessageBoardThreadMyRatingData = {
    body?: RatingWritable;
    path: {
        messageBoardThreadId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/message-board-threads/{messageBoardThreadId}/my-rating';
};

export type PostMessageBoardThreadMyRatingResponses = {
    /**
     * default response
     */
    default: RatingReadable;
};

export type PostMessageBoardThreadMyRatingResponse = PostMessageBoardThreadMyRatingResponses[keyof PostMessageBoardThreadMyRatingResponses];

export type PutMessageBoardThreadMyRatingData = {
    body?: RatingWritable;
    path: {
        messageBoardThreadId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/message-board-threads/{messageBoardThreadId}/my-rating';
};

export type PutMessageBoardThreadMyRatingResponses = {
    /**
     * default response
     */
    default: RatingReadable;
};

export type PutMessageBoardThreadMyRatingResponse = PutMessageBoardThreadMyRatingResponses[keyof PutMessageBoardThreadMyRatingResponses];

export type GetMessageBoardSectionMessageBoardThreadsPageData = {
    body?: never;
    path: {
        messageBoardSectionId: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-delivery/v1.0/message-board-sections/{messageBoardSectionId}/message-board-threads';
};

export type GetMessageBoardSectionMessageBoardThreadsPageResponses = {
    /**
     * default response
     */
    default: PageMessageBoardThreadReadable;
};

export type GetMessageBoardSectionMessageBoardThreadsPageResponse = GetMessageBoardSectionMessageBoardThreadsPageResponses[keyof GetMessageBoardSectionMessageBoardThreadsPageResponses];

export type PostMessageBoardSectionMessageBoardThreadData = {
    body?: MessageBoardThreadWritable;
    path: {
        messageBoardSectionId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/message-board-sections/{messageBoardSectionId}/message-board-threads';
};

export type PostMessageBoardSectionMessageBoardThreadResponses = {
    /**
     * default response
     */
    default: MessageBoardThreadReadable;
};

export type PostMessageBoardSectionMessageBoardThreadResponse = PostMessageBoardSectionMessageBoardThreadResponses[keyof PostMessageBoardSectionMessageBoardThreadResponses];

export type GetMessageBoardThreadPermissionsPageData = {
    body?: never;
    path: {
        messageBoardThreadId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
        roleNames?: string;
    };
    url: '/o/headless-delivery/v1.0/message-board-threads/{messageBoardThreadId}/permissions';
};

export type GetMessageBoardThreadPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type GetMessageBoardThreadPermissionsPageResponse = GetMessageBoardThreadPermissionsPageResponses[keyof GetMessageBoardThreadPermissionsPageResponses];

export type PutMessageBoardThreadPermissionsPageData = {
    body?: Array<Permission>;
    path: {
        messageBoardThreadId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/message-board-threads/{messageBoardThreadId}/permissions';
};

export type PutMessageBoardThreadPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type PutMessageBoardThreadPermissionsPageResponse = PutMessageBoardThreadPermissionsPageResponses[keyof PutMessageBoardThreadPermissionsPageResponses];

export type GetMessageBoardThreadsRankedPageData = {
    body?: never;
    path?: never;
    query?: {
        dateCreated?: string;
        dateModified?: string;
        fields?: string;
        messageBoardSectionId?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        sort?: string;
    };
    url: '/o/headless-delivery/v1.0/message-board-threads/ranked';
};

export type GetMessageBoardThreadsRankedPageResponses = {
    /**
     * default response
     */
    default: PageMessageBoardThreadReadable;
};

export type GetMessageBoardThreadsRankedPageResponse = GetMessageBoardThreadsRankedPageResponses[keyof GetMessageBoardThreadsRankedPageResponses];

export type GetSiteMessageBoardThreadByFriendlyUrlPathData = {
    body?: never;
    path: {
        siteId: string;
        friendlyUrlPath: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/message-board-threads/by-friendly-url-path/{friendlyUrlPath}';
};

export type GetSiteMessageBoardThreadByFriendlyUrlPathResponses = {
    /**
     * default response
     */
    default: MessageBoardThreadReadable;
};

export type GetSiteMessageBoardThreadByFriendlyUrlPathResponse = GetSiteMessageBoardThreadByFriendlyUrlPathResponses[keyof GetSiteMessageBoardThreadByFriendlyUrlPathResponses];

export type GetSiteMessageBoardThreadPermissionsPageData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
        roleNames?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/message-board-threads/permissions';
};

export type GetSiteMessageBoardThreadPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type GetSiteMessageBoardThreadPermissionsPageResponse = GetSiteMessageBoardThreadPermissionsPageResponses[keyof GetSiteMessageBoardThreadPermissionsPageResponses];

export type PutSiteMessageBoardThreadPermissionsPageData = {
    body?: Array<Permission>;
    path: {
        siteId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/message-board-threads/permissions';
};

export type PutSiteMessageBoardThreadPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type PutSiteMessageBoardThreadPermissionsPageResponse = PutSiteMessageBoardThreadPermissionsPageResponses[keyof PutSiteMessageBoardThreadPermissionsPageResponses];

export type GetSiteMessageBoardThreadsPageData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        flatten?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/message-board-threads';
};

export type GetSiteMessageBoardThreadsPageResponses = {
    /**
     * default response
     */
    default: PageMessageBoardThreadReadable;
};

export type GetSiteMessageBoardThreadsPageResponse = GetSiteMessageBoardThreadsPageResponses[keyof GetSiteMessageBoardThreadsPageResponses];

export type PostSiteMessageBoardThreadData = {
    body?: MessageBoardThreadWritable;
    path: {
        siteId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/message-board-threads';
};

export type PostSiteMessageBoardThreadResponses = {
    /**
     * default response
     */
    default: MessageBoardThreadReadable;
};

export type PostSiteMessageBoardThreadResponse = PostSiteMessageBoardThreadResponses[keyof PostSiteMessageBoardThreadResponses];

export type PostMessageBoardSectionMessageBoardThreadBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        messageBoardSectionId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/message-board-sections/{messageBoardSectionId}/message-board-threads/batch';
};

export type PostMessageBoardSectionMessageBoardThreadBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostMessageBoardSectionMessageBoardThreadsPageExportBatchData = {
    body?: never;
    path: {
        messageBoardSectionId: string;
    };
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-delivery/v1.0/message-board-sections/{messageBoardSectionId}/message-board-threads/export-batch';
};

export type PostMessageBoardSectionMessageBoardThreadsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostSiteMessageBoardThreadBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        siteId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/message-board-threads/batch';
};

export type PostSiteMessageBoardThreadBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostSiteMessageBoardThreadsPageExportBatchData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/message-board-threads/export-batch';
};

export type PostSiteMessageBoardThreadsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutMessageBoardThreadSubscribeData = {
    body?: never;
    path: {
        messageBoardThreadId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/message-board-threads/{messageBoardThreadId}/subscribe';
};

export type PutMessageBoardThreadSubscribeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutMessageBoardThreadUnsubscribeData = {
    body?: never;
    path: {
        messageBoardThreadId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/message-board-threads/{messageBoardThreadId}/unsubscribe';
};

export type PutMessageBoardThreadUnsubscribeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteNavigationMenuData = {
    body?: never;
    path: {
        navigationMenuId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/navigation-menus/{navigationMenuId}';
};

export type DeleteNavigationMenuResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetNavigationMenuData = {
    body?: never;
    path: {
        navigationMenuId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/navigation-menus/{navigationMenuId}';
};

export type GetNavigationMenuResponses = {
    /**
     * default response
     */
    default: NavigationMenuReadable;
};

export type GetNavigationMenuResponse = GetNavigationMenuResponses[keyof GetNavigationMenuResponses];

export type PutNavigationMenuData = {
    body?: NavigationMenuWritable;
    path: {
        navigationMenuId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/navigation-menus/{navigationMenuId}';
};

export type PutNavigationMenuResponses = {
    /**
     * default response
     */
    default: NavigationMenuReadable;
};

export type PutNavigationMenuResponse = PutNavigationMenuResponses[keyof PutNavigationMenuResponses];

export type DeleteNavigationMenuBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/navigation-menus/batch';
};

export type DeleteNavigationMenuBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutNavigationMenuBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/navigation-menus/batch';
};

export type PutNavigationMenuBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteSiteNavigationMenuByExternalReferenceCodeData = {
    body?: never;
    path: {
        siteId: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/navigation-menus/by-external-reference-code/{externalReferenceCode}';
};

export type DeleteSiteNavigationMenuByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSiteNavigationMenuByExternalReferenceCodeData = {
    body?: never;
    path: {
        siteId: string;
        externalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/navigation-menus/by-external-reference-code/{externalReferenceCode}';
};

export type GetSiteNavigationMenuByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: NavigationMenuReadable;
};

export type GetSiteNavigationMenuByExternalReferenceCodeResponse = GetSiteNavigationMenuByExternalReferenceCodeResponses[keyof GetSiteNavigationMenuByExternalReferenceCodeResponses];

export type PutSiteNavigationMenuByExternalReferenceCodeData = {
    body?: NavigationMenuWritable;
    path: {
        siteId: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/navigation-menus/by-external-reference-code/{externalReferenceCode}';
};

export type PutSiteNavigationMenuByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: NavigationMenuReadable;
};

export type PutSiteNavigationMenuByExternalReferenceCodeResponse = PutSiteNavigationMenuByExternalReferenceCodeResponses[keyof PutSiteNavigationMenuByExternalReferenceCodeResponses];

export type GetNavigationMenuPermissionsPageData = {
    body?: never;
    path: {
        navigationMenuId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
        roleNames?: string;
    };
    url: '/o/headless-delivery/v1.0/navigation-menus/{navigationMenuId}/permissions';
};

export type GetNavigationMenuPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type GetNavigationMenuPermissionsPageResponse = GetNavigationMenuPermissionsPageResponses[keyof GetNavigationMenuPermissionsPageResponses];

export type PutNavigationMenuPermissionsPageData = {
    body?: Array<Permission>;
    path: {
        navigationMenuId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/navigation-menus/{navigationMenuId}/permissions';
};

export type PutNavigationMenuPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type PutNavigationMenuPermissionsPageResponse = PutNavigationMenuPermissionsPageResponses[keyof PutNavigationMenuPermissionsPageResponses];

export type GetSiteNavigationMenuPermissionsPageData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
        roleNames?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/navigation-menus/permissions';
};

export type GetSiteNavigationMenuPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type GetSiteNavigationMenuPermissionsPageResponse = GetSiteNavigationMenuPermissionsPageResponses[keyof GetSiteNavigationMenuPermissionsPageResponses];

export type PutSiteNavigationMenuPermissionsPageData = {
    body?: Array<Permission>;
    path: {
        siteId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/navigation-menus/permissions';
};

export type PutSiteNavigationMenuPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type PutSiteNavigationMenuPermissionsPageResponse = PutSiteNavigationMenuPermissionsPageResponses[keyof PutSiteNavigationMenuPermissionsPageResponses];

export type GetSiteNavigationMenusPageData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        fields?: string;
        filter?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/navigation-menus';
};

export type GetSiteNavigationMenusPageResponses = {
    /**
     * default response
     */
    default: PageNavigationMenuReadable;
};

export type GetSiteNavigationMenusPageResponse = GetSiteNavigationMenusPageResponses[keyof GetSiteNavigationMenusPageResponses];

export type PostSiteNavigationMenuData = {
    body?: NavigationMenuWritable;
    path: {
        siteId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/navigation-menus';
};

export type PostSiteNavigationMenuResponses = {
    /**
     * default response
     */
    default: NavigationMenuReadable;
};

export type PostSiteNavigationMenuResponse = PostSiteNavigationMenuResponses[keyof PostSiteNavigationMenuResponses];

export type PostSiteNavigationMenuBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        siteId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/navigation-menus/batch';
};

export type PostSiteNavigationMenuBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostSiteNavigationMenusPageExportBatchData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/navigation-menus/export-batch';
};

export type PostSiteNavigationMenusPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSiteSitePageData = {
    body?: never;
    path: {
        siteId: string;
        friendlyUrlPath: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/site-pages/{friendlyUrlPath}';
};

export type GetSiteSitePageResponses = {
    /**
     * default response
     */
    default: SitePageReadable;
};

export type GetSiteSitePageResponse = GetSiteSitePageResponses[keyof GetSiteSitePageResponses];

export type GetSiteSitePageExperienceExperienceKeyData = {
    body?: never;
    path: {
        siteId: string;
        friendlyUrlPath: string;
        experienceKey: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/site-pages/{friendlyUrlPath}/experiences/{experienceKey}';
};

export type GetSiteSitePageExperienceExperienceKeyResponses = {
    /**
     * default response
     */
    default: SitePageReadable;
};

export type GetSiteSitePageExperienceExperienceKeyResponse = GetSiteSitePageExperienceExperienceKeyResponses[keyof GetSiteSitePageExperienceExperienceKeyResponses];

export type GetSiteSitePageExperienceExperienceKeyRenderedPageData = {
    body?: never;
    path: {
        siteId: string;
        friendlyUrlPath: string;
        experienceKey: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/site-pages/{friendlyUrlPath}/experiences/{experienceKey}/rendered-page';
};

export type GetSiteSitePageExperienceExperienceKeyRenderedPageResponses = {
    /**
     * default response
     */
    default: string;
};

export type GetSiteSitePageExperienceExperienceKeyRenderedPageResponse = GetSiteSitePageExperienceExperienceKeyRenderedPageResponses[keyof GetSiteSitePageExperienceExperienceKeyRenderedPageResponses];

export type GetSiteSitePageRenderedPageData = {
    body?: never;
    path: {
        siteId: string;
        friendlyUrlPath: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/site-pages/{friendlyUrlPath}/rendered-page';
};

export type GetSiteSitePageRenderedPageResponses = {
    /**
     * default response
     */
    default: string;
};

export type GetSiteSitePageRenderedPageResponse = GetSiteSitePageRenderedPageResponses[keyof GetSiteSitePageRenderedPageResponses];

export type GetSiteSitePagesExperiencesPageData = {
    body?: never;
    path: {
        siteId: string;
        friendlyUrlPath: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/site-pages/{friendlyUrlPath}/experiences';
};

export type GetSiteSitePagesExperiencesPageResponses = {
    /**
     * default response
     */
    default: PageSitePageReadable;
};

export type GetSiteSitePagesExperiencesPageResponse = GetSiteSitePagesExperiencesPageResponses[keyof GetSiteSitePagesExperiencesPageResponses];

export type GetSiteSitePagesPageData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/site-pages';
};

export type GetSiteSitePagesPageResponses = {
    /**
     * default response
     */
    default: PageSitePageReadable;
};

export type GetSiteSitePagesPageResponse = GetSiteSitePagesPageResponses[keyof GetSiteSitePagesPageResponses];

export type PostSiteSitePageData = {
    body?: SitePageWritable;
    path: {
        siteId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/site-pages';
};

export type PostSiteSitePageResponses = {
    /**
     * default response
     */
    default: SitePageReadable;
};

export type PostSiteSitePageResponse = PostSiteSitePageResponses[keyof PostSiteSitePageResponses];

export type PostSiteSitePageBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        siteId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/site-pages/batch';
};

export type PostSiteSitePageBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostSiteSitePagesPageExportBatchData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/site-pages/export-batch';
};

export type PostSiteSitePagesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteAssetLibraryStructuredContentFolderByExternalReferenceCodeData = {
    body?: never;
    path: {
        assetLibraryId: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/structured-content-folders/by-external-reference-code/{externalReferenceCode}';
};

export type DeleteAssetLibraryStructuredContentFolderByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetAssetLibraryStructuredContentFolderByExternalReferenceCodeData = {
    body?: never;
    path: {
        assetLibraryId: string;
        externalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/structured-content-folders/by-external-reference-code/{externalReferenceCode}';
};

export type GetAssetLibraryStructuredContentFolderByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: StructuredContentFolderReadable;
};

export type GetAssetLibraryStructuredContentFolderByExternalReferenceCodeResponse = GetAssetLibraryStructuredContentFolderByExternalReferenceCodeResponses[keyof GetAssetLibraryStructuredContentFolderByExternalReferenceCodeResponses];

export type PutAssetLibraryStructuredContentFolderByExternalReferenceCodeData = {
    body?: StructuredContentFolderWritable;
    path: {
        assetLibraryId: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/structured-content-folders/by-external-reference-code/{externalReferenceCode}';
};

export type PutAssetLibraryStructuredContentFolderByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: StructuredContentFolderReadable;
};

export type PutAssetLibraryStructuredContentFolderByExternalReferenceCodeResponse = PutAssetLibraryStructuredContentFolderByExternalReferenceCodeResponses[keyof PutAssetLibraryStructuredContentFolderByExternalReferenceCodeResponses];

export type DeleteSiteStructuredContentFolderByExternalReferenceCodeData = {
    body?: never;
    path: {
        siteId: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/structured-content-folders/by-external-reference-code/{externalReferenceCode}';
};

export type DeleteSiteStructuredContentFolderByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSiteStructuredContentFolderByExternalReferenceCodeData = {
    body?: never;
    path: {
        siteId: string;
        externalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/structured-content-folders/by-external-reference-code/{externalReferenceCode}';
};

export type GetSiteStructuredContentFolderByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: StructuredContentFolderReadable;
};

export type GetSiteStructuredContentFolderByExternalReferenceCodeResponse = GetSiteStructuredContentFolderByExternalReferenceCodeResponses[keyof GetSiteStructuredContentFolderByExternalReferenceCodeResponses];

export type PutSiteStructuredContentFolderByExternalReferenceCodeData = {
    body?: StructuredContentFolderWritable;
    path: {
        siteId: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/structured-content-folders/by-external-reference-code/{externalReferenceCode}';
};

export type PutSiteStructuredContentFolderByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: StructuredContentFolderReadable;
};

export type PutSiteStructuredContentFolderByExternalReferenceCodeResponse = PutSiteStructuredContentFolderByExternalReferenceCodeResponses[keyof PutSiteStructuredContentFolderByExternalReferenceCodeResponses];

export type DeleteStructuredContentFolderData = {
    body?: never;
    path: {
        structuredContentFolderId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/structured-content-folders/{structuredContentFolderId}';
};

export type DeleteStructuredContentFolderResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetStructuredContentFolderData = {
    body?: never;
    path: {
        structuredContentFolderId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/structured-content-folders/{structuredContentFolderId}';
};

export type GetStructuredContentFolderResponses = {
    /**
     * default response
     */
    default: StructuredContentFolderReadable;
};

export type GetStructuredContentFolderResponse = GetStructuredContentFolderResponses[keyof GetStructuredContentFolderResponses];

export type PatchStructuredContentFolderData = {
    body?: StructuredContentFolderWritable;
    path: {
        structuredContentFolderId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/structured-content-folders/{structuredContentFolderId}';
};

export type PatchStructuredContentFolderResponses = {
    /**
     * default response
     */
    default: StructuredContentFolderReadable;
};

export type PatchStructuredContentFolderResponse = PatchStructuredContentFolderResponses[keyof PatchStructuredContentFolderResponses];

export type PutStructuredContentFolderData = {
    body?: StructuredContentFolderWritable;
    path: {
        structuredContentFolderId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/structured-content-folders/{structuredContentFolderId}';
};

export type PutStructuredContentFolderResponses = {
    /**
     * default response
     */
    default: StructuredContentFolderReadable;
};

export type PutStructuredContentFolderResponse = PutStructuredContentFolderResponses[keyof PutStructuredContentFolderResponses];

export type DeleteStructuredContentFolderBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/structured-content-folders/batch';
};

export type DeleteStructuredContentFolderBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutStructuredContentFolderBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/structured-content-folders/batch';
};

export type PutStructuredContentFolderBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetAssetLibraryStructuredContentFolderPermissionsPageData = {
    body?: never;
    path: {
        assetLibraryId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
        roleNames?: string;
    };
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/structured-content-folders/permissions';
};

export type GetAssetLibraryStructuredContentFolderPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type GetAssetLibraryStructuredContentFolderPermissionsPageResponse = GetAssetLibraryStructuredContentFolderPermissionsPageResponses[keyof GetAssetLibraryStructuredContentFolderPermissionsPageResponses];

export type PutAssetLibraryStructuredContentFolderPermissionsPageData = {
    body?: Array<Permission>;
    path: {
        assetLibraryId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/structured-content-folders/permissions';
};

export type PutAssetLibraryStructuredContentFolderPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type PutAssetLibraryStructuredContentFolderPermissionsPageResponse = PutAssetLibraryStructuredContentFolderPermissionsPageResponses[keyof PutAssetLibraryStructuredContentFolderPermissionsPageResponses];

export type GetAssetLibraryStructuredContentFoldersPageData = {
    body?: never;
    path: {
        assetLibraryId: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        flatten?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/structured-content-folders';
};

export type GetAssetLibraryStructuredContentFoldersPageResponses = {
    /**
     * default response
     */
    default: PageStructuredContentFolderReadable;
};

export type GetAssetLibraryStructuredContentFoldersPageResponse = GetAssetLibraryStructuredContentFoldersPageResponses[keyof GetAssetLibraryStructuredContentFoldersPageResponses];

export type PostAssetLibraryStructuredContentFolderData = {
    body?: StructuredContentFolderWritable;
    path: {
        assetLibraryId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/structured-content-folders';
};

export type PostAssetLibraryStructuredContentFolderResponses = {
    /**
     * default response
     */
    default: StructuredContentFolderReadable;
};

export type PostAssetLibraryStructuredContentFolderResponse = PostAssetLibraryStructuredContentFolderResponses[keyof PostAssetLibraryStructuredContentFolderResponses];

export type GetSiteStructuredContentFolderPermissionsPageData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
        roleNames?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/structured-content-folders/permissions';
};

export type GetSiteStructuredContentFolderPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type GetSiteStructuredContentFolderPermissionsPageResponse = GetSiteStructuredContentFolderPermissionsPageResponses[keyof GetSiteStructuredContentFolderPermissionsPageResponses];

export type PutSiteStructuredContentFolderPermissionsPageData = {
    body?: Array<Permission>;
    path: {
        siteId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/structured-content-folders/permissions';
};

export type PutSiteStructuredContentFolderPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type PutSiteStructuredContentFolderPermissionsPageResponse = PutSiteStructuredContentFolderPermissionsPageResponses[keyof PutSiteStructuredContentFolderPermissionsPageResponses];

export type GetSiteStructuredContentFoldersPageData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        flatten?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/structured-content-folders';
};

export type GetSiteStructuredContentFoldersPageResponses = {
    /**
     * default response
     */
    default: PageStructuredContentFolderReadable;
};

export type GetSiteStructuredContentFoldersPageResponse = GetSiteStructuredContentFoldersPageResponses[keyof GetSiteStructuredContentFoldersPageResponses];

export type PostSiteStructuredContentFolderData = {
    body?: StructuredContentFolderWritable;
    path: {
        siteId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/structured-content-folders';
};

export type PostSiteStructuredContentFolderResponses = {
    /**
     * default response
     */
    default: StructuredContentFolderReadable;
};

export type PostSiteStructuredContentFolderResponse = PostSiteStructuredContentFolderResponses[keyof PostSiteStructuredContentFolderResponses];

export type GetStructuredContentFolderPermissionsPageData = {
    body?: never;
    path: {
        structuredContentFolderId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
        roleNames?: string;
    };
    url: '/o/headless-delivery/v1.0/structured-content-folder/{structuredContentFolderId}/permissions';
};

export type GetStructuredContentFolderPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type GetStructuredContentFolderPermissionsPageResponse = GetStructuredContentFolderPermissionsPageResponses[keyof GetStructuredContentFolderPermissionsPageResponses];

export type PutStructuredContentFolderPermissionsPageData = {
    body?: Array<Permission>;
    path: {
        structuredContentFolderId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/structured-content-folder/{structuredContentFolderId}/permissions';
};

export type PutStructuredContentFolderPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type PutStructuredContentFolderPermissionsPageResponse = PutStructuredContentFolderPermissionsPageResponses[keyof PutStructuredContentFolderPermissionsPageResponses];

export type GetStructuredContentFolderStructuredContentFoldersPageData = {
    body?: never;
    path: {
        parentStructuredContentFolderId: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-delivery/v1.0/structured-content-folders/{parentStructuredContentFolderId}/structured-content-folders';
};

export type GetStructuredContentFolderStructuredContentFoldersPageResponses = {
    /**
     * default response
     */
    default: PageStructuredContentFolderReadable;
};

export type GetStructuredContentFolderStructuredContentFoldersPageResponse = GetStructuredContentFolderStructuredContentFoldersPageResponses[keyof GetStructuredContentFolderStructuredContentFoldersPageResponses];

export type PostStructuredContentFolderStructuredContentFolderData = {
    body?: StructuredContentFolderWritable;
    path: {
        parentStructuredContentFolderId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/structured-content-folders/{parentStructuredContentFolderId}/structured-content-folders';
};

export type PostStructuredContentFolderStructuredContentFolderResponses = {
    /**
     * default response
     */
    default: StructuredContentFolderReadable;
};

export type PostStructuredContentFolderStructuredContentFolderResponse = PostStructuredContentFolderStructuredContentFolderResponses[keyof PostStructuredContentFolderStructuredContentFolderResponses];

export type PostAssetLibraryStructuredContentFolderBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        assetLibraryId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/structured-content-folders/batch';
};

export type PostAssetLibraryStructuredContentFolderBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostAssetLibraryStructuredContentFoldersPageExportBatchData = {
    body?: never;
    path: {
        assetLibraryId: string;
    };
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/structured-content-folders/export-batch';
};

export type PostAssetLibraryStructuredContentFoldersPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostSiteStructuredContentFolderBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        siteId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/structured-content-folders/batch';
};

export type PostSiteStructuredContentFolderBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostSiteStructuredContentFoldersPageExportBatchData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/structured-content-folders/export-batch';
};

export type PostSiteStructuredContentFoldersPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutStructuredContentFolderSubscribeData = {
    body?: never;
    path: {
        structuredContentFolderId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/structured-content-folders/{structuredContentFolderId}/subscribe';
};

export type PutStructuredContentFolderSubscribeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutStructuredContentFolderUnsubscribeData = {
    body?: never;
    path: {
        structuredContentFolderId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/structured-content-folders/{structuredContentFolderId}/unsubscribe';
};

export type PutStructuredContentFolderUnsubscribeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteAssetLibraryStructuredContentByExternalReferenceCodeData = {
    body?: never;
    path: {
        assetLibraryId: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/structured-contents/by-external-reference-code/{externalReferenceCode}';
};

export type DeleteAssetLibraryStructuredContentByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetAssetLibraryStructuredContentByExternalReferenceCodeData = {
    body?: never;
    path: {
        assetLibraryId: string;
        externalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/structured-contents/by-external-reference-code/{externalReferenceCode}';
};

export type GetAssetLibraryStructuredContentByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: StructuredContentReadable;
};

export type GetAssetLibraryStructuredContentByExternalReferenceCodeResponse = GetAssetLibraryStructuredContentByExternalReferenceCodeResponses[keyof GetAssetLibraryStructuredContentByExternalReferenceCodeResponses];

export type PutAssetLibraryStructuredContentByExternalReferenceCodeData = {
    body?: StructuredContentWritable;
    path: {
        assetLibraryId: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/structured-contents/by-external-reference-code/{externalReferenceCode}';
};

export type PutAssetLibraryStructuredContentByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: StructuredContentReadable;
};

export type PutAssetLibraryStructuredContentByExternalReferenceCodeResponse = PutAssetLibraryStructuredContentByExternalReferenceCodeResponses[keyof PutAssetLibraryStructuredContentByExternalReferenceCodeResponses];

export type DeleteSiteStructuredContentByExternalReferenceCodeData = {
    body?: never;
    path: {
        siteId: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/structured-contents/by-external-reference-code/{externalReferenceCode}';
};

export type DeleteSiteStructuredContentByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSiteStructuredContentByExternalReferenceCodeData = {
    body?: never;
    path: {
        siteId: string;
        externalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/structured-contents/by-external-reference-code/{externalReferenceCode}';
};

export type GetSiteStructuredContentByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: StructuredContentReadable;
};

export type GetSiteStructuredContentByExternalReferenceCodeResponse = GetSiteStructuredContentByExternalReferenceCodeResponses[keyof GetSiteStructuredContentByExternalReferenceCodeResponses];

export type PutSiteStructuredContentByExternalReferenceCodeData = {
    body?: StructuredContentWritable;
    path: {
        siteId: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/structured-contents/by-external-reference-code/{externalReferenceCode}';
};

export type PutSiteStructuredContentByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: StructuredContentReadable;
};

export type PutSiteStructuredContentByExternalReferenceCodeResponse = PutSiteStructuredContentByExternalReferenceCodeResponses[keyof PutSiteStructuredContentByExternalReferenceCodeResponses];

export type DeleteStructuredContentData = {
    body?: never;
    path: {
        structuredContentId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/structured-contents/{structuredContentId}';
};

export type DeleteStructuredContentResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetStructuredContentData = {
    body?: never;
    path: {
        structuredContentId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/structured-contents/{structuredContentId}';
};

export type GetStructuredContentResponses = {
    /**
     * default response
     */
    default: StructuredContentReadable;
};

export type GetStructuredContentResponse = GetStructuredContentResponses[keyof GetStructuredContentResponses];

export type PatchStructuredContentData = {
    body?: StructuredContentWritable;
    path: {
        structuredContentId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/structured-contents/{structuredContentId}';
};

export type PatchStructuredContentResponses = {
    /**
     * default response
     */
    default: StructuredContentReadable;
};

export type PatchStructuredContentResponse = PatchStructuredContentResponses[keyof PatchStructuredContentResponses];

export type PutStructuredContentData = {
    body?: StructuredContentWritable;
    path: {
        structuredContentId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/structured-contents/{structuredContentId}';
};

export type PutStructuredContentResponses = {
    /**
     * default response
     */
    default: StructuredContentReadable;
};

export type PutStructuredContentResponse = PutStructuredContentResponses[keyof PutStructuredContentResponses];

export type DeleteStructuredContentBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/structured-contents/batch';
};

export type DeleteStructuredContentBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutStructuredContentBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/structured-contents/batch';
};

export type PutStructuredContentBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteStructuredContentMyRatingData = {
    body?: never;
    path: {
        structuredContentId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/structured-contents/{structuredContentId}/my-rating';
};

export type DeleteStructuredContentMyRatingResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetStructuredContentMyRatingData = {
    body?: never;
    path: {
        structuredContentId: string;
    };
    query?: {
        fields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/structured-contents/{structuredContentId}/my-rating';
};

export type GetStructuredContentMyRatingResponses = {
    /**
     * default response
     */
    default: RatingReadable;
};

export type GetStructuredContentMyRatingResponse = GetStructuredContentMyRatingResponses[keyof GetStructuredContentMyRatingResponses];

export type PostStructuredContentMyRatingData = {
    body?: RatingWritable;
    path: {
        structuredContentId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/structured-contents/{structuredContentId}/my-rating';
};

export type PostStructuredContentMyRatingResponses = {
    /**
     * default response
     */
    default: RatingReadable;
};

export type PostStructuredContentMyRatingResponse = PostStructuredContentMyRatingResponses[keyof PostStructuredContentMyRatingResponses];

export type PutStructuredContentMyRatingData = {
    body?: RatingWritable;
    path: {
        structuredContentId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/structured-contents/{structuredContentId}/my-rating';
};

export type PutStructuredContentMyRatingResponses = {
    /**
     * default response
     */
    default: RatingReadable;
};

export type PutStructuredContentMyRatingResponse = PutStructuredContentMyRatingResponses[keyof PutStructuredContentMyRatingResponses];

export type GetAssetLibraryStructuredContentPermissionsPageData = {
    body?: never;
    path: {
        assetLibraryId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
        roleNames?: string;
    };
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/structured-contents/permissions';
};

export type GetAssetLibraryStructuredContentPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type GetAssetLibraryStructuredContentPermissionsPageResponse = GetAssetLibraryStructuredContentPermissionsPageResponses[keyof GetAssetLibraryStructuredContentPermissionsPageResponses];

export type PutAssetLibraryStructuredContentPermissionsPageData = {
    body?: Array<Permission>;
    path: {
        assetLibraryId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/structured-contents/permissions';
};

export type PutAssetLibraryStructuredContentPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type PutAssetLibraryStructuredContentPermissionsPageResponse = PutAssetLibraryStructuredContentPermissionsPageResponses[keyof PutAssetLibraryStructuredContentPermissionsPageResponses];

export type GetAssetLibraryStructuredContentsPageData = {
    body?: never;
    path: {
        assetLibraryId: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        flatten?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/structured-contents';
};

export type GetAssetLibraryStructuredContentsPageResponses = {
    /**
     * default response
     */
    default: PageStructuredContentReadable;
};

export type GetAssetLibraryStructuredContentsPageResponse = GetAssetLibraryStructuredContentsPageResponses[keyof GetAssetLibraryStructuredContentsPageResponses];

export type PostAssetLibraryStructuredContentData = {
    body?: StructuredContentWritable;
    path: {
        assetLibraryId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/structured-contents';
};

export type PostAssetLibraryStructuredContentResponses = {
    /**
     * default response
     */
    default: StructuredContentReadable;
};

export type PostAssetLibraryStructuredContentResponse = PostAssetLibraryStructuredContentResponses[keyof PostAssetLibraryStructuredContentResponses];

export type GetContentStructureStructuredContentsPageData = {
    body?: never;
    path: {
        contentStructureId: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-delivery/v1.0/content-structures/{contentStructureId}/structured-contents';
};

export type GetContentStructureStructuredContentsPageResponses = {
    /**
     * default response
     */
    default: PageStructuredContentReadable;
};

export type GetContentStructureStructuredContentsPageResponse = GetContentStructureStructuredContentsPageResponses[keyof GetContentStructureStructuredContentsPageResponses];

export type GetSiteStructuredContentByKeyData = {
    body?: never;
    path: {
        siteId: string;
        key: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/structured-contents/by-key/{key}';
};

export type GetSiteStructuredContentByKeyResponses = {
    /**
     * default response
     */
    default: StructuredContentReadable;
};

export type GetSiteStructuredContentByKeyResponse = GetSiteStructuredContentByKeyResponses[keyof GetSiteStructuredContentByKeyResponses];

export type GetSiteStructuredContentByUuidData = {
    body?: never;
    path: {
        siteId: string;
        uuid: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/structured-contents/by-uuid/{uuid}';
};

export type GetSiteStructuredContentByUuidResponses = {
    /**
     * default response
     */
    default: StructuredContentReadable;
};

export type GetSiteStructuredContentByUuidResponse = GetSiteStructuredContentByUuidResponses[keyof GetSiteStructuredContentByUuidResponses];

export type GetSiteStructuredContentPermissionsPageData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
        roleNames?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/structured-contents/permissions';
};

export type GetSiteStructuredContentPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type GetSiteStructuredContentPermissionsPageResponse = GetSiteStructuredContentPermissionsPageResponses[keyof GetSiteStructuredContentPermissionsPageResponses];

export type PutSiteStructuredContentPermissionsPageData = {
    body?: Array<Permission>;
    path: {
        siteId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/structured-contents/permissions';
};

export type PutSiteStructuredContentPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type PutSiteStructuredContentPermissionsPageResponse = PutSiteStructuredContentPermissionsPageResponses[keyof PutSiteStructuredContentPermissionsPageResponses];

export type GetSiteStructuredContentsPageData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        flatten?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/structured-contents';
};

export type GetSiteStructuredContentsPageResponses = {
    /**
     * default response
     */
    default: PageStructuredContentReadable;
};

export type GetSiteStructuredContentsPageResponse = GetSiteStructuredContentsPageResponses[keyof GetSiteStructuredContentsPageResponses];

export type PostSiteStructuredContentData = {
    body?: StructuredContentWritable;
    path: {
        siteId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/structured-contents';
};

export type PostSiteStructuredContentResponses = {
    /**
     * default response
     */
    default: StructuredContentReadable;
};

export type PostSiteStructuredContentResponse = PostSiteStructuredContentResponses[keyof PostSiteStructuredContentResponses];

export type GetStructuredContentFolderStructuredContentsPageData = {
    body?: never;
    path: {
        structuredContentFolderId: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        flatten?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-delivery/v1.0/structured-content-folders/{structuredContentFolderId}/structured-contents';
};

export type GetStructuredContentFolderStructuredContentsPageResponses = {
    /**
     * default response
     */
    default: PageStructuredContentReadable;
};

export type GetStructuredContentFolderStructuredContentsPageResponse = GetStructuredContentFolderStructuredContentsPageResponses[keyof GetStructuredContentFolderStructuredContentsPageResponses];

export type PostStructuredContentFolderStructuredContentData = {
    body?: StructuredContentWritable;
    path: {
        structuredContentFolderId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/structured-content-folders/{structuredContentFolderId}/structured-contents';
};

export type PostStructuredContentFolderStructuredContentResponses = {
    /**
     * default response
     */
    default: StructuredContentReadable;
};

export type PostStructuredContentFolderStructuredContentResponse = PostStructuredContentFolderStructuredContentResponses[keyof PostStructuredContentFolderStructuredContentResponses];

export type GetStructuredContentPermissionsPageData = {
    body?: never;
    path: {
        structuredContentId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
        roleNames?: string;
    };
    url: '/o/headless-delivery/v1.0/structured-contents/{structuredContentId}/permissions';
};

export type GetStructuredContentPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type GetStructuredContentPermissionsPageResponse = GetStructuredContentPermissionsPageResponses[keyof GetStructuredContentPermissionsPageResponses];

export type PutStructuredContentPermissionsPageData = {
    body?: Array<Permission>;
    path: {
        structuredContentId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/structured-contents/{structuredContentId}/permissions';
};

export type PutStructuredContentPermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type PutStructuredContentPermissionsPageResponse = PutStructuredContentPermissionsPageResponses[keyof PutStructuredContentPermissionsPageResponses];

export type GetStructuredContentRenderedContentByDisplayPageDisplayPageKeyData = {
    body?: never;
    path: {
        structuredContentId: string;
        displayPageKey: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/structured-contents/{structuredContentId}/rendered-content-by-display-page/{displayPageKey}';
};

export type GetStructuredContentRenderedContentByDisplayPageDisplayPageKeyResponses = {
    /**
     * default response
     */
    default: string;
};

export type GetStructuredContentRenderedContentByDisplayPageDisplayPageKeyResponse = GetStructuredContentRenderedContentByDisplayPageDisplayPageKeyResponses[keyof GetStructuredContentRenderedContentByDisplayPageDisplayPageKeyResponses];

export type GetStructuredContentRenderedContentContentTemplateData = {
    body?: never;
    path: {
        structuredContentId: string;
        contentTemplateId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/structured-contents/{structuredContentId}/rendered-content/{contentTemplateId}';
};

export type GetStructuredContentRenderedContentContentTemplateResponses = {
    /**
     * default response
     */
    default: string;
};

export type GetStructuredContentRenderedContentContentTemplateResponse = GetStructuredContentRenderedContentContentTemplateResponses[keyof GetStructuredContentRenderedContentContentTemplateResponses];

export type PostAssetLibraryStructuredContentBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        assetLibraryId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/structured-contents/batch';
};

export type PostAssetLibraryStructuredContentBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostAssetLibraryStructuredContentsPageExportBatchData = {
    body?: never;
    path: {
        assetLibraryId: string;
    };
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-delivery/v1.0/asset-libraries/{assetLibraryId}/structured-contents/export-batch';
};

export type PostAssetLibraryStructuredContentsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostContentStructureStructuredContentsPageExportBatchData = {
    body?: never;
    path: {
        contentStructureId: string;
    };
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-delivery/v1.0/content-structures/{contentStructureId}/structured-contents/export-batch';
};

export type PostContentStructureStructuredContentsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostSiteStructuredContentBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        siteId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/structured-contents/batch';
};

export type PostSiteStructuredContentBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostSiteStructuredContentsPageExportBatchData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/structured-contents/export-batch';
};

export type PostSiteStructuredContentsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostStructuredContentFolderStructuredContentBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        structuredContentFolderId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/structured-content-folders/{structuredContentFolderId}/structured-contents/batch';
};

export type PostStructuredContentFolderStructuredContentBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostStructuredContentFolderStructuredContentsPageExportBatchData = {
    body?: never;
    path: {
        structuredContentFolderId: string;
    };
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-delivery/v1.0/structured-content-folders/{structuredContentFolderId}/structured-contents/export-batch';
};

export type PostStructuredContentFolderStructuredContentsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutStructuredContentSubscribeData = {
    body?: never;
    path: {
        structuredContentId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/structured-contents/{structuredContentId}/subscribe';
};

export type PutStructuredContentSubscribeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutStructuredContentUnsubscribeData = {
    body?: never;
    path: {
        structuredContentId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/structured-contents/{structuredContentId}/unsubscribe';
};

export type PutStructuredContentUnsubscribeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteSiteWikiNodeByExternalReferenceCodeData = {
    body?: never;
    path: {
        siteId: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/wiki-nodes/by-external-reference-code/{externalReferenceCode}';
};

export type DeleteSiteWikiNodeByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSiteWikiNodeByExternalReferenceCodeData = {
    body?: never;
    path: {
        siteId: string;
        externalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/wiki-nodes/by-external-reference-code/{externalReferenceCode}';
};

export type GetSiteWikiNodeByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: WikiNodeReadable;
};

export type GetSiteWikiNodeByExternalReferenceCodeResponse = GetSiteWikiNodeByExternalReferenceCodeResponses[keyof GetSiteWikiNodeByExternalReferenceCodeResponses];

export type PutSiteWikiNodeByExternalReferenceCodeData = {
    body?: WikiNodeWritable;
    path: {
        siteId: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/wiki-nodes/by-external-reference-code/{externalReferenceCode}';
};

export type PutSiteWikiNodeByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: WikiNodeReadable;
};

export type PutSiteWikiNodeByExternalReferenceCodeResponse = PutSiteWikiNodeByExternalReferenceCodeResponses[keyof PutSiteWikiNodeByExternalReferenceCodeResponses];

export type DeleteWikiNodeData = {
    body?: never;
    path: {
        wikiNodeId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/wiki-nodes/{wikiNodeId}';
};

export type DeleteWikiNodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetWikiNodeData = {
    body?: never;
    path: {
        wikiNodeId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/wiki-nodes/{wikiNodeId}';
};

export type GetWikiNodeResponses = {
    /**
     * default response
     */
    default: WikiNodeReadable;
};

export type GetWikiNodeResponse = GetWikiNodeResponses[keyof GetWikiNodeResponses];

export type PutWikiNodeData = {
    body?: WikiNodeWritable;
    path: {
        wikiNodeId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/wiki-nodes/{wikiNodeId}';
};

export type PutWikiNodeResponses = {
    /**
     * default response
     */
    default: WikiNodeReadable;
};

export type PutWikiNodeResponse = PutWikiNodeResponses[keyof PutWikiNodeResponses];

export type DeleteWikiNodeBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/wiki-nodes/batch';
};

export type DeleteWikiNodeBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutWikiNodeBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/wiki-nodes/batch';
};

export type PutWikiNodeBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSiteWikiNodePermissionsPageData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
        roleNames?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/wiki-nodes/permissions';
};

export type GetSiteWikiNodePermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type GetSiteWikiNodePermissionsPageResponse = GetSiteWikiNodePermissionsPageResponses[keyof GetSiteWikiNodePermissionsPageResponses];

export type PutSiteWikiNodePermissionsPageData = {
    body?: Array<Permission>;
    path: {
        siteId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/wiki-nodes/permissions';
};

export type PutSiteWikiNodePermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type PutSiteWikiNodePermissionsPageResponse = PutSiteWikiNodePermissionsPageResponses[keyof PutSiteWikiNodePermissionsPageResponses];

export type GetSiteWikiNodesPageData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/wiki-nodes';
};

export type GetSiteWikiNodesPageResponses = {
    /**
     * default response
     */
    default: PageWikiNodeReadable;
};

export type GetSiteWikiNodesPageResponse = GetSiteWikiNodesPageResponses[keyof GetSiteWikiNodesPageResponses];

export type PostSiteWikiNodeData = {
    body?: WikiNodeWritable;
    path: {
        siteId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/wiki-nodes';
};

export type PostSiteWikiNodeResponses = {
    /**
     * default response
     */
    default: WikiNodeReadable;
};

export type PostSiteWikiNodeResponse = PostSiteWikiNodeResponses[keyof PostSiteWikiNodeResponses];

export type GetWikiNodePermissionsPageData = {
    body?: never;
    path: {
        wikiNodeId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
        roleNames?: string;
    };
    url: '/o/headless-delivery/v1.0/wiki-nodes/{wikiNodeId}/permissions';
};

export type GetWikiNodePermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type GetWikiNodePermissionsPageResponse = GetWikiNodePermissionsPageResponses[keyof GetWikiNodePermissionsPageResponses];

export type PutWikiNodePermissionsPageData = {
    body?: Array<Permission>;
    path: {
        wikiNodeId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/wiki-nodes/{wikiNodeId}/permissions';
};

export type PutWikiNodePermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type PutWikiNodePermissionsPageResponse = PutWikiNodePermissionsPageResponses[keyof PutWikiNodePermissionsPageResponses];

export type PostSiteWikiNodeBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        siteId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/wiki-nodes/batch';
};

export type PostSiteWikiNodeBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostSiteWikiNodesPageExportBatchData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/wiki-nodes/export-batch';
};

export type PostSiteWikiNodesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutWikiNodeSubscribeData = {
    body?: never;
    path: {
        wikiNodeId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/wiki-nodes/{wikiNodeId}/subscribe';
};

export type PutWikiNodeSubscribeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutWikiNodeUnsubscribeData = {
    body?: never;
    path: {
        wikiNodeId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/wiki-nodes/{wikiNodeId}/unsubscribe';
};

export type PutWikiNodeUnsubscribeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteSiteWikiPageByExternalReferenceCodeWikiPageExternalReferenceCodeWikiPageAttachmentByExternalReferenceCodeData = {
    body?: never;
    path: {
        siteId: string;
        wikiPageExternalReferenceCode: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/wiki-pages/by-external-reference-code/{wikiPageExternalReferenceCode}/wiki-page-attachments/by-external-reference-code/{externalReferenceCode}';
};

export type DeleteSiteWikiPageByExternalReferenceCodeWikiPageExternalReferenceCodeWikiPageAttachmentByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSiteWikiPageByExternalReferenceCodeWikiPageExternalReferenceCodeWikiPageAttachmentByExternalReferenceCodeData = {
    body?: never;
    path: {
        siteId: string;
        wikiPageExternalReferenceCode: string;
        externalReferenceCode: string;
    };
    query?: {
        fields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/wiki-pages/by-external-reference-code/{wikiPageExternalReferenceCode}/wiki-page-attachments/by-external-reference-code/{externalReferenceCode}';
};

export type GetSiteWikiPageByExternalReferenceCodeWikiPageExternalReferenceCodeWikiPageAttachmentByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: WikiPageAttachmentReadable;
};

export type GetSiteWikiPageByExternalReferenceCodeWikiPageExternalReferenceCodeWikiPageAttachmentByExternalReferenceCodeResponse = GetSiteWikiPageByExternalReferenceCodeWikiPageExternalReferenceCodeWikiPageAttachmentByExternalReferenceCodeResponses[keyof GetSiteWikiPageByExternalReferenceCodeWikiPageExternalReferenceCodeWikiPageAttachmentByExternalReferenceCodeResponses];

export type DeleteWikiPageAttachmentData = {
    body?: never;
    path: {
        wikiPageAttachmentId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/wiki-page-attachments/{wikiPageAttachmentId}';
};

export type DeleteWikiPageAttachmentResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetWikiPageAttachmentData = {
    body?: never;
    path: {
        wikiPageAttachmentId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/wiki-page-attachments/{wikiPageAttachmentId}';
};

export type GetWikiPageAttachmentResponses = {
    /**
     * default response
     */
    default: WikiPageAttachmentReadable;
};

export type GetWikiPageAttachmentResponse = GetWikiPageAttachmentResponses[keyof GetWikiPageAttachmentResponses];

export type DeleteWikiPageAttachmentBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/wiki-page-attachments/batch';
};

export type DeleteWikiPageAttachmentBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetWikiPageWikiPageAttachmentsPageData = {
    body?: never;
    path: {
        wikiPageId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/wiki-pages/{wikiPageId}/wiki-page-attachments';
};

export type GetWikiPageWikiPageAttachmentsPageResponses = {
    /**
     * default response
     */
    default: PageWikiPageAttachmentReadable;
};

export type GetWikiPageWikiPageAttachmentsPageResponse = GetWikiPageWikiPageAttachmentsPageResponses[keyof GetWikiPageWikiPageAttachmentsPageResponses];

export type PostWikiPageWikiPageAttachmentData = {
    body?: PostWikiPageWikiPageAttachmentRequestBodyWritable;
    path: {
        wikiPageId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/wiki-pages/{wikiPageId}/wiki-page-attachments';
};

export type PostWikiPageWikiPageAttachmentResponses = {
    /**
     * default response
     */
    default: WikiPageAttachmentReadable;
};

export type PostWikiPageWikiPageAttachmentResponse = PostWikiPageWikiPageAttachmentResponses[keyof PostWikiPageWikiPageAttachmentResponses];

export type PostWikiPageWikiPageAttachmentBatchData = {
    body?: MultipartBody;
    path: {
        wikiPageId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/wiki-pages/{wikiPageId}/wiki-page-attachments/batch';
};

export type PostWikiPageWikiPageAttachmentBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostWikiPageWikiPageAttachmentsPageExportBatchData = {
    body?: never;
    path: {
        wikiPageId: string;
    };
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-delivery/v1.0/wiki-pages/{wikiPageId}/wiki-page-attachments/export-batch';
};

export type PostWikiPageWikiPageAttachmentsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteSiteWikiPageByExternalReferenceCodeData = {
    body?: never;
    path: {
        siteId: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/wiki-pages/by-external-reference-code/{externalReferenceCode}';
};

export type DeleteSiteWikiPageByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSiteWikiPageByExternalReferenceCodeData = {
    body?: never;
    path: {
        siteId: string;
        externalReferenceCode: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/sites/{siteId}/wiki-pages/by-external-reference-code/{externalReferenceCode}';
};

export type GetSiteWikiPageByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: WikiPageReadable;
};

export type GetSiteWikiPageByExternalReferenceCodeResponse = GetSiteWikiPageByExternalReferenceCodeResponses[keyof GetSiteWikiPageByExternalReferenceCodeResponses];

export type PutSiteWikiPageByExternalReferenceCodeData = {
    body?: WikiPageWritable;
    path: {
        siteId: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/sites/{siteId}/wiki-pages/by-external-reference-code/{externalReferenceCode}';
};

export type PutSiteWikiPageByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: WikiPageReadable;
};

export type PutSiteWikiPageByExternalReferenceCodeResponse = PutSiteWikiPageByExternalReferenceCodeResponses[keyof PutSiteWikiPageByExternalReferenceCodeResponses];

export type DeleteWikiPageData = {
    body?: never;
    path: {
        wikiPageId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/wiki-pages/{wikiPageId}';
};

export type DeleteWikiPageResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetWikiPageData = {
    body?: never;
    path: {
        wikiPageId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/wiki-pages/{wikiPageId}';
};

export type GetWikiPageResponses = {
    /**
     * default response
     */
    default: WikiPageReadable;
};

export type GetWikiPageResponse = GetWikiPageResponses[keyof GetWikiPageResponses];

export type PutWikiPageData = {
    body?: WikiPageWritable;
    path: {
        wikiPageId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/wiki-pages/{wikiPageId}';
};

export type PutWikiPageResponses = {
    /**
     * default response
     */
    default: WikiPageReadable;
};

export type PutWikiPageResponse = PutWikiPageResponses[keyof PutWikiPageResponses];

export type DeleteWikiPageBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/wiki-pages/batch';
};

export type DeleteWikiPageBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutWikiPageBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/wiki-pages/batch';
};

export type PutWikiPageBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetWikiNodeWikiPagesPageData = {
    body?: never;
    path: {
        wikiNodeId: string;
    };
    query?: {
        aggregationTerms?: string;
        fields?: string;
        filter?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/headless-delivery/v1.0/wiki-nodes/{wikiNodeId}/wiki-pages';
};

export type GetWikiNodeWikiPagesPageResponses = {
    /**
     * default response
     */
    default: PageWikiPageReadable;
};

export type GetWikiNodeWikiPagesPageResponse = GetWikiNodeWikiPagesPageResponses[keyof GetWikiNodeWikiPagesPageResponses];

export type PostWikiNodeWikiPageData = {
    body?: WikiPageWritable;
    path: {
        wikiNodeId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/wiki-nodes/{wikiNodeId}/wiki-pages';
};

export type PostWikiNodeWikiPageResponses = {
    /**
     * default response
     */
    default: WikiPageReadable;
};

export type PostWikiNodeWikiPageResponse = PostWikiNodeWikiPageResponses[keyof PostWikiNodeWikiPageResponses];

export type GetWikiPagePermissionsPageData = {
    body?: never;
    path: {
        wikiPageId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
        roleNames?: string;
    };
    url: '/o/headless-delivery/v1.0/wiki-pages/{wikiPageId}/permissions';
};

export type GetWikiPagePermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type GetWikiPagePermissionsPageResponse = GetWikiPagePermissionsPageResponses[keyof GetWikiPagePermissionsPageResponses];

export type PutWikiPagePermissionsPageData = {
    body?: Array<Permission>;
    path: {
        wikiPageId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/wiki-pages/{wikiPageId}/permissions';
};

export type PutWikiPagePermissionsPageResponses = {
    /**
     * default response
     */
    default: PagePermission;
};

export type PutWikiPagePermissionsPageResponse = PutWikiPagePermissionsPageResponses[keyof PutWikiPagePermissionsPageResponses];

export type GetWikiPageWikiPagesPageData = {
    body?: never;
    path: {
        parentWikiPageId: string;
    };
    query?: {
        fields?: string;
        nestedFields?: string;
        restrictFields?: string;
    };
    url: '/o/headless-delivery/v1.0/wiki-pages/{parentWikiPageId}/wiki-pages';
};

export type GetWikiPageWikiPagesPageResponses = {
    /**
     * default response
     */
    default: PageWikiPageReadable;
};

export type GetWikiPageWikiPagesPageResponse = GetWikiPageWikiPagesPageResponses[keyof GetWikiPageWikiPagesPageResponses];

export type PostWikiPageWikiPageData = {
    body?: WikiPageWritable;
    path: {
        parentWikiPageId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/wiki-pages/{parentWikiPageId}/wiki-pages';
};

export type PostWikiPageWikiPageResponses = {
    /**
     * default response
     */
    default: WikiPageReadable;
};

export type PostWikiPageWikiPageResponse = PostWikiPageWikiPageResponses[keyof PostWikiPageWikiPageResponses];

export type PostWikiNodeWikiPageBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        wikiNodeId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/headless-delivery/v1.0/wiki-nodes/{wikiNodeId}/wiki-pages/batch';
};

export type PostWikiNodeWikiPageBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostWikiNodeWikiPagesPageExportBatchData = {
    body?: never;
    path: {
        wikiNodeId: string;
    };
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/headless-delivery/v1.0/wiki-nodes/{wikiNodeId}/wiki-pages/export-batch';
};

export type PostWikiNodeWikiPagesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutWikiPageSubscribeData = {
    body?: never;
    path: {
        wikiPageId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/wiki-pages/{wikiPageId}/subscribe';
};

export type PutWikiPageSubscribeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutWikiPageUnsubscribeData = {
    body?: never;
    path: {
        wikiPageId: string;
    };
    query?: never;
    url: '/o/headless-delivery/v1.0/wiki-pages/{wikiPageId}/unsubscribe';
};

export type PutWikiPageUnsubscribeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type ClientOptions = {
    baseUrl: 'http://localhost:8080' | (string & {});
};