// This file is auto-generated by @hey-api/openapi-ts

export type Facet = {
    facetCriteria?: string;
    facetValues?: Array<FacetValue>;
};

export type FacetValue = {
    numberOfOccurrences?: number;
    term?: string;
};

export type FieldReadable = {
    anyOfGroup?: string;
    description?: string;
    name?: string;
    required?: boolean;
    type?: string;
    unsupportedFormats?: Array<string>;
    readonly 'x-class-name'?: string;
};

export type FieldWritable = {
    anyOfGroup?: string;
    description?: string;
    name?: string;
    required?: boolean;
    type?: string;
    unsupportedFormats?: Array<string>;
};

export type PageFieldReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<FieldReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageFieldWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<FieldWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type MappingReadable = {
    externalFieldName?: string;
    externalFieldType?: string;
    id?: number;
    internalFieldName?: string;
    internalFieldType?: string;
    planId?: number;
    script?: string;
    readonly 'x-class-name'?: string;
};

export type MappingWritable = {
    externalFieldName?: string;
    externalFieldType?: string;
    id?: number;
    internalFieldName?: string;
    internalFieldType?: string;
    planId?: number;
    script?: string;
};

export type PlanReadable = {
    active?: boolean;
    export?: boolean;
    externalType?: string;
    externalURL?: string;
    id?: number;
    internalClassName?: string;
    readonly internalClassNameKey?: string;
    mappings?: Array<MappingReadable>;
    name?: string;
    policies?: Array<PolicyReadable>;
    size?: number;
    status?: number;
    taskItemDelegateName?: string;
    template?: boolean;
    total?: number;
    readonly 'x-class-name'?: string;
};

export type PlanWritable = {
    active?: boolean;
    export?: boolean;
    externalType?: string;
    externalURL?: string;
    id?: number;
    internalClassName?: string;
    mappings?: Array<MappingWritable>;
    name?: string;
    policies?: Array<PolicyWritable>;
    size?: number;
    status?: number;
    taskItemDelegateName?: string;
    template?: boolean;
    total?: number;
};

export type PolicyReadable = {
    id?: number;
    name?: string;
    planId?: number;
    value?: string;
    readonly 'x-class-name'?: string;
};

export type PolicyWritable = {
    id?: number;
    name?: string;
    planId?: number;
    value?: string;
};

export type PagePlanReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<PlanReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PagePlanWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<PlanWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageSiteScopeReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<SiteScopeReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageSiteScopeWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<SiteScopeWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type SiteScopeReadable = {
    label?: string;
    value?: number;
    readonly 'x-class-name'?: string;
};

export type SiteScopeWritable = {
    label?: string;
    value?: number;
};

export type PageStrategyReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<StrategyReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageStrategyWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<StrategyWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type StrategyReadable = {
    name?: string;
    type?: string;
    readonly 'x-class-name'?: string;
};

export type StrategyWritable = {
    name?: string;
    type?: string;
};

export type GetPlanInternalClassNameKeyFieldsPageData = {
    body?: never;
    path: {
        internalClassNameKey: string;
    };
    query?: {
        export?: string;
    };
    url: '/v1.0/plans/{internalClassNameKey}/fields';
};

export type GetPlanInternalClassNameKeyFieldsPageResponses = {
    /**
     * default response
     */
    default: PageFieldReadable;
};

export type GetPlanInternalClassNameKeyFieldsPageResponse = GetPlanInternalClassNameKeyFieldsPageResponses[keyof GetPlanInternalClassNameKeyFieldsPageResponses];

export type GetOpenApiData = {
    body?: never;
    path: {
        type: string;
    };
    query?: never;
    url: '/v1.0/openapi.{type}';
};

export type GetOpenApiResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeletePlanData = {
    body?: never;
    path: {
        planId: string;
    };
    query?: never;
    url: '/v1.0/plans/{planId}';
};

export type DeletePlanResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetPlanData = {
    body?: never;
    path: {
        planId: string;
    };
    query?: never;
    url: '/v1.0/plans/{planId}';
};

export type GetPlanResponses = {
    /**
     * default response
     */
    default: PlanReadable;
};

export type GetPlanResponse = GetPlanResponses[keyof GetPlanResponses];

export type PatchPlanData = {
    body?: PlanWritable;
    path: {
        planId: string;
    };
    query?: never;
    url: '/v1.0/plans/{planId}';
};

export type PatchPlanResponses = {
    /**
     * default response
     */
    default: PlanReadable;
};

export type PatchPlanResponse = PatchPlanResponses[keyof PatchPlanResponses];

export type GetPlanTemplateData = {
    body?: never;
    path: {
        internalClassNameKey: string;
    };
    query?: never;
    url: '/v1.0/plans/{internalClassNameKey}/template';
};

export type GetPlanTemplateResponses = {
    /**
     * default response
     */
    default: Blob | File;
};

export type GetPlanTemplateResponse = GetPlanTemplateResponses[keyof GetPlanTemplateResponses];

export type GetPlansPageData = {
    body?: never;
    path?: never;
    query?: {
        page?: string;
        pageSize?: string;
    };
    url: '/v1.0/plans';
};

export type GetPlansPageResponses = {
    /**
     * default response
     */
    default: PagePlanReadable;
};

export type GetPlansPageResponse = GetPlansPageResponses[keyof GetPlansPageResponses];

export type PostPlanData = {
    body?: PlanWritable;
    path?: never;
    query?: never;
    url: '/v1.0/plans';
};

export type PostPlanResponses = {
    /**
     * default response
     */
    default: PlanReadable;
};

export type PostPlanResponse = PostPlanResponses[keyof PostPlanResponses];

export type GetPlanInternalClassNameKeySiteScopesPageData = {
    body?: never;
    path: {
        internalClassNameKey: string;
    };
    query?: {
        export?: string;
    };
    url: '/v1.0/plans/{internalClassNameKey}/site-scopes';
};

export type GetPlanInternalClassNameKeySiteScopesPageResponses = {
    /**
     * default response
     */
    default: PageSiteScopeReadable;
};

export type GetPlanInternalClassNameKeySiteScopesPageResponse = GetPlanInternalClassNameKeySiteScopesPageResponses[keyof GetPlanInternalClassNameKeySiteScopesPageResponses];

export type GetPlanInternalClassNameKeyStrategiesPageData = {
    body?: never;
    path: {
        internalClassNameKey: string;
    };
    query?: never;
    url: '/v1.0/plans/{internalClassNameKey}/strategies';
};

export type GetPlanInternalClassNameKeyStrategiesPageResponses = {
    /**
     * default response
     */
    default: PageStrategyReadable;
};

export type GetPlanInternalClassNameKeyStrategiesPageResponse = GetPlanInternalClassNameKeyStrategiesPageResponses[keyof GetPlanInternalClassNameKeyStrategiesPageResponses];

export type ClientOptions = {
    baseUrl: 'http://localhost:8080/o/batch-planner/' | (string & {});
};