// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';
import type { GetCartBillingAddresData, GetCartBillingAddresResponses, GetCartByExternalReferenceCodeBillingAddressData, GetCartByExternalReferenceCodeBillingAddressResponses, GetCartByExternalReferenceCodeShippingAddressData, GetCartByExternalReferenceCodeShippingAddressResponses, GetCartShippingAddresData, GetCartShippingAddresResponses, DeleteCartAttachmentData, DeleteCartAttachmentResponses, DeleteCartByExternalReferenceCodeAttachmentByExternalReferenceCodeAttachmentExternalReferenceCodeData, DeleteCartByExternalReferenceCodeAttachmentByExternalReferenceCodeAttachmentExternalReferenceCodeResponses, GetCartAttachmentsPageData, GetCartAttachmentsPageResponses, GetCartByExternalReferenceCodeAttachmentsPageData, GetCartByExternalReferenceCodeAttachmentsPageResponses, PostCartAttachmentByBase64Data, PostCartAttachmentByBase64Responses, PostCartAttachmentsPageExportBatchData, PostCartAttachmentsPageExportBatchResponses, PostCartByExternalReferenceCodeAttachmentByBase64Data, PostCartByExternalReferenceCodeAttachmentByBase64Responses, DeleteCartCommentData, DeleteCartCommentResponses, GetCartCommentData, GetCartCommentResponses, PatchCartCommentData, PatchCartCommentResponses, PutCartCommentData, PutCartCommentResponses, DeleteCartCommentBatchData, DeleteCartCommentBatchResponses, PutCartCommentBatchData, PutCartCommentBatchResponses, DeleteCartCommentByExternalReferenceCodeData, DeleteCartCommentByExternalReferenceCodeResponses, GetCartCommentByExternalReferenceCodeData, GetCartCommentByExternalReferenceCodeResponses, PatchCartCommentByExternalReferenceCodeData, PatchCartCommentByExternalReferenceCodeResponses, PutCartCommentByExternalReferenceCodeData, PutCartCommentByExternalReferenceCodeResponses, GetCartByExternalReferenceCodeCommentsPageData, GetCartByExternalReferenceCodeCommentsPageResponses, PostCartByExternalReferenceCodeCommentData, PostCartByExternalReferenceCodeCommentResponses, GetCartCommentsPageData, GetCartCommentsPageResponses, PostCartCommentData, PostCartCommentResponses, DeleteCartItemData, DeleteCartItemResponses, GetCartItemData, GetCartItemResponses, PatchCartItemData, PatchCartItemResponses, PutCartItemData, PutCartItemResponses, DeleteCartItemBatchData, DeleteCartItemBatchResponses, PutCartItemBatchData, PutCartItemBatchResponses, DeleteCartItemByExternalReferenceCodeData, DeleteCartItemByExternalReferenceCodeResponses, GetCartItemByExternalReferenceCodeData, GetCartItemByExternalReferenceCodeResponses, PatchCartItemByExternalReferenceCodeData, PatchCartItemByExternalReferenceCodeResponses, PutCartItemByExternalReferenceCodeData, PutCartItemByExternalReferenceCodeResponses, GetCartByExternalReferenceCodeItemsPageData, GetCartByExternalReferenceCodeItemsPageResponses, PostCartByExternalReferenceCodeItemData, PostCartByExternalReferenceCodeItemResponses, GetCartItemsPageData, GetCartItemsPageResponses, PostCartItemData, PostCartItemResponses, DeleteCartData, DeleteCartResponses, GetCartData, GetCartResponses, PatchCartData, PatchCartResponses, PutCartData, PutCartResponses, DeleteCartBatchData, DeleteCartBatchResponses, PutCartBatchData, PutCartBatchResponses, DeleteCartByExternalReferenceCodeData, DeleteCartByExternalReferenceCodeResponses, GetCartByExternalReferenceCodeData, GetCartByExternalReferenceCodeResponses, PatchCartByExternalReferenceCodeData, PatchCartByExternalReferenceCodeResponses, PutCartByExternalReferenceCodeData, PutCartByExternalReferenceCodeResponses, GetCartByExternalReferenceCodePaymentUrlData, GetCartByExternalReferenceCodePaymentUrlResponses, GetCartPaymentUrlData, GetCartPaymentUrlResponses, GetChannelAccountCartsPageData, GetChannelAccountCartsPageResponses, GetChannelByExternalReferenceCodeChannelExternalReferenceCodeAccountByExternalReferenceCodeAccountExternalReferenceCodeCartsPageData, GetChannelByExternalReferenceCodeChannelExternalReferenceCodeAccountByExternalReferenceCodeAccountExternalReferenceCodeCartsPageResponses, GetChannelCartsPageData, GetChannelCartsPageResponses, PostChannelCartData, PostChannelCartResponses, PostCartByExternalReferenceCodeCheckoutData, PostCartByExternalReferenceCodeCheckoutResponses, PostCartByExternalReferenceCodeCouponCodeData, PostCartByExternalReferenceCodeCouponCodeResponses, PostCartCheckoutData, PostCartCheckoutResponses, PostCartCouponCodeData, PostCartCouponCodeResponses, PostChannelCartByExternalReferenceCodeData, PostChannelCartByExternalReferenceCodeResponses, GetCartCartTransitionsPageData, GetCartCartTransitionsPageResponses, PostCartCartTransitionData, PostCartCartTransitionResponses, PostCartCartTransitionBatchData, PostCartCartTransitionBatchResponses, PostCartCartTransitionsPageExportBatchData, PostCartCartTransitionsPageExportBatchResponses, GetOpenApiData, GetOpenApiResponses, GetCartByExternalReferenceCodePaymentMethodsPageData, GetCartByExternalReferenceCodePaymentMethodsPageResponses, GetCartPaymentMethodsPageData, GetCartPaymentMethodsPageResponses, PostCartPaymentMethodsPageExportBatchData, PostCartPaymentMethodsPageExportBatchResponses, GetCartByExternalReferenceCodeShippingMethodsPageData, GetCartByExternalReferenceCodeShippingMethodsPageResponses, GetCartShippingMethodsPageData, GetCartShippingMethodsPageResponses, PostCartShippingMethodsPageExportBatchData, PostCartShippingMethodsPageExportBatchResponses, GetCartByExternalReferenceCodeDeliveryTermsPageData, GetCartByExternalReferenceCodeDeliveryTermsPageResponses, GetCartByExternalReferenceCodePaymentTermsPageData, GetCartByExternalReferenceCodePaymentTermsPageResponses, GetCartDeliveryTermsPageData, GetCartDeliveryTermsPageResponses, GetCartPaymentTermsPageData, GetCartPaymentTermsPageResponses } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

/**
 * Retrieve cart billing address.
 */
export const getCartBillingAddres = <ThrowOnError extends boolean = false>(options: Options<GetCartBillingAddresData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCartBillingAddresResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/{cartId}/billing-address',
        ...options
    });
};

/**
 * Retrieve cart billing address.
 */
export const getCartByExternalReferenceCodeBillingAddress = <ThrowOnError extends boolean = false>(options: Options<GetCartByExternalReferenceCodeBillingAddressData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCartByExternalReferenceCodeBillingAddressResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/by-externalReferenceCode/{externalReferenceCode}/billing-address',
        ...options
    });
};

/**
 * Retrieve cart billing address.
 */
export const getCartByExternalReferenceCodeShippingAddress = <ThrowOnError extends boolean = false>(options: Options<GetCartByExternalReferenceCodeShippingAddressData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCartByExternalReferenceCodeShippingAddressResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/by-externalReferenceCode/{externalReferenceCode}/shipping-address',
        ...options
    });
};

/**
 * Retrieve cart billing address.
 */
export const getCartShippingAddres = <ThrowOnError extends boolean = false>(options: Options<GetCartShippingAddresData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCartShippingAddresResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/{cartId}/shipping-address',
        ...options
    });
};

export const deleteCartAttachment = <ThrowOnError extends boolean = false>(options: Options<DeleteCartAttachmentData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteCartAttachmentResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/{cartId}/attachments/{attachmentId}',
        ...options
    });
};

export const deleteCartByExternalReferenceCodeAttachmentByExternalReferenceCodeAttachmentExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteCartByExternalReferenceCodeAttachmentByExternalReferenceCodeAttachmentExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteCartByExternalReferenceCodeAttachmentByExternalReferenceCodeAttachmentExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/by-externalReferenceCode/{externalReferenceCode}/attachments/by-externalReferenceCode/{attachmentExternalReferenceCode}',
        ...options
    });
};

export const getCartAttachmentsPage = <ThrowOnError extends boolean = false>(options: Options<GetCartAttachmentsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCartAttachmentsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/{cartId}/attachments',
        ...options
    });
};

export const getCartByExternalReferenceCodeAttachmentsPage = <ThrowOnError extends boolean = false>(options: Options<GetCartByExternalReferenceCodeAttachmentsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCartByExternalReferenceCodeAttachmentsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/by-externalReferenceCode/{externalReferenceCode}/attachments',
        ...options
    });
};

export const postCartAttachmentByBase64 = <ThrowOnError extends boolean = false>(options: Options<PostCartAttachmentByBase64Data, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostCartAttachmentByBase64Responses, unknown, ThrowOnError>({
        url: '/v1.0/carts/{cartId}/attachments/by-base64',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postCartAttachmentsPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostCartAttachmentsPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostCartAttachmentsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/{cartId}/attachments/export-batch',
        ...options
    });
};

export const postCartByExternalReferenceCodeAttachmentByBase64 = <ThrowOnError extends boolean = false>(options: Options<PostCartByExternalReferenceCodeAttachmentByBase64Data, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostCartByExternalReferenceCodeAttachmentByBase64Responses, unknown, ThrowOnError>({
        url: '/v1.0/carts/by-externalReferenceCode/{externalReferenceCode}/attachments/by-base64',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteCartComment = <ThrowOnError extends boolean = false>(options: Options<DeleteCartCommentData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteCartCommentResponses, unknown, ThrowOnError>({
        url: '/v1.0/cart-comments/{cartCommentId}',
        ...options
    });
};

export const getCartComment = <ThrowOnError extends boolean = false>(options: Options<GetCartCommentData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCartCommentResponses, unknown, ThrowOnError>({
        url: '/v1.0/cart-comments/{cartCommentId}',
        ...options
    });
};

export const patchCartComment = <ThrowOnError extends boolean = false>(options: Options<PatchCartCommentData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchCartCommentResponses, unknown, ThrowOnError>({
        url: '/v1.0/cart-comments/{cartCommentId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const putCartComment = <ThrowOnError extends boolean = false>(options: Options<PutCartCommentData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutCartCommentResponses, unknown, ThrowOnError>({
        url: '/v1.0/cart-comments/{cartCommentId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteCartCommentBatch = <ThrowOnError extends boolean = false>(options?: Options<DeleteCartCommentBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteCartCommentBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/cart-comments/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const putCartCommentBatch = <ThrowOnError extends boolean = false>(options?: Options<PutCartCommentBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).put<PutCartCommentBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/cart-comments/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Deletes a Cart Comment by external reference code.
 */
export const deleteCartCommentByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteCartCommentByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteCartCommentByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/cart-comments/by-externalReferenceCode/{externalReferenceCode}',
        ...options
    });
};

/**
 * Retrieve information of the given Cart Comment by external reference code.
 */
export const getCartCommentByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetCartCommentByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCartCommentByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/cart-comments/by-externalReferenceCode/{externalReferenceCode}',
        ...options
    });
};

/**
 * Update the provided Cart Comment by external reference code.
 */
export const patchCartCommentByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PatchCartCommentByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchCartCommentByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/cart-comments/by-externalReferenceCode/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Update the provided Cart Comment by external reference code.
 */
export const putCartCommentByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PutCartCommentByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutCartCommentByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/cart-comments/by-externalReferenceCode/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getCartByExternalReferenceCodeCommentsPage = <ThrowOnError extends boolean = false>(options: Options<GetCartByExternalReferenceCodeCommentsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCartByExternalReferenceCodeCommentsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/by-externalReferenceCode/{externalReferenceCode}/comments',
        ...options
    });
};

export const postCartByExternalReferenceCodeComment = <ThrowOnError extends boolean = false>(options: Options<PostCartByExternalReferenceCodeCommentData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostCartByExternalReferenceCodeCommentResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/by-externalReferenceCode/{externalReferenceCode}/comments',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getCartCommentsPage = <ThrowOnError extends boolean = false>(options: Options<GetCartCommentsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCartCommentsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/{cartId}/comments',
        ...options
    });
};

export const postCartComment = <ThrowOnError extends boolean = false>(options: Options<PostCartCommentData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostCartCommentResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/{cartId}/comments',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Deletes an Cart Item by ID.
 */
export const deleteCartItem = <ThrowOnError extends boolean = false>(options: Options<DeleteCartItemData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteCartItemResponses, unknown, ThrowOnError>({
        url: '/v1.0/cart-items/{cartItemId}',
        ...options
    });
};

/**
 * Retrieve information of the given Cart
 */
export const getCartItem = <ThrowOnError extends boolean = false>(options: Options<GetCartItemData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCartItemResponses, unknown, ThrowOnError>({
        url: '/v1.0/cart-items/{cartItemId}',
        ...options
    });
};

/**
 * Retrieve information of the given Cart.
 */
export const patchCartItem = <ThrowOnError extends boolean = false>(options: Options<PatchCartItemData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchCartItemResponses, unknown, ThrowOnError>({
        url: '/v1.0/cart-items/{cartItemId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * update the given Cart.
 */
export const putCartItem = <ThrowOnError extends boolean = false>(options: Options<PutCartItemData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutCartItemResponses, unknown, ThrowOnError>({
        url: '/v1.0/cart-items/{cartItemId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteCartItemBatch = <ThrowOnError extends boolean = false>(options?: Options<DeleteCartItemBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteCartItemBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/cart-items/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const putCartItemBatch = <ThrowOnError extends boolean = false>(options?: Options<PutCartItemBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).put<PutCartItemBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/cart-items/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Deletes a Cart Item by external reference code.
 */
export const deleteCartItemByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteCartItemByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteCartItemByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/cart-items/by-externalReferenceCode/{externalReferenceCode}',
        ...options
    });
};

/**
 * Retrieve information of the given Cart Item by external reference code.
 */
export const getCartItemByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetCartItemByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCartItemByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/cart-items/by-externalReferenceCode/{externalReferenceCode}',
        ...options
    });
};

/**
 * Update the provided Cart Item by external reference code.
 */
export const patchCartItemByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PatchCartItemByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchCartItemByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/cart-items/by-externalReferenceCode/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Update the provided Cart Item by external reference code.
 */
export const putCartItemByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PutCartItemByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutCartItemByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/cart-items/by-externalReferenceCode/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieve cart items of a Cart.
 */
export const getCartByExternalReferenceCodeItemsPage = <ThrowOnError extends boolean = false>(options: Options<GetCartByExternalReferenceCodeItemsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCartByExternalReferenceCodeItemsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/by-externalReferenceCode/{externalReferenceCode}/items',
        ...options
    });
};

/**
 * Add new Item to a Cart, return the whole Cart updated.
 */
export const postCartByExternalReferenceCodeItem = <ThrowOnError extends boolean = false>(options: Options<PostCartByExternalReferenceCodeItemData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostCartByExternalReferenceCodeItemResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/by-externalReferenceCode/{externalReferenceCode}/items',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieve cart items of a Cart.
 */
export const getCartItemsPage = <ThrowOnError extends boolean = false>(options: Options<GetCartItemsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCartItemsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/{cartId}/items',
        ...options
    });
};

/**
 * Add new Items to a Cart, return the whole Cart updated.
 */
export const postCartItem = <ThrowOnError extends boolean = false>(options: Options<PostCartItemData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostCartItemResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/{cartId}/items',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteCart = <ThrowOnError extends boolean = false>(options: Options<DeleteCartData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteCartResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/{cartId}',
        ...options
    });
};

/**
 * Retrieve information of the given Cart.
 */
export const getCart = <ThrowOnError extends boolean = false>(options: Options<GetCartData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCartResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/{cartId}',
        ...options
    });
};

export const patchCart = <ThrowOnError extends boolean = false>(options: Options<PatchCartData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchCartResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/{cartId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const putCart = <ThrowOnError extends boolean = false>(options: Options<PutCartData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutCartResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/{cartId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteCartBatch = <ThrowOnError extends boolean = false>(options?: Options<DeleteCartBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteCartBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const putCartBatch = <ThrowOnError extends boolean = false>(options?: Options<PutCartBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).put<PutCartBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const deleteCartByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<DeleteCartByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteCartByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/by-externalReferenceCode/{externalReferenceCode}',
        ...options
    });
};

/**
 * Retrieve information of the given Cart by external reference code.
 */
export const getCartByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetCartByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCartByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/by-externalReferenceCode/{externalReferenceCode}',
        ...options
    });
};

export const patchCartByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PatchCartByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchCartByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/by-externalReferenceCode/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const putCartByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PutCartByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).put<PutCartByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/by-externalReferenceCode/{externalReferenceCode}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getCartByExternalReferenceCodePaymentUrl = <ThrowOnError extends boolean = false>(options: Options<GetCartByExternalReferenceCodePaymentUrlData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCartByExternalReferenceCodePaymentUrlResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/by-externalReferenceCode/{externalReferenceCode}/payment-url',
        ...options
    });
};

export const getCartPaymentUrl = <ThrowOnError extends boolean = false>(options: Options<GetCartPaymentUrlData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCartPaymentUrlResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/{cartId}/payment-url',
        ...options
    });
};

/**
 * Retrieves carts for specific account in the given channel.
 */
export const getChannelAccountCartsPage = <ThrowOnError extends boolean = false>(options: Options<GetChannelAccountCartsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetChannelAccountCartsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/channels/{channelId}/account/{accountId}/carts',
        ...options
    });
};

/**
 * Retrieves carts for specific account in the given channel.
 */
export const getChannelByExternalReferenceCodeChannelExternalReferenceCodeAccountByExternalReferenceCodeAccountExternalReferenceCodeCartsPage = <ThrowOnError extends boolean = false>(options: Options<GetChannelByExternalReferenceCodeChannelExternalReferenceCodeAccountByExternalReferenceCodeAccountExternalReferenceCodeCartsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetChannelByExternalReferenceCodeChannelExternalReferenceCodeAccountByExternalReferenceCodeAccountExternalReferenceCodeCartsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/channels/by-externalReferenceCode/{channelExternalReferenceCode}/account/by-externalReferenceCode/{accountExternalReferenceCode}/carts',
        ...options
    });
};

/**
 * Retrieves carts in the given channel.
 */
export const getChannelCartsPage = <ThrowOnError extends boolean = false>(options: Options<GetChannelCartsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetChannelCartsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/channels/{channelId}/carts',
        ...options
    });
};

export const postChannelCart = <ThrowOnError extends boolean = false>(options: Options<PostChannelCartData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostChannelCartResponses, unknown, ThrowOnError>({
        url: '/v1.0/channels/{channelId}/carts',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postCartByExternalReferenceCodeCheckout = <ThrowOnError extends boolean = false>(options: Options<PostCartByExternalReferenceCodeCheckoutData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostCartByExternalReferenceCodeCheckoutResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/by-externalReferenceCode/{externalReferenceCode}/checkout',
        ...options
    });
};

/**
 * Add a coupon code to a Cart, return the whole Cart updated.
 */
export const postCartByExternalReferenceCodeCouponCode = <ThrowOnError extends boolean = false>(options: Options<PostCartByExternalReferenceCodeCouponCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostCartByExternalReferenceCodeCouponCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/by-externalReferenceCode/{externalReferenceCode}/coupon-code',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postCartCheckout = <ThrowOnError extends boolean = false>(options: Options<PostCartCheckoutData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostCartCheckoutResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/{cartId}/checkout',
        ...options
    });
};

/**
 * Add a coupon code to a Cart, return the whole Cart updated.
 */
export const postCartCouponCode = <ThrowOnError extends boolean = false>(options: Options<PostCartCouponCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostCartCouponCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/{cartId}/coupon-code',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Creates a Cart.
 */
export const postChannelCartByExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<PostChannelCartByExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostChannelCartByExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/channels/by-externalReferenceCode/{externalReferenceCode}/carts',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieve cart transitions of the given Cart.
 */
export const getCartCartTransitionsPage = <ThrowOnError extends boolean = false>(options: Options<GetCartCartTransitionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCartCartTransitionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/{cartId}/cart-transitions',
        ...options
    });
};

export const postCartCartTransition = <ThrowOnError extends boolean = false>(options: Options<PostCartCartTransitionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostCartCartTransitionResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/{cartId}/cart-transitions',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postCartCartTransitionBatch = <ThrowOnError extends boolean = false>(options: Options<PostCartCartTransitionBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostCartCartTransitionBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/{cartId}/cart-transitions/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const postCartCartTransitionsPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostCartCartTransitionsPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostCartCartTransitionsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/{cartId}/cart-transitions/export-batch',
        ...options
    });
};

export const getOpenApi = <ThrowOnError extends boolean = false>(options: Options<GetOpenApiData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetOpenApiResponses, unknown, ThrowOnError>({
        url: '/v1.0/openapi.{type}',
        ...options
    });
};

/**
 * Retrieve payment methods available for the Cart.
 */
export const getCartByExternalReferenceCodePaymentMethodsPage = <ThrowOnError extends boolean = false>(options: Options<GetCartByExternalReferenceCodePaymentMethodsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCartByExternalReferenceCodePaymentMethodsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/by-externalReferenceCode/{externalReferenceCode}/payment-methods',
        ...options
    });
};

/**
 * Retrieve payment methods available for the Cart.
 */
export const getCartPaymentMethodsPage = <ThrowOnError extends boolean = false>(options: Options<GetCartPaymentMethodsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCartPaymentMethodsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/{cartId}/payment-methods',
        ...options
    });
};

export const postCartPaymentMethodsPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostCartPaymentMethodsPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostCartPaymentMethodsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/{cartId}/payment-methods/export-batch',
        ...options
    });
};

/**
 * Retrieve payment methods available for the Cart.
 */
export const getCartByExternalReferenceCodeShippingMethodsPage = <ThrowOnError extends boolean = false>(options: Options<GetCartByExternalReferenceCodeShippingMethodsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCartByExternalReferenceCodeShippingMethodsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/by-externalReferenceCode/{externalReferenceCode}/shipping-methods',
        ...options
    });
};

/**
 * Retrieve payment methods available for the Cart.
 */
export const getCartShippingMethodsPage = <ThrowOnError extends boolean = false>(options: Options<GetCartShippingMethodsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCartShippingMethodsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/{cartId}/shipping-methods',
        ...options
    });
};

export const postCartShippingMethodsPageExportBatch = <ThrowOnError extends boolean = false>(options: Options<PostCartShippingMethodsPageExportBatchData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostCartShippingMethodsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/{cartId}/shipping-methods/export-batch',
        ...options
    });
};

/**
 * Retrieve delivery terms available for the Cart.
 */
export const getCartByExternalReferenceCodeDeliveryTermsPage = <ThrowOnError extends boolean = false>(options: Options<GetCartByExternalReferenceCodeDeliveryTermsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCartByExternalReferenceCodeDeliveryTermsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/by-externalReferenceCode/{externalReferenceCode}/delivery-terms',
        ...options
    });
};

/**
 * Retrieve payment terms available for the Cart.
 */
export const getCartByExternalReferenceCodePaymentTermsPage = <ThrowOnError extends boolean = false>(options: Options<GetCartByExternalReferenceCodePaymentTermsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCartByExternalReferenceCodePaymentTermsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/by-externalReferenceCode/{externalReferenceCode}/payment-terms',
        ...options
    });
};

/**
 * Retrieve delivery terms available for the Cart.
 */
export const getCartDeliveryTermsPage = <ThrowOnError extends boolean = false>(options: Options<GetCartDeliveryTermsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCartDeliveryTermsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/{cartId}/delivery-terms',
        ...options
    });
};

/**
 * Retrieve payment terms available for the Cart.
 */
export const getCartPaymentTermsPage = <ThrowOnError extends boolean = false>(options: Options<GetCartPaymentTermsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetCartPaymentTermsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/carts/{cartId}/payment-terms',
        ...options
    });
};