// This file is auto-generated by @hey-api/openapi-ts

export type AddressReadable = {
    city: string;
    country?: string;
    countryISOCode: string;
    description?: string;
    readonly externalReferenceCode?: string;
    id?: number;
    latitude?: number;
    longitude?: number;
    name: string;
    phoneNumber?: string;
    region?: string;
    regionISOCode?: string;
    street1: string;
    street2?: string;
    street3?: string;
    subtype?: string;
    readonly type?: string;
    typeId?: number;
    vatNumber?: string;
    zip?: string;
    readonly 'x-class-name'?: string;
};

export type AddressWritable = {
    city: string;
    country?: string;
    countryISOCode: string;
    description?: string;
    id?: number;
    latitude?: number;
    longitude?: number;
    name: string;
    phoneNumber?: string;
    region?: string;
    regionISOCode?: string;
    street1: string;
    street2?: string;
    street3?: string;
    subtype?: string;
    typeId?: number;
    vatNumber?: string;
    zip?: string;
};

export type Attachment = {
    readonly externalReferenceCode?: string;
    readonly id?: number;
    readonly title?: string;
    readonly type?: number;
    readonly url?: string;
    readonly 'x-class-name'?: string;
};

export type Facet = {
    facetCriteria?: string;
    facetValues?: Array<FacetValue>;
};

export type FacetValue = {
    numberOfOccurrences?: number;
    term?: string;
};

export type PageAttachmentReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<Attachment>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageAttachmentWritable = {
    lastPage?: number;
    totalCount?: number;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type AttachmentBase64Readable = {
    /**
     * Base64 encoded file
     */
    attachment?: string;
    externalReferenceCode?: string;
    title?: string;
    readonly 'x-class-name'?: string;
};

export type AttachmentBase64Writable = {
    /**
     * Base64 encoded file
     */
    attachment?: string;
    externalReferenceCode?: string;
    title?: string;
};

export type CartCommentReadable = {
    readonly author?: string;
    readonly authorId?: number;
    readonly authorPortraitURL?: string;
    content?: string;
    readonly externalReferenceCode?: string;
    readonly id?: number;
    readonly modifiedDate?: string;
    readonly orderId?: number;
    restricted?: boolean;
    readonly 'x-class-name'?: string;
};

export type CartCommentWritable = {
    content?: string;
    restricted?: boolean;
};

export type PageCartCommentReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<CartCommentReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageCartCommentWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<CartCommentWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type CartItemReadable = {
    readonly adaptiveMediaImageHTMLTag?: string;
    customFields?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    /**
     * @deprecated
     */
    deliveryGroup?: string;
    deliveryGroupName?: string;
    errorMessages?: Array<string>;
    readonly externalReferenceCode?: string;
    readonly id?: number;
    readonly name?: string;
    options?: string;
    readonly parentCartItemId?: number;
    price?: PriceReadable;
    productId?: number;
    readonly productURLs?: {
        [key: string]: string;
    };
    quantity?: number;
    readonly replacedSku?: string;
    replacedSkuExternalReferenceCode?: string;
    replacedSkuId?: number;
    requestedDeliveryDate?: string;
    settings?: SettingsReadable;
    shippingAddress?: AddressReadable;
    shippingAddressExternalReferenceCode?: string;
    shippingAddressId?: number;
    readonly sku?: string;
    skuId: number;
    skuUnitOfMeasure?: SkuUnitOfMeasureReadable;
    readonly subscription?: boolean;
    readonly thumbnail?: string;
    readonly unitOfMeasure?: string;
    readonly valid?: boolean;
    readonly 'x-class-name'?: string;
};

export type CartItemWritable = {
    customFields?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    /**
     * @deprecated
     */
    deliveryGroup?: string;
    deliveryGroupName?: string;
    errorMessages?: Array<string>;
    options?: string;
    price?: PriceWritable;
    productId?: number;
    quantity?: number;
    replacedSkuExternalReferenceCode?: string;
    replacedSkuId?: number;
    requestedDeliveryDate?: string;
    settings?: SettingsWritable;
    shippingAddress?: AddressWritable;
    shippingAddressExternalReferenceCode?: string;
    shippingAddressId?: number;
    skuId: number;
    skuUnitOfMeasure?: SkuUnitOfMeasureWritable;
};

export type PageCartItemReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<CartItemReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageCartItemWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<CartItemWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PriceReadable = {
    currency?: string;
    discount?: number;
    discountFormatted?: string;
    discountPercentage?: string;
    discountPercentageLevel1?: number;
    discountPercentageLevel2?: number;
    discountPercentageLevel3?: number;
    discountPercentageLevel4?: number;
    finalPrice?: number;
    finalPriceFormatted?: string;
    price?: number;
    priceFormatted?: string;
    readonly priceOnApplication?: boolean;
    promoPrice?: number;
    promoPriceFormatted?: string;
    readonly 'x-class-name'?: string;
};

export type PriceWritable = {
    currency?: string;
    discount?: number;
    discountFormatted?: string;
    discountPercentage?: string;
    discountPercentageLevel1?: number;
    discountPercentageLevel2?: number;
    discountPercentageLevel3?: number;
    discountPercentageLevel4?: number;
    finalPrice?: number;
    finalPriceFormatted?: string;
    price?: number;
    priceFormatted?: string;
    promoPrice?: number;
    promoPriceFormatted?: string;
};

export type SettingsReadable = {
    allowedQuantities?: Array<number>;
    maxQuantity?: number;
    minQuantity?: number;
    multipleQuantity?: number;
    readonly 'x-class-name'?: string;
};

export type SettingsWritable = {
    allowedQuantities?: Array<number>;
    maxQuantity?: number;
    minQuantity?: number;
    multipleQuantity?: number;
};

export type SkuUnitOfMeasureReadable = {
    incrementalOrderQuantity?: number;
    key?: string;
    name?: string;
    precision?: number;
    primary?: boolean;
    priority?: number;
    rate?: number;
    readonly 'x-class-name'?: string;
};

export type SkuUnitOfMeasureWritable = {
    incrementalOrderQuantity?: number;
    key?: string;
    name?: string;
    precision?: number;
    primary?: boolean;
    priority?: number;
    rate?: number;
};

export type CartReadable = {
    readonly account?: string;
    accountId?: number;
    attachments?: Array<Attachment>;
    readonly author?: string;
    billingAddress?: AddressReadable;
    billingAddressExternalReferenceCode?: string;
    billingAddressId?: number;
    cartItems?: Array<CartItemReadable>;
    readonly channelId?: number;
    couponCode?: string;
    readonly createDate?: string;
    currencyCode?: string;
    currencyExternalReferenceCode?: string;
    currencyId?: number;
    customFields?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    deliveryTermId?: number;
    readonly deliveryTermLabel?: string;
    errorMessages?: Array<string>;
    readonly externalReferenceCode?: string;
    readonly friendlyURLSeparator?: string;
    readonly id?: number;
    readonly lastPriceUpdateDate?: string;
    readonly modifiedDate?: string;
    name?: string;
    notes?: Array<CartCommentReadable>;
    orderStatusInfo?: StatusReadable;
    readonly orderType?: string;
    orderTypeExternalReferenceCode?: string;
    orderTypeId?: number;
    readonly orderUUID?: string;
    paymentMethod?: string;
    readonly paymentMethodLabel?: string;
    readonly paymentMethodType?: number;
    readonly paymentStatus?: number;
    paymentStatusInfo?: StatusReadable;
    readonly paymentStatusLabel?: string;
    paymentTermId?: number;
    readonly paymentTermLabel?: string;
    printedNote?: string;
    purchaseOrderNumber?: string;
    requestedDeliveryDate?: string;
    shippingAddress?: AddressReadable;
    shippingAddressExternalReferenceCode?: string;
    shippingAddressId?: number;
    shippingMethod?: string;
    shippingOption?: string;
    readonly status?: string;
    steps?: Array<Step>;
    summary?: SummaryReadable;
    useAsBilling?: boolean;
    readonly valid?: boolean;
    workflowStatusInfo?: StatusReadable;
    readonly 'x-class-name'?: string;
};

export type CartWritable = {
    accountId?: number;
    billingAddress?: AddressWritable;
    billingAddressExternalReferenceCode?: string;
    billingAddressId?: number;
    cartItems?: Array<CartItemWritable>;
    couponCode?: string;
    currencyCode?: string;
    currencyExternalReferenceCode?: string;
    currencyId?: number;
    customFields?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    deliveryTermId?: number;
    errorMessages?: Array<string>;
    name?: string;
    notes?: Array<CartCommentWritable>;
    orderStatusInfo?: StatusWritable;
    orderTypeExternalReferenceCode?: string;
    orderTypeId?: number;
    paymentMethod?: string;
    paymentStatusInfo?: StatusWritable;
    paymentTermId?: number;
    printedNote?: string;
    purchaseOrderNumber?: string;
    requestedDeliveryDate?: string;
    shippingAddress?: AddressWritable;
    shippingAddressExternalReferenceCode?: string;
    shippingAddressId?: number;
    shippingMethod?: string;
    shippingOption?: string;
    summary?: SummaryWritable;
    useAsBilling?: boolean;
    workflowStatusInfo?: StatusWritable;
};

export type StatusReadable = {
    readonly code?: number;
    label?: string;
    label_i18n?: string;
    readonly 'x-class-name'?: string;
};

export type StatusWritable = {
    label?: string;
    label_i18n?: string;
};

export type Step = {
    readonly id?: string;
    readonly label?: string;
    readonly state?: string;
    readonly 'x-class-name'?: string;
};

export type SummaryReadable = {
    currency?: string;
    itemsQuantity?: number;
    shippingDiscountPercentages?: Array<string>;
    shippingDiscountValue?: number;
    shippingDiscountValueFormatted?: string;
    shippingValue?: number;
    shippingValueFormatted?: string;
    shippingValueWithTaxAmount?: number;
    shippingValueWithTaxAmountFormatted?: string;
    subtotal?: number;
    subtotalDiscountPercentages?: Array<string>;
    subtotalDiscountValue?: number;
    subtotalDiscountValueFormatted?: string;
    subtotalFormatted?: string;
    taxValue?: number;
    taxValueFormatted?: string;
    total?: number;
    totalDiscountPercentages?: Array<string>;
    totalDiscountValue?: number;
    totalDiscountValueFormatted?: string;
    totalFormatted?: string;
    readonly 'x-class-name'?: string;
};

export type SummaryWritable = {
    currency?: string;
    itemsQuantity?: number;
    shippingDiscountPercentages?: Array<string>;
    shippingDiscountValue?: number;
    shippingDiscountValueFormatted?: string;
    shippingValue?: number;
    shippingValueFormatted?: string;
    shippingValueWithTaxAmount?: number;
    shippingValueWithTaxAmountFormatted?: string;
    subtotal?: number;
    subtotalDiscountPercentages?: Array<string>;
    subtotalDiscountValue?: number;
    subtotalDiscountValueFormatted?: string;
    subtotalFormatted?: string;
    taxValue?: number;
    taxValueFormatted?: string;
    total?: number;
    totalDiscountPercentages?: Array<string>;
    totalDiscountValue?: number;
    totalDiscountValueFormatted?: string;
    totalFormatted?: string;
};

export type PageCartReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<CartReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageCartWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<CartWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type CouponCodeReadable = {
    code?: string;
    readonly 'x-class-name'?: string;
};

export type CouponCodeWritable = {
    code?: string;
};

export type CartTransitionReadable = {
    readonly cartId?: number;
    comment?: string;
    readonly label?: string;
    name?: string;
    readonly open?: boolean;
    workflowTaskId?: number;
    readonly 'x-class-name'?: string;
};

export type CartTransitionWritable = {
    comment?: string;
    name?: string;
    workflowTaskId?: number;
};

export type PageCartTransitionReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<CartTransitionReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageCartTransitionWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<CartTransitionWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PagePaymentMethodReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<PaymentMethodReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PagePaymentMethodWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<PaymentMethodWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PaymentMethodReadable = {
    description?: string;
    key?: string;
    name?: string;
    readonly 'x-class-name'?: string;
};

export type PaymentMethodWritable = {
    description?: string;
    key?: string;
    name?: string;
};

export type PageShippingMethodReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<ShippingMethodReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageShippingMethodWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<ShippingMethodWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type ShippingMethodReadable = {
    description?: string;
    engineKey?: string;
    id?: number;
    name?: string;
    shippingOptions?: Array<ShippingOptionReadable>;
    readonly 'x-class-name'?: string;
};

export type ShippingMethodWritable = {
    description?: string;
    engineKey?: string;
    id?: number;
    name?: string;
    shippingOptions?: Array<ShippingOptionWritable>;
};

export type ShippingOptionReadable = {
    amount?: number;
    amountFormatted?: string;
    label?: string;
    name?: string;
    readonly 'x-class-name'?: string;
};

export type ShippingOptionWritable = {
    amount?: number;
    amountFormatted?: string;
    label?: string;
    name?: string;
};

export type PageTermReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<TermReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageTermWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<TermWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type TermReadable = {
    readonly description?: string;
    externalReferenceCode?: string;
    id?: number;
    readonly label?: string;
    readonly name?: string;
    readonly 'x-class-name'?: string;
};

export type TermWritable = {
    externalReferenceCode?: string;
    id?: number;
};

export type GetCartBillingAddresData = {
    body?: never;
    path: {
        cartId: string;
    };
    query?: never;
    url: '/v1.0/carts/{cartId}/billing-address';
};

export type GetCartBillingAddresResponses = {
    /**
     * default response
     */
    default: AddressReadable;
};

export type GetCartBillingAddresResponse = GetCartBillingAddresResponses[keyof GetCartBillingAddresResponses];

export type GetCartByExternalReferenceCodeBillingAddressData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/v1.0/carts/by-externalReferenceCode/{externalReferenceCode}/billing-address';
};

export type GetCartByExternalReferenceCodeBillingAddressResponses = {
    /**
     * default response
     */
    default: AddressReadable;
};

export type GetCartByExternalReferenceCodeBillingAddressResponse = GetCartByExternalReferenceCodeBillingAddressResponses[keyof GetCartByExternalReferenceCodeBillingAddressResponses];

export type GetCartByExternalReferenceCodeShippingAddressData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/v1.0/carts/by-externalReferenceCode/{externalReferenceCode}/shipping-address';
};

export type GetCartByExternalReferenceCodeShippingAddressResponses = {
    /**
     * default response
     */
    default: AddressReadable;
};

export type GetCartByExternalReferenceCodeShippingAddressResponse = GetCartByExternalReferenceCodeShippingAddressResponses[keyof GetCartByExternalReferenceCodeShippingAddressResponses];

export type GetCartShippingAddresData = {
    body?: never;
    path: {
        cartId: string;
    };
    query?: never;
    url: '/v1.0/carts/{cartId}/shipping-address';
};

export type GetCartShippingAddresResponses = {
    /**
     * default response
     */
    default: AddressReadable;
};

export type GetCartShippingAddresResponse = GetCartShippingAddresResponses[keyof GetCartShippingAddresResponses];

export type DeleteCartAttachmentData = {
    body?: never;
    path: {
        attachmentId: string;
        cartId: string;
    };
    query?: never;
    url: '/v1.0/carts/{cartId}/attachments/{attachmentId}';
};

export type DeleteCartAttachmentResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteCartByExternalReferenceCodeAttachmentByExternalReferenceCodeAttachmentExternalReferenceCodeData = {
    body?: never;
    path: {
        attachmentExternalReferenceCode: string;
        externalReferenceCode: string;
    };
    query?: never;
    url: '/v1.0/carts/by-externalReferenceCode/{externalReferenceCode}/attachments/by-externalReferenceCode/{attachmentExternalReferenceCode}';
};

export type DeleteCartByExternalReferenceCodeAttachmentByExternalReferenceCodeAttachmentExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetCartAttachmentsPageData = {
    body?: never;
    path: {
        cartId: string;
    };
    query?: {
        page?: string;
        pageSize?: string;
    };
    url: '/v1.0/carts/{cartId}/attachments';
};

export type GetCartAttachmentsPageResponses = {
    /**
     * default response
     */
    default: PageAttachmentReadable;
};

export type GetCartAttachmentsPageResponse = GetCartAttachmentsPageResponses[keyof GetCartAttachmentsPageResponses];

export type GetCartByExternalReferenceCodeAttachmentsPageData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: {
        page?: string;
        pageSize?: string;
    };
    url: '/v1.0/carts/by-externalReferenceCode/{externalReferenceCode}/attachments';
};

export type GetCartByExternalReferenceCodeAttachmentsPageResponses = {
    /**
     * default response
     */
    default: PageAttachmentReadable;
};

export type GetCartByExternalReferenceCodeAttachmentsPageResponse = GetCartByExternalReferenceCodeAttachmentsPageResponses[keyof GetCartByExternalReferenceCodeAttachmentsPageResponses];

export type PostCartAttachmentByBase64Data = {
    body?: AttachmentBase64Writable;
    path: {
        cartId: string;
    };
    query?: never;
    url: '/v1.0/carts/{cartId}/attachments/by-base64';
};

export type PostCartAttachmentByBase64Responses = {
    /**
     * default response
     */
    default: Attachment;
};

export type PostCartAttachmentByBase64Response = PostCartAttachmentByBase64Responses[keyof PostCartAttachmentByBase64Responses];

export type PostCartAttachmentsPageExportBatchData = {
    body?: never;
    path: {
        cartId: string;
    };
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/v1.0/carts/{cartId}/attachments/export-batch';
};

export type PostCartAttachmentsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostCartByExternalReferenceCodeAttachmentByBase64Data = {
    body?: AttachmentBase64Writable;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/v1.0/carts/by-externalReferenceCode/{externalReferenceCode}/attachments/by-base64';
};

export type PostCartByExternalReferenceCodeAttachmentByBase64Responses = {
    /**
     * default response
     */
    default: Attachment;
};

export type PostCartByExternalReferenceCodeAttachmentByBase64Response = PostCartByExternalReferenceCodeAttachmentByBase64Responses[keyof PostCartByExternalReferenceCodeAttachmentByBase64Responses];

export type DeleteCartCommentData = {
    body?: never;
    path: {
        cartCommentId: string;
    };
    query?: never;
    url: '/v1.0/cart-comments/{cartCommentId}';
};

export type DeleteCartCommentResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetCartCommentData = {
    body?: never;
    path: {
        cartCommentId: string;
    };
    query?: never;
    url: '/v1.0/cart-comments/{cartCommentId}';
};

export type GetCartCommentResponses = {
    /**
     * default response
     */
    default: CartCommentReadable;
};

export type GetCartCommentResponse = GetCartCommentResponses[keyof GetCartCommentResponses];

export type PatchCartCommentData = {
    body?: CartCommentWritable;
    path: {
        cartCommentId: string;
    };
    query?: never;
    url: '/v1.0/cart-comments/{cartCommentId}';
};

export type PatchCartCommentResponses = {
    /**
     * default response
     */
    default: CartCommentReadable;
};

export type PatchCartCommentResponse = PatchCartCommentResponses[keyof PatchCartCommentResponses];

export type PutCartCommentData = {
    body?: CartCommentWritable;
    path: {
        cartCommentId: string;
    };
    query?: never;
    url: '/v1.0/cart-comments/{cartCommentId}';
};

export type PutCartCommentResponses = {
    /**
     * default response
     */
    default: CartCommentReadable;
};

export type PutCartCommentResponse = PutCartCommentResponses[keyof PutCartCommentResponses];

export type DeleteCartCommentBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/v1.0/cart-comments/batch';
};

export type DeleteCartCommentBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutCartCommentBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/v1.0/cart-comments/batch';
};

export type PutCartCommentBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteCartCommentByExternalReferenceCodeData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/v1.0/cart-comments/by-externalReferenceCode/{externalReferenceCode}';
};

export type DeleteCartCommentByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetCartCommentByExternalReferenceCodeData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/v1.0/cart-comments/by-externalReferenceCode/{externalReferenceCode}';
};

export type GetCartCommentByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: CartCommentReadable;
};

export type GetCartCommentByExternalReferenceCodeResponse = GetCartCommentByExternalReferenceCodeResponses[keyof GetCartCommentByExternalReferenceCodeResponses];

export type PatchCartCommentByExternalReferenceCodeData = {
    body?: CartCommentWritable;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/v1.0/cart-comments/by-externalReferenceCode/{externalReferenceCode}';
};

export type PatchCartCommentByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: CartCommentReadable;
};

export type PatchCartCommentByExternalReferenceCodeResponse = PatchCartCommentByExternalReferenceCodeResponses[keyof PatchCartCommentByExternalReferenceCodeResponses];

export type PutCartCommentByExternalReferenceCodeData = {
    body?: CartCommentWritable;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/v1.0/cart-comments/by-externalReferenceCode/{externalReferenceCode}';
};

export type PutCartCommentByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: CartCommentReadable;
};

export type PutCartCommentByExternalReferenceCodeResponse = PutCartCommentByExternalReferenceCodeResponses[keyof PutCartCommentByExternalReferenceCodeResponses];

export type GetCartByExternalReferenceCodeCommentsPageData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: {
        page?: string;
        pageSize?: string;
    };
    url: '/v1.0/carts/by-externalReferenceCode/{externalReferenceCode}/comments';
};

export type GetCartByExternalReferenceCodeCommentsPageResponses = {
    /**
     * default response
     */
    default: PageCartCommentReadable;
};

export type GetCartByExternalReferenceCodeCommentsPageResponse = GetCartByExternalReferenceCodeCommentsPageResponses[keyof GetCartByExternalReferenceCodeCommentsPageResponses];

export type PostCartByExternalReferenceCodeCommentData = {
    body?: CartCommentWritable;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/v1.0/carts/by-externalReferenceCode/{externalReferenceCode}/comments';
};

export type PostCartByExternalReferenceCodeCommentResponses = {
    /**
     * default response
     */
    default: CartCommentReadable;
};

export type PostCartByExternalReferenceCodeCommentResponse = PostCartByExternalReferenceCodeCommentResponses[keyof PostCartByExternalReferenceCodeCommentResponses];

export type GetCartCommentsPageData = {
    body?: never;
    path: {
        cartId: string;
    };
    query?: {
        page?: string;
        pageSize?: string;
    };
    url: '/v1.0/carts/{cartId}/comments';
};

export type GetCartCommentsPageResponses = {
    /**
     * default response
     */
    default: PageCartCommentReadable;
};

export type GetCartCommentsPageResponse = GetCartCommentsPageResponses[keyof GetCartCommentsPageResponses];

export type PostCartCommentData = {
    body?: CartCommentWritable;
    path: {
        cartId: string;
    };
    query?: never;
    url: '/v1.0/carts/{cartId}/comments';
};

export type PostCartCommentResponses = {
    /**
     * default response
     */
    default: CartCommentReadable;
};

export type PostCartCommentResponse = PostCartCommentResponses[keyof PostCartCommentResponses];

export type DeleteCartItemData = {
    body?: never;
    path: {
        cartItemId: string;
    };
    query?: never;
    url: '/v1.0/cart-items/{cartItemId}';
};

export type DeleteCartItemResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetCartItemData = {
    body?: never;
    path: {
        cartItemId: string;
    };
    query?: never;
    url: '/v1.0/cart-items/{cartItemId}';
};

export type GetCartItemResponses = {
    /**
     * default response
     */
    default: CartItemReadable;
};

export type GetCartItemResponse = GetCartItemResponses[keyof GetCartItemResponses];

export type PatchCartItemData = {
    body?: CartItemWritable;
    path: {
        cartItemId: string;
    };
    query?: never;
    url: '/v1.0/cart-items/{cartItemId}';
};

export type PatchCartItemResponses = {
    /**
     * default response
     */
    default: CartItemReadable;
};

export type PatchCartItemResponse = PatchCartItemResponses[keyof PatchCartItemResponses];

export type PutCartItemData = {
    body?: CartItemWritable;
    path: {
        cartItemId: string;
    };
    query?: never;
    url: '/v1.0/cart-items/{cartItemId}';
};

export type PutCartItemResponses = {
    /**
     * default response
     */
    default: CartItemReadable;
};

export type PutCartItemResponse = PutCartItemResponses[keyof PutCartItemResponses];

export type DeleteCartItemBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/v1.0/cart-items/batch';
};

export type DeleteCartItemBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutCartItemBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/v1.0/cart-items/batch';
};

export type PutCartItemBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteCartItemByExternalReferenceCodeData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/v1.0/cart-items/by-externalReferenceCode/{externalReferenceCode}';
};

export type DeleteCartItemByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetCartItemByExternalReferenceCodeData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/v1.0/cart-items/by-externalReferenceCode/{externalReferenceCode}';
};

export type GetCartItemByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: CartItemReadable;
};

export type GetCartItemByExternalReferenceCodeResponse = GetCartItemByExternalReferenceCodeResponses[keyof GetCartItemByExternalReferenceCodeResponses];

export type PatchCartItemByExternalReferenceCodeData = {
    body?: CartItemWritable;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/v1.0/cart-items/by-externalReferenceCode/{externalReferenceCode}';
};

export type PatchCartItemByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: CartItemReadable;
};

export type PatchCartItemByExternalReferenceCodeResponse = PatchCartItemByExternalReferenceCodeResponses[keyof PatchCartItemByExternalReferenceCodeResponses];

export type PutCartItemByExternalReferenceCodeData = {
    body?: CartItemWritable;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/v1.0/cart-items/by-externalReferenceCode/{externalReferenceCode}';
};

export type PutCartItemByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: CartItemReadable;
};

export type PutCartItemByExternalReferenceCodeResponse = PutCartItemByExternalReferenceCodeResponses[keyof PutCartItemByExternalReferenceCodeResponses];

export type GetCartByExternalReferenceCodeItemsPageData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: {
        page?: string;
        pageSize?: string;
        search?: string;
        skuId?: string;
    };
    url: '/v1.0/carts/by-externalReferenceCode/{externalReferenceCode}/items';
};

export type GetCartByExternalReferenceCodeItemsPageResponses = {
    /**
     * default response
     */
    default: PageCartItemReadable;
};

export type GetCartByExternalReferenceCodeItemsPageResponse = GetCartByExternalReferenceCodeItemsPageResponses[keyof GetCartByExternalReferenceCodeItemsPageResponses];

export type PostCartByExternalReferenceCodeItemData = {
    body?: CartItemWritable;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/v1.0/carts/by-externalReferenceCode/{externalReferenceCode}/items';
};

export type PostCartByExternalReferenceCodeItemResponses = {
    /**
     * default response
     */
    default: CartItemReadable;
};

export type PostCartByExternalReferenceCodeItemResponse = PostCartByExternalReferenceCodeItemResponses[keyof PostCartByExternalReferenceCodeItemResponses];

export type GetCartItemsPageData = {
    body?: never;
    path: {
        cartId: string;
    };
    query?: {
        page?: string;
        pageSize?: string;
        search?: string;
        skuId?: string;
    };
    url: '/v1.0/carts/{cartId}/items';
};

export type GetCartItemsPageResponses = {
    /**
     * default response
     */
    default: PageCartItemReadable;
};

export type GetCartItemsPageResponse = GetCartItemsPageResponses[keyof GetCartItemsPageResponses];

export type PostCartItemData = {
    body?: CartItemWritable;
    path: {
        cartId: string;
    };
    query?: never;
    url: '/v1.0/carts/{cartId}/items';
};

export type PostCartItemResponses = {
    /**
     * default response
     */
    default: CartItemReadable;
};

export type PostCartItemResponse = PostCartItemResponses[keyof PostCartItemResponses];

export type DeleteCartData = {
    body?: never;
    path: {
        cartId: string;
    };
    query?: never;
    url: '/v1.0/carts/{cartId}';
};

export type DeleteCartResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetCartData = {
    body?: never;
    path: {
        cartId: string;
    };
    query?: never;
    url: '/v1.0/carts/{cartId}';
};

export type GetCartResponses = {
    /**
     * default response
     */
    default: CartReadable;
};

export type GetCartResponse = GetCartResponses[keyof GetCartResponses];

export type PatchCartData = {
    body?: CartWritable;
    path: {
        cartId: string;
    };
    query?: never;
    url: '/v1.0/carts/{cartId}';
};

export type PatchCartResponses = {
    /**
     * default response
     */
    default: CartReadable;
};

export type PatchCartResponse = PatchCartResponses[keyof PatchCartResponses];

export type PutCartData = {
    body?: CartWritable;
    path: {
        cartId: string;
    };
    query?: never;
    url: '/v1.0/carts/{cartId}';
};

export type PutCartResponses = {
    /**
     * default response
     */
    default: CartReadable;
};

export type PutCartResponse = PutCartResponses[keyof PutCartResponses];

export type DeleteCartBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/v1.0/carts/batch';
};

export type DeleteCartBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutCartBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/v1.0/carts/batch';
};

export type PutCartBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteCartByExternalReferenceCodeData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/v1.0/carts/by-externalReferenceCode/{externalReferenceCode}';
};

export type DeleteCartByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetCartByExternalReferenceCodeData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/v1.0/carts/by-externalReferenceCode/{externalReferenceCode}';
};

export type GetCartByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: CartReadable;
};

export type GetCartByExternalReferenceCodeResponse = GetCartByExternalReferenceCodeResponses[keyof GetCartByExternalReferenceCodeResponses];

export type PatchCartByExternalReferenceCodeData = {
    body?: CartWritable;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/v1.0/carts/by-externalReferenceCode/{externalReferenceCode}';
};

export type PatchCartByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: CartReadable;
};

export type PatchCartByExternalReferenceCodeResponse = PatchCartByExternalReferenceCodeResponses[keyof PatchCartByExternalReferenceCodeResponses];

export type PutCartByExternalReferenceCodeData = {
    body?: CartWritable;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/v1.0/carts/by-externalReferenceCode/{externalReferenceCode}';
};

export type PutCartByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: CartReadable;
};

export type PutCartByExternalReferenceCodeResponse = PutCartByExternalReferenceCodeResponses[keyof PutCartByExternalReferenceCodeResponses];

export type GetCartByExternalReferenceCodePaymentUrlData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/v1.0/carts/by-externalReferenceCode/{externalReferenceCode}/payment-url';
};

export type GetCartByExternalReferenceCodePaymentUrlResponses = {
    /**
     * default response
     */
    default: string;
};

export type GetCartByExternalReferenceCodePaymentUrlResponse = GetCartByExternalReferenceCodePaymentUrlResponses[keyof GetCartByExternalReferenceCodePaymentUrlResponses];

export type GetCartPaymentUrlData = {
    body?: never;
    path: {
        cartId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/v1.0/carts/{cartId}/payment-url';
};

export type GetCartPaymentUrlResponses = {
    /**
     * default response
     */
    default: string;
};

export type GetCartPaymentUrlResponse = GetCartPaymentUrlResponses[keyof GetCartPaymentUrlResponses];

export type GetChannelAccountCartsPageData = {
    body?: never;
    path: {
        accountId: string;
        channelId: string;
    };
    query?: {
        filter?: string;
        page?: string;
        pageSize?: string;
        search?: string;
        sort?: string;
    };
    url: '/v1.0/channels/{channelId}/account/{accountId}/carts';
};

export type GetChannelAccountCartsPageResponses = {
    /**
     * default response
     */
    default: PageCartReadable;
};

export type GetChannelAccountCartsPageResponse = GetChannelAccountCartsPageResponses[keyof GetChannelAccountCartsPageResponses];

export type GetChannelByExternalReferenceCodeChannelExternalReferenceCodeAccountByExternalReferenceCodeAccountExternalReferenceCodeCartsPageData = {
    body?: never;
    path: {
        accountExternalReferenceCode: string;
        channelExternalReferenceCode: string;
    };
    query?: {
        filter?: string;
        page?: string;
        pageSize?: string;
        search?: string;
        sort?: string;
    };
    url: '/v1.0/channels/by-externalReferenceCode/{channelExternalReferenceCode}/account/by-externalReferenceCode/{accountExternalReferenceCode}/carts';
};

export type GetChannelByExternalReferenceCodeChannelExternalReferenceCodeAccountByExternalReferenceCodeAccountExternalReferenceCodeCartsPageResponses = {
    /**
     * default response
     */
    default: PageCartReadable;
};

export type GetChannelByExternalReferenceCodeChannelExternalReferenceCodeAccountByExternalReferenceCodeAccountExternalReferenceCodeCartsPageResponse = GetChannelByExternalReferenceCodeChannelExternalReferenceCodeAccountByExternalReferenceCodeAccountExternalReferenceCodeCartsPageResponses[keyof GetChannelByExternalReferenceCodeChannelExternalReferenceCodeAccountByExternalReferenceCodeAccountExternalReferenceCodeCartsPageResponses];

export type GetChannelCartsPageData = {
    body?: never;
    path: {
        channelId: string;
    };
    query?: {
        filter?: string;
        page?: string;
        pageSize?: string;
        search?: string;
        sort?: string;
    };
    url: '/v1.0/channels/{channelId}/carts';
};

export type GetChannelCartsPageResponses = {
    /**
     * default response
     */
    default: PageCartReadable;
};

export type GetChannelCartsPageResponse = GetChannelCartsPageResponses[keyof GetChannelCartsPageResponses];

export type PostChannelCartData = {
    body?: CartWritable;
    path: {
        channelId: string;
    };
    query?: never;
    url: '/v1.0/channels/{channelId}/carts';
};

export type PostChannelCartResponses = {
    /**
     * default response
     */
    default: CartReadable;
};

export type PostChannelCartResponse = PostChannelCartResponses[keyof PostChannelCartResponses];

export type PostCartByExternalReferenceCodeCheckoutData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/v1.0/carts/by-externalReferenceCode/{externalReferenceCode}/checkout';
};

export type PostCartByExternalReferenceCodeCheckoutResponses = {
    /**
     * default response
     */
    default: CartReadable;
};

export type PostCartByExternalReferenceCodeCheckoutResponse = PostCartByExternalReferenceCodeCheckoutResponses[keyof PostCartByExternalReferenceCodeCheckoutResponses];

export type PostCartByExternalReferenceCodeCouponCodeData = {
    body?: CouponCodeWritable;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/v1.0/carts/by-externalReferenceCode/{externalReferenceCode}/coupon-code';
};

export type PostCartByExternalReferenceCodeCouponCodeResponses = {
    /**
     * default response
     */
    default: CartReadable;
};

export type PostCartByExternalReferenceCodeCouponCodeResponse = PostCartByExternalReferenceCodeCouponCodeResponses[keyof PostCartByExternalReferenceCodeCouponCodeResponses];

export type PostCartCheckoutData = {
    body?: never;
    path: {
        cartId: string;
    };
    query?: never;
    url: '/v1.0/carts/{cartId}/checkout';
};

export type PostCartCheckoutResponses = {
    /**
     * default response
     */
    default: CartReadable;
};

export type PostCartCheckoutResponse = PostCartCheckoutResponses[keyof PostCartCheckoutResponses];

export type PostCartCouponCodeData = {
    body?: CouponCodeWritable;
    path: {
        cartId: string;
    };
    query?: never;
    url: '/v1.0/carts/{cartId}/coupon-code';
};

export type PostCartCouponCodeResponses = {
    /**
     * default response
     */
    default: CartReadable;
};

export type PostCartCouponCodeResponse = PostCartCouponCodeResponses[keyof PostCartCouponCodeResponses];

export type PostChannelCartByExternalReferenceCodeData = {
    body?: CartWritable;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/v1.0/channels/by-externalReferenceCode/{externalReferenceCode}/carts';
};

export type PostChannelCartByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: CartReadable;
};

export type PostChannelCartByExternalReferenceCodeResponse = PostChannelCartByExternalReferenceCodeResponses[keyof PostChannelCartByExternalReferenceCodeResponses];

export type GetCartCartTransitionsPageData = {
    body?: never;
    path: {
        cartId: string;
    };
    query?: never;
    url: '/v1.0/carts/{cartId}/cart-transitions';
};

export type GetCartCartTransitionsPageResponses = {
    /**
     * default response
     */
    default: PageCartTransitionReadable;
};

export type GetCartCartTransitionsPageResponse = GetCartCartTransitionsPageResponses[keyof GetCartCartTransitionsPageResponses];

export type PostCartCartTransitionData = {
    body?: CartTransitionWritable;
    path: {
        cartId: string;
    };
    query?: never;
    url: '/v1.0/carts/{cartId}/cart-transitions';
};

export type PostCartCartTransitionResponses = {
    /**
     * default response
     */
    default: CartTransitionReadable;
};

export type PostCartCartTransitionResponse = PostCartCartTransitionResponses[keyof PostCartCartTransitionResponses];

export type PostCartCartTransitionBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        cartId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/v1.0/carts/{cartId}/cart-transitions/batch';
};

export type PostCartCartTransitionBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostCartCartTransitionsPageExportBatchData = {
    body?: never;
    path: {
        cartId: string;
    };
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/v1.0/carts/{cartId}/cart-transitions/export-batch';
};

export type PostCartCartTransitionsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetOpenApiData = {
    body?: never;
    path: {
        type: string;
    };
    query?: never;
    url: '/v1.0/openapi.{type}';
};

export type GetOpenApiResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetCartByExternalReferenceCodePaymentMethodsPageData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/v1.0/carts/by-externalReferenceCode/{externalReferenceCode}/payment-methods';
};

export type GetCartByExternalReferenceCodePaymentMethodsPageResponses = {
    /**
     * default response
     */
    default: PagePaymentMethodReadable;
};

export type GetCartByExternalReferenceCodePaymentMethodsPageResponse = GetCartByExternalReferenceCodePaymentMethodsPageResponses[keyof GetCartByExternalReferenceCodePaymentMethodsPageResponses];

export type GetCartPaymentMethodsPageData = {
    body?: never;
    path: {
        cartId: string;
    };
    query?: never;
    url: '/v1.0/carts/{cartId}/payment-methods';
};

export type GetCartPaymentMethodsPageResponses = {
    /**
     * default response
     */
    default: PagePaymentMethodReadable;
};

export type GetCartPaymentMethodsPageResponse = GetCartPaymentMethodsPageResponses[keyof GetCartPaymentMethodsPageResponses];

export type PostCartPaymentMethodsPageExportBatchData = {
    body?: never;
    path: {
        cartId: string;
    };
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/v1.0/carts/{cartId}/payment-methods/export-batch';
};

export type PostCartPaymentMethodsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetCartByExternalReferenceCodeShippingMethodsPageData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/v1.0/carts/by-externalReferenceCode/{externalReferenceCode}/shipping-methods';
};

export type GetCartByExternalReferenceCodeShippingMethodsPageResponses = {
    /**
     * default response
     */
    default: PageShippingMethodReadable;
};

export type GetCartByExternalReferenceCodeShippingMethodsPageResponse = GetCartByExternalReferenceCodeShippingMethodsPageResponses[keyof GetCartByExternalReferenceCodeShippingMethodsPageResponses];

export type GetCartShippingMethodsPageData = {
    body?: never;
    path: {
        cartId: string;
    };
    query?: never;
    url: '/v1.0/carts/{cartId}/shipping-methods';
};

export type GetCartShippingMethodsPageResponses = {
    /**
     * default response
     */
    default: PageShippingMethodReadable;
};

export type GetCartShippingMethodsPageResponse = GetCartShippingMethodsPageResponses[keyof GetCartShippingMethodsPageResponses];

export type PostCartShippingMethodsPageExportBatchData = {
    body?: never;
    path: {
        cartId: string;
    };
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/v1.0/carts/{cartId}/shipping-methods/export-batch';
};

export type PostCartShippingMethodsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetCartByExternalReferenceCodeDeliveryTermsPageData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/v1.0/carts/by-externalReferenceCode/{externalReferenceCode}/delivery-terms';
};

export type GetCartByExternalReferenceCodeDeliveryTermsPageResponses = {
    /**
     * default response
     */
    default: PageTermReadable;
};

export type GetCartByExternalReferenceCodeDeliveryTermsPageResponse = GetCartByExternalReferenceCodeDeliveryTermsPageResponses[keyof GetCartByExternalReferenceCodeDeliveryTermsPageResponses];

export type GetCartByExternalReferenceCodePaymentTermsPageData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/v1.0/carts/by-externalReferenceCode/{externalReferenceCode}/payment-terms';
};

export type GetCartByExternalReferenceCodePaymentTermsPageResponses = {
    /**
     * default response
     */
    default: PageTermReadable;
};

export type GetCartByExternalReferenceCodePaymentTermsPageResponse = GetCartByExternalReferenceCodePaymentTermsPageResponses[keyof GetCartByExternalReferenceCodePaymentTermsPageResponses];

export type GetCartDeliveryTermsPageData = {
    body?: never;
    path: {
        cartId: string;
    };
    query?: never;
    url: '/v1.0/carts/{cartId}/delivery-terms';
};

export type GetCartDeliveryTermsPageResponses = {
    /**
     * default response
     */
    default: PageTermReadable;
};

export type GetCartDeliveryTermsPageResponse = GetCartDeliveryTermsPageResponses[keyof GetCartDeliveryTermsPageResponses];

export type GetCartPaymentTermsPageData = {
    body?: never;
    path: {
        cartId: string;
    };
    query?: never;
    url: '/v1.0/carts/{cartId}/payment-terms';
};

export type GetCartPaymentTermsPageResponses = {
    /**
     * default response
     */
    default: PageTermReadable;
};

export type GetCartPaymentTermsPageResponse = GetCartPaymentTermsPageResponses[keyof GetCartPaymentTermsPageResponses];

export type ClientOptions = {
    baseUrl: 'http://localhost:8080/o/headless-commerce-delivery-cart/' | (string & {});
};