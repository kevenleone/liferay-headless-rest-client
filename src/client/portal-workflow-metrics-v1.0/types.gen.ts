// This file is auto-generated by @hey-api/openapi-ts

export type Assignee = {
    /**
     * The user's ID.
     */
    readonly id?: number;
    /**
     * A relative URL to the user's profile image.
     */
    readonly image?: string;
    /**
     * The user's full name.
     */
    readonly name?: string;
    readonly reviewer?: boolean;
    readonly 'x-class-name'?: string;
};

export type AssigneeMetricReadable = {
    assignee?: Assignee;
    durationTaskAvg?: number;
    onTimeTaskCount?: number;
    overdueTaskCount?: number;
    taskCount?: number;
    readonly 'x-class-name'?: string;
};

export type AssigneeMetricWritable = {
    durationTaskAvg?: number;
    onTimeTaskCount?: number;
    overdueTaskCount?: number;
    taskCount?: number;
};

export type Facet = {
    facetCriteria?: string;
    facetValues?: Array<FacetValue>;
};

export type FacetValue = {
    numberOfOccurrences?: number;
    term?: string;
};

export type PageAssigneeMetricReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<AssigneeMetricReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageAssigneeMetricWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<AssigneeMetricWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type AssigneeMetricBulkSelectionReadable = {
    completed?: boolean;
    dateEnd?: string;
    dateStart?: string;
    instanceIds?: Array<number>;
    keywords?: string;
    roleIds?: Array<number>;
    taskNames?: Array<string>;
    readonly 'x-class-name'?: string;
};

export type AssigneeMetricBulkSelectionWritable = {
    completed?: boolean;
    dateEnd?: string;
    dateStart?: string;
    instanceIds?: Array<number>;
    keywords?: string;
    roleIds?: Array<number>;
    taskNames?: Array<string>;
};

export type PageAssigneeReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<Assignee>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageAssigneeWritable = {
    lastPage?: number;
    totalCount?: number;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type AssigneeBulkSelectionReadable = {
    instanceIds?: Array<number>;
    readonly 'x-class-name'?: string;
};

export type AssigneeBulkSelectionWritable = {
    instanceIds?: Array<number>;
};

export type CalendarReadable = {
    defaultCalendar?: boolean;
    key?: string;
    title?: string;
    readonly 'x-class-name'?: string;
};

export type CalendarWritable = {
    defaultCalendar?: boolean;
    key?: string;
    title?: string;
};

export type PageCalendarReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<CalendarReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageCalendarWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<CalendarWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type HistogramReadable = {
    key?: string;
    value?: number;
    readonly 'x-class-name'?: string;
};

export type HistogramWritable = {
    key?: string;
    value?: number;
};

export type HistogramMetricReadable = {
    histograms?: Array<HistogramReadable>;
    value?: number;
    readonly 'x-class-name'?: string;
    unit?: 'Days' | 'Hours' | 'Months' | 'Weeks' | 'Years';
};

export type HistogramMetricWritable = {
    histograms?: Array<HistogramWritable>;
    value?: number;
    unit?: 'Days' | 'Hours' | 'Months' | 'Weeks' | 'Years';
};

export type IndexReadable = {
    key?: string;
    readonly label?: string;
    readonly 'x-class-name'?: string;
    group?: 'All' | 'Metric' | 'SLA';
};

export type IndexWritable = {
    key?: string;
    group?: 'All' | 'Metric' | 'SLA';
};

export type PageIndexReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<IndexReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageIndexWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<IndexWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type CreatorReadable = {
    /**
     * The user's ID.
     */
    id?: number;
    /**
     * The user's full name.
     */
    name?: string;
    readonly 'x-class-name'?: string;
};

export type CreatorWritable = {
    /**
     * The user's ID.
     */
    id?: number;
    /**
     * The user's full name.
     */
    name?: string;
};

export type InstanceReadable = {
    active?: boolean;
    readonly assetTitle?: string;
    assetTitle_i18n?: {
        [key: string]: string;
    };
    readonly assetType?: string;
    assetType_i18n?: {
        [key: string]: string;
    };
    readonly assignees?: Array<Assignee>;
    className?: string;
    classPK?: number;
    completed?: boolean;
    creator?: CreatorReadable;
    dateCompletion?: string;
    dateCreated?: string;
    dateModified?: string;
    duration?: number;
    id?: number;
    processId?: number;
    processVersion?: string;
    readonly slaResults?: Array<SlaResultReadable>;
    slaStatus?: 'OnTime' | 'Overdue' | 'Untracked';
    readonly taskNames?: Array<string>;
    transitions?: Array<Transition>;
    readonly 'x-class-name'?: string;
};

export type InstanceWritable = {
    active?: boolean;
    assetTitle_i18n?: {
        [key: string]: string;
    };
    assetType_i18n?: {
        [key: string]: string;
    };
    className?: string;
    classPK?: number;
    completed?: boolean;
    creator?: CreatorWritable;
    dateCompletion?: string;
    dateCreated?: string;
    dateModified?: string;
    duration?: number;
    id?: number;
    processId?: number;
    processVersion?: string;
    slaStatus?: 'OnTime' | 'Overdue' | 'Untracked';
};

export type SlaResultReadable = {
    dateModified?: string;
    dateOverdue?: string;
    id?: number;
    name?: string;
    onTime?: boolean;
    remainingTime?: number;
    readonly 'x-class-name'?: string;
    status?: 'NEW' | 'PAUSED' | 'RUNNING' | 'STOPPED';
};

export type SlaResultWritable = {
    dateModified?: string;
    dateOverdue?: string;
    id?: number;
    name?: string;
    onTime?: boolean;
    remainingTime?: number;
    status?: 'NEW' | 'PAUSED' | 'RUNNING' | 'STOPPED';
};

export type Transition = {
    readonly label?: string;
    readonly name?: string;
    readonly 'x-class-name'?: string;
};

export type PageInstanceReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<InstanceReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageInstanceWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<InstanceWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type NodeReadable = {
    dateCreated?: string;
    dateModified?: string;
    id?: number;
    initial?: boolean;
    readonly label?: string;
    name?: string;
    processId?: number;
    processVersion?: string;
    terminal?: boolean;
    type?: string;
    readonly 'x-class-name'?: string;
};

export type NodeWritable = {
    dateCreated?: string;
    dateModified?: string;
    id?: number;
    initial?: boolean;
    name?: string;
    processId?: number;
    processVersion?: string;
    terminal?: boolean;
    type?: string;
};

export type NodeMetricReadable = {
    breachedInstanceCount?: number;
    breachedInstancePercentage?: number;
    durationAvg?: number;
    instanceCount?: number;
    node?: NodeReadable;
    onTimeInstanceCount?: number;
    overdueInstanceCount?: number;
    readonly 'x-class-name'?: string;
};

export type NodeMetricWritable = {
    breachedInstanceCount?: number;
    breachedInstancePercentage?: number;
    durationAvg?: number;
    instanceCount?: number;
    node?: NodeWritable;
    onTimeInstanceCount?: number;
    overdueInstanceCount?: number;
};

export type PageNodeMetricReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<NodeMetricReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageNodeMetricWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<NodeMetricWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageNodeReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<NodeReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageNodeWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<NodeWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type ProcessReadable = {
    active?: boolean;
    dateCreated?: string;
    dateModified?: string;
    description?: string;
    id?: number;
    name?: string;
    readonly title?: string;
    title_i18n?: {
        [key: string]: string;
    };
    version?: string;
    readonly 'x-class-name'?: string;
};

export type ProcessWritable = {
    active?: boolean;
    dateCreated?: string;
    dateModified?: string;
    description?: string;
    id?: number;
    name?: string;
    title_i18n?: {
        [key: string]: string;
    };
    version?: string;
};

export type ProcessMetricReadable = {
    instanceCount?: number;
    onTimeInstanceCount?: number;
    overdueInstanceCount?: number;
    process?: ProcessReadable;
    untrackedInstanceCount?: number;
    readonly 'x-class-name'?: string;
};

export type ProcessMetricWritable = {
    instanceCount?: number;
    onTimeInstanceCount?: number;
    overdueInstanceCount?: number;
    process?: ProcessWritable;
    untrackedInstanceCount?: number;
};

export type PageProcessMetricReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<ProcessMetricReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageProcessMetricWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<ProcessMetricWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageProcessVersionReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<ProcessVersionReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageProcessVersionWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<ProcessVersionWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type ProcessVersionReadable = {
    name?: string;
    readonly 'x-class-name'?: string;
};

export type ProcessVersionWritable = {
    name?: string;
};

export type PageReindexStatusReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<ReindexStatus>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageReindexStatusWritable = {
    lastPage?: number;
    totalCount?: number;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type ReindexStatus = {
    readonly completionPercentage?: number;
    readonly key?: string;
    readonly 'x-class-name'?: string;
};

export type PageRoleReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<Role>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageRoleWritable = {
    lastPage?: number;
    totalCount?: number;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type Role = {
    /**
     * The role's ID.
     */
    readonly id?: number;
    /**
     * The role's name.
     */
    readonly name?: string;
    readonly 'x-class-name'?: string;
};

export type NodeKeyReadable = {
    executionType?: string;
    id?: string;
    readonly 'x-class-name'?: string;
};

export type NodeKeyWritable = {
    executionType?: string;
    id?: string;
};

export type PageSlaReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<SlaReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageSlaWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<SlaWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PauseNodeKeysReadable = {
    nodeKeys?: Array<NodeKeyReadable>;
    status?: number;
    readonly 'x-class-name'?: string;
};

export type PauseNodeKeysWritable = {
    nodeKeys?: Array<NodeKeyWritable>;
    status?: number;
};

export type SlaReadable = {
    calendarKey?: string;
    dateModified?: string;
    description?: string;
    duration?: number;
    id?: number;
    name?: string;
    pauseNodeKeys?: PauseNodeKeysReadable;
    processId?: number;
    startNodeKeys?: StartNodeKeysReadable;
    status?: number;
    stopNodeKeys?: StopNodeKeysReadable;
    readonly 'x-class-name'?: string;
};

export type SlaWritable = {
    calendarKey?: string;
    dateModified?: string;
    description?: string;
    duration?: number;
    id?: number;
    name?: string;
    pauseNodeKeys?: PauseNodeKeysWritable;
    processId?: number;
    startNodeKeys?: StartNodeKeysWritable;
    status?: number;
    stopNodeKeys?: StopNodeKeysWritable;
};

export type StartNodeKeysReadable = {
    nodeKeys?: Array<NodeKeyReadable>;
    status?: number;
    readonly 'x-class-name'?: string;
};

export type StartNodeKeysWritable = {
    nodeKeys?: Array<NodeKeyWritable>;
    status?: number;
};

export type StopNodeKeysReadable = {
    nodeKeys?: Array<NodeKeyReadable>;
    status?: number;
    readonly 'x-class-name'?: string;
};

export type StopNodeKeysWritable = {
    nodeKeys?: Array<NodeKeyWritable>;
    status?: number;
};

export type TaskReadable = {
    readonly assetTitle?: string;
    assetTitle_i18n?: {
        [key: string]: string;
    };
    readonly assetType?: string;
    assetType_i18n?: {
        [key: string]: string;
    };
    assignee?: Assignee;
    className?: string;
    classPK?: number;
    completed?: boolean;
    completionUserId?: number;
    dateCompletion?: string;
    dateCreated?: string;
    dateModified?: string;
    duration?: number;
    id?: number;
    instanceId?: number;
    readonly label?: string;
    name?: string;
    nodeId?: number;
    processId?: number;
    processVersion?: string;
    readonly 'x-class-name'?: string;
};

export type TaskWritable = {
    assetTitle_i18n?: {
        [key: string]: string;
    };
    assetType_i18n?: {
        [key: string]: string;
    };
    className?: string;
    classPK?: number;
    completed?: boolean;
    completionUserId?: number;
    dateCompletion?: string;
    dateCreated?: string;
    dateModified?: string;
    duration?: number;
    id?: number;
    instanceId?: number;
    name?: string;
    nodeId?: number;
    processId?: number;
    processVersion?: string;
};

export type PageTaskReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<TaskReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageTaskWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<TaskWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type TaskBulkSelectionReadable = {
    assigneeIds?: Array<number>;
    instanceIds?: Array<number>;
    processId?: number;
    slaStatuses?: Array<string>;
    taskNames?: Array<string>;
    readonly 'x-class-name'?: string;
};

export type TaskBulkSelectionWritable = {
    assigneeIds?: Array<number>;
    instanceIds?: Array<number>;
    processId?: number;
    slaStatuses?: Array<string>;
    taskNames?: Array<string>;
};

export type PageTimeRangeReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<TimeRangeReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageTimeRangeWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<TimeRangeWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type TimeRangeReadable = {
    dateEnd?: string;
    dateStart?: string;
    defaultTimeRange?: boolean;
    id?: number;
    name?: string;
    readonly 'x-class-name'?: string;
};

export type TimeRangeWritable = {
    dateEnd?: string;
    dateStart?: string;
    defaultTimeRange?: boolean;
    id?: number;
    name?: string;
};

export type PostProcessAssigneeMetricsPageData = {
    body?: AssigneeMetricBulkSelectionWritable;
    path: {
        processId: string;
    };
    query?: {
        page?: string;
        pageSize?: string;
        sort?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/assignees/metrics';
};

export type PostProcessAssigneeMetricsPageResponses = {
    /**
     * default response
     */
    default: PageAssigneeMetricReadable;
};

export type PostProcessAssigneeMetricsPageResponse = PostProcessAssigneeMetricsPageResponses[keyof PostProcessAssigneeMetricsPageResponses];

export type PostProcessAssigneesPageData = {
    body?: AssigneeBulkSelectionWritable;
    path: {
        processId: string;
    };
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/assignees';
};

export type PostProcessAssigneesPageResponses = {
    /**
     * default response
     */
    default: PageAssigneeReadable;
};

export type PostProcessAssigneesPageResponse = PostProcessAssigneesPageResponses[keyof PostProcessAssigneesPageResponses];

export type GetCalendarsPageData = {
    body?: never;
    path?: never;
    query?: {
        nestedFields?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/calendars';
};

export type GetCalendarsPageResponses = {
    /**
     * default response
     */
    default: PageCalendarReadable;
};

export type GetCalendarsPageResponse = GetCalendarsPageResponses[keyof GetCalendarsPageResponses];

export type PostCalendarsPageExportBatchData = {
    body?: never;
    path?: never;
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/calendars/export-batch';
};

export type PostCalendarsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetProcessHistogramMetricData = {
    body?: never;
    path: {
        processId: string;
    };
    query?: {
        dateEnd?: string;
        dateStart?: string;
        unit?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/histograms/metrics';
};

export type GetProcessHistogramMetricResponses = {
    /**
     * default response
     */
    default: HistogramMetricReadable;
};

export type GetProcessHistogramMetricResponse = GetProcessHistogramMetricResponses[keyof GetProcessHistogramMetricResponses];

export type GetIndexesPageData = {
    body?: never;
    path?: never;
    query?: {
        nestedFields?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/indexes';
};

export type GetIndexesPageResponses = {
    /**
     * default response
     */
    default: PageIndexReadable;
};

export type GetIndexesPageResponse = GetIndexesPageResponses[keyof GetIndexesPageResponses];

export type PatchIndexRefreshData = {
    body?: IndexWritable;
    path?: never;
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/indexes/refresh';
};

export type PatchIndexRefreshResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PatchIndexReindexData = {
    body?: IndexWritable;
    path?: never;
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/indexes/reindex';
};

export type PatchIndexReindexResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostIndexesPageExportBatchData = {
    body?: never;
    path?: never;
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/indexes/export-batch';
};

export type PostIndexesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteProcessInstanceData = {
    body?: never;
    path: {
        processId: string;
        instanceId: string;
    };
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/instances/{instanceId}';
};

export type DeleteProcessInstanceResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetProcessInstanceData = {
    body?: never;
    path: {
        processId: string;
        instanceId: string;
    };
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/instances/{instanceId}';
};

export type GetProcessInstanceResponses = {
    /**
     * default response
     */
    default: InstanceReadable;
};

export type GetProcessInstanceResponse = GetProcessInstanceResponses[keyof GetProcessInstanceResponses];

export type PatchProcessInstanceData = {
    body?: InstanceWritable;
    path: {
        processId: string;
        instanceId: string;
    };
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/instances/{instanceId}';
};

export type PatchProcessInstanceResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetProcessInstancesPageData = {
    body?: never;
    path: {
        processId: string;
    };
    query?: {
        assigneeIds?: string;
        classPKs?: string;
        dateEnd?: string;
        dateStart?: string;
        page?: string;
        pageSize?: string;
        slaStatuses?: string;
        sort?: string;
        statuses?: string;
        taskNames?: string;
        nestedFields?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/instances';
};

export type GetProcessInstancesPageResponses = {
    /**
     * default response
     */
    default: PageInstanceReadable;
};

export type GetProcessInstancesPageResponse = GetProcessInstancesPageResponses[keyof GetProcessInstancesPageResponses];

export type PostProcessInstanceData = {
    body?: InstanceWritable;
    path: {
        processId: string;
    };
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/instances';
};

export type PostProcessInstanceResponses = {
    /**
     * default response
     */
    default: InstanceReadable;
};

export type PostProcessInstanceResponse = PostProcessInstanceResponses[keyof PostProcessInstanceResponses];

export type PatchProcessInstanceCompleteData = {
    body?: InstanceWritable;
    path: {
        processId: string;
        instanceId: string;
    };
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/instances/{instanceId}/complete';
};

export type PatchProcessInstanceCompleteResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostProcessInstanceBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        processId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/instances/batch';
};

export type PostProcessInstanceBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostProcessInstancesPageExportBatchData = {
    body?: never;
    path: {
        processId: string;
    };
    query?: {
        assigneeIds?: string;
        classPKs?: string;
        dateEnd?: string;
        dateStart?: string;
        slaStatuses?: string;
        sort?: string;
        statuses?: string;
        taskNames?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/instances/export-batch';
};

export type PostProcessInstancesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetProcessNodeMetricsPageData = {
    body?: never;
    path: {
        processId: string;
    };
    query?: {
        completed?: string;
        dateEnd?: string;
        dateStart?: string;
        key?: string;
        page?: string;
        pageSize?: string;
        processVersion?: string;
        sort?: string;
        nestedFields?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/nodes/metrics';
};

export type GetProcessNodeMetricsPageResponses = {
    /**
     * default response
     */
    default: PageNodeMetricReadable;
};

export type GetProcessNodeMetricsPageResponse = GetProcessNodeMetricsPageResponses[keyof GetProcessNodeMetricsPageResponses];

export type DeleteProcessNodeData = {
    body?: never;
    path: {
        processId: string;
        nodeId: string;
    };
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/nodes/{nodeId}';
};

export type DeleteProcessNodeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetProcessNodesPageData = {
    body?: never;
    path: {
        processId: string;
    };
    query?: {
        nestedFields?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/nodes';
};

export type GetProcessNodesPageResponses = {
    /**
     * default response
     */
    default: PageNodeReadable;
};

export type GetProcessNodesPageResponse = GetProcessNodesPageResponses[keyof GetProcessNodesPageResponses];

export type PostProcessNodeData = {
    body?: NodeWritable;
    path: {
        processId: string;
    };
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/nodes';
};

export type PostProcessNodeResponses = {
    /**
     * default response
     */
    default: NodeReadable;
};

export type PostProcessNodeResponse = PostProcessNodeResponses[keyof PostProcessNodeResponses];

export type PostProcessNodeBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        processId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/nodes/batch';
};

export type PostProcessNodeBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostProcessNodesPageExportBatchData = {
    body?: never;
    path: {
        processId: string;
    };
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/nodes/export-batch';
};

export type PostProcessNodesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetProcessMetricData = {
    body?: never;
    path: {
        processId: string;
    };
    query?: {
        completed?: string;
        dateEnd?: string;
        dateStart?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/metrics';
};

export type GetProcessMetricResponses = {
    /**
     * default response
     */
    default: ProcessMetricReadable;
};

export type GetProcessMetricResponse = GetProcessMetricResponses[keyof GetProcessMetricResponses];

export type GetProcessMetricsPageData = {
    body?: never;
    path?: never;
    query?: {
        page?: string;
        pageSize?: string;
        sort?: string;
        title?: string;
        nestedFields?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/metrics';
};

export type GetProcessMetricsPageResponses = {
    /**
     * default response
     */
    default: PageProcessMetricReadable;
};

export type GetProcessMetricsPageResponse = GetProcessMetricsPageResponses[keyof GetProcessMetricsPageResponses];

export type PostProcessMetricsPageExportBatchData = {
    body?: never;
    path?: never;
    query?: {
        sort?: string;
        title?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/metrics/export-batch';
};

export type PostProcessMetricsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteProcessData = {
    body?: never;
    path: {
        processId: string;
    };
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}';
};

export type DeleteProcessResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetProcessData = {
    body?: never;
    path: {
        processId: string;
    };
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}';
};

export type GetProcessResponses = {
    /**
     * default response
     */
    default: ProcessReadable;
};

export type GetProcessResponse = GetProcessResponses[keyof GetProcessResponses];

export type PutProcessData = {
    body?: ProcessWritable;
    path: {
        processId: string;
    };
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}';
};

export type PutProcessResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteProcessBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/batch';
};

export type DeleteProcessBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostProcessBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/batch';
};

export type PostProcessBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutProcessBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/batch';
};

export type PutProcessBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetProcessTitleData = {
    body?: never;
    path: {
        processId: string;
    };
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/title';
};

export type GetProcessTitleResponses = {
    /**
     * default response
     */
    default: string;
};

export type GetProcessTitleResponse = GetProcessTitleResponses[keyof GetProcessTitleResponses];

export type PostProcessData = {
    body?: ProcessWritable;
    path?: never;
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/processes';
};

export type PostProcessResponses = {
    /**
     * default response
     */
    default: ProcessReadable;
};

export type PostProcessResponse = PostProcessResponses[keyof PostProcessResponses];

export type GetProcessProcessVersionsPageData = {
    body?: never;
    path: {
        processId: string;
    };
    query?: {
        nestedFields?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/process-versions';
};

export type GetProcessProcessVersionsPageResponses = {
    /**
     * default response
     */
    default: PageProcessVersionReadable;
};

export type GetProcessProcessVersionsPageResponse = GetProcessProcessVersionsPageResponses[keyof GetProcessProcessVersionsPageResponses];

export type PostProcessProcessVersionsPageExportBatchData = {
    body?: never;
    path: {
        processId: string;
    };
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/process-versions/export-batch';
};

export type PostProcessProcessVersionsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetReindexStatusesPageData = {
    body?: never;
    path?: never;
    query?: {
        nestedFields?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/reindex/statuses';
};

export type GetReindexStatusesPageResponses = {
    /**
     * default response
     */
    default: PageReindexStatusReadable;
};

export type GetReindexStatusesPageResponse = GetReindexStatusesPageResponses[keyof GetReindexStatusesPageResponses];

export type PostReindexStatusesPageExportBatchData = {
    body?: never;
    path?: never;
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/reindex/statuses/export-batch';
};

export type PostReindexStatusesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetProcessRolesPageData = {
    body?: never;
    path: {
        processId: string;
    };
    query?: {
        completed?: string;
        nestedFields?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/roles';
};

export type GetProcessRolesPageResponses = {
    /**
     * default response
     */
    default: PageRoleReadable;
};

export type GetProcessRolesPageResponse = GetProcessRolesPageResponses[keyof GetProcessRolesPageResponses];

export type PostProcessRolesPageExportBatchData = {
    body?: never;
    path: {
        processId: string;
    };
    query?: {
        completed?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/roles/export-batch';
};

export type PostProcessRolesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteSlaData = {
    body?: never;
    path: {
        slaId: string;
    };
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/slas/{slaId}';
};

export type DeleteSlaResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSlaData = {
    body?: never;
    path: {
        slaId: string;
    };
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/slas/{slaId}';
};

export type GetSlaResponses = {
    /**
     * default response
     */
    default: SlaReadable;
};

export type GetSlaResponse = GetSlaResponses[keyof GetSlaResponses];

export type PutSlaData = {
    body?: SlaWritable;
    path: {
        slaId: string;
    };
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/slas/{slaId}';
};

export type PutSlaResponses = {
    /**
     * default response
     */
    default: SlaReadable;
};

export type PutSlaResponse = PutSlaResponses[keyof PutSlaResponses];

export type DeleteSlaBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/slas/batch';
};

export type DeleteSlaBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutSlaBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/slas/batch';
};

export type PutSlaBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetProcessSlasPageData = {
    body?: never;
    path: {
        processId: string;
    };
    query?: {
        page?: string;
        pageSize?: string;
        status?: string;
        nestedFields?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/slas';
};

export type GetProcessSlasPageResponses = {
    /**
     * default response
     */
    default: PageSlaReadable;
};

export type GetProcessSlasPageResponse = GetProcessSlasPageResponses[keyof GetProcessSlasPageResponses];

export type PostProcessSlaData = {
    body?: SlaWritable;
    path: {
        processId: string;
    };
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/slas';
};

export type PostProcessSlaResponses = {
    /**
     * default response
     */
    default: SlaReadable;
};

export type PostProcessSlaResponse = PostProcessSlaResponses[keyof PostProcessSlaResponses];

export type PostProcessSlaBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        processId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/slas/batch';
};

export type PostProcessSlaBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostProcessSlasPageExportBatchData = {
    body?: never;
    path: {
        processId: string;
    };
    query?: {
        status?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/slas/export-batch';
};

export type PostProcessSlasPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetProcessLastSlaResultData = {
    body?: never;
    path: {
        processId: string;
    };
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/last-sla-result';
};

export type GetProcessLastSlaResultResponses = {
    /**
     * default response
     */
    default: SlaResultReadable;
};

export type GetProcessLastSlaResultResponse = GetProcessLastSlaResultResponses[keyof GetProcessLastSlaResultResponses];

export type DeleteProcessTaskData = {
    body?: never;
    path: {
        processId: string;
        taskId: string;
    };
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/tasks/{taskId}';
};

export type DeleteProcessTaskResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetProcessTaskData = {
    body?: never;
    path: {
        processId: string;
        taskId: string;
    };
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/tasks/{taskId}';
};

export type GetProcessTaskResponses = {
    /**
     * default response
     */
    default: TaskReadable;
};

export type GetProcessTaskResponse = GetProcessTaskResponses[keyof GetProcessTaskResponses];

export type PatchProcessTaskData = {
    body?: TaskWritable;
    path: {
        processId: string;
        taskId: string;
    };
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/tasks/{taskId}';
};

export type PatchProcessTaskResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetProcessTasksPageData = {
    body?: never;
    path: {
        processId: string;
    };
    query?: {
        nestedFields?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/tasks';
};

export type GetProcessTasksPageResponses = {
    /**
     * default response
     */
    default: PageTaskReadable;
};

export type GetProcessTasksPageResponse = GetProcessTasksPageResponses[keyof GetProcessTasksPageResponses];

export type PostProcessTaskData = {
    body?: TaskWritable;
    path: {
        processId: string;
    };
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/tasks';
};

export type PostProcessTaskResponses = {
    /**
     * default response
     */
    default: TaskReadable;
};

export type PostProcessTaskResponse = PostProcessTaskResponses[keyof PostProcessTaskResponses];

export type PatchProcessTaskCompleteData = {
    body?: TaskWritable;
    path: {
        processId: string;
        taskId: string;
    };
    query?: never;
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/tasks/{taskId}/complete';
};

export type PatchProcessTaskCompleteResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostProcessTaskBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        processId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/tasks/batch';
};

export type PostProcessTaskBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostProcessTasksPageExportBatchData = {
    body?: never;
    path: {
        processId: string;
    };
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/processes/{processId}/tasks/export-batch';
};

export type PostProcessTasksPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostTasksPageData = {
    body?: TaskBulkSelectionWritable;
    path?: never;
    query?: {
        page?: string;
        pageSize?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/tasks';
};

export type PostTasksPageResponses = {
    /**
     * default response
     */
    default: PageTaskReadable;
};

export type PostTasksPageResponse = PostTasksPageResponses[keyof PostTasksPageResponses];

export type GetTimeRangesPageData = {
    body?: never;
    path?: never;
    query?: {
        nestedFields?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/time-ranges';
};

export type GetTimeRangesPageResponses = {
    /**
     * default response
     */
    default: PageTimeRangeReadable;
};

export type GetTimeRangesPageResponse = GetTimeRangesPageResponses[keyof GetTimeRangesPageResponses];

export type PostTimeRangesPageExportBatchData = {
    body?: never;
    path?: never;
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/portal-workflow-metrics/v1.0/time-ranges/export-batch';
};

export type PostTimeRangesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type ClientOptions = {
    baseUrl: 'http://localhost:8080' | (string & {});
};