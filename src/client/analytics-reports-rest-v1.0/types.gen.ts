// This file is auto-generated by @hey-api/openapi-ts

export type AppearsOnHistogramReadable = {
    canonicalUrl?: string;
    metrics?: Array<MetricReadable>;
    pageTitle?: string;
    total?: number;
    totalValue?: number;
    readonly 'x-class-name'?: string;
};

export type AppearsOnHistogramWritable = {
    canonicalUrl?: string;
    metrics?: Array<MetricWritable>;
    pageTitle?: string;
    total?: number;
    totalValue?: number;
};

export type AssetAppearsOnHistogramReadable = {
    appearsOnHistograms?: Array<AppearsOnHistogramReadable>;
    metricName?: string;
    readonly 'x-class-name'?: string;
};

export type AssetAppearsOnHistogramWritable = {
    appearsOnHistograms?: Array<AppearsOnHistogramWritable>;
    metricName?: string;
};

export type AssetAppearsOnHistogramMetricReadable = {
    assetAppearsOnHistograms?: Array<AssetAppearsOnHistogramReadable>;
    readonly 'x-class-name'?: string;
};

export type AssetAppearsOnHistogramMetricWritable = {
    assetAppearsOnHistograms?: Array<AssetAppearsOnHistogramWritable>;
};

export type MetricReadable = {
    metricType?: string;
    previousValue?: number;
    previousValueKey?: string;
    trend?: TrendReadable;
    value?: number;
    valueKey?: string;
    readonly 'x-class-name'?: string;
};

export type MetricWritable = {
    metricType?: string;
    previousValue?: number;
    previousValueKey?: string;
    trend?: TrendWritable;
    value?: number;
    valueKey?: string;
};

export type TrendReadable = {
    percentage?: number;
    readonly 'x-class-name'?: string;
    trendClassification?: 'NEGATIVE' | 'NEUTRAL' | 'POSITIVE';
};

export type TrendWritable = {
    percentage?: number;
    trendClassification?: 'NEGATIVE' | 'NEUTRAL' | 'POSITIVE';
};

export type AssetDeviceMetricReadable = {
    deviceMetrics?: Array<DeviceMetricReadable>;
    readonly 'x-class-name'?: string;
};

export type AssetDeviceMetricWritable = {
    deviceMetrics?: Array<DeviceMetricWritable>;
};

export type DeviceMetricReadable = {
    metricName?: string;
    metrics?: Array<MetricReadable>;
    readonly 'x-class-name'?: string;
};

export type DeviceMetricWritable = {
    metricName?: string;
    metrics?: Array<MetricWritable>;
};

export type AssetHistogramMetricReadable = {
    histograms?: Array<HistogramReadable>;
    readonly 'x-class-name'?: string;
};

export type AssetHistogramMetricWritable = {
    histograms?: Array<HistogramWritable>;
};

export type HistogramReadable = {
    metricName?: string;
    metrics?: Array<MetricReadable>;
    total?: number;
    totalValue?: number;
    readonly 'x-class-name'?: string;
};

export type HistogramWritable = {
    metricName?: string;
    metrics?: Array<MetricWritable>;
    total?: number;
    totalValue?: number;
};

export type AssetMetricReadable = {
    assetId?: string;
    assetTitle?: string;
    assetType?: string;
    dataSourceId?: string;
    defaultMetric?: MetricReadable;
    selectedMetrics?: Array<MetricReadable>;
    readonly 'x-class-name'?: string;
};

export type AssetMetricWritable = {
    assetId?: string;
    assetTitle?: string;
    assetType?: string;
    dataSourceId?: string;
    defaultMetric?: MetricWritable;
    selectedMetrics?: Array<MetricWritable>;
};

export type GetGroupAssetMetricAssetTypeAppearsOnHistogramData = {
    body?: never;
    path: {
        groupId: string;
        assetType: string;
    };
    query?: {
        assetId?: string;
        identityType?: string;
        rangeKey?: string;
    };
    url: '/v1.0/{groupId}/asset-metrics/{assetType}/appears-on/histogram';
};

export type GetGroupAssetMetricAssetTypeAppearsOnHistogramResponses = {
    /**
     * default response
     */
    default: AssetAppearsOnHistogramMetricReadable;
};

export type GetGroupAssetMetricAssetTypeAppearsOnHistogramResponse = GetGroupAssetMetricAssetTypeAppearsOnHistogramResponses[keyof GetGroupAssetMetricAssetTypeAppearsOnHistogramResponses];

export type GetGroupAssetMetricAssetTypeDeviceData = {
    body?: never;
    path: {
        groupId: string;
        assetType: string;
    };
    query?: {
        assetId?: string;
        identityType?: string;
        rangeKey?: string;
    };
    url: '/v1.0/{groupId}/asset-metrics/{assetType}/devices';
};

export type GetGroupAssetMetricAssetTypeDeviceResponses = {
    /**
     * default response
     */
    default: AssetDeviceMetricReadable;
};

export type GetGroupAssetMetricAssetTypeDeviceResponse = GetGroupAssetMetricAssetTypeDeviceResponses[keyof GetGroupAssetMetricAssetTypeDeviceResponses];

export type GetGroupAssetMetricAssetTypeHistogramData = {
    body?: never;
    path: {
        groupId: string;
        assetType: string;
    };
    query?: {
        assetId?: string;
        identityType?: string;
        rangeKey?: string;
    };
    url: '/v1.0/{groupId}/asset-metrics/{assetType}/histogram';
};

export type GetGroupAssetMetricAssetTypeHistogramResponses = {
    /**
     * default response
     */
    default: AssetHistogramMetricReadable;
};

export type GetGroupAssetMetricAssetTypeHistogramResponse = GetGroupAssetMetricAssetTypeHistogramResponses[keyof GetGroupAssetMetricAssetTypeHistogramResponses];

export type GetGroupAssetMetricData = {
    body?: never;
    path: {
        groupId: string;
        assetType: string;
    };
    query?: {
        assetId?: string;
        identityType?: string;
        rangeKey?: string;
        selectedMetrics?: string;
    };
    url: '/v1.0/{groupId}/asset-metrics/{assetType}';
};

export type GetGroupAssetMetricResponses = {
    /**
     * default response
     */
    default: AssetMetricReadable;
};

export type GetGroupAssetMetricResponse = GetGroupAssetMetricResponses[keyof GetGroupAssetMetricResponses];

export type GetOpenApiData = {
    body?: never;
    path: {
        type: string;
    };
    query?: never;
    url: '/v1.0/openapi.{type}';
};

export type GetOpenApiResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type ClientOptions = {
    baseUrl: 'http://localhost:8080/o/analytics-reports-rest/' | (string & {});
};