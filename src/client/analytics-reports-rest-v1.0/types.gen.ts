// This file is auto-generated by @hey-api/openapi-ts

export type AppearsOnHistogram = {
    canonicalUrl?: string;
    metrics?: Array<Metric>;
    pageTitle?: string;
    total?: number;
    totalValue?: number;
    readonly 'x-class-name'?: string;
};

export type AssetAppearsOnHistogram = {
    appearsOnHistograms?: Array<AppearsOnHistogram>;
    metricName?: string;
    readonly 'x-class-name'?: string;
};

export type AssetAppearsOnHistogramMetric = {
    assetAppearsOnHistograms?: Array<AssetAppearsOnHistogram>;
    readonly 'x-class-name'?: string;
};

export type Metric = {
    metricType?: string;
    previousValue?: number;
    previousValueKey?: string;
    trend?: Trend;
    value?: number;
    valueKey?: string;
    readonly 'x-class-name'?: string;
};

export type Trend = {
    percentage?: number;
    readonly 'x-class-name'?: string;
    trendClassification?: 'NEGATIVE' | 'NEUTRAL' | 'POSITIVE';
};

export type AssetDeviceMetric = {
    deviceMetrics?: Array<DeviceMetric>;
    readonly 'x-class-name'?: string;
};

export type DeviceMetric = {
    metricName?: string;
    metrics?: Array<Metric>;
    readonly 'x-class-name'?: string;
};

export type AssetHistogramMetric = {
    histograms?: Array<Histogram>;
    readonly 'x-class-name'?: string;
};

export type Histogram = {
    metricName?: string;
    metrics?: Array<Metric>;
    total?: number;
    totalValue?: number;
    readonly 'x-class-name'?: string;
};

export type AssetMetric = {
    assetId?: string;
    assetTitle?: string;
    assetType?: string;
    dataSourceId?: string;
    defaultMetric?: Metric;
    selectedMetrics?: Array<Metric>;
    readonly 'x-class-name'?: string;
};

export type GetGroupAssetMetricAssetTypeAppearsOnHistogramData = {
    body?: never;
    path: {
        groupId: string;
        assetType: string;
    };
    query?: {
        assetId?: string;
        identityType?: string;
        rangeKey?: string;
    };
    url: '/o/analytics-reports-rest/v1.0/{groupId}/asset-metrics/{assetType}/appears-on/histogram';
};

export type GetGroupAssetMetricAssetTypeAppearsOnHistogramResponses = {
    /**
     * default response
     */
    default: AssetAppearsOnHistogramMetric;
};

export type GetGroupAssetMetricAssetTypeAppearsOnHistogramResponse = GetGroupAssetMetricAssetTypeAppearsOnHistogramResponses[keyof GetGroupAssetMetricAssetTypeAppearsOnHistogramResponses];

export type GetGroupAssetMetricAssetTypeDeviceData = {
    body?: never;
    path: {
        groupId: string;
        assetType: string;
    };
    query?: {
        assetId?: string;
        identityType?: string;
        rangeKey?: string;
    };
    url: '/o/analytics-reports-rest/v1.0/{groupId}/asset-metrics/{assetType}/devices';
};

export type GetGroupAssetMetricAssetTypeDeviceResponses = {
    /**
     * default response
     */
    default: AssetDeviceMetric;
};

export type GetGroupAssetMetricAssetTypeDeviceResponse = GetGroupAssetMetricAssetTypeDeviceResponses[keyof GetGroupAssetMetricAssetTypeDeviceResponses];

export type GetGroupAssetMetricAssetTypeHistogramData = {
    body?: never;
    path: {
        groupId: string;
        assetType: string;
    };
    query?: {
        assetId?: string;
        identityType?: string;
        rangeKey?: string;
    };
    url: '/o/analytics-reports-rest/v1.0/{groupId}/asset-metrics/{assetType}/histogram';
};

export type GetGroupAssetMetricAssetTypeHistogramResponses = {
    /**
     * default response
     */
    default: AssetHistogramMetric;
};

export type GetGroupAssetMetricAssetTypeHistogramResponse = GetGroupAssetMetricAssetTypeHistogramResponses[keyof GetGroupAssetMetricAssetTypeHistogramResponses];

export type GetGroupAssetMetricData = {
    body?: never;
    path: {
        groupId: string;
        assetType: string;
    };
    query?: {
        assetId?: string;
        identityType?: string;
        rangeKey?: string;
        selectedMetrics?: string;
    };
    url: '/o/analytics-reports-rest/v1.0/{groupId}/asset-metrics/{assetType}';
};

export type GetGroupAssetMetricResponses = {
    /**
     * default response
     */
    default: AssetMetric;
};

export type GetGroupAssetMetricResponse = GetGroupAssetMetricResponses[keyof GetGroupAssetMetricResponses];

export type ClientOptions = {
    baseUrl: 'http://localhost:8080' | (string & {});
};