// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';
import type { GetGroupAssetMetricAssetTypeAppearsOnHistogramData, GetGroupAssetMetricAssetTypeAppearsOnHistogramResponses, GetGroupAssetMetricAssetTypeDeviceData, GetGroupAssetMetricAssetTypeDeviceResponses, GetGroupAssetMetricAssetTypeHistogramData, GetGroupAssetMetricAssetTypeHistogramResponses, GetGroupAssetMetricData, GetGroupAssetMetricResponses, GetOpenApiData, GetOpenApiResponses } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export const getGroupAssetMetricAssetTypeAppearsOnHistogram = <ThrowOnError extends boolean = false>(options: Options<GetGroupAssetMetricAssetTypeAppearsOnHistogramData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetGroupAssetMetricAssetTypeAppearsOnHistogramResponses, unknown, ThrowOnError>({
        url: '/v1.0/{groupId}/asset-metrics/{assetType}/appears-on/histogram',
        ...options
    });
};

export const getGroupAssetMetricAssetTypeDevice = <ThrowOnError extends boolean = false>(options: Options<GetGroupAssetMetricAssetTypeDeviceData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetGroupAssetMetricAssetTypeDeviceResponses, unknown, ThrowOnError>({
        url: '/v1.0/{groupId}/asset-metrics/{assetType}/devices',
        ...options
    });
};

export const getGroupAssetMetricAssetTypeHistogram = <ThrowOnError extends boolean = false>(options: Options<GetGroupAssetMetricAssetTypeHistogramData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetGroupAssetMetricAssetTypeHistogramResponses, unknown, ThrowOnError>({
        url: '/v1.0/{groupId}/asset-metrics/{assetType}/histogram',
        ...options
    });
};

export const getGroupAssetMetric = <ThrowOnError extends boolean = false>(options: Options<GetGroupAssetMetricData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetGroupAssetMetricResponses, unknown, ThrowOnError>({
        url: '/v1.0/{groupId}/asset-metrics/{assetType}',
        ...options
    });
};

export const getOpenApi = <ThrowOnError extends boolean = false>(options: Options<GetOpenApiData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetOpenApiResponses, unknown, ThrowOnError>({
        url: '/v1.0/openapi.{type}',
        ...options
    });
};