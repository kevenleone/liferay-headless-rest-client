// This file is auto-generated by @hey-api/openapi-ts

export type Facet = {
    facetCriteria?: string;
    facetValues?: Array<FacetValue>;
};

export type FacetValue = {
    numberOfOccurrences?: number;
    term?: string;
};

export type FieldMappingInfoReadable = {
    languageIdPosition?: number;
    name?: string;
    type?: string;
    readonly 'x-class-name'?: string;
};

export type FieldMappingInfoWritable = {
    languageIdPosition?: number;
    name?: string;
    type?: string;
};

export type PageFieldMappingInfoReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<FieldMappingInfoReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageFieldMappingInfoWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<FieldMappingInfoWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type KeywordQueryContributorReadable = {
    className?: string;
    readonly 'x-class-name'?: string;
};

export type KeywordQueryContributorWritable = {
    className?: string;
};

export type PageKeywordQueryContributorReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<KeywordQueryContributorReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageKeywordQueryContributorWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<KeywordQueryContributorWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type ModelPrefilterContributorReadable = {
    className?: string;
    readonly 'x-class-name'?: string;
};

export type ModelPrefilterContributorWritable = {
    className?: string;
};

export type PageModelPrefilterContributorReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<ModelPrefilterContributorReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageModelPrefilterContributorWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<ModelPrefilterContributorWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageQueryPrefilterContributorReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<QueryPrefilterContributorReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageQueryPrefilterContributorWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<QueryPrefilterContributorWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type QueryPrefilterContributorReadable = {
    className?: string;
    readonly 'x-class-name'?: string;
};

export type QueryPrefilterContributorWritable = {
    className?: string;
};

export type AdvancedConfigurationReadable = {
    collapse?: CollapseReadable;
    fields?: Array<string>;
    source?: SourceReadable;
    stored_fields?: Array<string>;
    readonly 'x-class-name'?: string;
};

export type AdvancedConfigurationWritable = {
    collapse?: CollapseWritable;
    fields?: Array<string>;
    source?: SourceWritable;
    stored_fields?: Array<string>;
};

export type AggregationConfigurationReadable = {
    aggs?: {
        [key: string]: unknown;
    };
    readonly 'x-class-name'?: string;
};

export type AggregationConfigurationWritable = {
    aggs?: {
        [key: string]: unknown;
    };
};

export type ClauseReadable = {
    additive?: boolean;
    boost?: number;
    context?: string;
    disabled?: boolean;
    field?: string;
    name?: string;
    occur?: string;
    parent?: string;
    query?: {
        [key: string]: unknown;
    };
    type?: string;
    value?: string;
    readonly 'x-class-name'?: string;
};

export type ClauseWritable = {
    additive?: boolean;
    boost?: number;
    context?: string;
    disabled?: boolean;
    field?: string;
    name?: string;
    occur?: string;
    parent?: string;
    query?: {
        [key: string]: unknown;
    };
    type?: string;
    value?: string;
};

export type CollapseReadable = {
    field?: string;
    innerHits?: Array<InnerHitReadable>;
    maxConcurrentGroupRequests?: number;
    readonly 'x-class-name'?: string;
};

export type CollapseWritable = {
    field?: string;
    innerHits?: Array<InnerHitWritable>;
    maxConcurrentGroupRequests?: number;
};

export type ConditionReadable = {
    allConditions?: Array<ConditionReadable>;
    anyConditions?: Array<ConditionReadable>;
    contains?: ContainsReadable;
    equals?: EqualsReadable;
    exists?: ExistsReadable;
    in?: InReadable;
    not?: ConditionReadable;
    range?: RangeReadable;
    readonly 'x-class-name'?: string;
};

export type ConditionWritable = {
    allConditions?: Array<ConditionWritable>;
    anyConditions?: Array<ConditionWritable>;
    contains?: ContainsWritable;
    equals?: EqualsWritable;
    exists?: ExistsWritable;
    in?: InWritable;
    not?: ConditionWritable;
    range?: RangeWritable;
};

export type ConfigurationReadable = {
    advancedConfiguration?: AdvancedConfigurationReadable;
    aggregationConfiguration?: AggregationConfigurationReadable;
    generalConfiguration?: GeneralConfigurationReadable;
    highlightConfiguration?: HighlightConfigurationReadable;
    indexConfiguration?: IndexConfigurationReadable;
    parameterConfiguration?: ParameterConfigurationReadable;
    queryConfiguration?: QueryConfigurationReadable;
    searchContextAttributes?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    sortConfiguration?: SortConfigurationReadable;
    readonly 'x-class-name'?: string;
};

export type ConfigurationWritable = {
    advancedConfiguration?: AdvancedConfigurationWritable;
    aggregationConfiguration?: AggregationConfigurationWritable;
    generalConfiguration?: GeneralConfigurationWritable;
    highlightConfiguration?: HighlightConfigurationWritable;
    indexConfiguration?: IndexConfigurationWritable;
    parameterConfiguration?: ParameterConfigurationWritable;
    queryConfiguration?: QueryConfigurationWritable;
    searchContextAttributes?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    sortConfiguration?: SortConfigurationWritable;
};

export type ContainsReadable = {
    parameterName?: string;
    value?: {
        [key: string]: unknown;
    };
    readonly 'x-class-name'?: string;
};

export type ContainsWritable = {
    parameterName?: string;
    value?: {
        [key: string]: unknown;
    };
};

export type ElementDefinitionReadable = {
    category?: string;
    configuration?: ConfigurationReadable;
    icon?: string;
    uiConfiguration?: UiConfigurationReadable;
    readonly 'x-class-name'?: string;
};

export type ElementDefinitionWritable = {
    category?: string;
    configuration?: ConfigurationWritable;
    icon?: string;
    uiConfiguration?: UiConfigurationWritable;
};

export type ElementInstanceReadable = {
    configurationEntry?: ConfigurationReadable;
    sxpElement?: SxpElementReadable;
    sxpElementId?: number;
    type?: number;
    uiConfigurationValues?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    readonly 'x-class-name'?: string;
};

export type ElementInstanceWritable = {
    configurationEntry?: ConfigurationWritable;
    sxpElement?: SxpElementWritable;
    sxpElementId?: number;
    type?: number;
    uiConfigurationValues?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
};

export type EqualsReadable = {
    format?: string;
    parameterName?: string;
    value?: {
        [key: string]: unknown;
    };
    readonly 'x-class-name'?: string;
};

export type EqualsWritable = {
    format?: string;
    parameterName?: string;
    value?: {
        [key: string]: unknown;
    };
};

export type ExistsReadable = {
    parameterName?: string;
    readonly 'x-class-name'?: string;
};

export type ExistsWritable = {
    parameterName?: string;
};

export type FieldReadable = {
    defaultValue?: {
        [key: string]: unknown;
    };
    fieldMappings?: Array<FieldMappingReadable>;
    helpText?: string;
    helpTextLocalized?: string;
    label?: string;
    labelLocalized?: string;
    name?: string;
    type?: string;
    typeOptions?: TypeOptionsReadable;
    readonly 'x-class-name'?: string;
};

export type FieldWritable = {
    defaultValue?: {
        [key: string]: unknown;
    };
    fieldMappings?: Array<FieldMappingWritable>;
    helpText?: string;
    helpTextLocalized?: string;
    label?: string;
    labelLocalized?: string;
    name?: string;
    type?: string;
    typeOptions?: TypeOptionsWritable;
};

export type FieldMappingReadable = {
    boost?: number;
    field?: string;
    locale?: string;
    readonly 'x-class-name'?: string;
};

export type FieldMappingWritable = {
    boost?: number;
    field?: string;
    locale?: string;
};

export type FieldSetReadable = {
    fields?: Array<FieldReadable>;
    readonly 'x-class-name'?: string;
};

export type FieldSetWritable = {
    fields?: Array<FieldWritable>;
};

export type GeneralConfigurationReadable = {
    clauseContributorsExcludes?: Array<string>;
    clauseContributorsIncludes?: Array<string>;
    collectionProvider?: boolean;
    collectionProviderType?: string;
    emptySearchEnabled?: boolean;
    explain?: boolean;
    includeResponseString?: boolean;
    languageId?: string;
    queryString?: string;
    searchableAssetTypes?: Array<string>;
    timeZoneId?: string;
    readonly 'x-class-name'?: string;
};

export type GeneralConfigurationWritable = {
    clauseContributorsExcludes?: Array<string>;
    clauseContributorsIncludes?: Array<string>;
    collectionProvider?: boolean;
    collectionProviderType?: string;
    emptySearchEnabled?: boolean;
    explain?: boolean;
    includeResponseString?: boolean;
    languageId?: string;
    queryString?: string;
    searchableAssetTypes?: Array<string>;
    timeZoneId?: string;
};

export type HighlightConfigurationReadable = {
    fields?: {
        [key: string]: HighlightFieldReadable;
    };
    fragment_size?: number;
    number_of_fragments?: number;
    post_tags?: Array<string>;
    pre_tags?: Array<string>;
    require_field_match?: boolean;
    type?: string;
    readonly 'x-class-name'?: string;
};

export type HighlightConfigurationWritable = {
    fields?: {
        [key: string]: HighlightFieldWritable;
    };
    fragment_size?: number;
    number_of_fragments?: number;
    post_tags?: Array<string>;
    pre_tags?: Array<string>;
    require_field_match?: boolean;
    type?: string;
};

export type HighlightFieldReadable = {
    fragment_offset?: number;
    fragment_size?: number;
    number_of_fragments?: number;
    readonly 'x-class-name'?: string;
};

export type HighlightFieldWritable = {
    fragment_offset?: number;
    fragment_size?: number;
    number_of_fragments?: number;
};

export type InReadable = {
    parameterName?: string;
    value?: {
        [key: string]: unknown;
    };
    readonly 'x-class-name'?: string;
};

export type InWritable = {
    parameterName?: string;
    value?: {
        [key: string]: unknown;
    };
};

export type IndexConfigurationReadable = {
    external?: boolean;
    indexName?: string;
    readonly 'x-class-name'?: string;
};

export type IndexConfigurationWritable = {
    external?: boolean;
    indexName?: string;
};

export type InnerCollapseReadable = {
    field?: string;
    readonly 'x-class-name'?: string;
};

export type InnerCollapseWritable = {
    field?: string;
};

export type InnerHitReadable = {
    innerCollapse?: InnerCollapseReadable;
    name?: string;
    size?: number;
    sorts?: Array<{
        [key: string]: unknown;
    }>;
    readonly 'x-class-name'?: string;
};

export type InnerHitWritable = {
    innerCollapse?: InnerCollapseWritable;
    name?: string;
    size?: number;
    sorts?: Array<{
        [key: string]: unknown;
    }>;
};

export type OptionReadable = {
    label?: string;
    value?: string;
    readonly 'x-class-name'?: string;
};

export type OptionWritable = {
    label?: string;
    value?: string;
};

export type ParameterReadable = {
    defaultValue?: {
        [key: string]: unknown;
    };
    format?: string;
    max?: {
        [key: string]: unknown;
    };
    min?: {
        [key: string]: unknown;
    };
    readonly 'x-class-name'?: string;
    type?: 'Boolean' | 'Date' | 'Double' | 'Float' | 'Integer' | 'IntegerArray' | 'Long' | 'LongArray' | 'String' | 'StringArray' | 'TimeRange';
};

export type ParameterWritable = {
    defaultValue?: {
        [key: string]: unknown;
    };
    format?: string;
    max?: {
        [key: string]: unknown;
    };
    min?: {
        [key: string]: unknown;
    };
    type?: 'Boolean' | 'Date' | 'Double' | 'Float' | 'Integer' | 'IntegerArray' | 'Long' | 'LongArray' | 'String' | 'StringArray' | 'TimeRange';
};

export type ParameterConfigurationReadable = {
    parameters?: {
        [key: string]: ParameterReadable;
    };
    readonly 'x-class-name'?: string;
};

export type ParameterConfigurationWritable = {
    parameters?: {
        [key: string]: ParameterWritable;
    };
};

export type QueryConfigurationReadable = {
    applyIndexerClauses?: boolean;
    queryEntries?: Array<QueryEntryReadable>;
    readonly 'x-class-name'?: string;
};

export type QueryConfigurationWritable = {
    applyIndexerClauses?: boolean;
    queryEntries?: Array<QueryEntryWritable>;
};

export type QueryEntryReadable = {
    clauses?: Array<ClauseReadable>;
    condition?: ConditionReadable;
    enabled?: boolean;
    postFilterClauses?: Array<ClauseReadable>;
    rescores?: Array<RescoreReadable>;
    readonly 'x-class-name'?: string;
};

export type QueryEntryWritable = {
    clauses?: Array<ClauseWritable>;
    condition?: ConditionWritable;
    enabled?: boolean;
    postFilterClauses?: Array<ClauseWritable>;
    rescores?: Array<RescoreWritable>;
};

export type RangeReadable = {
    format?: string;
    gt?: {
        [key: string]: unknown;
    };
    gte?: {
        [key: string]: unknown;
    };
    lt?: {
        [key: string]: unknown;
    };
    lte?: {
        [key: string]: unknown;
    };
    parameterName?: string;
    readonly 'x-class-name'?: string;
};

export type RangeWritable = {
    format?: string;
    gt?: {
        [key: string]: unknown;
    };
    gte?: {
        [key: string]: unknown;
    };
    lt?: {
        [key: string]: unknown;
    };
    lte?: {
        [key: string]: unknown;
    };
    parameterName?: string;
};

export type RescoreReadable = {
    query?: {
        [key: string]: unknown;
    };
    queryWeight?: {
        [key: string]: unknown;
    };
    rescoreQueryWeight?: {
        [key: string]: unknown;
    };
    scoreMode?: string;
    windowSize?: {
        [key: string]: unknown;
    };
    readonly 'x-class-name'?: string;
};

export type RescoreWritable = {
    query?: {
        [key: string]: unknown;
    };
    queryWeight?: {
        [key: string]: unknown;
    };
    rescoreQueryWeight?: {
        [key: string]: unknown;
    };
    scoreMode?: string;
    windowSize?: {
        [key: string]: unknown;
    };
};

export type SxpBlueprintReadable = {
    readonly actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    collectionProviderSubtypeName?: string;
    collectionProviderTypeName?: string;
    configuration?: ConfigurationReadable;
    createDate?: string;
    description?: string;
    description_i18n?: {
        [key: string]: string;
    };
    elementInstances?: Array<ElementInstanceReadable>;
    externalReferenceCode?: string;
    id?: number;
    modifiedDate?: string;
    schemaVersion?: string;
    title?: string;
    title_i18n?: {
        [key: string]: string;
    };
    userName?: string;
    version?: string;
    readonly 'x-class-name'?: string;
};

export type SxpBlueprintWritable = {
    collectionProviderSubtypeName?: string;
    collectionProviderTypeName?: string;
    configuration?: ConfigurationWritable;
    createDate?: string;
    description?: string;
    description_i18n?: {
        [key: string]: string;
    };
    elementInstances?: Array<ElementInstanceWritable>;
    externalReferenceCode?: string;
    id?: number;
    modifiedDate?: string;
    schemaVersion?: string;
    title?: string;
    title_i18n?: {
        [key: string]: string;
    };
    userName?: string;
    version?: string;
};

export type SxpElementReadable = {
    readonly actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    createDate?: string;
    description?: string;
    description_i18n?: {
        [key: string]: string;
    };
    elementDefinition?: ElementDefinitionReadable;
    externalReferenceCode?: string;
    fallbackDescription?: string;
    fallbackTitle?: string;
    hidden?: boolean;
    id?: number;
    modifiedDate?: string;
    readOnly?: boolean;
    schemaVersion?: string;
    title?: string;
    title_i18n?: {
        [key: string]: string;
    };
    type?: number;
    userName?: string;
    version?: string;
    readonly 'x-class-name'?: string;
};

export type SxpElementWritable = {
    createDate?: string;
    description?: string;
    description_i18n?: {
        [key: string]: string;
    };
    elementDefinition?: ElementDefinitionWritable;
    externalReferenceCode?: string;
    fallbackDescription?: string;
    fallbackTitle?: string;
    hidden?: boolean;
    id?: number;
    modifiedDate?: string;
    readOnly?: boolean;
    schemaVersion?: string;
    title?: string;
    title_i18n?: {
        [key: string]: string;
    };
    type?: number;
    userName?: string;
    version?: string;
};

export type SortConfigurationReadable = {
    sorts?: {
        [key: string]: unknown;
    };
    readonly 'x-class-name'?: string;
};

export type SortConfigurationWritable = {
    sorts?: {
        [key: string]: unknown;
    };
};

export type SourceReadable = {
    excludes?: Array<string>;
    fetchSource?: boolean;
    includes?: Array<string>;
    readonly 'x-class-name'?: string;
};

export type SourceWritable = {
    excludes?: Array<string>;
    fetchSource?: boolean;
    includes?: Array<string>;
};

export type TypeOptionsReadable = {
    boost?: boolean;
    format?: string;
    max?: {
        [key: string]: unknown;
    };
    min?: {
        [key: string]: unknown;
    };
    nullable?: boolean;
    options?: Array<OptionReadable>;
    required?: boolean;
    step?: {
        [key: string]: unknown;
    };
    unit?: string;
    unitSuffix?: string;
    readonly 'x-class-name'?: string;
};

export type TypeOptionsWritable = {
    boost?: boolean;
    format?: string;
    max?: {
        [key: string]: unknown;
    };
    min?: {
        [key: string]: unknown;
    };
    nullable?: boolean;
    options?: Array<OptionWritable>;
    required?: boolean;
    step?: {
        [key: string]: unknown;
    };
    unit?: string;
    unitSuffix?: string;
};

export type UiConfigurationReadable = {
    fieldSets?: Array<FieldSetReadable>;
    readonly 'x-class-name'?: string;
};

export type UiConfigurationWritable = {
    fieldSets?: Array<FieldSetWritable>;
};

export type PageSxpBlueprintReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<SxpBlueprintReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageSxpBlueprintWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<SxpBlueprintWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageSxpElementReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<SxpElementReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageSxpElementWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<SxpElementWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageSxpParameterContributorDefinitionReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<SxpParameterContributorDefinitionReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageSxpParameterContributorDefinitionWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<SxpParameterContributorDefinitionWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type SxpParameterContributorDefinitionReadable = {
    className?: string;
    description?: string;
    templateVariable?: string;
    readonly 'x-class-name'?: string;
};

export type SxpParameterContributorDefinitionWritable = {
    className?: string;
    description?: string;
    templateVariable?: string;
};

export type PageSearchIndexReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<SearchIndexReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageSearchIndexWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<SearchIndexWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type SearchIndexReadable = {
    external?: boolean;
    name?: string;
    readonly 'x-class-name'?: string;
};

export type SearchIndexWritable = {
    external?: boolean;
    name?: string;
};

export type DocumentFieldReadable = {
    values?: Array<{
        [key: string]: unknown;
    }>;
    readonly 'x-class-name'?: string;
};

export type DocumentFieldWritable = {
    values?: Array<{
        [key: string]: unknown;
    }>;
};

export type HitReadable = {
    documentFields?: {
        [key: string]: DocumentFieldReadable;
    };
    explanation?: string;
    id?: string;
    score?: number;
    version?: number;
    readonly 'x-class-name'?: string;
};

export type HitWritable = {
    documentFields?: {
        [key: string]: DocumentFieldWritable;
    };
    explanation?: string;
    id?: string;
    score?: number;
    version?: number;
};

export type SearchHitsReadable = {
    hits?: Array<HitReadable>;
    maxScore?: number;
    totalHits?: number;
    readonly 'x-class-name'?: string;
};

export type SearchHitsWritable = {
    hits?: Array<HitWritable>;
    maxScore?: number;
    totalHits?: number;
};

export type SearchRequestReadable = {
    queryString?: string;
    readonly 'x-class-name'?: string;
};

export type SearchRequestWritable = {
    queryString?: string;
};

export type SearchResponseReadable = {
    errors?: Array<{
        [key: string]: {
            [key: string]: unknown;
        };
    }>;
    page?: number;
    pageSize?: number;
    request?: {
        [key: string]: unknown;
    };
    requestString?: string;
    response?: {
        [key: string]: unknown;
    };
    responseString?: string;
    searchHits?: SearchHitsReadable;
    searchRequest?: SearchRequestReadable;
    readonly 'x-class-name'?: string;
};

export type SearchResponseWritable = {
    errors?: Array<{
        [key: string]: {
            [key: string]: unknown;
        };
    }>;
    page?: number;
    pageSize?: number;
    request?: {
        [key: string]: unknown;
    };
    requestString?: string;
    response?: {
        [key: string]: unknown;
    };
    responseString?: string;
    searchHits?: SearchHitsWritable;
    searchRequest?: SearchRequestWritable;
};

export type PageSearchableAssetNameDisplayReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<SearchableAssetNameDisplayReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageSearchableAssetNameDisplayWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<SearchableAssetNameDisplayWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type SearchableAssetNameDisplayReadable = {
    className?: string;
    displayName?: string;
    hasSubtype?: boolean;
    readonly 'x-class-name'?: string;
};

export type SearchableAssetNameDisplayWritable = {
    className?: string;
    displayName?: string;
    hasSubtype?: boolean;
};

export type PageSearchableAssetNameReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<SearchableAssetNameReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageSearchableAssetNameWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<SearchableAssetNameWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type SearchableAssetNameReadable = {
    className?: string;
    readonly 'x-class-name'?: string;
};

export type SearchableAssetNameWritable = {
    className?: string;
};

export type GetFieldMappingInfosPageData = {
    body?: never;
    path?: never;
    query?: {
        external?: string;
        indexName?: string;
        query?: string;
    };
    url: '/v1.0/field-mapping-infos';
};

export type GetFieldMappingInfosPageResponses = {
    /**
     * default response
     */
    default: PageFieldMappingInfoReadable;
};

export type GetFieldMappingInfosPageResponse = GetFieldMappingInfosPageResponses[keyof GetFieldMappingInfosPageResponses];

export type PostFieldMappingInfosPageExportBatchData = {
    body?: never;
    path?: never;
    query?: {
        external?: string;
        indexName?: string;
        query?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/v1.0/field-mapping-infos/export-batch';
};

export type PostFieldMappingInfosPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetKeywordQueryContributorsPageData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1.0/keyword-query-contributors';
};

export type GetKeywordQueryContributorsPageResponses = {
    /**
     * default response
     */
    default: PageKeywordQueryContributorReadable;
};

export type GetKeywordQueryContributorsPageResponse = GetKeywordQueryContributorsPageResponses[keyof GetKeywordQueryContributorsPageResponses];

export type PostKeywordQueryContributorsPageExportBatchData = {
    body?: never;
    path?: never;
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/v1.0/keyword-query-contributors/export-batch';
};

export type PostKeywordQueryContributorsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetModelPrefilterContributorsPageData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1.0/model-prefilter-contributors';
};

export type GetModelPrefilterContributorsPageResponses = {
    /**
     * default response
     */
    default: PageModelPrefilterContributorReadable;
};

export type GetModelPrefilterContributorsPageResponse = GetModelPrefilterContributorsPageResponses[keyof GetModelPrefilterContributorsPageResponses];

export type PostModelPrefilterContributorsPageExportBatchData = {
    body?: never;
    path?: never;
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/v1.0/model-prefilter-contributors/export-batch';
};

export type PostModelPrefilterContributorsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetOpenApiData = {
    body?: never;
    path: {
        type: string;
    };
    query?: never;
    url: '/v1.0/openapi.{type}';
};

export type GetOpenApiResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetQueryPrefilterContributorsPageData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1.0/query-prefilter-contributors';
};

export type GetQueryPrefilterContributorsPageResponses = {
    /**
     * default response
     */
    default: PageQueryPrefilterContributorReadable;
};

export type GetQueryPrefilterContributorsPageResponse = GetQueryPrefilterContributorsPageResponses[keyof GetQueryPrefilterContributorsPageResponses];

export type PostQueryPrefilterContributorsPageExportBatchData = {
    body?: never;
    path?: never;
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/v1.0/query-prefilter-contributors/export-batch';
};

export type PostQueryPrefilterContributorsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteSxpBlueprintData = {
    body?: never;
    path: {
        sxpBlueprintId: string;
    };
    query?: never;
    url: '/v1.0/sxp-blueprints/{sxpBlueprintId}';
};

export type DeleteSxpBlueprintResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSxpBlueprintData = {
    body?: never;
    path: {
        sxpBlueprintId: string;
    };
    query?: never;
    url: '/v1.0/sxp-blueprints/{sxpBlueprintId}';
};

export type GetSxpBlueprintResponses = {
    /**
     * default response
     */
    default: SxpBlueprintReadable;
};

export type GetSxpBlueprintResponse = GetSxpBlueprintResponses[keyof GetSxpBlueprintResponses];

export type PatchSxpBlueprintData = {
    body?: SxpBlueprintWritable;
    path: {
        sxpBlueprintId: string;
    };
    query?: never;
    url: '/v1.0/sxp-blueprints/{sxpBlueprintId}';
};

export type PatchSxpBlueprintResponses = {
    /**
     * default response
     */
    default: SxpBlueprintReadable;
};

export type PatchSxpBlueprintResponse = PatchSxpBlueprintResponses[keyof PatchSxpBlueprintResponses];

export type PutSxpBlueprintData = {
    body?: SxpBlueprintWritable;
    path: {
        sxpBlueprintId: string;
    };
    query?: never;
    url: '/v1.0/sxp-blueprints/{sxpBlueprintId}';
};

export type PutSxpBlueprintResponses = {
    /**
     * default response
     */
    default: SxpBlueprintReadable;
};

export type PutSxpBlueprintResponse = PutSxpBlueprintResponses[keyof PutSxpBlueprintResponses];

export type DeleteSxpBlueprintBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/v1.0/sxp-blueprints/batch';
};

export type DeleteSxpBlueprintBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostSxpBlueprintBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/v1.0/sxp-blueprints/batch';
};

export type PostSxpBlueprintBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutSxpBlueprintBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/v1.0/sxp-blueprints/batch';
};

export type PutSxpBlueprintBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSxpBlueprintByExternalReferenceCodeData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/v1.0/sxp-blueprints/by-external-reference-code/{externalReferenceCode}';
};

export type GetSxpBlueprintByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: SxpBlueprintReadable;
};

export type GetSxpBlueprintByExternalReferenceCodeResponse = GetSxpBlueprintByExternalReferenceCodeResponses[keyof GetSxpBlueprintByExternalReferenceCodeResponses];

export type PutSxpBlueprintByExternalReferenceCodeData = {
    body?: SxpBlueprintWritable;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/v1.0/sxp-blueprints/by-external-reference-code/{externalReferenceCode}';
};

export type PutSxpBlueprintByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: SxpBlueprintReadable;
};

export type PutSxpBlueprintByExternalReferenceCodeResponse = PutSxpBlueprintByExternalReferenceCodeResponses[keyof PutSxpBlueprintByExternalReferenceCodeResponses];

export type GetSxpBlueprintExportData = {
    body?: never;
    path: {
        sxpBlueprintId: string;
    };
    query?: never;
    url: '/v1.0/sxp-blueprints/{sxpBlueprintId}/export';
};

export type GetSxpBlueprintExportResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSxpBlueprintsPageData = {
    body?: never;
    path?: never;
    query?: {
        filter?: string;
        page?: string;
        pageSize?: string;
        search?: string;
        sort?: string;
    };
    url: '/v1.0/sxp-blueprints';
};

export type GetSxpBlueprintsPageResponses = {
    /**
     * default response
     */
    default: PageSxpBlueprintReadable;
};

export type GetSxpBlueprintsPageResponse = GetSxpBlueprintsPageResponses[keyof GetSxpBlueprintsPageResponses];

export type PostSxpBlueprintData = {
    body?: SxpBlueprintWritable;
    path?: never;
    query?: never;
    url: '/v1.0/sxp-blueprints';
};

export type PostSxpBlueprintResponses = {
    /**
     * default response
     */
    default: SxpBlueprintReadable;
};

export type PostSxpBlueprintResponse = PostSxpBlueprintResponses[keyof PostSxpBlueprintResponses];

export type PostSxpBlueprintCopyData = {
    body?: never;
    path: {
        sxpBlueprintId: string;
    };
    query?: never;
    url: '/v1.0/sxp-blueprints/{sxpBlueprintId}/copy';
};

export type PostSxpBlueprintCopyResponses = {
    /**
     * default response
     */
    default: SxpBlueprintReadable;
};

export type PostSxpBlueprintCopyResponse = PostSxpBlueprintCopyResponses[keyof PostSxpBlueprintCopyResponses];

export type PostSxpBlueprintValidateData = {
    body?: string;
    path?: never;
    query?: never;
    url: '/v1.0/sxp-blueprints/validate';
};

export type PostSxpBlueprintValidateResponses = {
    /**
     * default response
     */
    default: SxpBlueprintReadable;
};

export type PostSxpBlueprintValidateResponse = PostSxpBlueprintValidateResponses[keyof PostSxpBlueprintValidateResponses];

export type PostSxpBlueprintsPageExportBatchData = {
    body?: never;
    path?: never;
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/v1.0/sxp-blueprints/export-batch';
};

export type PostSxpBlueprintsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteSxpElementData = {
    body?: never;
    path: {
        sxpElementId: string;
    };
    query?: never;
    url: '/v1.0/sxp-elements/{sxpElementId}';
};

export type DeleteSxpElementResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSxpElementData = {
    body?: never;
    path: {
        sxpElementId: string;
    };
    query?: never;
    url: '/v1.0/sxp-elements/{sxpElementId}';
};

export type GetSxpElementResponses = {
    /**
     * default response
     */
    default: SxpElementReadable;
};

export type GetSxpElementResponse = GetSxpElementResponses[keyof GetSxpElementResponses];

export type PatchSxpElementData = {
    body?: SxpElementWritable;
    path: {
        sxpElementId: string;
    };
    query?: never;
    url: '/v1.0/sxp-elements/{sxpElementId}';
};

export type PatchSxpElementResponses = {
    /**
     * default response
     */
    default: SxpElementReadable;
};

export type PatchSxpElementResponse = PatchSxpElementResponses[keyof PatchSxpElementResponses];

export type PutSxpElementData = {
    body?: SxpElementWritable;
    path: {
        sxpElementId: string;
    };
    query?: never;
    url: '/v1.0/sxp-elements/{sxpElementId}';
};

export type PutSxpElementResponses = {
    /**
     * default response
     */
    default: SxpElementReadable;
};

export type PutSxpElementResponse = PutSxpElementResponses[keyof PutSxpElementResponses];

export type DeleteSxpElementBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/v1.0/sxp-elements/batch';
};

export type DeleteSxpElementBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostSxpElementBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/v1.0/sxp-elements/batch';
};

export type PostSxpElementBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutSxpElementBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/v1.0/sxp-elements/batch';
};

export type PutSxpElementBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSxpElementByExternalReferenceCodeData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/v1.0/sxp-elements/by-external-reference-code/{externalReferenceCode}';
};

export type GetSxpElementByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: SxpElementReadable;
};

export type GetSxpElementByExternalReferenceCodeResponse = GetSxpElementByExternalReferenceCodeResponses[keyof GetSxpElementByExternalReferenceCodeResponses];

export type PutSxpElementByExternalReferenceCodeData = {
    body?: SxpElementWritable;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/v1.0/sxp-elements/by-external-reference-code/{externalReferenceCode}';
};

export type PutSxpElementByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: SxpElementReadable;
};

export type PutSxpElementByExternalReferenceCodeResponse = PutSxpElementByExternalReferenceCodeResponses[keyof PutSxpElementByExternalReferenceCodeResponses];

export type GetSxpElementExportData = {
    body?: never;
    path: {
        sxpElementId: string;
    };
    query?: never;
    url: '/v1.0/sxp-elements/{sxpElementId}/export';
};

export type GetSxpElementExportResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSxpElementsPageData = {
    body?: never;
    path?: never;
    query?: {
        filter?: string;
        page?: string;
        pageSize?: string;
        search?: string;
        sort?: string;
    };
    url: '/v1.0/sxp-elements';
};

export type GetSxpElementsPageResponses = {
    /**
     * default response
     */
    default: PageSxpElementReadable;
};

export type GetSxpElementsPageResponse = GetSxpElementsPageResponses[keyof GetSxpElementsPageResponses];

export type PostSxpElementData = {
    body?: SxpElementWritable;
    path?: never;
    query?: never;
    url: '/v1.0/sxp-elements';
};

export type PostSxpElementResponses = {
    /**
     * default response
     */
    default: SxpElementReadable;
};

export type PostSxpElementResponse = PostSxpElementResponses[keyof PostSxpElementResponses];

export type PostSxpElementCopyData = {
    body?: never;
    path: {
        sxpElementId: string;
    };
    query?: never;
    url: '/v1.0/sxp-elements/{sxpElementId}/copy';
};

export type PostSxpElementCopyResponses = {
    /**
     * default response
     */
    default: SxpElementReadable;
};

export type PostSxpElementCopyResponse = PostSxpElementCopyResponses[keyof PostSxpElementCopyResponses];

export type PostSxpElementPreviewData = {
    body?: SxpElementWritable;
    path?: never;
    query?: never;
    url: '/v1.0/sxp-elements/preview';
};

export type PostSxpElementPreviewResponses = {
    /**
     * default response
     */
    default: SxpElementReadable;
};

export type PostSxpElementPreviewResponse = PostSxpElementPreviewResponses[keyof PostSxpElementPreviewResponses];

export type PostSxpElementValidateData = {
    body?: string;
    path?: never;
    query?: never;
    url: '/v1.0/sxp-elements/validate';
};

export type PostSxpElementValidateResponses = {
    /**
     * default response
     */
    default: SxpElementReadable;
};

export type PostSxpElementValidateResponse = PostSxpElementValidateResponses[keyof PostSxpElementValidateResponses];

export type PostSxpElementsPageExportBatchData = {
    body?: never;
    path?: never;
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/v1.0/sxp-elements/export-batch';
};

export type PostSxpElementsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSxpParameterContributorDefinitionsPageData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1.0/sxp-parameter-contributor-definitions';
};

export type GetSxpParameterContributorDefinitionsPageResponses = {
    /**
     * default response
     */
    default: PageSxpParameterContributorDefinitionReadable;
};

export type GetSxpParameterContributorDefinitionsPageResponse = GetSxpParameterContributorDefinitionsPageResponses[keyof GetSxpParameterContributorDefinitionsPageResponses];

export type PostSxpParameterContributorDefinitionsPageExportBatchData = {
    body?: never;
    path?: never;
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/v1.0/sxp-parameter-contributor-definitions/export-batch';
};

export type PostSxpParameterContributorDefinitionsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSearchIndexesPageData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1.0/search-indexes';
};

export type GetSearchIndexesPageResponses = {
    /**
     * default response
     */
    default: PageSearchIndexReadable;
};

export type GetSearchIndexesPageResponse = GetSearchIndexesPageResponses[keyof GetSearchIndexesPageResponses];

export type PostSearchIndexesPageExportBatchData = {
    body?: never;
    path?: never;
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/v1.0/search-indexes/export-batch';
};

export type PostSearchIndexesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostSearchData = {
    body?: SxpBlueprintWritable;
    path?: never;
    query?: {
        page?: string;
        pageSize?: string;
        query?: string;
    };
    url: '/v1.0/search';
};

export type PostSearchResponses = {
    /**
     * default response
     */
    default: SearchResponseReadable;
};

export type PostSearchResponse = PostSearchResponses[keyof PostSearchResponses];

export type GetSearchableAssetNameLanguagePageData = {
    body?: never;
    path: {
        languageId: string;
    };
    query?: never;
    url: '/v1.0/searchable-asset-names/{languageId}';
};

export type GetSearchableAssetNameLanguagePageResponses = {
    /**
     * default response
     */
    default: PageSearchableAssetNameDisplayReadable;
};

export type GetSearchableAssetNameLanguagePageResponse = GetSearchableAssetNameLanguagePageResponses[keyof GetSearchableAssetNameLanguagePageResponses];

export type GetSearchableAssetNamesPageData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1.0/searchable-asset-names';
};

export type GetSearchableAssetNamesPageResponses = {
    /**
     * default response
     */
    default: PageSearchableAssetNameReadable;
};

export type GetSearchableAssetNamesPageResponse = GetSearchableAssetNamesPageResponses[keyof GetSearchableAssetNamesPageResponses];

export type PostSearchableAssetNamesPageExportBatchData = {
    body?: never;
    path?: never;
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/v1.0/searchable-asset-names/export-batch';
};

export type PostSearchableAssetNamesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type ClientOptions = {
    baseUrl: 'http://localhost:8080/o/search-experiences-rest/' | (string & {});
};