// This file is auto-generated by @hey-api/openapi-ts

export type Facet = {
    facetCriteria?: string;
    facetValues?: Array<FacetValue>;
};

export type FacetValue = {
    numberOfOccurrences?: number;
    term?: string;
};

export type FieldMappingInfo = {
    languageIdPosition?: number;
    name?: string;
    type?: string;
    readonly 'x-class-name'?: string;
};

export type PageFieldMappingInfo = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<FieldMappingInfo>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type KeywordQueryContributor = {
    className?: string;
    readonly 'x-class-name'?: string;
};

export type PageKeywordQueryContributor = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<KeywordQueryContributor>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type ModelPrefilterContributor = {
    className?: string;
    readonly 'x-class-name'?: string;
};

export type PageModelPrefilterContributor = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<ModelPrefilterContributor>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageQueryPrefilterContributor = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<QueryPrefilterContributor>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type QueryPrefilterContributor = {
    className?: string;
    readonly 'x-class-name'?: string;
};

export type AdvancedConfiguration = {
    collapse?: Collapse;
    fields?: Array<string>;
    source?: Source;
    stored_fields?: Array<string>;
    readonly 'x-class-name'?: string;
};

export type AggregationConfiguration = {
    aggs?: {
        [key: string]: unknown;
    };
    readonly 'x-class-name'?: string;
};

export type Clause = {
    additive?: boolean;
    boost?: number;
    context?: string;
    disabled?: boolean;
    field?: string;
    name?: string;
    occur?: string;
    parent?: string;
    query?: {
        [key: string]: unknown;
    };
    type?: string;
    value?: string;
    readonly 'x-class-name'?: string;
};

export type Collapse = {
    field?: string;
    innerHits?: Array<InnerHit>;
    maxConcurrentGroupRequests?: number;
    readonly 'x-class-name'?: string;
};

export type Condition = {
    allConditions?: Array<Condition>;
    anyConditions?: Array<Condition>;
    contains?: Contains;
    equals?: Equals;
    exists?: Exists;
    in?: In;
    not?: Condition;
    range?: Range;
    readonly 'x-class-name'?: string;
};

export type Configuration = {
    advancedConfiguration?: AdvancedConfiguration;
    aggregationConfiguration?: AggregationConfiguration;
    generalConfiguration?: GeneralConfiguration;
    highlightConfiguration?: HighlightConfiguration;
    indexConfiguration?: IndexConfiguration;
    parameterConfiguration?: ParameterConfiguration;
    queryConfiguration?: QueryConfiguration;
    searchContextAttributes?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    sortConfiguration?: SortConfiguration;
    readonly 'x-class-name'?: string;
};

export type Contains = {
    parameterName?: string;
    value?: {
        [key: string]: unknown;
    };
    readonly 'x-class-name'?: string;
};

export type ElementDefinition = {
    category?: string;
    configuration?: Configuration;
    icon?: string;
    uiConfiguration?: UiConfiguration;
    readonly 'x-class-name'?: string;
};

export type ElementInstance = {
    configurationEntry?: Configuration;
    sxpElement?: SxpElement;
    sxpElementId?: number;
    type?: number;
    uiConfigurationValues?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    readonly 'x-class-name'?: string;
};

export type Equals = {
    format?: string;
    parameterName?: string;
    value?: {
        [key: string]: unknown;
    };
    readonly 'x-class-name'?: string;
};

export type Exists = {
    parameterName?: string;
    readonly 'x-class-name'?: string;
};

export type Field = {
    defaultValue?: {
        [key: string]: unknown;
    };
    fieldMappings?: Array<FieldMapping>;
    helpText?: string;
    helpTextLocalized?: string;
    label?: string;
    labelLocalized?: string;
    name?: string;
    type?: string;
    typeOptions?: TypeOptions;
    readonly 'x-class-name'?: string;
};

export type FieldMapping = {
    boost?: number;
    field?: string;
    locale?: string;
    readonly 'x-class-name'?: string;
};

export type FieldSet = {
    fields?: Array<Field>;
    readonly 'x-class-name'?: string;
};

export type GeneralConfiguration = {
    clauseContributorsExcludes?: Array<string>;
    clauseContributorsIncludes?: Array<string>;
    collectionProvider?: boolean;
    collectionProviderType?: string;
    emptySearchEnabled?: boolean;
    explain?: boolean;
    includeResponseString?: boolean;
    languageId?: string;
    queryString?: string;
    searchableAssetTypes?: Array<string>;
    timeZoneId?: string;
    readonly 'x-class-name'?: string;
};

export type HighlightConfiguration = {
    fields?: {
        [key: string]: HighlightField;
    };
    fragment_size?: number;
    number_of_fragments?: number;
    post_tags?: Array<string>;
    pre_tags?: Array<string>;
    require_field_match?: boolean;
    type?: string;
    readonly 'x-class-name'?: string;
};

export type HighlightField = {
    fragment_offset?: number;
    fragment_size?: number;
    number_of_fragments?: number;
    readonly 'x-class-name'?: string;
};

export type In = {
    parameterName?: string;
    value?: {
        [key: string]: unknown;
    };
    readonly 'x-class-name'?: string;
};

export type IndexConfiguration = {
    external?: boolean;
    indexName?: string;
    readonly 'x-class-name'?: string;
};

export type InnerCollapse = {
    field?: string;
    readonly 'x-class-name'?: string;
};

export type InnerHit = {
    innerCollapse?: InnerCollapse;
    name?: string;
    size?: number;
    sorts?: Array<{
        [key: string]: unknown;
    }>;
    readonly 'x-class-name'?: string;
};

export type Option = {
    label?: string;
    value?: string;
    readonly 'x-class-name'?: string;
};

export type Parameter = {
    defaultValue?: {
        [key: string]: unknown;
    };
    format?: string;
    max?: {
        [key: string]: unknown;
    };
    min?: {
        [key: string]: unknown;
    };
    readonly 'x-class-name'?: string;
    type?: 'Boolean' | 'Date' | 'Double' | 'Float' | 'Integer' | 'IntegerArray' | 'Long' | 'LongArray' | 'String' | 'StringArray' | 'TimeRange';
};

export type ParameterConfiguration = {
    parameters?: {
        [key: string]: Parameter;
    };
    readonly 'x-class-name'?: string;
};

export type QueryConfiguration = {
    applyIndexerClauses?: boolean;
    queryEntries?: Array<QueryEntry>;
    readonly 'x-class-name'?: string;
};

export type QueryEntry = {
    clauses?: Array<Clause>;
    condition?: Condition;
    enabled?: boolean;
    postFilterClauses?: Array<Clause>;
    rescores?: Array<Rescore>;
    readonly 'x-class-name'?: string;
};

export type Range = {
    format?: string;
    gt?: {
        [key: string]: unknown;
    };
    gte?: {
        [key: string]: unknown;
    };
    lt?: {
        [key: string]: unknown;
    };
    lte?: {
        [key: string]: unknown;
    };
    parameterName?: string;
    readonly 'x-class-name'?: string;
};

export type Rescore = {
    query?: {
        [key: string]: unknown;
    };
    queryWeight?: {
        [key: string]: unknown;
    };
    rescoreQueryWeight?: {
        [key: string]: unknown;
    };
    scoreMode?: string;
    windowSize?: {
        [key: string]: unknown;
    };
    readonly 'x-class-name'?: string;
};

export type SxpBlueprint = {
    readonly actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    collectionProviderSubtypeName?: string;
    collectionProviderTypeName?: string;
    configuration?: Configuration;
    createDate?: string;
    description?: string;
    description_i18n?: {
        [key: string]: string;
    };
    elementInstances?: Array<ElementInstance>;
    externalReferenceCode?: string;
    id?: number;
    modifiedDate?: string;
    schemaVersion?: string;
    title?: string;
    title_i18n?: {
        [key: string]: string;
    };
    userName?: string;
    version?: string;
    readonly 'x-class-name'?: string;
};

export type SxpElement = {
    readonly actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    createDate?: string;
    description?: string;
    description_i18n?: {
        [key: string]: string;
    };
    elementDefinition?: ElementDefinition;
    externalReferenceCode?: string;
    fallbackDescription?: string;
    fallbackTitle?: string;
    hidden?: boolean;
    id?: number;
    modifiedDate?: string;
    readOnly?: boolean;
    schemaVersion?: string;
    title?: string;
    title_i18n?: {
        [key: string]: string;
    };
    type?: number;
    userName?: string;
    version?: string;
    readonly 'x-class-name'?: string;
};

export type SortConfiguration = {
    sorts?: {
        [key: string]: unknown;
    };
    readonly 'x-class-name'?: string;
};

export type Source = {
    excludes?: Array<string>;
    fetchSource?: boolean;
    includes?: Array<string>;
    readonly 'x-class-name'?: string;
};

export type TypeOptions = {
    boost?: boolean;
    format?: string;
    max?: {
        [key: string]: unknown;
    };
    min?: {
        [key: string]: unknown;
    };
    nullable?: boolean;
    options?: Array<Option>;
    required?: boolean;
    step?: {
        [key: string]: unknown;
    };
    unit?: string;
    unitSuffix?: string;
    readonly 'x-class-name'?: string;
};

export type UiConfiguration = {
    fieldSets?: Array<FieldSet>;
    readonly 'x-class-name'?: string;
};

export type PageSxpBlueprint = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<SxpBlueprint>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageSxpElement = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<SxpElement>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageSxpParameterContributorDefinition = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<SxpParameterContributorDefinition>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type SxpParameterContributorDefinition = {
    className?: string;
    description?: string;
    templateVariable?: string;
    readonly 'x-class-name'?: string;
};

export type PageSearchIndex = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<SearchIndex>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type SearchIndex = {
    external?: boolean;
    name?: string;
    readonly 'x-class-name'?: string;
};

export type DocumentField = {
    values?: Array<{
        [key: string]: unknown;
    }>;
    readonly 'x-class-name'?: string;
};

export type Hit = {
    documentFields?: {
        [key: string]: DocumentField;
    };
    explanation?: string;
    id?: string;
    score?: number;
    version?: number;
    readonly 'x-class-name'?: string;
};

export type SearchHits = {
    hits?: Array<Hit>;
    maxScore?: number;
    totalHits?: number;
    readonly 'x-class-name'?: string;
};

export type SearchRequest = {
    queryString?: string;
    readonly 'x-class-name'?: string;
};

export type SearchResponse = {
    errors?: Array<{
        [key: string]: {
            [key: string]: unknown;
        };
    }>;
    page?: number;
    pageSize?: number;
    request?: {
        [key: string]: unknown;
    };
    requestString?: string;
    response?: {
        [key: string]: unknown;
    };
    responseString?: string;
    searchHits?: SearchHits;
    searchRequest?: SearchRequest;
    readonly 'x-class-name'?: string;
};

export type PageSearchableAssetNameDisplay = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<SearchableAssetNameDisplay>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type SearchableAssetNameDisplay = {
    className?: string;
    displayName?: string;
    hasSubtype?: boolean;
    readonly 'x-class-name'?: string;
};

export type PageSearchableAssetName = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<SearchableAssetName>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type SearchableAssetName = {
    className?: string;
    readonly 'x-class-name'?: string;
};

export type GetFieldMappingInfosPageData = {
    body?: never;
    path?: never;
    query?: {
        external?: string;
        indexName?: string;
        query?: string;
        nestedFields?: string;
    };
    url: '/o/search-experiences-rest/v1.0/field-mapping-infos';
};

export type GetFieldMappingInfosPageResponses = {
    /**
     * default response
     */
    default: PageFieldMappingInfo;
};

export type GetFieldMappingInfosPageResponse = GetFieldMappingInfosPageResponses[keyof GetFieldMappingInfosPageResponses];

export type PostFieldMappingInfosPageExportBatchData = {
    body?: never;
    path?: never;
    query?: {
        external?: string;
        indexName?: string;
        query?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/search-experiences-rest/v1.0/field-mapping-infos/export-batch';
};

export type PostFieldMappingInfosPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetKeywordQueryContributorsPageData = {
    body?: never;
    path?: never;
    query?: {
        nestedFields?: string;
    };
    url: '/o/search-experiences-rest/v1.0/keyword-query-contributors';
};

export type GetKeywordQueryContributorsPageResponses = {
    /**
     * default response
     */
    default: PageKeywordQueryContributor;
};

export type GetKeywordQueryContributorsPageResponse = GetKeywordQueryContributorsPageResponses[keyof GetKeywordQueryContributorsPageResponses];

export type PostKeywordQueryContributorsPageExportBatchData = {
    body?: never;
    path?: never;
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/search-experiences-rest/v1.0/keyword-query-contributors/export-batch';
};

export type PostKeywordQueryContributorsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetModelPrefilterContributorsPageData = {
    body?: never;
    path?: never;
    query?: {
        nestedFields?: string;
    };
    url: '/o/search-experiences-rest/v1.0/model-prefilter-contributors';
};

export type GetModelPrefilterContributorsPageResponses = {
    /**
     * default response
     */
    default: PageModelPrefilterContributor;
};

export type GetModelPrefilterContributorsPageResponse = GetModelPrefilterContributorsPageResponses[keyof GetModelPrefilterContributorsPageResponses];

export type PostModelPrefilterContributorsPageExportBatchData = {
    body?: never;
    path?: never;
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/search-experiences-rest/v1.0/model-prefilter-contributors/export-batch';
};

export type PostModelPrefilterContributorsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetQueryPrefilterContributorsPageData = {
    body?: never;
    path?: never;
    query?: {
        nestedFields?: string;
    };
    url: '/o/search-experiences-rest/v1.0/query-prefilter-contributors';
};

export type GetQueryPrefilterContributorsPageResponses = {
    /**
     * default response
     */
    default: PageQueryPrefilterContributor;
};

export type GetQueryPrefilterContributorsPageResponse = GetQueryPrefilterContributorsPageResponses[keyof GetQueryPrefilterContributorsPageResponses];

export type PostQueryPrefilterContributorsPageExportBatchData = {
    body?: never;
    path?: never;
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/search-experiences-rest/v1.0/query-prefilter-contributors/export-batch';
};

export type PostQueryPrefilterContributorsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteSxpBlueprintData = {
    body?: never;
    path: {
        sxpBlueprintId: string;
    };
    query?: never;
    url: '/o/search-experiences-rest/v1.0/sxp-blueprints/{sxpBlueprintId}';
};

export type DeleteSxpBlueprintResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSxpBlueprintData = {
    body?: never;
    path: {
        sxpBlueprintId: string;
    };
    query?: never;
    url: '/o/search-experiences-rest/v1.0/sxp-blueprints/{sxpBlueprintId}';
};

export type GetSxpBlueprintResponses = {
    /**
     * default response
     */
    default: SxpBlueprint;
};

export type GetSxpBlueprintResponse = GetSxpBlueprintResponses[keyof GetSxpBlueprintResponses];

export type PatchSxpBlueprintData = {
    body?: SxpBlueprint;
    path: {
        sxpBlueprintId: string;
    };
    query?: never;
    url: '/o/search-experiences-rest/v1.0/sxp-blueprints/{sxpBlueprintId}';
};

export type PatchSxpBlueprintResponses = {
    /**
     * default response
     */
    default: SxpBlueprint;
};

export type PatchSxpBlueprintResponse = PatchSxpBlueprintResponses[keyof PatchSxpBlueprintResponses];

export type PutSxpBlueprintData = {
    body?: SxpBlueprint;
    path: {
        sxpBlueprintId: string;
    };
    query?: never;
    url: '/o/search-experiences-rest/v1.0/sxp-blueprints/{sxpBlueprintId}';
};

export type PutSxpBlueprintResponses = {
    /**
     * default response
     */
    default: SxpBlueprint;
};

export type PutSxpBlueprintResponse = PutSxpBlueprintResponses[keyof PutSxpBlueprintResponses];

export type DeleteSxpBlueprintBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/search-experiences-rest/v1.0/sxp-blueprints/batch';
};

export type DeleteSxpBlueprintBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostSxpBlueprintBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/search-experiences-rest/v1.0/sxp-blueprints/batch';
};

export type PostSxpBlueprintBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutSxpBlueprintBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/search-experiences-rest/v1.0/sxp-blueprints/batch';
};

export type PutSxpBlueprintBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSxpBlueprintByExternalReferenceCodeData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/search-experiences-rest/v1.0/sxp-blueprints/by-external-reference-code/{externalReferenceCode}';
};

export type GetSxpBlueprintByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: SxpBlueprint;
};

export type GetSxpBlueprintByExternalReferenceCodeResponse = GetSxpBlueprintByExternalReferenceCodeResponses[keyof GetSxpBlueprintByExternalReferenceCodeResponses];

export type PutSxpBlueprintByExternalReferenceCodeData = {
    body?: SxpBlueprint;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/search-experiences-rest/v1.0/sxp-blueprints/by-external-reference-code/{externalReferenceCode}';
};

export type PutSxpBlueprintByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: SxpBlueprint;
};

export type PutSxpBlueprintByExternalReferenceCodeResponse = PutSxpBlueprintByExternalReferenceCodeResponses[keyof PutSxpBlueprintByExternalReferenceCodeResponses];

export type GetSxpBlueprintExportData = {
    body?: never;
    path: {
        sxpBlueprintId: string;
    };
    query?: never;
    url: '/o/search-experiences-rest/v1.0/sxp-blueprints/{sxpBlueprintId}/export';
};

export type GetSxpBlueprintExportResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSxpBlueprintsPageData = {
    body?: never;
    path?: never;
    query?: {
        filter?: string;
        page?: string;
        pageSize?: string;
        search?: string;
        sort?: string;
        nestedFields?: string;
    };
    url: '/o/search-experiences-rest/v1.0/sxp-blueprints';
};

export type GetSxpBlueprintsPageResponses = {
    /**
     * default response
     */
    default: PageSxpBlueprint;
};

export type GetSxpBlueprintsPageResponse = GetSxpBlueprintsPageResponses[keyof GetSxpBlueprintsPageResponses];

export type PostSxpBlueprintData = {
    body?: SxpBlueprint;
    path?: never;
    query?: never;
    url: '/o/search-experiences-rest/v1.0/sxp-blueprints';
};

export type PostSxpBlueprintResponses = {
    /**
     * default response
     */
    default: SxpBlueprint;
};

export type PostSxpBlueprintResponse = PostSxpBlueprintResponses[keyof PostSxpBlueprintResponses];

export type PostSxpBlueprintCopyData = {
    body?: never;
    path: {
        sxpBlueprintId: string;
    };
    query?: never;
    url: '/o/search-experiences-rest/v1.0/sxp-blueprints/{sxpBlueprintId}/copy';
};

export type PostSxpBlueprintCopyResponses = {
    /**
     * default response
     */
    default: SxpBlueprint;
};

export type PostSxpBlueprintCopyResponse = PostSxpBlueprintCopyResponses[keyof PostSxpBlueprintCopyResponses];

export type PostSxpBlueprintValidateData = {
    body?: string;
    path?: never;
    query?: never;
    url: '/o/search-experiences-rest/v1.0/sxp-blueprints/validate';
};

export type PostSxpBlueprintValidateResponses = {
    /**
     * default response
     */
    default: SxpBlueprint;
};

export type PostSxpBlueprintValidateResponse = PostSxpBlueprintValidateResponses[keyof PostSxpBlueprintValidateResponses];

export type PostSxpBlueprintsPageExportBatchData = {
    body?: never;
    path?: never;
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/search-experiences-rest/v1.0/sxp-blueprints/export-batch';
};

export type PostSxpBlueprintsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type DeleteSxpElementData = {
    body?: never;
    path: {
        sxpElementId: string;
    };
    query?: never;
    url: '/o/search-experiences-rest/v1.0/sxp-elements/{sxpElementId}';
};

export type DeleteSxpElementResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSxpElementData = {
    body?: never;
    path: {
        sxpElementId: string;
    };
    query?: never;
    url: '/o/search-experiences-rest/v1.0/sxp-elements/{sxpElementId}';
};

export type GetSxpElementResponses = {
    /**
     * default response
     */
    default: SxpElement;
};

export type GetSxpElementResponse = GetSxpElementResponses[keyof GetSxpElementResponses];

export type PatchSxpElementData = {
    body?: SxpElement;
    path: {
        sxpElementId: string;
    };
    query?: never;
    url: '/o/search-experiences-rest/v1.0/sxp-elements/{sxpElementId}';
};

export type PatchSxpElementResponses = {
    /**
     * default response
     */
    default: SxpElement;
};

export type PatchSxpElementResponse = PatchSxpElementResponses[keyof PatchSxpElementResponses];

export type PutSxpElementData = {
    body?: SxpElement;
    path: {
        sxpElementId: string;
    };
    query?: never;
    url: '/o/search-experiences-rest/v1.0/sxp-elements/{sxpElementId}';
};

export type PutSxpElementResponses = {
    /**
     * default response
     */
    default: SxpElement;
};

export type PutSxpElementResponse = PutSxpElementResponses[keyof PutSxpElementResponses];

export type DeleteSxpElementBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/search-experiences-rest/v1.0/sxp-elements/batch';
};

export type DeleteSxpElementBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostSxpElementBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/search-experiences-rest/v1.0/sxp-elements/batch';
};

export type PostSxpElementBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutSxpElementBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/o/search-experiences-rest/v1.0/sxp-elements/batch';
};

export type PutSxpElementBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSxpElementByExternalReferenceCodeData = {
    body?: never;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/search-experiences-rest/v1.0/sxp-elements/by-external-reference-code/{externalReferenceCode}';
};

export type GetSxpElementByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: SxpElement;
};

export type GetSxpElementByExternalReferenceCodeResponse = GetSxpElementByExternalReferenceCodeResponses[keyof GetSxpElementByExternalReferenceCodeResponses];

export type PutSxpElementByExternalReferenceCodeData = {
    body?: SxpElement;
    path: {
        externalReferenceCode: string;
    };
    query?: never;
    url: '/o/search-experiences-rest/v1.0/sxp-elements/by-external-reference-code/{externalReferenceCode}';
};

export type PutSxpElementByExternalReferenceCodeResponses = {
    /**
     * default response
     */
    default: SxpElement;
};

export type PutSxpElementByExternalReferenceCodeResponse = PutSxpElementByExternalReferenceCodeResponses[keyof PutSxpElementByExternalReferenceCodeResponses];

export type GetSxpElementExportData = {
    body?: never;
    path: {
        sxpElementId: string;
    };
    query?: never;
    url: '/o/search-experiences-rest/v1.0/sxp-elements/{sxpElementId}/export';
};

export type GetSxpElementExportResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSxpElementsPageData = {
    body?: never;
    path?: never;
    query?: {
        filter?: string;
        page?: string;
        pageSize?: string;
        search?: string;
        sort?: string;
        nestedFields?: string;
    };
    url: '/o/search-experiences-rest/v1.0/sxp-elements';
};

export type GetSxpElementsPageResponses = {
    /**
     * default response
     */
    default: PageSxpElement;
};

export type GetSxpElementsPageResponse = GetSxpElementsPageResponses[keyof GetSxpElementsPageResponses];

export type PostSxpElementData = {
    body?: SxpElement;
    path?: never;
    query?: never;
    url: '/o/search-experiences-rest/v1.0/sxp-elements';
};

export type PostSxpElementResponses = {
    /**
     * default response
     */
    default: SxpElement;
};

export type PostSxpElementResponse = PostSxpElementResponses[keyof PostSxpElementResponses];

export type PostSxpElementCopyData = {
    body?: never;
    path: {
        sxpElementId: string;
    };
    query?: never;
    url: '/o/search-experiences-rest/v1.0/sxp-elements/{sxpElementId}/copy';
};

export type PostSxpElementCopyResponses = {
    /**
     * default response
     */
    default: SxpElement;
};

export type PostSxpElementCopyResponse = PostSxpElementCopyResponses[keyof PostSxpElementCopyResponses];

export type PostSxpElementPreviewData = {
    body?: SxpElement;
    path?: never;
    query?: never;
    url: '/o/search-experiences-rest/v1.0/sxp-elements/preview';
};

export type PostSxpElementPreviewResponses = {
    /**
     * default response
     */
    default: SxpElement;
};

export type PostSxpElementPreviewResponse = PostSxpElementPreviewResponses[keyof PostSxpElementPreviewResponses];

export type PostSxpElementValidateData = {
    body?: string;
    path?: never;
    query?: never;
    url: '/o/search-experiences-rest/v1.0/sxp-elements/validate';
};

export type PostSxpElementValidateResponses = {
    /**
     * default response
     */
    default: SxpElement;
};

export type PostSxpElementValidateResponse = PostSxpElementValidateResponses[keyof PostSxpElementValidateResponses];

export type PostSxpElementsPageExportBatchData = {
    body?: never;
    path?: never;
    query?: {
        filter?: string;
        search?: string;
        sort?: string;
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/search-experiences-rest/v1.0/sxp-elements/export-batch';
};

export type PostSxpElementsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSxpParameterContributorDefinitionsPageData = {
    body?: never;
    path?: never;
    query?: {
        nestedFields?: string;
    };
    url: '/o/search-experiences-rest/v1.0/sxp-parameter-contributor-definitions';
};

export type GetSxpParameterContributorDefinitionsPageResponses = {
    /**
     * default response
     */
    default: PageSxpParameterContributorDefinition;
};

export type GetSxpParameterContributorDefinitionsPageResponse = GetSxpParameterContributorDefinitionsPageResponses[keyof GetSxpParameterContributorDefinitionsPageResponses];

export type PostSxpParameterContributorDefinitionsPageExportBatchData = {
    body?: never;
    path?: never;
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/search-experiences-rest/v1.0/sxp-parameter-contributor-definitions/export-batch';
};

export type PostSxpParameterContributorDefinitionsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSearchIndexesPageData = {
    body?: never;
    path?: never;
    query?: {
        nestedFields?: string;
    };
    url: '/o/search-experiences-rest/v1.0/search-indexes';
};

export type GetSearchIndexesPageResponses = {
    /**
     * default response
     */
    default: PageSearchIndex;
};

export type GetSearchIndexesPageResponse = GetSearchIndexesPageResponses[keyof GetSearchIndexesPageResponses];

export type PostSearchIndexesPageExportBatchData = {
    body?: never;
    path?: never;
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/search-experiences-rest/v1.0/search-indexes/export-batch';
};

export type PostSearchIndexesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostSearchData = {
    body?: SxpBlueprint;
    path?: never;
    query?: {
        page?: string;
        pageSize?: string;
        query?: string;
    };
    url: '/o/search-experiences-rest/v1.0/search';
};

export type PostSearchResponses = {
    /**
     * default response
     */
    default: SearchResponse;
};

export type PostSearchResponse = PostSearchResponses[keyof PostSearchResponses];

export type GetSearchableAssetNameLanguagePageData = {
    body?: never;
    path: {
        languageId: string;
    };
    query?: {
        nestedFields?: string;
    };
    url: '/o/search-experiences-rest/v1.0/searchable-asset-names/{languageId}';
};

export type GetSearchableAssetNameLanguagePageResponses = {
    /**
     * default response
     */
    default: PageSearchableAssetNameDisplay;
};

export type GetSearchableAssetNameLanguagePageResponse = GetSearchableAssetNameLanguagePageResponses[keyof GetSearchableAssetNameLanguagePageResponses];

export type GetSearchableAssetNamesPageData = {
    body?: never;
    path?: never;
    query?: {
        nestedFields?: string;
    };
    url: '/o/search-experiences-rest/v1.0/searchable-asset-names';
};

export type GetSearchableAssetNamesPageResponses = {
    /**
     * default response
     */
    default: PageSearchableAssetName;
};

export type GetSearchableAssetNamesPageResponse = GetSearchableAssetNamesPageResponses[keyof GetSearchableAssetNamesPageResponses];

export type PostSearchableAssetNamesPageExportBatchData = {
    body?: never;
    path?: never;
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/o/search-experiences-rest/v1.0/searchable-asset-names/export-batch';
};

export type PostSearchableAssetNamesPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type ClientOptions = {
    baseUrl: 'http://localhost:8080' | (string & {});
};