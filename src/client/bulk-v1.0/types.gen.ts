// This file is auto-generated by @hey-api/openapi-ts

export type DocumentBulkSelectionReadable = {
    documentIds?: Array<string>;
    selectionScope?: SelectionScopeReadable;
    readonly 'x-class-name'?: string;
};

export type DocumentBulkSelectionWritable = {
    documentIds?: Array<string>;
    selectionScope?: SelectionScopeWritable;
};

export type KeywordBulkSelectionReadable = {
    documentBulkSelection?: DocumentBulkSelectionReadable;
    keywordsToAdd?: Array<string>;
    keywordsToRemove?: Array<string>;
    readonly 'x-class-name'?: string;
};

export type KeywordBulkSelectionWritable = {
    documentBulkSelection?: DocumentBulkSelectionWritable;
    keywordsToAdd?: Array<string>;
    keywordsToRemove?: Array<string>;
};

export type SelectionScopeReadable = {
    folderId?: number;
    repositoryId?: number;
    selectAll?: boolean;
    readonly 'x-class-name'?: string;
};

export type SelectionScopeWritable = {
    folderId?: number;
    repositoryId?: number;
    selectAll?: boolean;
};

export type Facet = {
    facetCriteria?: string;
    facetValues?: Array<FacetValue>;
};

export type FacetValue = {
    numberOfOccurrences?: number;
    term?: string;
};

export type KeywordReadable = {
    name?: string;
    readonly 'x-class-name'?: string;
};

export type KeywordWritable = {
    name?: string;
};

export type PageKeywordReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<KeywordReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageKeywordWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<KeywordWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type SelectionReadable = {
    size?: number;
    readonly 'x-class-name'?: string;
};

export type SelectionWritable = {
    size?: number;
};

export type StatusReadable = {
    actionInProgress?: boolean;
    readonly 'x-class-name'?: string;
};

export type StatusWritable = {
    actionInProgress?: boolean;
};

export type TaxonomyCategoryBulkSelectionReadable = {
    documentBulkSelection?: DocumentBulkSelectionReadable;
    taxonomyCategoryIdsToAdd?: Array<number>;
    taxonomyCategoryIdsToRemove?: Array<number>;
    readonly 'x-class-name'?: string;
};

export type TaxonomyCategoryBulkSelectionWritable = {
    documentBulkSelection?: DocumentBulkSelectionWritable;
    taxonomyCategoryIdsToAdd?: Array<number>;
    taxonomyCategoryIdsToRemove?: Array<number>;
};

export type PageTaxonomyVocabularyReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<TaxonomyVocabularyReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageTaxonomyVocabularyWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<TaxonomyVocabularyWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type TaxonomyCategoryReadable = {
    taxonomyCategoryId?: number;
    taxonomyCategoryName?: string;
    readonly 'x-class-name'?: string;
};

export type TaxonomyCategoryWritable = {
    taxonomyCategoryId?: number;
    taxonomyCategoryName?: string;
};

export type TaxonomyVocabularyReadable = {
    multiValued?: boolean;
    name?: string;
    required?: boolean;
    taxonomyCategories?: Array<TaxonomyCategoryReadable>;
    taxonomyVocabularyId?: number;
    readonly 'x-class-name'?: string;
};

export type TaxonomyVocabularyWritable = {
    multiValued?: boolean;
    name?: string;
    required?: boolean;
    taxonomyCategories?: Array<TaxonomyCategoryWritable>;
    taxonomyVocabularyId?: number;
};

export type PatchKeywordBatchData = {
    body?: KeywordBulkSelectionWritable;
    path?: never;
    query?: never;
    url: '/v1.0/keywords/batch';
};

export type PatchKeywordBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutKeywordBatchData = {
    body?: KeywordBulkSelectionWritable;
    path?: never;
    query?: never;
    url: '/v1.0/keywords/batch';
};

export type PutKeywordBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostKeywordsCommonPageData = {
    body?: DocumentBulkSelectionWritable;
    path?: never;
    query?: never;
    url: '/v1.0/keywords/common';
};

export type PostKeywordsCommonPageResponses = {
    /**
     * default response
     */
    default: PageKeywordReadable;
};

export type PostKeywordsCommonPageResponse = PostKeywordsCommonPageResponses[keyof PostKeywordsCommonPageResponses];

export type GetOpenApiData = {
    body?: never;
    path: {
        type: string;
    };
    query?: never;
    url: '/v1.0/openapi.{type}';
};

export type GetOpenApiResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostBulkSelectionData = {
    body?: DocumentBulkSelectionWritable;
    path?: never;
    query?: never;
    url: '/v1.0/bulk-selection';
};

export type PostBulkSelectionResponses = {
    /**
     * default response
     */
    default: SelectionReadable;
};

export type PostBulkSelectionResponse = PostBulkSelectionResponses[keyof PostBulkSelectionResponses];

export type GetStatusData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1.0/status';
};

export type GetStatusResponses = {
    /**
     * default response
     */
    default: StatusReadable;
};

export type GetStatusResponse = GetStatusResponses[keyof GetStatusResponses];

export type PatchTaxonomyCategoryBatchData = {
    body?: TaxonomyCategoryBulkSelectionWritable;
    path?: never;
    query?: never;
    url: '/v1.0/taxonomy-categories/batch';
};

export type PatchTaxonomyCategoryBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutTaxonomyCategoryBatchData = {
    body?: TaxonomyCategoryBulkSelectionWritable;
    path?: never;
    query?: never;
    url: '/v1.0/taxonomy-categories/batch';
};

export type PutTaxonomyCategoryBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostSiteTaxonomyVocabulariesCommonPageData = {
    body?: DocumentBulkSelectionWritable;
    path: {
        siteId: string;
    };
    query?: never;
    url: '/v1.0/sites/{siteId}/taxonomy-vocabularies/common';
};

export type PostSiteTaxonomyVocabulariesCommonPageResponses = {
    /**
     * default response
     */
    default: PageTaxonomyVocabularyReadable;
};

export type PostSiteTaxonomyVocabulariesCommonPageResponse = PostSiteTaxonomyVocabulariesCommonPageResponses[keyof PostSiteTaxonomyVocabulariesCommonPageResponses];

export type ClientOptions = {
    baseUrl: 'http://localhost:8080/o/bulk/' | (string & {});
};