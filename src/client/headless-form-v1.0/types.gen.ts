// This file is auto-generated by @hey-api/openapi-ts

export type FormDocumentReadable = {
    readonly contentUrl?: string;
    description?: string;
    readonly encodingFormat?: string;
    readonly fileExtension?: string;
    folderId?: number;
    readonly id?: number;
    siteId?: number;
    readonly sizeInBytes?: number;
    title?: string;
    readonly 'x-class-name'?: string;
};

export type FormDocumentWritable = {
    description?: string;
    folderId?: number;
    siteId?: number;
    title?: string;
};

export type CreatorReadable = {
    additionalName?: string;
    /**
     * The type of the content.
     */
    readonly contentType?: string;
    familyName?: string;
    givenName?: string;
    id?: number;
    image?: string;
    name?: string;
    profileURL?: string;
    readonly 'x-class-name'?: string;
};

export type CreatorWritable = {
    additionalName?: string;
    familyName?: string;
    givenName?: string;
    id?: number;
    image?: string;
    name?: string;
    profileURL?: string;
};

/**
 * https://www.schema.org/FormFieldValue
 */
export type FormFieldValueReadable = {
    formDocument?: FormDocumentReadable;
    readonly id?: number;
    name?: string;
    value?: string;
    readonly 'x-class-name'?: string;
};

/**
 * https://www.schema.org/FormFieldValue
 */
export type FormFieldValueWritable = {
    formDocument?: FormDocumentWritable;
    formDocumentId?: number;
    name?: string;
    value?: string;
};

export type FormRecordReadable = {
    creator?: CreatorReadable;
    readonly dateCreated?: string;
    readonly dateModified?: string;
    readonly datePublished?: string;
    draft?: boolean;
    formFieldValues?: Array<FormFieldValueReadable>;
    readonly id?: number;
    readonly 'x-class-name'?: string;
};

export type FormRecordWritable = {
    creator?: CreatorWritable;
    draft?: boolean;
    formFieldValues?: Array<FormFieldValueWritable>;
    formId?: number;
};

export type Facet = {
    facetCriteria?: string;
    facetValues?: Array<FacetValue>;
};

export type FacetValue = {
    numberOfOccurrences?: number;
    term?: string;
};

export type PageFormRecordReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<FormRecordReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageFormRecordWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<FormRecordWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type FormReadable = {
    availableLanguages?: Array<string>;
    creator?: CreatorReadable;
    dateCreated?: string;
    dateModified?: string;
    datePublished?: string;
    defaultLanguage?: string;
    description?: string;
    description_i18n?: {
        [key: string]: string;
    };
    readonly formRecords?: Array<FormRecordReadable>;
    id?: number;
    name?: string;
    name_i18n?: {
        [key: string]: string;
    };
    siteId?: number;
    structure?: FormStructureReadable;
    readonly 'x-class-name'?: string;
};

export type FormWritable = {
    availableLanguages?: Array<string>;
    creator?: CreatorWritable;
    dateCreated?: string;
    dateModified?: string;
    datePublished?: string;
    defaultLanguage?: string;
    description?: string;
    description_i18n?: {
        [key: string]: string;
    };
    formRecordsIds?: Array<number>;
    id?: number;
    name?: string;
    name_i18n?: {
        [key: string]: string;
    };
    siteId?: number;
    structure?: FormStructureWritable;
    structureId?: number;
};

export type FormFieldReadable = {
    autocomplete?: boolean;
    dataSourceType?: string;
    dataType?: string;
    displayStyle?: string;
    formFieldOptions?: Array<FormFieldOptionReadable>;
    grid?: GridReadable;
    hasFormRules?: boolean;
    id?: number;
    immutable?: boolean;
    inline?: boolean;
    inputControl?: string;
    label?: string;
    label_i18n?: {
        [key: string]: string;
    };
    localizable?: boolean;
    multiple?: boolean;
    name?: string;
    placeholder?: string;
    predefinedValue?: string;
    predefinedValue_i18n?: {
        [key: string]: string;
    };
    readOnly?: boolean;
    repeatable?: boolean;
    required?: boolean;
    showAsSwitcher?: boolean;
    showLabel?: boolean;
    style?: string;
    text?: string;
    text_i18n?: {
        [key: string]: string;
    };
    tooltip?: string;
    validation?: ValidationReadable;
    readonly 'x-class-name'?: string;
};

export type FormFieldWritable = {
    autocomplete?: boolean;
    dataSourceType?: string;
    dataType?: string;
    displayStyle?: string;
    formFieldOptions?: Array<FormFieldOptionWritable>;
    grid?: GridWritable;
    hasFormRules?: boolean;
    id?: number;
    immutable?: boolean;
    inline?: boolean;
    inputControl?: string;
    label?: string;
    label_i18n?: {
        [key: string]: string;
    };
    localizable?: boolean;
    multiple?: boolean;
    name?: string;
    placeholder?: string;
    predefinedValue?: string;
    predefinedValue_i18n?: {
        [key: string]: string;
    };
    readOnly?: boolean;
    repeatable?: boolean;
    required?: boolean;
    showAsSwitcher?: boolean;
    showLabel?: boolean;
    style?: string;
    text?: string;
    text_i18n?: {
        [key: string]: string;
    };
    tooltip?: string;
    validation?: ValidationWritable;
};

export type FormFieldOptionReadable = {
    id?: number;
    label?: string;
    label_i18n?: {
        [key: string]: string;
    };
    value?: string;
    readonly 'x-class-name'?: string;
};

export type FormFieldOptionWritable = {
    id?: number;
    label?: string;
    label_i18n?: {
        [key: string]: string;
    };
    value?: string;
};

/**
 * https://www.schema.org/FormPage
 */
export type FormPageReadable = {
    formFields?: Array<FormFieldReadable>;
    headline?: string;
    headline_i18n?: {
        [key: string]: string;
    };
    id?: number;
    text?: string;
    text_i18n?: {
        [key: string]: string;
    };
    readonly 'x-class-name'?: string;
};

/**
 * https://www.schema.org/FormPage
 */
export type FormPageWritable = {
    formFields?: Array<FormFieldWritable>;
    headline?: string;
    headline_i18n?: {
        [key: string]: string;
    };
    id?: number;
    text?: string;
    text_i18n?: {
        [key: string]: string;
    };
};

export type FormStructureReadable = {
    availableLanguages?: Array<string>;
    creator?: CreatorReadable;
    dateCreated?: string;
    dateModified?: string;
    description?: string;
    description_i18n?: {
        [key: string]: string;
    };
    /**
     * https://www.schema.org/FormPage
     */
    formPages?: Array<FormPageReadable>;
    formSuccessPage?: FormSuccessPageReadable;
    id?: number;
    name?: string;
    name_i18n?: {
        [key: string]: string;
    };
    siteId?: number;
    readonly 'x-class-name'?: string;
};

export type FormStructureWritable = {
    availableLanguages?: Array<string>;
    creator?: CreatorWritable;
    dateCreated?: string;
    dateModified?: string;
    description?: string;
    description_i18n?: {
        [key: string]: string;
    };
    /**
     * https://www.schema.org/FormPage
     */
    formPages?: Array<FormPageWritable>;
    formSuccessPage?: FormSuccessPageWritable;
    id?: number;
    name?: string;
    name_i18n?: {
        [key: string]: string;
    };
    siteId?: number;
};

/**
 * https://www.schema.org/FormSuccessPage
 */
export type FormSuccessPageReadable = {
    description?: string;
    description_i18n?: {
        [key: string]: string;
    };
    headline?: string;
    headline_i18n?: {
        [key: string]: string;
    };
    id?: number;
    readonly 'x-class-name'?: string;
};

/**
 * https://www.schema.org/FormSuccessPage
 */
export type FormSuccessPageWritable = {
    description?: string;
    description_i18n?: {
        [key: string]: string;
    };
    headline?: string;
    headline_i18n?: {
        [key: string]: string;
    };
    id?: number;
};

export type GridReadable = {
    columns?: Array<FormFieldOptionReadable>;
    id?: number;
    rows?: Array<FormFieldOptionReadable>;
    readonly 'x-class-name'?: string;
};

export type GridWritable = {
    columns?: Array<FormFieldOptionWritable>;
    id?: number;
    rows?: Array<FormFieldOptionWritable>;
};

/**
 * https://www.schema.org/FormFieldValidation
 */
export type ValidationReadable = {
    errorMessage?: string;
    errorMessage_i18n?: {
        [key: string]: string;
    };
    expression?: string;
    id?: number;
    readonly 'x-class-name'?: string;
};

/**
 * https://www.schema.org/FormFieldValidation
 */
export type ValidationWritable = {
    errorMessage?: string;
    errorMessage_i18n?: {
        [key: string]: string;
    };
    expression?: string;
    id?: number;
};

export type PageFormReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<FormReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageFormWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<FormWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type FormContextReadable = {
    /**
     * https://www.schema.org/FormFieldValue
     */
    formFieldValues?: Array<FormFieldValueReadable>;
    /**
     * https://www.schema.org/FormPageContext
     */
    formPageContexts?: Array<FormPageContextReadable>;
    readOnly?: boolean;
    showRequiredFieldsWarning?: boolean;
    showSubmitButton?: boolean;
    readonly 'x-class-name'?: string;
};

export type FormContextWritable = {
    /**
     * https://www.schema.org/FormFieldValue
     */
    formFieldValues?: Array<FormFieldValueWritable>;
    /**
     * https://www.schema.org/FormPageContext
     */
    formPageContexts?: Array<FormPageContextWritable>;
    readOnly?: boolean;
    showRequiredFieldsWarning?: boolean;
    showSubmitButton?: boolean;
};

/**
 * https://www.schema.org/FormFieldContext
 */
export type FormFieldContextReadable = {
    evaluable?: boolean;
    formFieldOptions?: Array<FormFieldOptionReadable>;
    name?: string;
    readOnly?: boolean;
    required?: boolean;
    valid?: boolean;
    value?: string;
    valueChanged?: boolean;
    visible?: boolean;
    readonly 'x-class-name'?: string;
};

/**
 * https://www.schema.org/FormFieldContext
 */
export type FormFieldContextWritable = {
    evaluable?: boolean;
    formFieldOptions?: Array<FormFieldOptionWritable>;
    name?: string;
    readOnly?: boolean;
    required?: boolean;
    valid?: boolean;
    value?: string;
    valueChanged?: boolean;
    visible?: boolean;
};

/**
 * https://www.schema.org/FormPageContext
 */
export type FormPageContextReadable = {
    enabled?: boolean;
    /**
     * https://www.schema.org/FormFieldContext
     */
    formFieldContexts?: Array<FormFieldContextReadable>;
    showRequiredFieldsWarning?: boolean;
    readonly 'x-class-name'?: string;
};

/**
 * https://www.schema.org/FormPageContext
 */
export type FormPageContextWritable = {
    enabled?: boolean;
    /**
     * https://www.schema.org/FormFieldContext
     */
    formFieldContexts?: Array<FormFieldContextWritable>;
    showRequiredFieldsWarning?: boolean;
};

export type MultipartBody = {
    values?: {
        [key: string]: string;
    };
};

export type PageFormStructureReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<FormStructureReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageFormStructureWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<FormStructureWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type DeleteFormDocumentData = {
    body?: never;
    path: {
        formDocumentId: string;
    };
    query?: never;
    url: '/v1.0/form-documents/{formDocumentId}';
};

export type DeleteFormDocumentResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetFormDocumentData = {
    body?: never;
    path: {
        formDocumentId: string;
    };
    query?: never;
    url: '/v1.0/form-documents/{formDocumentId}';
};

export type GetFormDocumentResponses = {
    /**
     * default response
     */
    default: FormDocumentReadable;
};

export type GetFormDocumentResponse = GetFormDocumentResponses[keyof GetFormDocumentResponses];

export type DeleteFormDocumentBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/v1.0/form-documents/batch';
};

export type DeleteFormDocumentBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetFormFormRecordByLatestDraftData = {
    body?: never;
    path: {
        formId: string;
    };
    query?: never;
    url: '/v1.0/forms/{formId}/form-records/by-latest-draft';
};

export type GetFormFormRecordByLatestDraftResponses = {
    /**
     * default response
     */
    default: FormRecordReadable;
};

export type GetFormFormRecordByLatestDraftResponse = GetFormFormRecordByLatestDraftResponses[keyof GetFormFormRecordByLatestDraftResponses];

export type GetFormFormRecordsPageData = {
    body?: never;
    path: {
        formId: string;
    };
    query?: {
        page?: string;
        pageSize?: string;
    };
    url: '/v1.0/forms/{formId}/form-records';
};

export type GetFormFormRecordsPageResponses = {
    /**
     * default response
     */
    default: PageFormRecordReadable;
};

export type GetFormFormRecordsPageResponse = GetFormFormRecordsPageResponses[keyof GetFormFormRecordsPageResponses];

export type PostFormFormRecordData = {
    body?: FormRecordWritable;
    path: {
        formId: string;
    };
    query?: never;
    url: '/v1.0/forms/{formId}/form-records';
};

export type PostFormFormRecordResponses = {
    /**
     * default response
     */
    default: FormRecordReadable;
};

export type PostFormFormRecordResponse = PostFormFormRecordResponses[keyof PostFormFormRecordResponses];

export type GetFormRecordData = {
    body?: never;
    path: {
        formRecordId: string;
    };
    query?: never;
    url: '/v1.0/form-records/{formRecordId}';
};

export type GetFormRecordResponses = {
    /**
     * default response
     */
    default: FormRecordReadable;
};

export type GetFormRecordResponse = GetFormRecordResponses[keyof GetFormRecordResponses];

export type PutFormRecordData = {
    body?: FormRecordWritable;
    path: {
        formRecordId: string;
    };
    query?: never;
    url: '/v1.0/form-records/{formRecordId}';
};

export type PutFormRecordResponses = {
    /**
     * default response
     */
    default: FormRecordReadable;
};

export type PutFormRecordResponse = PutFormRecordResponses[keyof PutFormRecordResponses];

export type PostFormFormRecordBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path: {
        formId: string;
    };
    query?: {
        callbackURL?: string;
    };
    url: '/v1.0/forms/{formId}/form-records/batch';
};

export type PostFormFormRecordBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostFormFormRecordsPageExportBatchData = {
    body?: never;
    path: {
        formId: string;
    };
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/v1.0/forms/{formId}/form-records/export-batch';
};

export type PostFormFormRecordsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PutFormRecordBatchData = {
    body?: {
        [key: string]: unknown;
    };
    path?: never;
    query?: {
        callbackURL?: string;
    };
    url: '/v1.0/form-records/batch';
};

export type PutFormRecordBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetFormData = {
    body?: never;
    path: {
        formId: string;
    };
    query?: never;
    url: '/v1.0/forms/{formId}';
};

export type GetFormResponses = {
    /**
     * default response
     */
    default: FormReadable;
};

export type GetFormResponse = GetFormResponses[keyof GetFormResponses];

export type GetSiteFormsPageData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        page?: string;
        pageSize?: string;
    };
    url: '/v1.0/sites/{siteId}/forms';
};

export type GetSiteFormsPageResponses = {
    /**
     * default response
     */
    default: PageFormReadable;
};

export type GetSiteFormsPageResponse = GetSiteFormsPageResponses[keyof GetSiteFormsPageResponses];

export type PostFormEvaluateContextData = {
    body?: FormContextWritable;
    path: {
        formId: string;
    };
    query?: never;
    url: '/v1.0/forms/{formId}/evaluate-context';
};

export type PostFormEvaluateContextResponses = {
    /**
     * default response
     */
    default: FormContextReadable;
};

export type PostFormEvaluateContextResponse = PostFormEvaluateContextResponses[keyof PostFormEvaluateContextResponses];

export type PostFormFormDocumentData = {
    body?: MultipartBody;
    path: {
        formId: string;
    };
    query?: never;
    url: '/v1.0/forms/{formId}/form-document';
};

export type PostFormFormDocumentResponses = {
    /**
     * default response
     */
    default: FormDocumentReadable;
};

export type PostFormFormDocumentResponse = PostFormFormDocumentResponses[keyof PostFormFormDocumentResponses];

export type PostSiteFormsPageExportBatchData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/v1.0/sites/{siteId}/forms/export-batch';
};

export type PostSiteFormsPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetFormStructureData = {
    body?: never;
    path: {
        formStructureId: string;
    };
    query?: never;
    url: '/v1.0/form-structures/{formStructureId}';
};

export type GetFormStructureResponses = {
    /**
     * default response
     */
    default: FormStructureReadable;
};

export type GetFormStructureResponse = GetFormStructureResponses[keyof GetFormStructureResponses];

export type GetSiteFormStructuresPageData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        page?: string;
        pageSize?: string;
    };
    url: '/v1.0/sites/{siteId}/form-structures';
};

export type GetSiteFormStructuresPageResponses = {
    /**
     * default response
     */
    default: PageFormStructureReadable;
};

export type GetSiteFormStructuresPageResponse = GetSiteFormStructuresPageResponses[keyof GetSiteFormStructuresPageResponses];

export type PostSiteFormStructuresPageExportBatchData = {
    body?: never;
    path: {
        siteId: string;
    };
    query?: {
        callbackURL?: string;
        contentType?: string;
        fieldNames?: string;
    };
    url: '/v1.0/sites/{siteId}/form-structures/export-batch';
};

export type PostSiteFormStructuresPageExportBatchResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetOpenApiData = {
    body?: never;
    path: {
        type: string;
    };
    query?: never;
    url: '/v1.0/openapi.{type}';
};

export type GetOpenApiResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type ClientOptions = {
    baseUrl: 'http://localhost:8080/o/headless-form/' | (string & {});
};