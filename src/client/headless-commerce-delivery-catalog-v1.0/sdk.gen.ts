// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, TDataShape, Client } from '@hey-api/client-fetch';
import type { GetChannelAccountsPageData, GetChannelAccountsPageResponses, PostChannelAccountData, PostChannelAccountResponses, GetChannelProductAttachmentsPageData, GetChannelProductAttachmentsPageResponses, GetChannelProductImagesPageData, GetChannelProductImagesPageResponses, GetChannelProductCategoriesPageData, GetChannelProductCategoriesPageResponses, GetChannelsPageData, GetChannelsPageResponses, PostChannelsPageExportBatchData, PostChannelsPageExportBatchResponses, GetChannelByExternalReferenceCodeCurrenciesPageData, GetChannelByExternalReferenceCodeCurrenciesPageResponses, GetChannelCurrenciesPageData, GetChannelCurrenciesPageResponses, GetChannelProductLinkedProductsPageData, GetChannelProductLinkedProductsPageResponses, GetChannelProductMappedProductsPageData, GetChannelProductMappedProductsPageResponses, GetOpenApiData, GetOpenApiResponses, GetChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodePinsPageData, GetChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodePinsPageResponses, GetChannelProductPinsPageData, GetChannelProductPinsPageResponses, GetChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeProductOptionsPageData, GetChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeProductOptionsPageResponses, GetChannelProductProductOptionsPageData, GetChannelProductProductOptionsPageResponses, GetChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeProductOptionByExternalReferenceCodeProductOptionExternalReferenceCodeProductOptionValuesPageData, GetChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeProductOptionByExternalReferenceCodeProductOptionExternalReferenceCodeProductOptionValuesPageResponses, PostChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeProductOptionByExternalReferenceCodeProductOptionExternalReferenceCodeProductOptionValuesPageData, PostChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeProductOptionByExternalReferenceCodeProductOptionExternalReferenceCodeProductOptionValuesPageResponses, GetChannelProductProductOptionProductOptionValuesPageData, GetChannelProductProductOptionProductOptionValuesPageResponses, PostChannelProductProductOptionProductOptionValuesPageData, PostChannelProductProductOptionProductOptionValuesPageResponses, GetChannelProductData, GetChannelProductResponses, GetChannelProductByFriendlyUrlPathData, GetChannelProductByFriendlyUrlPathResponses, GetChannelProductsPageData, GetChannelProductsPageResponses, GetChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeProductSpecificationsPageData, GetChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeProductSpecificationsPageResponses, GetChannelProductProductSpecificationsPageData, GetChannelProductProductSpecificationsPageResponses, GetChannelProductRelatedProductsPageData, GetChannelProductRelatedProductsPageResponses, GetChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeSkuByExternalReferenceCodeSkuExternalReferenceCodeData, GetChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeSkuByExternalReferenceCodeSkuExternalReferenceCodeResponses, GetChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeSkusPageData, GetChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeSkusPageResponses, PostChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeSkuData, PostChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeSkuResponses, GetChannelProductSkuData, GetChannelProductSkuResponses, GetChannelProductSkusPageData, GetChannelProductSkusPageResponses, PostChannelProductSkuData, PostChannelProductSkuResponses, PostChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeSkuBySkuOptionData, PostChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeSkuBySkuOptionResponses, PostChannelProductSkuBySkuOptionData, PostChannelProductSkuBySkuOptionResponses, DeleteWishListItemData, DeleteWishListItemResponses, GetWishListItemData, GetWishListItemResponses, DeleteWishListItemBatchData, DeleteWishListItemBatchResponses, GetWishlistWishListWishListItemsPageData, GetWishlistWishListWishListItemsPageResponses, PostWishlistWishListWishListItemData, PostWishlistWishListWishListItemResponses, DeleteWishListData, DeleteWishListResponses, GetWishListData, GetWishListResponses, PatchWishListData, PatchWishListResponses, DeleteWishListBatchData, DeleteWishListBatchResponses, GetChannelByExternalReferenceCodeWishListsPageData, GetChannelByExternalReferenceCodeWishListsPageResponses, PostChannelByExternalReferenceCodeWishListData, PostChannelByExternalReferenceCodeWishListResponses, GetChannelWishListsPageData, GetChannelWishListsPageResponses, PostChannelWishListData, PostChannelWishListResponses } from './types.gen';
import { client as _heyApiClient } from './client.gen';

export type Options<TData extends TDataShape = TDataShape, ThrowOnError extends boolean = boolean> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export const getChannelAccountsPage = <ThrowOnError extends boolean = false>(options: Options<GetChannelAccountsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetChannelAccountsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/channels/{channelId}/accounts',
        ...options
    });
};

export const postChannelAccount = <ThrowOnError extends boolean = false>(options: Options<PostChannelAccountData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostChannelAccountResponses, unknown, ThrowOnError>({
        url: '/v1.0/channels/{channelId}/accounts',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getChannelProductAttachmentsPage = <ThrowOnError extends boolean = false>(options: Options<GetChannelProductAttachmentsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetChannelProductAttachmentsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/channels/{channelId}/products/{productId}/attachments',
        ...options
    });
};

export const getChannelProductImagesPage = <ThrowOnError extends boolean = false>(options: Options<GetChannelProductImagesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetChannelProductImagesPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/channels/{channelId}/products/{productId}/images',
        ...options
    });
};

/**
 * Gets a list of Category related to a Product.
 */
export const getChannelProductCategoriesPage = <ThrowOnError extends boolean = false>(options: Options<GetChannelProductCategoriesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetChannelProductCategoriesPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/channels/{channelId}/products/{productId}/categories',
        ...options
    });
};

export const getChannelsPage = <ThrowOnError extends boolean = false>(options?: Options<GetChannelsPageData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).get<GetChannelsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/channels',
        ...options
    });
};

export const postChannelsPageExportBatch = <ThrowOnError extends boolean = false>(options?: Options<PostChannelsPageExportBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).post<PostChannelsPageExportBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/channels/export-batch',
        ...options
    });
};

/**
 * Retrieves currencies from selected channel.
 */
export const getChannelByExternalReferenceCodeCurrenciesPage = <ThrowOnError extends boolean = false>(options: Options<GetChannelByExternalReferenceCodeCurrenciesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetChannelByExternalReferenceCodeCurrenciesPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/channels/by-externalReferenceCode/{externalReferenceCode}/currencies',
        ...options
    });
};

/**
 * Retrieves currencies from selected channel.
 */
export const getChannelCurrenciesPage = <ThrowOnError extends boolean = false>(options: Options<GetChannelCurrenciesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetChannelCurrenciesPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/channels/{channelId}/currencies',
        ...options
    });
};

export const getChannelProductLinkedProductsPage = <ThrowOnError extends boolean = false>(options: Options<GetChannelProductLinkedProductsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetChannelProductLinkedProductsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/channels/{channelId}/products/{productId}/linked-products',
        ...options
    });
};

export const getChannelProductMappedProductsPage = <ThrowOnError extends boolean = false>(options: Options<GetChannelProductMappedProductsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetChannelProductMappedProductsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/channels/{channelId}/products/{productId}/mapped-products',
        ...options
    });
};

export const getOpenApi = <ThrowOnError extends boolean = false>(options: Options<GetOpenApiData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetOpenApiResponses, unknown, ThrowOnError>({
        url: '/v1.0/openapi.{type}',
        ...options
    });
};

export const getChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodePinsPage = <ThrowOnError extends boolean = false>(options: Options<GetChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodePinsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodePinsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/channels/by-externalReferenceCode/{channelExternalReferenceCode}/products/by-externalReferenceCode/{productExternalReferenceCode}/pins',
        ...options
    });
};

export const getChannelProductPinsPage = <ThrowOnError extends boolean = false>(options: Options<GetChannelProductPinsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetChannelProductPinsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/channels/{channelId}/products/{productId}/pins',
        ...options
    });
};

export const getChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeProductOptionsPage = <ThrowOnError extends boolean = false>(options: Options<GetChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeProductOptionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeProductOptionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/channels/by-externalReferenceCode/{channelExternalReferenceCode}/products/by-externalReferenceCode/{productExternalReferenceCode}/product-options',
        ...options
    });
};

export const getChannelProductProductOptionsPage = <ThrowOnError extends boolean = false>(options: Options<GetChannelProductProductOptionsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetChannelProductProductOptionsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/channels/{channelId}/products/{productId}/product-options',
        ...options
    });
};

export const getChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeProductOptionByExternalReferenceCodeProductOptionExternalReferenceCodeProductOptionValuesPage = <ThrowOnError extends boolean = false>(options: Options<GetChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeProductOptionByExternalReferenceCodeProductOptionExternalReferenceCodeProductOptionValuesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeProductOptionByExternalReferenceCodeProductOptionExternalReferenceCodeProductOptionValuesPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/channels/by-externalReferenceCode/{channelExternalReferenceCode}/products/by-externalReferenceCode/{productExternalReferenceCode}/product-options/by-externalReferenceCode/{productOptionExternalReferenceCode}/product-option-values',
        ...options
    });
};

/**
 * Retrieves a list of ProductOptionValue with selected channel, product and product option external reference code.
 */
export const postChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeProductOptionByExternalReferenceCodeProductOptionExternalReferenceCodeProductOptionValuesPage = <ThrowOnError extends boolean = false>(options: Options<PostChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeProductOptionByExternalReferenceCodeProductOptionExternalReferenceCodeProductOptionValuesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeProductOptionByExternalReferenceCodeProductOptionExternalReferenceCodeProductOptionValuesPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/channels/by-externalReferenceCode/{channelExternalReferenceCode}/products/by-externalReferenceCode/{productExternalReferenceCode}/product-options/by-externalReferenceCode/{productOptionExternalReferenceCode}/product-option-values',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const getChannelProductProductOptionProductOptionValuesPage = <ThrowOnError extends boolean = false>(options: Options<GetChannelProductProductOptionProductOptionValuesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetChannelProductProductOptionProductOptionValuesPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/channels/{channelId}/products/{productId}/product-options/{productOptionId}/product-option-values',
        ...options
    });
};

/**
 * Retrieves a list of ProductOptionValue from selected channel, product ID and product option ID.
 */
export const postChannelProductProductOptionProductOptionValuesPage = <ThrowOnError extends boolean = false>(options: Options<PostChannelProductProductOptionProductOptionValuesPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostChannelProductProductOptionProductOptionValuesPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/channels/{channelId}/products/{productId}/product-options/{productOptionId}/product-option-values',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves products from selected channel.
 */
export const getChannelProduct = <ThrowOnError extends boolean = false>(options: Options<GetChannelProductData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetChannelProductResponses, unknown, ThrowOnError>({
        url: '/v1.0/channels/{channelId}/products/{productId}',
        ...options
    });
};

/**
 * Retrieves products from selected channel.
 */
export const getChannelProductByFriendlyUrlPath = <ThrowOnError extends boolean = false>(options: Options<GetChannelProductByFriendlyUrlPathData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetChannelProductByFriendlyUrlPathResponses, unknown, ThrowOnError>({
        url: '/v1.0/channels/{channelId}/products/by-friendly-url-path/{friendlyUrlPath}',
        ...options
    });
};

/**
 * Retrieves products from selected channel.
 */
export const getChannelProductsPage = <ThrowOnError extends boolean = false>(options: Options<GetChannelProductsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetChannelProductsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/channels/{channelId}/products',
        ...options
    });
};

export const getChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeProductSpecificationsPage = <ThrowOnError extends boolean = false>(options: Options<GetChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeProductSpecificationsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeProductSpecificationsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/channels/by-externalReferenceCode/{channelExternalReferenceCode}/products/by-externalReferenceCode/{productExternalReferenceCode}/product-specifications',
        ...options
    });
};

export const getChannelProductProductSpecificationsPage = <ThrowOnError extends boolean = false>(options: Options<GetChannelProductProductSpecificationsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetChannelProductProductSpecificationsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/channels/{channelId}/products/{productId}/product-specifications',
        ...options
    });
};

/**
 * Gets a list of Related Products of a Product.
 */
export const getChannelProductRelatedProductsPage = <ThrowOnError extends boolean = false>(options: Options<GetChannelProductRelatedProductsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetChannelProductRelatedProductsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/channels/{channelId}/products/{productId}/related-products',
        ...options
    });
};

/**
 * Retrieves a product from selected channel.
 */
export const getChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeSkuByExternalReferenceCodeSkuExternalReferenceCode = <ThrowOnError extends boolean = false>(options: Options<GetChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeSkuByExternalReferenceCodeSkuExternalReferenceCodeData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeSkuByExternalReferenceCodeSkuExternalReferenceCodeResponses, unknown, ThrowOnError>({
        url: '/v1.0/channels/by-externalReferenceCode/{channelExternalReferenceCode}/products/by-externalReferenceCode/{productExternalReferenceCode}/skus/by-externalReferenceCode/{skuExternalReferenceCode}',
        ...options
    });
};

/**
 * Retrieves products from selected channel.
 */
export const getChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeSkusPage = <ThrowOnError extends boolean = false>(options: Options<GetChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeSkusPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeSkusPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/channels/by-externalReferenceCode/{channelExternalReferenceCode}/products/by-externalReferenceCode/{productExternalReferenceCode}/skus',
        ...options
    });
};

/**
 * Posts an SKU with selected channel and product external reference code.
 */
export const postChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeSku = <ThrowOnError extends boolean = false>(options: Options<PostChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeSkuData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeSkuResponses, unknown, ThrowOnError>({
        url: '/v1.0/channels/by-externalReferenceCode/{channelExternalReferenceCode}/products/by-externalReferenceCode/{productExternalReferenceCode}/skus',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves a product from selected channel.
 */
export const getChannelProductSku = <ThrowOnError extends boolean = false>(options: Options<GetChannelProductSkuData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetChannelProductSkuResponses, unknown, ThrowOnError>({
        url: '/v1.0/channels/{channelId}/products/{productId}/skus/{skuId}',
        ...options
    });
};

/**
 * Retrieves products from selected channel.
 */
export const getChannelProductSkusPage = <ThrowOnError extends boolean = false>(options: Options<GetChannelProductSkusPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetChannelProductSkusPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/channels/{channelId}/products/{productId}/skus',
        ...options
    });
};

/**
 * Retrieves a SKU from selected channel and product ID.
 */
export const postChannelProductSku = <ThrowOnError extends boolean = false>(options: Options<PostChannelProductSkuData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostChannelProductSkuResponses, unknown, ThrowOnError>({
        url: '/v1.0/channels/{channelId}/products/{productId}/skus',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves a SKU from selected channel and product using their external reference code.
 */
export const postChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeSkuBySkuOption = <ThrowOnError extends boolean = false>(options: Options<PostChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeSkuBySkuOptionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostChannelByExternalReferenceCodeChannelExternalReferenceCodeProductByExternalReferenceCodeProductExternalReferenceCodeSkuBySkuOptionResponses, unknown, ThrowOnError>({
        url: '/v1.0/channels/by-externalReferenceCode/{channelExternalReferenceCode}/products/by-externalReferenceCode/{productExternalReferenceCode}/skus/by-sku-option',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves a SKU from selected channel and product ID.
 */
export const postChannelProductSkuBySkuOption = <ThrowOnError extends boolean = false>(options: Options<PostChannelProductSkuBySkuOptionData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostChannelProductSkuBySkuOptionResponses, unknown, ThrowOnError>({
        url: '/v1.0/channels/{channelId}/products/{productId}/skus/by-sku-option',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Deletes a wishlist item by wishListItemId.
 */
export const deleteWishListItem = <ThrowOnError extends boolean = false>(options: Options<DeleteWishListItemData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteWishListItemResponses, unknown, ThrowOnError>({
        url: '/v1.0/wishlist-items/{wishListItemId}',
        ...options
    });
};

/**
 * Retrieves wishlist item by wishListItemId for a specific channel and account
 */
export const getWishListItem = <ThrowOnError extends boolean = false>(options: Options<GetWishListItemData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetWishListItemResponses, unknown, ThrowOnError>({
        url: '/v1.0/wishlist-items/{wishListItemId}',
        ...options
    });
};

export const deleteWishListItemBatch = <ThrowOnError extends boolean = false>(options?: Options<DeleteWishListItemBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteWishListItemBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/wishlist-items/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Retrieves wishlist items by wishListId for a specific channel and account
 */
export const getWishlistWishListWishListItemsPage = <ThrowOnError extends boolean = false>(options: Options<GetWishlistWishListWishListItemsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetWishlistWishListWishListItemsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/wishlists/{wishListId}/wishlist-items',
        ...options
    });
};

export const postWishlistWishListWishListItem = <ThrowOnError extends boolean = false>(options: Options<PostWishlistWishListWishListItemData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostWishlistWishListWishListItemResponses, unknown, ThrowOnError>({
        url: '/v1.0/wishlists/{wishListId}/wishlist-items',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Deletes a wishlist by wishListId.
 */
export const deleteWishList = <ThrowOnError extends boolean = false>(options: Options<DeleteWishListData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).delete<DeleteWishListResponses, unknown, ThrowOnError>({
        url: '/v1.0/wishlists/{wishListId}',
        ...options
    });
};

/**
 * Retrieves a wishlist by wishListId.
 */
export const getWishList = <ThrowOnError extends boolean = false>(options: Options<GetWishListData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetWishListResponses, unknown, ThrowOnError>({
        url: '/v1.0/wishlists/{wishListId}',
        ...options
    });
};

export const patchWishList = <ThrowOnError extends boolean = false>(options: Options<PatchWishListData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).patch<PatchWishListResponses, unknown, ThrowOnError>({
        url: '/v1.0/wishlists/{wishListId}',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

export const deleteWishListBatch = <ThrowOnError extends boolean = false>(options?: Options<DeleteWishListBatchData, ThrowOnError>) => {
    return (options?.client ?? _heyApiClient).delete<DeleteWishListBatchResponses, unknown, ThrowOnError>({
        url: '/v1.0/wishlists/batch',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * Retrieves wishlists for a given channel.
 */
export const getChannelByExternalReferenceCodeWishListsPage = <ThrowOnError extends boolean = false>(options: Options<GetChannelByExternalReferenceCodeWishListsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetChannelByExternalReferenceCodeWishListsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/channels/by-externalReferenceCode/{externalReferenceCode}/wishlists',
        ...options
    });
};

export const postChannelByExternalReferenceCodeWishList = <ThrowOnError extends boolean = false>(options: Options<PostChannelByExternalReferenceCodeWishListData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostChannelByExternalReferenceCodeWishListResponses, unknown, ThrowOnError>({
        url: '/v1.0/channels/by-externalReferenceCode/{externalReferenceCode}/wishlists',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};

/**
 * Retrieves wishlists for a given channel.
 */
export const getChannelWishListsPage = <ThrowOnError extends boolean = false>(options: Options<GetChannelWishListsPageData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).get<GetChannelWishListsPageResponses, unknown, ThrowOnError>({
        url: '/v1.0/channels/{channelId}/wishlists',
        ...options
    });
};

export const postChannelWishList = <ThrowOnError extends boolean = false>(options: Options<PostChannelWishListData, ThrowOnError>) => {
    return (options.client ?? _heyApiClient).post<PostChannelWishListResponses, unknown, ThrowOnError>({
        url: '/v1.0/channels/{channelId}/wishlists',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options.headers
        }
    });
};