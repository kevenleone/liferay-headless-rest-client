// This file is auto-generated by @hey-api/openapi-ts

export type EmbeddingModelReadable = {
    modelId?: string;
    readonly 'x-class-name'?: string;
};

export type EmbeddingModelWritable = {
    modelId?: string;
};

export type Facet = {
    facetCriteria?: string;
    facetValues?: Array<FacetValue>;
};

export type FacetValue = {
    numberOfOccurrences?: number;
    term?: string;
};

export type PageEmbeddingModelReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<EmbeddingModelReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageEmbeddingModelWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<EmbeddingModelWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type EmbeddingProviderValidationResultReadable = {
    errorMessage?: string;
    expectedDimensions?: number;
    readonly 'x-class-name'?: string;
};

export type EmbeddingProviderValidationResultWritable = {
    errorMessage?: string;
    expectedDimensions?: number;
};

export type EmbeddingProviderConfigurationReadable = {
    attributes?: {
        [key: string]: unknown;
    };
    embeddingVectorDimensions?: number;
    languageIds?: Array<string>;
    modelClassNames?: Array<string>;
    providerName?: string;
    readonly 'x-class-name'?: string;
};

export type EmbeddingProviderConfigurationWritable = {
    attributes?: {
        [key: string]: unknown;
    };
    embeddingVectorDimensions?: number;
    languageIds?: Array<string>;
    modelClassNames?: Array<string>;
    providerName?: string;
};

export type PageSearchResultReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<SearchResultReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageSearchResultWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<SearchResultWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type SearchResultReadable = {
    readonly actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    /**
     * The time the item was created.
     */
    dateCreated?: string;
    /**
     * The last time the item was changed.
     */
    dateModified?: string;
    /**
     * The item's description.
     */
    description?: string;
    embedded?: {
        [key: string]: unknown;
    };
    /**
     * The object entry class name.
     */
    entryClassName?: string;
    /**
     * The link to the embedded item.
     */
    itemURL?: string;
    /**
     * The item's score.
     */
    score?: number;
    /**
     * The item's title.
     */
    title?: string;
    readonly 'x-class-name'?: string;
};

export type SearchResultWritable = {
    /**
     * The time the item was created.
     */
    dateCreated?: string;
    /**
     * The last time the item was changed.
     */
    dateModified?: string;
    /**
     * The item's description.
     */
    description?: string;
    embedded?: {
        [key: string]: unknown;
    };
    /**
     * The object entry class name.
     */
    entryClassName?: string;
    /**
     * The link to the embedded item.
     */
    itemURL?: string;
    /**
     * The item's score.
     */
    score?: number;
    /**
     * The item's title.
     */
    title?: string;
};

export type FacetConfigurationReadable = {
    /**
     * The name of the aggregation.
     */
    aggregationName?: string;
    /**
     * Additional attributes for the facet.
     */
    attributes?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    /**
     * Frequency threshold for showing the terms.
     */
    frequencyThreshold?: number;
    /**
     * Maximum number of terms to be shown.
     */
    maxTerms?: number;
    /**
     * The name of the facet.
     */
    name?: string;
    /**
     * The values / selections to be filtered by.
     */
    values?: Array<{
        [key: string]: unknown;
    }>;
    readonly 'x-class-name'?: string;
};

export type FacetConfigurationWritable = {
    /**
     * The name of the aggregation.
     */
    aggregationName?: string;
    /**
     * Additional attributes for the facet.
     */
    attributes?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    /**
     * Frequency threshold for showing the terms.
     */
    frequencyThreshold?: number;
    /**
     * Maximum number of terms to be shown.
     */
    maxTerms?: number;
    /**
     * The name of the facet.
     */
    name?: string;
    /**
     * The values / selections to be filtered by.
     */
    values?: Array<{
        [key: string]: unknown;
    }>;
};

export type SearchRequestBodyReadable = {
    attributes?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    facetConfigurations?: Array<FacetConfigurationReadable>;
    readonly 'x-class-name'?: string;
};

export type SearchRequestBodyWritable = {
    attributes?: {
        [key: string]: {
            [key: string]: unknown;
        };
    };
    facetConfigurations?: Array<FacetConfigurationWritable>;
};

export type PageSuggestionsContributorResultsReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<SuggestionsContributorResultsReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageSuggestionsContributorResultsWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<SuggestionsContributorResultsWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type SuggestionReadable = {
    attributes?: {
        [key: string]: unknown;
    };
    score?: number;
    text?: string;
    readonly 'x-class-name'?: string;
};

export type SuggestionWritable = {
    attributes?: {
        [key: string]: unknown;
    };
    score?: number;
    text?: string;
};

export type SuggestionsContributorResultsReadable = {
    attributes?: {
        [key: string]: unknown;
    };
    displayGroupName?: string;
    suggestions?: Array<SuggestionReadable>;
    readonly 'x-class-name'?: string;
};

export type SuggestionsContributorResultsWritable = {
    attributes?: {
        [key: string]: unknown;
    };
    displayGroupName?: string;
    suggestions?: Array<SuggestionWritable>;
};

export type SuggestionsContributorConfigurationReadable = {
    attributes?: {
        [key: string]: unknown;
    };
    contributorName?: string;
    displayGroupName?: string;
    size?: number;
    readonly 'x-class-name'?: string;
};

export type SuggestionsContributorConfigurationWritable = {
    attributes?: {
        [key: string]: unknown;
    };
    contributorName?: string;
    displayGroupName?: string;
    size?: number;
};

export type GetEmbeddingEmbeddingModelsPageData = {
    body?: never;
    path?: never;
    query?: {
        page?: string;
        pageSize?: string;
        provider?: string;
        search?: string;
        nestedFields?: string;
    };
    url: '/o/search/v1.0/embeddings/embedding-models';
};

export type GetEmbeddingEmbeddingModelsPageResponses = {
    /**
     * default response
     */
    default: PageEmbeddingModelReadable;
};

export type GetEmbeddingEmbeddingModelsPageResponse = GetEmbeddingEmbeddingModelsPageResponses[keyof GetEmbeddingEmbeddingModelsPageResponses];

export type PostEmbeddingValidateProviderConfigurationData = {
    body?: EmbeddingProviderConfigurationWritable;
    path?: never;
    query?: never;
    url: '/o/search/v1.0/embeddings/validate-provider-configuration';
};

export type PostEmbeddingValidateProviderConfigurationResponses = {
    /**
     * default response
     */
    default: EmbeddingProviderValidationResultReadable;
};

export type PostEmbeddingValidateProviderConfigurationResponse = PostEmbeddingValidateProviderConfigurationResponses[keyof PostEmbeddingValidateProviderConfigurationResponses];

export type GetSearchPageData = {
    body?: never;
    path?: never;
    query?: {
        blueprintExternalReferenceCode?: string;
        emptySearch?: string;
        entryClassNames?: string;
        fields?: string;
        filter?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        scope?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/search/v1.0/search';
};

export type GetSearchPageResponses = {
    /**
     * default response
     */
    default: PageSearchResultReadable;
};

export type GetSearchPageResponse = GetSearchPageResponses[keyof GetSearchPageResponses];

export type PostSearchPageData = {
    body?: SearchRequestBodyWritable;
    path?: never;
    query?: {
        entryClassNames?: string;
        fields?: string;
        filter?: string;
        nestedFields?: string;
        page?: string;
        pageSize?: string;
        restrictFields?: string;
        scope?: string;
        search?: string;
        sort?: string;
    };
    url: '/o/search/v1.0/search';
};

export type PostSearchPageResponses = {
    /**
     * default response
     */
    default: PageSearchResultReadable;
};

export type PostSearchPageResponse = PostSearchPageResponses[keyof PostSearchPageResponses];

export type PostSuggestionsPageData = {
    body?: Array<SuggestionsContributorConfigurationWritable>;
    path?: never;
    query?: {
        currentURL?: string;
        destinationFriendlyURL?: string;
        /**
         * @deprecated
         */
        groupId?: string;
        keywordsParameterName?: string;
        plid?: string;
        scope?: string;
        search?: string;
    };
    url: '/o/search/v1.0/suggestions';
};

export type PostSuggestionsPageResponses = {
    /**
     * default response
     */
    default: PageSuggestionsContributorResultsReadable;
};

export type PostSuggestionsPageResponse = PostSuggestionsPageResponses[keyof PostSuggestionsPageResponses];

export type ClientOptions = {
    baseUrl: 'http://localhost:8080' | (string & {});
};