// This file is auto-generated by @hey-api/openapi-ts

import type {
    Options as ClientOptions,
    TDataShape,
    Client,
} from "@hey-api/client-fetch";
import type {
    PostConfigurationWizardModeData,
    PostConfigurationWizardModeResponses,
    GetChannelsPageData,
    GetChannelsPageResponses,
    PatchChannelData,
    PatchChannelResponses,
    PostChannelData,
    PostChannelResponses,
    GetCommerceChannelsPageData,
    GetCommerceChannelsPageResponses,
    GetContactAccountGroupsPageData,
    GetContactAccountGroupsPageResponses,
    GetContactConfigurationData,
    GetContactConfigurationResponses,
    PutContactConfigurationData,
    PutContactConfigurationResponses,
    GetContactOrganizationsPageData,
    GetContactOrganizationsPageResponses,
    GetContactUserGroupsPageData,
    GetContactUserGroupsPageResponses,
    DeleteDataSourceData,
    DeleteDataSourceResponses,
    PostDataSourceData,
    PostDataSourceResponses,
    GetFieldsAccountsPageData,
    GetFieldsAccountsPageResponses,
    PatchFieldAccountData,
    PatchFieldAccountResponses,
    GetFieldsOrdersPageData,
    GetFieldsOrdersPageResponses,
    PatchFieldOrderData,
    PatchFieldOrderResponses,
    GetFieldsPeoplePageData,
    GetFieldsPeoplePageResponses,
    PatchFieldPeopleData,
    PatchFieldPeopleResponses,
    GetFieldsProductsPageData,
    GetFieldsProductsPageResponses,
    PatchFieldProductData,
    PatchFieldProductResponses,
    GetFieldData,
    GetFieldResponses,
    GetOpenApiData,
    GetOpenApiResponses,
    GetRecommendationConfigurationData,
    GetRecommendationConfigurationResponses,
    PutRecommendationConfigurationData,
    PutRecommendationConfigurationResponses,
    GetSitesPageData,
    GetSitesPageResponses,
} from "./types.gen";
import { client as _heyApiClient } from "./client.gen";

export type Options<
    TData extends TDataShape = TDataShape,
    ThrowOnError extends boolean = boolean
> = ClientOptions<TData, ThrowOnError> & {
    /**
     * You can provide a client instance returned by `createClient()` instead of
     * individual options. This might be also useful if you want to implement a
     * custom client.
     */
    client?: Client;
    /**
     * You can pass arbitrary values through the `meta` object. This can be
     * used to access values that aren't defined as part of the SDK function.
     */
    meta?: Record<string, unknown>;
};

export const postConfigurationWizardMode = <
    ThrowOnError extends boolean = false
>(
    options?: Options<PostConfigurationWizardModeData, ThrowOnError>
) => {
    return (options?.client ?? _heyApiClient).post<
        PostConfigurationWizardModeResponses,
        unknown,
        ThrowOnError
    >({
        url: "/v1.0/configuration/wizard-mode",
        ...options,
    });
};

export const getChannelsPage = <ThrowOnError extends boolean = false>(
    options?: Options<GetChannelsPageData, ThrowOnError>
) => {
    return (options?.client ?? _heyApiClient).get<
        GetChannelsPageResponses,
        unknown,
        ThrowOnError
    >({
        url: "/v1.0/channels",
        ...options,
    });
};

export const patchChannel = <ThrowOnError extends boolean = false>(
    options?: Options<PatchChannelData, ThrowOnError>
) => {
    return (options?.client ?? _heyApiClient).patch<
        PatchChannelResponses,
        unknown,
        ThrowOnError
    >({
        url: "/v1.0/channels",
        ...options,
        headers: {
            "Content-Type": "application/json",
            ...options?.headers,
        },
    });
};

export const postChannel = <ThrowOnError extends boolean = false>(
    options?: Options<PostChannelData, ThrowOnError>
) => {
    return (options?.client ?? _heyApiClient).post<
        PostChannelResponses,
        unknown,
        ThrowOnError
    >({
        url: "/v1.0/channels",
        ...options,
        headers: {
            "Content-Type": "application/json",
            ...options?.headers,
        },
    });
};

export const getCommerceChannelsPage = <ThrowOnError extends boolean = false>(
    options?: Options<GetCommerceChannelsPageData, ThrowOnError>
) => {
    return (options?.client ?? _heyApiClient).get<
        GetCommerceChannelsPageResponses,
        unknown,
        ThrowOnError
    >({
        url: "/v1.0/commerce-channels",
        ...options,
    });
};

export const getContactAccountGroupsPage = <
    ThrowOnError extends boolean = false
>(
    options?: Options<GetContactAccountGroupsPageData, ThrowOnError>
) => {
    return (options?.client ?? _heyApiClient).get<
        GetContactAccountGroupsPageResponses,
        unknown,
        ThrowOnError
    >({
        url: "/v1.0/contacts/account-groups",
        ...options,
    });
};

export const getContactConfiguration = <ThrowOnError extends boolean = false>(
    options?: Options<GetContactConfigurationData, ThrowOnError>
) => {
    return (options?.client ?? _heyApiClient).get<
        GetContactConfigurationResponses,
        unknown,
        ThrowOnError
    >({
        url: "/v1.0/contacts/configuration",
        ...options,
    });
};

export const putContactConfiguration = <ThrowOnError extends boolean = false>(
    options?: Options<PutContactConfigurationData, ThrowOnError>
) => {
    return (options?.client ?? _heyApiClient).put<
        PutContactConfigurationResponses,
        unknown,
        ThrowOnError
    >({
        url: "/v1.0/contacts/configuration",
        ...options,
        headers: {
            "Content-Type": "application/json",
            ...options?.headers,
        },
    });
};

export const getContactOrganizationsPage = <
    ThrowOnError extends boolean = false
>(
    options?: Options<GetContactOrganizationsPageData, ThrowOnError>
) => {
    return (options?.client ?? _heyApiClient).get<
        GetContactOrganizationsPageResponses,
        unknown,
        ThrowOnError
    >({
        url: "/v1.0/contacts/organizations",
        ...options,
    });
};

export const getContactUserGroupsPage = <ThrowOnError extends boolean = false>(
    options?: Options<GetContactUserGroupsPageData, ThrowOnError>
) => {
    return (options?.client ?? _heyApiClient).get<
        GetContactUserGroupsPageResponses,
        unknown,
        ThrowOnError
    >({
        url: "/v1.0/contacts/user-groups",
        ...options,
    });
};

export const deleteDataSource = <ThrowOnError extends boolean = false>(
    options?: Options<DeleteDataSourceData, ThrowOnError>
) => {
    return (options?.client ?? _heyApiClient).delete<
        DeleteDataSourceResponses,
        unknown,
        ThrowOnError
    >({
        url: "/v1.0/data-sources",
        ...options,
    });
};

export const postDataSource = <ThrowOnError extends boolean = false>(
    options?: Options<PostDataSourceData, ThrowOnError>
) => {
    return (options?.client ?? _heyApiClient).post<
        PostDataSourceResponses,
        unknown,
        ThrowOnError
    >({
        url: "/v1.0/data-sources",
        ...options,
        headers: {
            "Content-Type": "application/json",
            ...options?.headers,
        },
    });
};

export const getFieldsAccountsPage = <ThrowOnError extends boolean = false>(
    options?: Options<GetFieldsAccountsPageData, ThrowOnError>
) => {
    return (options?.client ?? _heyApiClient).get<
        GetFieldsAccountsPageResponses,
        unknown,
        ThrowOnError
    >({
        url: "/v1.0/fields/accounts",
        ...options,
    });
};

export const patchFieldAccount = <ThrowOnError extends boolean = false>(
    options?: Options<PatchFieldAccountData, ThrowOnError>
) => {
    return (options?.client ?? _heyApiClient).patch<
        PatchFieldAccountResponses,
        unknown,
        ThrowOnError
    >({
        url: "/v1.0/fields/accounts",
        ...options,
        headers: {
            "Content-Type": "application/json",
            ...options?.headers,
        },
    });
};

export const getFieldsOrdersPage = <ThrowOnError extends boolean = false>(
    options?: Options<GetFieldsOrdersPageData, ThrowOnError>
) => {
    return (options?.client ?? _heyApiClient).get<
        GetFieldsOrdersPageResponses,
        unknown,
        ThrowOnError
    >({
        url: "/v1.0/fields/orders",
        ...options,
    });
};

export const patchFieldOrder = <ThrowOnError extends boolean = false>(
    options?: Options<PatchFieldOrderData, ThrowOnError>
) => {
    return (options?.client ?? _heyApiClient).patch<
        PatchFieldOrderResponses,
        unknown,
        ThrowOnError
    >({
        url: "/v1.0/fields/orders",
        ...options,
        headers: {
            "Content-Type": "application/json",
            ...options?.headers,
        },
    });
};

export const getFieldsPeoplePage = <ThrowOnError extends boolean = false>(
    options?: Options<GetFieldsPeoplePageData, ThrowOnError>
) => {
    return (options?.client ?? _heyApiClient).get<
        GetFieldsPeoplePageResponses,
        unknown,
        ThrowOnError
    >({
        url: "/v1.0/fields/people",
        ...options,
    });
};

export const patchFieldPeople = <ThrowOnError extends boolean = false>(
    options?: Options<PatchFieldPeopleData, ThrowOnError>
) => {
    return (options?.client ?? _heyApiClient).patch<
        PatchFieldPeopleResponses,
        unknown,
        ThrowOnError
    >({
        url: "/v1.0/fields/people",
        ...options,
        headers: {
            "Content-Type": "application/json",
            ...options?.headers,
        },
    });
};

export const getFieldsProductsPage = <ThrowOnError extends boolean = false>(
    options?: Options<GetFieldsProductsPageData, ThrowOnError>
) => {
    return (options?.client ?? _heyApiClient).get<
        GetFieldsProductsPageResponses,
        unknown,
        ThrowOnError
    >({
        url: "/v1.0/fields/products",
        ...options,
    });
};

export const patchFieldProduct = <ThrowOnError extends boolean = false>(
    options?: Options<PatchFieldProductData, ThrowOnError>
) => {
    return (options?.client ?? _heyApiClient).patch<
        PatchFieldProductResponses,
        unknown,
        ThrowOnError
    >({
        url: "/v1.0/fields/products",
        ...options,
        headers: {
            "Content-Type": "application/json",
            ...options?.headers,
        },
    });
};

export const getField = <ThrowOnError extends boolean = false>(
    options?: Options<GetFieldData, ThrowOnError>
) => {
    return (options?.client ?? _heyApiClient).get<
        GetFieldResponses,
        unknown,
        ThrowOnError
    >({
        url: "/v1.0/fields",
        ...options,
    });
};

export const getOpenApi = <ThrowOnError extends boolean = false>(
    options: Options<GetOpenApiData, ThrowOnError>
) => {
    return (options.client ?? _heyApiClient).get<
        GetOpenApiResponses,
        unknown,
        ThrowOnError
    >({
        url: "/v1.0/openapi.{type}",
        ...options,
    });
};

export const getRecommendationConfiguration = <
    ThrowOnError extends boolean = false
>(
    options?: Options<GetRecommendationConfigurationData, ThrowOnError>
) => {
    return (options?.client ?? _heyApiClient).get<
        GetRecommendationConfigurationResponses,
        unknown,
        ThrowOnError
    >({
        url: "/v1.0/recommendation/configuration",
        ...options,
    });
};

export const putRecommendationConfiguration = <
    ThrowOnError extends boolean = false
>(
    options?: Options<PutRecommendationConfigurationData, ThrowOnError>
) => {
    return (options?.client ?? _heyApiClient).put<
        PutRecommendationConfigurationResponses,
        unknown,
        ThrowOnError
    >({
        url: "/v1.0/recommendation/configuration",
        ...options,
        headers: {
            "Content-Type": "application/json",
            ...options?.headers,
        },
    });
};

export const getSitesPage = <ThrowOnError extends boolean = false>(
    options?: Options<GetSitesPageData, ThrowOnError>
) => {
    return (options?.client ?? _heyApiClient).get<
        GetSitesPageResponses,
        unknown,
        ThrowOnError
    >({
        url: "/v1.0/sites",
        ...options,
    });
};
