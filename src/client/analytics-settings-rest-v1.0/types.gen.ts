// This file is auto-generated by @hey-api/openapi-ts

export type ChannelReadable = {
    channelId?: string;
    commerceSyncEnabled?: boolean;
    createDate?: string;
    dataSources?: Array<DataSourceReadable>;
    name?: string;
    readonly 'x-class-name'?: string;
};

export type ChannelWritable = {
    channelId?: string;
    commerceSyncEnabled?: boolean;
    createDate?: string;
    dataSources?: Array<DataSourceWritable>;
    name?: string;
};

export type DataSourceReadable = {
    commerceChannelIds?: Array<number>;
    dataSourceId?: string;
    siteIds?: Array<number>;
    readonly 'x-class-name'?: string;
};

export type DataSourceWritable = {
    commerceChannelIds?: Array<number>;
    dataSourceId?: string;
    siteIds?: Array<number>;
};

export type Facet = {
    facetCriteria?: string;
    facetValues?: Array<FacetValue>;
};

export type FacetValue = {
    numberOfOccurrences?: number;
    term?: string;
};

export type PageChannelReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<ChannelReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageChannelWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<ChannelWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type CommerceChannelReadable = {
    channelName?: string;
    id?: number;
    name?: string;
    siteName?: string;
    readonly 'x-class-name'?: string;
};

export type CommerceChannelWritable = {
    channelName?: string;
    id?: number;
    name?: string;
    siteName?: string;
};

export type PageCommerceChannelReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<CommerceChannelReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageCommerceChannelWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<CommerceChannelWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type ContactAccountGroupReadable = {
    id?: number;
    name?: string;
    selected?: boolean;
    readonly 'x-class-name'?: string;
};

export type ContactAccountGroupWritable = {
    id?: number;
    name?: string;
    selected?: boolean;
};

export type PageContactAccountGroupReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<ContactAccountGroupReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageContactAccountGroupWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<ContactAccountGroupWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type ContactConfigurationReadable = {
    syncAllAccounts?: boolean;
    syncAllContacts?: boolean;
    syncedAccountGroupIds?: Array<string>;
    syncedOrganizationIds?: Array<string>;
    syncedUserGroupIds?: Array<string>;
    readonly 'x-class-name'?: string;
};

export type ContactConfigurationWritable = {
    syncAllAccounts?: boolean;
    syncAllContacts?: boolean;
    syncedAccountGroupIds?: Array<string>;
    syncedOrganizationIds?: Array<string>;
    syncedUserGroupIds?: Array<string>;
};

export type ContactOrganizationReadable = {
    id?: number;
    name?: string;
    selected?: boolean;
    readonly 'x-class-name'?: string;
};

export type ContactOrganizationWritable = {
    id?: number;
    name?: string;
    selected?: boolean;
};

export type PageContactOrganizationReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<ContactOrganizationReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageContactOrganizationWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<ContactOrganizationWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type ContactUserGroupReadable = {
    id?: number;
    name?: string;
    selected?: boolean;
    readonly 'x-class-name'?: string;
};

export type ContactUserGroupWritable = {
    id?: number;
    name?: string;
    selected?: boolean;
};

export type PageContactUserGroupReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<ContactUserGroupReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageContactUserGroupWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<ContactUserGroupWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type DataSourceLiferayAnalyticsUrlReadable = {
    liferayAnalyticsURL?: string;
    readonly 'x-class-name'?: string;
};

export type DataSourceLiferayAnalyticsUrlWritable = {
    liferayAnalyticsURL?: string;
};

export type DataSourceTokenReadable = {
    token?: string;
    readonly 'x-class-name'?: string;
};

export type DataSourceTokenWritable = {
    token?: string;
};

export type FieldReadable = {
    example?: string;
    name?: string;
    required?: boolean;
    selected?: boolean;
    source?: string;
    type?: string;
    readonly 'x-class-name'?: string;
};

export type FieldWritable = {
    example?: string;
    name?: string;
    required?: boolean;
    selected?: boolean;
    source?: string;
    type?: string;
};

export type PageFieldReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<FieldReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageFieldWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<FieldWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type FieldSummaryReadable = {
    account?: number;
    order?: number;
    people?: number;
    product?: number;
    readonly 'x-class-name'?: string;
};

export type FieldSummaryWritable = {
    account?: number;
    order?: number;
    people?: number;
    product?: number;
};

export type RecommendationConfigurationReadable = {
    contentRecommenderMostPopularItems?: RecommendationItemReadable;
    contentRecommenderUserPersonalization?: RecommendationItemReadable;
    readonly 'x-class-name'?: string;
};

export type RecommendationConfigurationWritable = {
    contentRecommenderMostPopularItems?: RecommendationItemWritable;
    contentRecommenderUserPersonalization?: RecommendationItemWritable;
};

export type RecommendationItemReadable = {
    enabled?: boolean;
    readonly 'x-class-name'?: string;
    status?: 'Configuring' | 'Disabled' | 'Enabled' | 'Failed';
};

export type RecommendationItemWritable = {
    enabled?: boolean;
    status?: 'Configuring' | 'Disabled' | 'Enabled' | 'Failed';
};

export type PageSiteReadable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<SiteReadable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type PageSiteWritable = {
    lastPage?: number;
    totalCount?: number;
    items?: Array<SiteWritable>;
    actions?: {
        [key: string]: {
            [key: string]: string;
        };
    };
    pageSize?: number;
    facets?: Array<Facet>;
    page?: number;
};

export type SiteReadable = {
    channelName?: string;
    friendlyURL?: string;
    id?: number;
    name?: string;
    readonly 'x-class-name'?: string;
};

export type SiteWritable = {
    channelName?: string;
    friendlyURL?: string;
    id?: number;
    name?: string;
};

export type PostConfigurationWizardModeData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1.0/configuration/wizard-mode';
};

export type PostConfigurationWizardModeResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetChannelsPageData = {
    body?: never;
    path?: never;
    query?: {
        keywords?: string;
        page?: string;
        pageSize?: string;
        sort?: string;
    };
    url: '/v1.0/channels';
};

export type GetChannelsPageResponses = {
    /**
     * default response
     */
    default: PageChannelReadable;
};

export type GetChannelsPageResponse = GetChannelsPageResponses[keyof GetChannelsPageResponses];

export type PatchChannelData = {
    body?: ChannelWritable;
    path?: never;
    query?: never;
    url: '/v1.0/channels';
};

export type PatchChannelResponses = {
    /**
     * default response
     */
    default: ChannelReadable;
};

export type PatchChannelResponse = PatchChannelResponses[keyof PatchChannelResponses];

export type PostChannelData = {
    body?: ChannelWritable;
    path?: never;
    query?: never;
    url: '/v1.0/channels';
};

export type PostChannelResponses = {
    /**
     * default response
     */
    default: ChannelReadable;
};

export type PostChannelResponse = PostChannelResponses[keyof PostChannelResponses];

export type GetCommerceChannelsPageData = {
    body?: never;
    path?: never;
    query?: {
        keywords?: string;
        page?: string;
        pageSize?: string;
        sort?: string;
    };
    url: '/v1.0/commerce-channels';
};

export type GetCommerceChannelsPageResponses = {
    /**
     * default response
     */
    default: PageCommerceChannelReadable;
};

export type GetCommerceChannelsPageResponse = GetCommerceChannelsPageResponses[keyof GetCommerceChannelsPageResponses];

export type GetContactAccountGroupsPageData = {
    body?: never;
    path?: never;
    query?: {
        keywords?: string;
        page?: string;
        pageSize?: string;
        sort?: string;
    };
    url: '/v1.0/contacts/account-groups';
};

export type GetContactAccountGroupsPageResponses = {
    /**
     * default response
     */
    default: PageContactAccountGroupReadable;
};

export type GetContactAccountGroupsPageResponse = GetContactAccountGroupsPageResponses[keyof GetContactAccountGroupsPageResponses];

export type GetContactConfigurationData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1.0/contacts/configuration';
};

export type GetContactConfigurationResponses = {
    /**
     * default response
     */
    default: ContactConfigurationReadable;
};

export type GetContactConfigurationResponse = GetContactConfigurationResponses[keyof GetContactConfigurationResponses];

export type PutContactConfigurationData = {
    body?: ContactConfigurationWritable;
    path?: never;
    query?: never;
    url: '/v1.0/contacts/configuration';
};

export type PutContactConfigurationResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetContactOrganizationsPageData = {
    body?: never;
    path?: never;
    query?: {
        keywords?: string;
        page?: string;
        pageSize?: string;
        sort?: string;
    };
    url: '/v1.0/contacts/organizations';
};

export type GetContactOrganizationsPageResponses = {
    /**
     * default response
     */
    default: PageContactOrganizationReadable;
};

export type GetContactOrganizationsPageResponse = GetContactOrganizationsPageResponses[keyof GetContactOrganizationsPageResponses];

export type GetContactUserGroupsPageData = {
    body?: never;
    path?: never;
    query?: {
        keywords?: string;
        page?: string;
        pageSize?: string;
        sort?: string;
    };
    url: '/v1.0/contacts/user-groups';
};

export type GetContactUserGroupsPageResponses = {
    /**
     * default response
     */
    default: PageContactUserGroupReadable;
};

export type GetContactUserGroupsPageResponse = GetContactUserGroupsPageResponses[keyof GetContactUserGroupsPageResponses];

export type DeleteDataSourceData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1.0/data-sources';
};

export type DeleteDataSourceResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type PostDataSourceData = {
    body?: DataSourceTokenWritable;
    path?: never;
    query?: never;
    url: '/v1.0/data-sources';
};

export type PostDataSourceResponses = {
    /**
     * default response
     */
    default: DataSourceLiferayAnalyticsUrlReadable;
};

export type PostDataSourceResponse = PostDataSourceResponses[keyof PostDataSourceResponses];

export type GetFieldsAccountsPageData = {
    body?: never;
    path?: never;
    query?: {
        keyword?: string;
        page?: string;
        pageSize?: string;
        sort?: string;
    };
    url: '/v1.0/fields/accounts';
};

export type GetFieldsAccountsPageResponses = {
    /**
     * default response
     */
    default: PageFieldReadable;
};

export type GetFieldsAccountsPageResponse = GetFieldsAccountsPageResponses[keyof GetFieldsAccountsPageResponses];

export type PatchFieldAccountData = {
    body?: Array<FieldWritable>;
    path?: never;
    query?: never;
    url: '/v1.0/fields/accounts';
};

export type PatchFieldAccountResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetFieldsOrdersPageData = {
    body?: never;
    path?: never;
    query?: {
        keyword?: string;
        page?: string;
        pageSize?: string;
        sort?: string;
    };
    url: '/v1.0/fields/orders';
};

export type GetFieldsOrdersPageResponses = {
    /**
     * default response
     */
    default: PageFieldReadable;
};

export type GetFieldsOrdersPageResponse = GetFieldsOrdersPageResponses[keyof GetFieldsOrdersPageResponses];

export type PatchFieldOrderData = {
    body?: Array<FieldWritable>;
    path?: never;
    query?: never;
    url: '/v1.0/fields/orders';
};

export type PatchFieldOrderResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetFieldsPeoplePageData = {
    body?: never;
    path?: never;
    query?: {
        keyword?: string;
        page?: string;
        pageSize?: string;
        sort?: string;
    };
    url: '/v1.0/fields/people';
};

export type GetFieldsPeoplePageResponses = {
    /**
     * default response
     */
    default: PageFieldReadable;
};

export type GetFieldsPeoplePageResponse = GetFieldsPeoplePageResponses[keyof GetFieldsPeoplePageResponses];

export type PatchFieldPeopleData = {
    body?: Array<FieldWritable>;
    path?: never;
    query?: never;
    url: '/v1.0/fields/people';
};

export type PatchFieldPeopleResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetFieldsProductsPageData = {
    body?: never;
    path?: never;
    query?: {
        keyword?: string;
        page?: string;
        pageSize?: string;
        sort?: string;
    };
    url: '/v1.0/fields/products';
};

export type GetFieldsProductsPageResponses = {
    /**
     * default response
     */
    default: PageFieldReadable;
};

export type GetFieldsProductsPageResponse = GetFieldsProductsPageResponses[keyof GetFieldsProductsPageResponses];

export type PatchFieldProductData = {
    body?: Array<FieldWritable>;
    path?: never;
    query?: never;
    url: '/v1.0/fields/products';
};

export type PatchFieldProductResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetFieldData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1.0/fields';
};

export type GetFieldResponses = {
    /**
     * default response
     */
    default: FieldSummaryReadable;
};

export type GetFieldResponse = GetFieldResponses[keyof GetFieldResponses];

export type GetOpenApiData = {
    body?: never;
    path: {
        type: string;
    };
    query?: never;
    url: '/v1.0/openapi.{type}';
};

export type GetOpenApiResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetRecommendationConfigurationData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1.0/recommendation/configuration';
};

export type GetRecommendationConfigurationResponses = {
    /**
     * default response
     */
    default: RecommendationConfigurationReadable;
};

export type GetRecommendationConfigurationResponse = GetRecommendationConfigurationResponses[keyof GetRecommendationConfigurationResponses];

export type PutRecommendationConfigurationData = {
    body?: RecommendationConfigurationWritable;
    path?: never;
    query?: never;
    url: '/v1.0/recommendation/configuration';
};

export type PutRecommendationConfigurationResponses = {
    /**
     * default response
     */
    default: unknown;
};

export type GetSitesPageData = {
    body?: never;
    path?: never;
    query?: {
        keywords?: string;
        page?: string;
        pageSize?: string;
        sort?: string;
    };
    url: '/v1.0/sites';
};

export type GetSitesPageResponses = {
    /**
     * default response
     */
    default: PageSiteReadable;
};

export type GetSitesPageResponse = GetSitesPageResponses[keyof GetSitesPageResponses];

export type ClientOptions = {
    baseUrl: 'http://localhost:8080/o/analytics-settings-rest/' | (string & {});
};